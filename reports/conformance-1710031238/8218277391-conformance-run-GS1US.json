{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "9c9f3a15-eccf-45d5-8029-899af917096d",
        "name": "Clear Cache",
        "item": [
          {
            "id": "a34e5428-7c98-40b1-a3ec-3d4ec7e47f09",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f6fb8eb0-bcfc-4f58-a6b7-852a338db334",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8c36fdeb-e28c-4cba-8881-fdd603ca0ce4"
                }
              }
            ]
          },
          {
            "id": "2a7102fa-7418-4dfb-a136-dd309392c61e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2d78f3ce-56f8-4119-b65e-9fa6fafa56b7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "463f1441-78dc-474f-a1e9-1f76f0f0f9d1"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "11a66db3-adb5-45b5-bc21-899e7850530d",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "1c3dba85-ee09-47b1-8d0c-3ea0a0ba3aee",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c6c452e4-8082-40e5-816a-80b60a214ef0",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b615e68-8a19-452a-be8c-fc7be3795eaa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "adb64ab5-4682-48b2-8fc8-5c3b3f73a72b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3152ca28-ca4d-4ba8-bdb6-a914127fcb74",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "afe6e6ee-3e77-4ac8-a7db-432400c86676"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c69743b4-ad26-4a74-9198-86bbf8a82cac",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f006f706-f23f-48ab-b5f0-48c26953623b"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e7074d83-3ac9-4c9e-9397-747e8b49de3b",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "3b5047d3-5285-40a1-8ea7-aac1107a64f8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2e151fd3-c77f-4e74-8955-c027a1f500c8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a2c2033b-8930-4b0b-a1de-38f32e132caf"
            }
          }
        ]
      },
      {
        "id": "9075db0b-fa06-4cd7-acb6-bb90987ce46f",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "678fe012-2da6-42b3-9d18-8d610fdb7176",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7af77b4b-c27c-4172-a4fc-85bd2502de78",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bb31cc29-9e35-43b0-9ec4-3d79810e4e47",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b209711-5795-4d91-a15e-db6e4e5971da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f2d4b3b8-e3c7-4913-a5ba-0ee3c595239c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2f6feb1-9036-4e6b-9005-06de4f165eb9",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3423485b-ac4b-4796-a8a8-c82c8921e772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "365effc0-cd93-40c5-b4d7-a4bdd5b1bc15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f138b5e-58c2-4038-b357-698ff9facca2",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff2adef4-3116-4522-9759-2af05e833636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3a4f40be-a6d1-4d4f-8749-6add0f9361de"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fa2e045f-8b74-4f59-89d1-a9e1ba516b06",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cda6c719-7d50-43e4-ba40-b337f39f42d5",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80d6ef25-ac4a-4b62-90bb-c0041368dd55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6dda1453-b6ed-4eea-92d3-f2d3e81e5b69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ba15df-e20a-4d7f-bc9c-b0d5be9986cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffeb12d2-25df-4c86-9710-6f8d0b758590"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4b1f1a79-ba1a-4797-af10-5f74de85a9e1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e7ccb7d4-41a7-4c77-a482-e35c366d35ff",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b7aa9e9b-eb1a-4308-a7f4-e8e0f1fbc563",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a689f3cb-7622-4a50-a384-40b6a92ca50f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "06b642f8-7791-4f5b-bbff-6d306f0cd7c8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "c8c19d56-865a-4ac2-8a13-c54c2abd1fdc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7794af8a-35fd-45a5-97ac-95921178e3fa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c8331c6c-cda0-4e65-8831-53049779d463"
            }
          }
        ]
      },
      {
        "id": "b06c9425-95da-4753-a092-89577add421c",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "9fec9957-eddf-4c5f-a47b-f6e881f34c90",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5903aed8-63b9-44e2-9854-46a26a1b7f3b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "db757633-f335-42d2-b91f-f945f3134d69",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d665276-eb18-41ba-9964-957842b4c3bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3514f116-b733-4c2c-a52f-aaf9a7f095d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e07cfe4-1250-4dc0-9a38-c8ed98c021c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4dc40553-bd20-4de2-a55e-ad272b87dbf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6443534e-b628-45bb-9187-da870db1b242",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0800b07d-a20e-4d54-8ba9-2e3665eb93fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8900b41-e1c3-4683-b429-b9f13bcfe439"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8913807d-2b6e-43ca-ba0e-455097697448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8fbcf50f-14d6-40d0-9aee-2fd72f6bdda2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85bf0b47-3a35-4ceb-8724-16004e9468e1",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08cd51e7-6fee-4242-b75c-fadb3c9e9cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "065cfc40-2e99-43d9-8df5-fb9223e2b07f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "117c95cf-c0a6-414f-9b59-8b93208cc089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "996ec1e1-5fbd-4ac8-92fd-63fdcfc87704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "378cd4cd-f9e3-4d99-bcbd-e707d40173de",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7588b0b7-c7ec-4688-9e83-377c8af3bcd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4988a1b7-949b-4330-baa2-b3b5323d9875"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0f50d60-f5a1-43f2-acc3-887da5ff2c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b97f79ab-1353-409a-8ef7-26371038f925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57475cf6-c905-47dd-be99-4a33db7ecc15",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90ed80e6-98d0-452b-84ee-362ebae703b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3724d169-34cc-4261-9458-a5544dc0e5e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed4a456d-b956-4478-883e-cdaef539b0d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d50a5f7f-1950-42b3-a883-77c36c20da05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9024bf01-5dd4-4e0f-ab34-c12b1c212136",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c1fb7b2-75ee-46bf-aed6-6653a0bac54c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "497b8d8f-1b98-421f-b972-bf1526ea2209"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "391b6a52-e7e3-4c75-a902-759a69070d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ac339dd-8a36-4d97-a7e4-4c24dd2b3e70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9ba16f9-d081-4bbd-9fc1-8b54739c137f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a802db70-cb1e-4988-8a47-05a26d3270eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24283b77-d8d2-49cc-afb3-bf6195098f5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d98d136e-5d68-43a1-9deb-0e173d53539e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "15176344-d79f-4f47-9e3f-7acbe2f60659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa57006-d128-4b9d-b96c-8397ef06672c",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbf0039f-75f9-4ce8-b687-d37a208e2629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb6b407f-3023-4833-aa23-a7dc0b3da257"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c1b595c-ae06-43b7-b8bb-c10ecc8c9cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "618ee60f-e10f-4694-bf09-4d9ac79e1d60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e08fb1d-3411-4a11-87a3-92f90c128298",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "add69228-727c-4d4a-bfe1-48060a725d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d73b2f9-162b-4ead-9fb5-b52531e29311"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06bde235-0729-4054-b0b4-c1bcd35ad128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5a8e738-7db6-45db-960f-402a569f94ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d222e487-a9f4-4478-8b67-b9954ac3e399",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2acab0b0-f7a7-4086-885e-5320ff2faa84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d9b4bc9-9308-47d4-865e-c5a7e113beec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63786e1d-22cc-44c9-8575-8018fbf958a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "efd4387d-3991-4dfd-be3e-603ecf774e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "689c9342-d3f2-46a7-9866-4bb360a6a900",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f92c17-cd97-4c2b-9bbe-96a77c1232d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6638259-1b7e-4b09-980e-65b765085755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aedd1717-1311-44c5-9990-5bfea128d502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30e3314a-3d6b-478c-81c0-a20afee3f1ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "349ab1c7-1c72-4cc4-9ba3-d14acdb189e5",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edfb1d07-0f3a-49c4-b7ed-880e6a91d839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "014c3d19-5d05-4728-b636-f21a06f45207"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1558f8fa-7254-48a8-900c-46150df9ad34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f64a4a9d-195e-4f91-87e8-02f46a412725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d07ed0e5-f90d-4809-8a4c-9fae6dd9031e",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc3e6295-263d-4abb-b8ea-e42ff7011a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d87aff7-8f5e-49d0-881c-1d1443057402"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acfd4d29-c19b-44fd-8e55-7c41a40657cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ec51ba5e-cc6a-42c4-8dfa-499e429d854a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d02906-8394-4995-bbd2-c75dd86b3327",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26889861-7bd1-4815-b8b4-ad97f4d67f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f98073f8-3f26-4165-9293-54e0eeb9100c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18bd34b7-f95f-49bf-9f64-a34a62028b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87c5346d-4fb0-4679-9cdd-92b2413b1727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caa9b7ad-566c-4c25-b607-7c398531badc",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7e5c3bc-6e24-4565-a11f-dcda1abed1ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4836c0e-6396-49e9-8c53-451610492f00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623355db-181d-4a46-9b2c-0ae5294573fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "add22d7e-9657-4416-87f1-c8f6d6ad9b43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "223d6dc5-7c53-4085-83ff-586f6892bd69",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e5952b4-5ba5-4078-a5bb-8a9bd5a2593f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c398ef2-b90e-4858-a5db-31325fce6ff5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "355383e9-88c7-4948-a826-df5208af4876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc9946fe-fbd7-4c38-8b1c-9fef626712e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35733b5d-b64c-4200-81a8-5023619ab7d6",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d3618c0-314b-4f3f-bf7d-b76288824a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "485fdb57-83e5-40e3-801e-2b8c49fd6fea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ffb63f8-474c-4b51-8ac7-44adbc79fb8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "17d9a39a-ad04-4f55-baa1-a759fca6228a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c424052b-426d-4cd8-baef-be901615411a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb7c1f46-bc14-44f1-bcdd-19722bf35d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbd670a2-a086-4516-9ec1-5d639302b147"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2141cc3c-8103-4a91-84d0-a6a6e3fa4b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "565b9e29-79da-48a5-806e-89504ea8260a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8552203a-f52a-48f3-b754-443c2cc69c17",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3431f21a-77cb-4641-be56-19d26174a04d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d19ac443-af42-40b3-b56c-c15dda9ec33e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eabef87f-36f0-48fb-8c16-813df544691c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9239d106-f41a-4159-aaba-5f5aaff9224b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2cdc083-6962-4ae9-8044-db7c318dd889",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c853c533-a6f9-4408-a3de-170f6bc8b0ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f959bdf-c53e-4ba6-8b20-d4f39cd94eeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f064c07-865a-4999-a18b-3370371d8d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e50cdbf4-e7f5-4234-a8e8-be7baa40b859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9513811f-1100-458c-b8b5-6724b95e3760",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fd10cdf-bce7-4264-8732-cfed9a4a48e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51e2704e-57eb-476e-8546-349a079a761e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb0d00bf-2223-4f19-95a4-cf98dac228e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0df5161b-cf77-4f0f-999d-5e9865be734a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e988405-985c-465e-8859-1a0d0e54144b",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac61ecd8-c8fd-440f-b317-031b0065340b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8fbe4f6-321c-4578-a79b-1613457af2b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8c0334a-b93b-42d1-8797-f4c2b006fb49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d964dda-2af7-47a7-bc59-be51b1eb32ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c24cf806-fb84-4733-b685-1f1ccf38e9e7",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f128432-9a48-4c97-aa72-275d76ba28cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21270729-d743-4fc9-b7b0-63e56c935b79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "628f56a1-2158-4a6f-bd25-dfc54865f607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "23f5836c-4c74-4609-9d54-07e03f497471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bf19a60-b082-4410-9d57-79f02ef6c2e4",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba1a80d-f967-4575-9287-14f32ca21939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b85c1ebf-8b94-46d0-9b5b-81207c550634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f90d6c-084e-4edb-87bc-5c34385edefc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "64a33498-d54f-4032-9ead-3bf0dac2c1c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "304249c2-a876-4a0a-a7c6-a94c8f6769a6",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e01e1be1-3dec-43f4-bc0e-a9f1851e564d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74c6a62d-245d-4c1b-afb9-7140f895abc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16181ac5-feb4-4731-9f8c-ff9d0b10e904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c697027-afcd-42c0-b40f-0925f1bed8a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f061f3-a69f-49e8-b2b0-3e982150675b",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08cbb003-a097-4149-9639-98636c26c340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29bef68a-716f-4212-8f72-ad0d778c4e64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf362e13-0be1-4642-8aed-7d464a55081a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f249ad69-8d07-41a2-bdd6-2b4b3353ad3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b814dfd0-4378-4916-ab60-156cd6c2a8b5",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b8094a8-5725-42d6-b77d-11012ae9a421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e06351fc-bfea-426d-88f1-e2ae1231f688"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf4726e-b7ca-471e-97b9-7118d6fc8ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f889dc9a-86b7-4759-9bfe-92b36d1e3be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32090dca-477a-43c3-8911-3cbbdfdf0caa",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3be78765-722c-4e57-bf9f-4147b930d7f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d93003e3-0f37-4dba-b332-63368d69f47f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aa478ed-479c-47c1-8fab-5356100a82cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a1aeca9-684e-4d9b-ad40-a6c4d6f79b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c5058e-0bfa-4d66-8ebd-7debee75caf9",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ed4a6db-8e94-4a68-b5f9-f655ccfc4665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e0ad55f-542f-46d2-a68e-5b25e5569fc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac21d95-f8ce-4a8a-b0d7-2d874b3f06e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f66b545-be36-4fbb-ad9f-de341496698b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6027a7ea-9c4d-4dd9-ba2f-da9f754ce339",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4509313a-4fce-4818-8d90-1fdbe776d8b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a988f7e4-0c33-4696-9c78-1f3909469823"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "580c0576-5e95-40f3-9931-965c8d673fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d2c1377-40c6-409e-9cc7-ce15c675bb07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97efe5a0-93bb-4f34-9ae1-c82a40ff6b88",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "877f45fb-cc13-4b60-91cb-8f1f9f355762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e357d52-be8c-4e2d-9b97-fdbc88ee8e21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92ea902a-67c4-4977-8be1-eff0dd78da0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e53b0b3-2614-48d9-b00a-97ecc9e80e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e3705ed-922a-4039-9f5e-4121c334c54e",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adceb06e-45a0-4905-8008-c26f69506bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fe76759-73d4-4ec2-810a-3fd961394a59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c4766b3-e1aa-46f5-a4e4-838c6d8bde09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "84cd4a11-5dad-4077-a4a1-5b909e9f2099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f854ed9b-c675-465a-b548-ec3647c37bf4",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd73fddd-c6a5-4d07-9fae-559956c9ef99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a54f0b35-a52e-4716-a704-e8e275f3a2a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1077d7e7-5f33-4537-9970-a132fdc35bb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b31eac87-730d-43a9-a1ff-4e236d1b8085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e76f781-03bd-4134-b538-4742300ac19c",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a9b3725-a50b-4676-a5df-5e24c14331d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8512841c-ce29-4f48-8512-03ccc6432e1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88b88e42-8d30-4dc4-bcfe-fe8ade575258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eeed1eb5-cb30-46f5-9a8f-af018f46fcde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e360906d-a972-46d5-bd7a-1aa49a5246d3",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c3383d9-6fff-4041-bd9a-73d8137b8a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d0e2165-5164-4229-b408-02c786682ef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3227fa5-ace6-43f5-b39a-428172c86bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "92754df2-18bb-4c3d-bbde-d528392bad71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69d1b77b-6b28-4a9c-bbf6-971518818173",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9062b1d4-c547-48b1-bbf9-db2d7131f598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a19fdbf6-157a-41ce-9a70-440f106674dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "416e21ad-b4e4-4cd8-b93d-b47133800231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "844d93ff-7900-4812-b408-57bcaf583698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52f01ff9-18e2-442c-a4cc-5dc5f9cbf517",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85022df8-151a-472f-9646-388ff61ec7b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c78209be-f558-4056-bc65-590caa517973"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b15355-b627-4297-a73b-92470144310c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e2ea971-8c42-45c0-b93f-cc657373f4e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f4ac982-e89a-42c9-87d6-f4b953bf7d19",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a7ec5a4-2470-4dfa-9c09-cc4baf038466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c88c17a-1174-4b24-a289-a9d88e292ff4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca2d0531-2069-48a1-9b90-f9df4adc6c29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d1e4306-596a-41e6-a430-a6e39aef9712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d1d668-ea6e-4789-814b-ba025c2d0489",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a4b0855-c25d-4bcb-a320-553fcb56ea4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7805182-7b6a-4b38-a3fb-889b8326e611"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c29985c1-d4f0-462c-9450-a38344dc4878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a691b1b4-8480-4449-86df-e8123039733d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dad445d6-133e-440e-bd03-61eefb2506cc",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6e2af73-af1b-424e-ae78-f779c00ea0ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb228bf7-80c8-4763-9d1b-4c312fdcb99b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0368447e-28a5-43e7-a0e8-bc3d26a1190b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f3cf311-7b42-45f0-9eea-10a89843eb43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6febd59-b56d-4e0c-b958-52109a882b4a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9505faed-3c2b-4e30-bd60-a38199ac759a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa47c68f-db53-490d-bbbf-819d70db4341"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4205e213-5093-47d9-be5b-97fbe1ee6742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1291605-7327-42b9-bf20-258116b8a563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1587b18c-c7f7-43fb-871f-b8e0d48effa3",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d932770-4734-4878-a5a0-856e73b3b2b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90a08cce-d677-4fd9-8e72-3cfc581dcf81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff1da6b2-d06f-4cd5-bbf7-6a00a1207dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "27ea6768-1372-4363-ae74-c30007cc4d75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "988a221f-9129-4e7b-aa14-194efd21125e",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "497bda66-6318-4cd0-8856-0ff5fa7ccea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a83cbf41-a151-4881-ba9a-93215d09f755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a299eb8-5ccd-4925-802a-146e2778274d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "614919d8-45e3-4b75-be83-9a45cc55c2e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88c131c7-0df5-4c70-afb9-aca132c06d94",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd3ed95-0917-473a-bf29-afa36fbec9c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14565755-f57c-4d76-a249-b3d10012e660"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e99f1da-943c-40a8-a520-6f234baf1de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c27ac3c6-7fc7-424b-8568-a70ce534ba15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42df4a52-f069-443e-8db9-aed386f565fb",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e3d596d-d8fa-4bdc-93a7-5aeacab0e8ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "403e718e-d8d2-4961-9063-954b1aae01e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20390489-397a-485a-826a-0e950244eeef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "97353e1f-8715-445e-a979-8cbed827f561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0ea7f43-dbac-4565-9990-6eb5aab8c134",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e20ca40-af74-4985-a459-c1fe8c321ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97818c63-ee9e-445d-9b68-6bb0dad3859b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40744d1b-be3a-4b2e-b3e1-7ff50f78bed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cd06bbe-6c3e-4092-abae-b40edcf9a8e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4622eed3-2591-40d8-a932-07530f3521c8",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93fb75a6-51b2-481b-a7c5-5ef54e024968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d499417-36f2-4f4e-9282-64fa0f666899"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43745da7-52c8-4282-a0a0-77f69652896f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8d7bbce-9229-4782-9b19-bce8188addcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a8ada7a-ea6b-4d7d-99a3-1b5f17b5b0ee",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f97c78-5e1a-4f7b-8a75-bcf9e8c90128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2952d7c-6ba9-4deb-b8f0-f1edc534be86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "012a0a86-51a4-45b4-b0ac-92b0d34b1b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbb8ed1c-7cbf-46c4-bedb-7e83c4b5e07f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebdfccf9-87d1-489d-9f8c-9082e41eb47f",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24edc1b2-546c-417c-ab61-c1bc9b7f013c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1467bf6-0633-47bd-937c-5464403c70ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f41697-1606-46a4-b2b5-f76151dd8827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bbc01292-c5f7-44c4-80c9-d5fed6387703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1529691-ea3a-4049-ac56-e3b11e58c7d9",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c4e113-ab85-4087-9355-385a604633f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d60a38f4-052f-4217-9f01-3878066feb12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59119b83-ea74-4da7-8eb8-c68fc5c358d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a99c515d-68d0-4dec-ac36-92f22acb3cb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b4cd746-f882-40e7-80fa-942363c02a19",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed30820b-d2f2-4555-af87-bd4773b46349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ee0bd90-1e22-4777-a11a-b328677b74a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fb23a5a-90ea-444c-98b2-62e8fba27d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "92311708-0764-44a9-ad8f-1585714a4022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "398d10a7-7d84-45ba-8ea4-ef68db9415b6",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfb3820c-a912-47c1-922a-bee066a346b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "183132ea-b8d8-434a-a649-2b48d85c9d06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "985abadf-ab14-450a-9803-992ef67f46d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "acd9edc0-6d74-4755-b0c6-3a1542cf6a34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02d5142a-47eb-444f-a5b3-edd5778e401d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d25e259-1c91-4ef7-b099-17d2174224fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdc9a1af-2b19-48b6-b274-3d24d6f313d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3367a435-5ae7-44bf-a01e-46ae282c173f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e2559a1-12d6-4a39-86a5-350fa9108075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b127d8cf-3636-49ed-8014-de5f405f94e6",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7faa2c8f-d6cc-40fc-b9f6-1d49e7259a3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0b25226-7f43-430c-a50d-d996dc8e326a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e0dc073-44e5-4893-b16e-56b5ef262ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f95f6e0f-7b02-433b-9472-13af3159d386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7946294d-01dd-4982-bef2-afe465bd12f4",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff90b0ce-d5f7-4a2f-bfef-8798040f0d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d261a7a6-48c1-477d-89b2-defb02598f78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "766ad91f-3730-4cb0-8895-0345e165ea2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0af443d-b68a-491e-8764-3f39cba6dd2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23986d14-3955-446f-b6c7-4cc1a9578fb2",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7711ee69-0d0d-42a3-bb7a-f211ec5148da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d5a5b84-280e-40bf-a918-58a796d5be0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc7a1f91-8fc6-495b-81a8-dcb049a8f33a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "ac78c5f8-c28e-4484-94b1-72e3af4dffcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e509393a-fcaa-455b-ae12-45476435c968",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16efb883-0d3d-4514-b897-b0b54fe6fd56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1b5b08f-eae9-4181-91d7-6401cf9d703e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e302556b-a85c-479f-8240-ef848148256f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e5df1e1-da41-4d75-b7f3-45fa62df5fce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02a23ccf-2ed3-484c-93b0-71c6438b7e0b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d967d42e-5cbc-4128-826c-5f16eea47080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "002eb5c3-7601-4754-9a52-a0b6cae594c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f25b3651-818f-40c8-b2a1-17f48b1e09bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "96e4f9d2-5ba7-4531-9c67-bbc4065715f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e5e73c3-d490-4c5b-8201-80d6bf0766c2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a0c42f8-3b5f-4b87-af3b-956ac19e2b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb7a3494-4744-4a89-8589-d1241f7d48c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3697512e-83b8-4252-9dd2-9de98a174bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "17328ed7-0b4b-4eb9-8123-6dd6e6a05ea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2469d54b-077b-4fab-9fff-3d90944efc3e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea4fd82-ab7a-4333-88c0-2afc77a64e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef81a631-048e-4474-9aee-c45136823a6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc6ac06-2cb8-4eb2-acb6-f54b95ee7d40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a76167ed-d30a-48d1-850f-a0052f1c5e02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb30a6f7-7672-44d1-bacb-b53bd07bbaf3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e83037ea-9db6-4bdc-85f8-2496d5bd4d62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "160cb554-85de-40d4-a6ee-c098d8f04f72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "621fafc5-578a-40fc-9920-f75f7682c9eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "dccd2890-6129-4453-9582-b28bf2b5a8a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "130c87b6-c062-4eae-8566-e6f82d1266ce",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "556f202e-a6f7-40b6-9340-439760a4b11f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1ade08c-add4-4a8b-bf53-649901d280a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "459e1efa-e3b1-4f5f-8807-023bd73050f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "64729609-6756-4d81-80fd-04e69dbfef72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c12796c-8614-4f56-afcd-3756dd4d9b7f",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "659f8f92-d179-4347-902f-73809ea4fa2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fe0a6bf-2ace-41b6-b775-b48db37747f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea8c1b1-19ce-4741-b102-817b44ce68cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1d703d9-5440-410d-bb71-9fafccbb997a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccf5520f-a3a1-47d3-a2b3-c08b331d5710",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6672433b-0bfe-41c3-937d-2676c7f361ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed46a518-47b8-4081-a644-e6486324c041"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e66200-e4be-4de2-a756-281752feb902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7e71ef7-4f5e-48e2-893c-663a8cef5d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dfcf023-ae7b-4fae-9a99-fe677bad8e87",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e13202b-9e83-4c73-881c-a0225401d408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64aff6a5-d7e1-47a8-850d-8e9ed9e33ee8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7250c9e5-e9cd-439d-a322-19c695309102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a131757-1a7e-4851-9d1a-b930e4dcf398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c8c89be-1d82-40f0-9e00-44e47e08b3dc",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b5ab7f-c084-452c-b5ab-6c36d3651370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdc4e735-a9c9-404b-a5bb-9463f630d677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa2b9e8-76fc-48d9-bb74-faed285a258e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "06a12b43-acc2-4f80-9897-a934c80ab132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c6f7368-5917-4538-b6eb-352766b829bc",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc5b583d-31c9-4e44-a46a-fbb84c857dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93609139-cebb-4794-a947-8bb99fbc0078"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0537d3d-56f3-480a-9ae8-f94e6011ff12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3ea56af7-be27-4e96-a7c8-684228b91be8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37c8b820-ba5f-4945-a204-b9aeacc871dc",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa792144-13a0-4ab4-a53d-7cc0ac079033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7fe425b-d7a5-4f02-b7be-75c55da12d84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b820f33-2136-44dd-b817-6b1e38e4641a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c64254ce-73e4-4720-8de6-8cc24f18caa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "988a804b-67f6-4286-aa1c-49e894448d99",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98131212-c6fe-43e7-afb2-ffb6cd350568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4689cd48-c70c-4f01-a51a-ed6f720aaabc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "906d7ce6-63f0-4bcd-8afd-b275b9b637f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fabf3fe-2a43-4f19-b252-f24d8f9eb71e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcc6760e-1867-4d5a-923a-7177323a62e2",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d79ed344-dd5f-4573-8e66-607f0f4380bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e140dddb-738b-467c-94cf-c8274f123291"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d128f7b-7a9b-4ccd-b39b-f431f1779200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "95e94914-6e67-4660-b465-40296bbf1a62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc2ef9d6-3f9e-4290-8be4-82e0126c5898",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "defeb618-3641-4ea3-bade-8132dac056fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dcd67bd-d4a6-46b0-a7d4-4c9be194c5e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11a8d9ca-ec8d-4ba1-97d9-0261b4f00404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5315650c-e14e-47fc-8382-157a7c05a7f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69022d7f-88cb-47a0-b252-6a6b9e196d8d",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2db2d658-61a2-4a8e-84a5-9d49fd30e927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eed0192-c4c1-4f24-8418-8080aba7518c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a0c61b6-2d7a-4f31-838f-7416cb30935d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b985a67a-1e00-40b7-9602-694a0887f531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8434d2f6-7ffb-4d5f-b718-ac95cffd738c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56ef2517-11b6-443c-b56f-33940ffb2280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c30ba088-063f-4191-9fd3-9b1ff3e96f6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9549e1e1-5699-4975-bf05-7d4776f74107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "70d49606-ddbc-459a-9255-573415189a56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc170077-c329-4821-a4a2-60505a12282c",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b58a654d-587a-4888-9752-78517bef0817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af37eee2-6043-45fe-9891-33b635530a1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da444acd-605a-4cda-8af9-358cdb3cfcea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "650eaec9-8800-4fc8-9758-d30d9cfbb35f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6185e1b7-75c3-4d78-af23-b44ddafff84e",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26282cfb-9684-43be-b9da-713d277aa167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eedb8547-d004-403f-ae90-9664da6db8cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f31efa4-6dfe-4b99-bd5d-cba7c66af071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2d17db5-8899-451b-8a74-1272c75627ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74ada968-b56b-415c-b56a-105cdde02205",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ae4a7d5-0919-4e11-b9b5-7fc160dda198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73421d5a-e7df-43dd-bb13-b7b574da441f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a1308a-78d4-4ac1-a9ea-47b703aa68a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "78d75d1e-3872-4c63-a1c9-d26e41758455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d03aacf-0ce5-4d8f-a9ce-c2141d618b99",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "870f9b94-1ea1-4bbf-be2c-40f578b7889f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a976e29b-b442-44fa-8ddc-a377a946e0d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e101a75-3174-4c58-9d25-8d3383001b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "351e76fb-62f2-4053-a2cd-e132db035a96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7697025-7592-4b33-9d4f-9a4c693af789",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce0f94f-63b7-4c39-ae58-920b8a47e1fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de2ce71e-f28b-4dff-bc27-43cfceeabbdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1274d775-d9d9-42d1-b10c-357caa49ddb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "37e2cfe2-7df1-4a30-bade-577e10d30a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c94dd8-f0af-46b2-967d-1c2b21f8c163",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74134411-b85a-49b9-814f-14678ba066c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "329ae8ba-44bc-43a6-aefe-d2d91657f737"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6035d572-3ec5-48c2-aade-ccc18ce86c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7af8dbf3-1cf4-4da1-8236-d77bd97bcbf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d4befa-6b01-4c42-bd89-66567f880ddd",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f2e2a1-8937-4eb7-801a-d781508f779e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87f778f8-bd4c-4809-bc1d-1f78ceb31310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a2bf92-7b3e-48b5-a43a-53dc26665d40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "681028be-4eb4-438a-8bdc-fa5a80bffebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a2ea5f-aa9e-47ea-9b05-1ffc52b8beb3",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c71c86-25b9-49d8-99ec-571fd7ad57fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df2cf995-a290-44ae-b081-8ba4cf1b839b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad4c371-79f5-4ecb-a013-eb7c8542e4fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d803963-9bc5-4cf4-91ce-9db3a127d18b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46806b85-6836-4e24-bc5d-dcdd0ed7d0e5",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f537d425-5398-486c-a1cc-1733df827e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec9e7674-f9c9-44e0-a0f7-777bed203a03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b5ddbfc-92f6-4695-94a2-27a8deeddefa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e00f10c7-64ab-4339-920c-0b0e4d82aa9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c5c1f9-bddd-4c04-9960-e65c8197aa1d",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a15ad61c-a472-486d-909d-66a0d1a14e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4e3d4be-531e-43e5-ab37-f91599964988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d28601e1-3d29-4cba-9819-322a1082aa71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5795c58-86f5-41b9-90b3-fbf8b9fc13a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf53feec-4c9e-409b-8c3a-ef8ca2ee21c1",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc6c7a6c-36f2-4190-8d34-e1d49f0eef3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "532a83ad-1e6c-4ebf-a81e-98d993b0bf1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa07e05d-7f6f-4a36-93ed-cadb05c1484a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5bf4f3a-8527-4ed3-a4e1-81070869c90d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2486e9c-94c9-47f3-a34f-58cc003ef6eb",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9a9105f-2af6-4a8e-a2f6-a92b77cd7cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c16791cc-d967-4857-a750-799079b62b53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f6d3be5-87ca-4259-90db-40fdf6615c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c7489fcc-1a87-40d8-8774-eb6072c818dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f62c6df8-2aed-42a4-85c6-5f0ece8dfce2",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e0d0360-a4c1-45f8-b34b-3ca6f2c2a47a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "377a31d3-b6aa-4e28-b711-0fa9e6e88e8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8071a4be-cb1e-4a51-a4d9-6759f2a447f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "05455235-cb07-4aa7-a64d-5026afe698d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cce08de-023c-4b0a-b922-bebc21f099ca",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b09c5dc2-1302-4170-8b3d-36d59522b10e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f984a82-54c8-4c58-96dd-74ac127bfce9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b88b57b8-a56b-463a-8c86-7c5a44c7ed34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7efac691-541e-4c2b-93fa-f658eb46245a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1053f922-47b0-42e5-af4f-2a33a80d82b6",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc8d8892-58a5-44b2-972f-4b6beba7cb92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d554c73a-c454-4edd-b6b8-b59382e3c651"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2f5fdec-0f87-4d08-b2a5-457ad40d17c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3bd5d13e-4a85-4e98-b65f-4e8ac04a9489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7927d4c-81e1-404f-bf50-3f2a7cecd94d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c8d1249-be6a-46b9-a7c0-bea38e351bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a54c2066-a8e8-4fae-8924-62b3f1eca265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb7344d5-be16-43fd-9c31-55a5aa60fb4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "601a1200-07d2-457e-8d50-a20ecf5a1219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a334145-7eaa-4b1d-96a3-6ea9a567d8b6",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c32a4b8-20a4-43e2-a048-7fc58336761e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25afab4f-ad97-4cdc-8737-87c03e10d499"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6fb7087-e3b0-46c2-9f87-2ea27c1c29b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8525a3f-120e-43c5-882e-f4bbf98e2aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc0f792a-a90d-4029-ab52-e6221d0b89ed",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b8258e-f417-4e40-82c4-71311736beca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1091182e-419d-4c24-822f-ee68a957767c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "013f3aa4-a4d5-4402-9f6b-50a8a79917cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "277fb0fb-d156-48f4-82e8-ef7774159c31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee140e06-8c6f-4389-b5de-0fb6e665e5b0",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a698b45a-c4ed-4ac9-b65f-d0ea16b7e40d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "674060d3-a0a5-4b52-b8f0-d3159c9b32c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce26b9c2-81c8-4659-803c-551c43fe2ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1249fa5c-de51-448d-b6f4-7a843245f608"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "05cd19d6-db5b-47d3-9b67-924764c21d34",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3139d720-49bd-4dce-a270-51841757b65a",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff48fee1-f5c9-4695-b176-a053d17535fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8644306b-d347-49ae-994e-78c9d9045ccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99708b6f-91dc-4d9e-b85e-0f063f7378a8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fdbd1c8d-2a98-4462-a967-c57a83f0a417"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1398ce6d-890a-4e98-a800-127ca6554a7d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "462c1b6c-13e9-45cb-ac3b-1943045c5d78"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e28b2cec-4818-42cd-9aaa-f5a3cffdf482",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ddbbd375-ab21-47ff-b16f-96e32c5e4748"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c967e93b-bb77-43ed-9f24-778e126e3fe7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "801178b3-ea0b-43ac-bec1-08ea6f51f2fc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "99d5bb4c-6b7c-4638-a2a1-59b43561ed70",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c327ca8b-fe2b-449c-bbdf-662df032538c"
                }
              }
            ]
          },
          {
            "id": "f1fd6097-e338-4058-86c0-7cdfb9b005a7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a91c100a-e5b8-41a5-be63-d4cba167f6e0",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "99014cbb-9955-4051-9296-6715d381abb1",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c183e8-99cc-4742-ad2b-64feb005c4a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "44c5af96-203d-4fca-b3af-750d151f23ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c20654f-7e22-41cf-9fb4-048cee4b4ef3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a063f5e-a8bc-46d3-90cc-bd81af1cef63"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "da88fd26-b7a2-4a16-a279-2b32f347f07f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f325fbd3-a761-4354-ba68-21c67a1e55b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "51a9e672-b5fc-4a17-80e8-bf89c41a6c7f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "14a1ca5c-27dc-4d79-bbfa-6b8eed2dfc36",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4ace6b46-a8da-45a5-a36d-3d1a694ec9af"
                    }
                  }
                ]
              },
              {
                "id": "38e17d1d-de42-46aa-8859-6403df5e097a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f6ba401-09ad-4dda-9557-dec39673ec2d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2a23b55d-39d2-4d86-991c-205963892007"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a14ce343-2038-44c8-b0f6-a3b2048925a5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a7d38c68-e6bc-438a-9f73-0004b55236f9"
                    }
                  }
                ]
              },
              {
                "id": "8f77625a-ac19-4827-a298-f51e2f5b92e3",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0df26218-234a-456e-850e-7f40c903f2c6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "757baf65-0883-4d96-b0ab-b670d7cf10c6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5f455def-183d-4a29-b012-bf42866ccd10",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f90af23c-b408-4148-a2af-76774f09c1da"
                    }
                  }
                ]
              },
              {
                "id": "381b5c1d-c52d-4300-ae45-211865da02b8",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8bd59517-cd27-4c47-ab84-94c1197e29d4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a04d3573-d55e-48fe-aea1-324033641dea"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a958d1f1-e92a-40c2-b727-cbf402844d24",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "0cab2a57-43cd-40b7-933e-21e00b9aab73"
                    }
                  }
                ]
              },
              {
                "id": "cfcc40fe-eba7-47b7-bd31-ad1df3a4f6e4",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "642e444e-a704-49a1-9150-c04b72e46064",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3a63df14-ef56-49ee-b38d-101ba51357bd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "30e6a820-6364-44e4-981a-7b93badc43ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "815e3a79-40e1-4c3b-86bb-2f8bfc9bdf3b"
                    }
                  }
                ]
              },
              {
                "id": "9240ee70-5bf4-43b6-bf4c-c218dbc13e18",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "27c0e2c4-15f6-4de0-bb5c-26e759f25b7c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "691433db-9ece-4d94-b526-3441363611c5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bda348de-bede-40af-90a2-b78edd9cb2de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b4b86799-ff3b-485b-909a-0e486966bf8a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e4c26b47-3e01-4abf-b773-1ff9801de73e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c1d1d0a4-2bbf-4c87-a330-c9a3a0600648"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9527073e-a879-4e6f-9ace-807686b2b0eb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c6285a2e-82e7-4608-a74b-be0bf88f421b"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "50f75b84-5ee0-4bee-b120-819bab75e795",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "12226dca-6aee-409c-96b5-0d458435b7bc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "716c1426-da10-4593-9130-65b2f0136797",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ea3be46f-0ebf-46e3-b90f-60af4843bcee"
            }
          }
        ]
      },
      {
        "id": "a26b5364-8fd7-4142-8530-16ba264c2f7f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7f07878a-9c22-4c93-919b-75384a215abd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c41423e4-e96d-4879-8d4b-bffc02710783",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "586bb598-ac94-4340-ab53-e86db4ecb2a7",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8b3c413-6d9a-4464-b105-8968e470667f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce02311a-f6cb-44ca-87a2-105e0f1743c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3c52fb5-d93b-40ae-aa31-f9cf2cf12a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "75fc7e35-4c30-4150-8a21-07a79170a28c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dc9a772-e5d6-4651-8d4f-f2956ab51e08",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f9e5584-4c59-4e04-90fd-6c8624b09464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d09cdb1-4182-4433-bf2f-a06ea9e825f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee1ebec1-e159-462b-bf7e-4bc33756eb45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d32c2c1f-4274-40b8-b34e-fd28052b1d2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "454457a8-fe6c-4cb3-894f-7e0860b85dfd",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "140a3298-70de-46d4-91fd-fd3d1ea7f035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59108034-7681-4b28-a35f-418e50058fb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "127d54a7-c815-437e-b27f-9421f6920e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f994bba-699c-4b6e-a962-b1fb89480af9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55236eeb-d3c3-4b96-84ed-2d66bf97d4de",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "350d37b4-5462-4131-9eab-89c79e91f1ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "832dcee6-7249-4ed8-b18b-7c2472555998"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a11fea49-a975-4781-bc8d-562c54a0ed70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5090d656-e980-4e64-a642-2249c21b581f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "829b3299-eeea-4a44-b154-37c80eb7b11d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d56b81e-1c6f-4d39-b1c7-7f295d7ad054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37fb2935-d5e0-4d0d-8143-64972f81fcd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "895745b3-7a49-4823-9d24-a9f1bd8d5d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d924f42d-a34f-4a14-9449-b2cd4e7f2265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92e7c37d-9c00-4394-aa76-81719bc6f4be",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf9ed6bc-58dc-420a-9a3d-2f3668cfa783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8d1f6fe-886d-4707-b7c3-88d5beaf913b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b2933d5-406d-4965-acee-1a772a359b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8df10f67-afe5-4c1a-90d3-3659f9e34c8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64a789d8-f62c-4129-afef-038b433270db",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff34eb01-fa0f-480e-aa02-c16e3f286252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fbc594c-4d3f-476f-ae64-95792b4da57e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df631340-7568-4b34-ad0e-bfbfc87197bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0767fee1-7eeb-4d77-a37c-9cfafc3e1588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26338a36-729b-467b-a676-8e3cab012373",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd725eea-d721-4ba0-b64c-47701aeb9a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0bd563e-b031-4f74-beaf-83501ac7555e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb4ed442-bcd2-4dad-b4b6-70d6ac58295c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "da0df9a9-e538-48fb-9824-03160974c492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b5ca7ae-e967-4b49-87e5-c4e6a7b622c9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dc4cde4-5555-4126-bc10-5b24a8dd4285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d760b487-87bf-43be-b0e6-2576c411ac38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca0067a-a792-439f-827d-aa87557a1993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0df96c8-63c2-4cc5-9cba-ff8e014fe2da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c5860b2-5006-45bd-adc1-c11adef7bcd9",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78edc695-1f52-43a4-9457-ece5d07783c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cde6d013-7d90-43a2-a38f-bcd596bacdcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef5ff0f-b8c8-470a-a5a0-d3246e288360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9152462-1567-4e17-81f4-cba8365378bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffcf7665-1cb5-4f91-8347-8240a0ce2182",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf55fe3-1488-4039-8bea-ae0e5c5c695e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdbc5daf-20f4-40c6-9c96-2d7ddd5470a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de89db1-17ef-4221-8ede-ee88425328bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f8db50d8-dc4f-4f2d-bb1f-575c91414b8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec96c88b-27ce-4cd6-95a5-ff3678d05a99",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1596041f-d01c-42e5-b236-a653a8492eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1b591c9-c3a1-4dfc-821c-f1cc4785cd51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3fc4d1c-93a8-4305-b321-8669dac1c644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c3422741-ff3d-45d6-8ff8-6eeab27d930b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b64f535-85a1-4908-bb10-693611966b90",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e1761db-5521-4197-9cc6-57deae1f9940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "555b4785-f7ce-4b7d-b6d6-1244a3618b6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2a25930-9115-40c2-8ffd-e626ddce80d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f24ed556-9d45-4000-9b80-239a27b2b5e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f7c7ee2-72b3-4de9-961c-938ae21141c6",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b47dda97-4a23-47f1-a154-40ff8562cb6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "179a89a2-1c7b-41a9-ab97-4cc9fdccd193"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e719ce-0100-4457-8c69-33bfffa6608b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c046093-2671-4887-9c1a-344ccf0687bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cad52211-50d7-4486-92c7-6c61e2ead404",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59dfc9e1-ea90-489d-9295-7718eff5f3b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7095119-03ef-4f10-beee-87c6e5f68263"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1759e29d-3fc8-4841-98c2-4150eeb0bcb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f9155a6-3d2a-42a2-b8a7-902e785d31c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8560fb7b-b112-4958-b6ab-e8b0ae7c7144",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce780308-cef1-41b3-9f94-b66f5e3cfa2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ab7ea2c-9bc2-4cd3-b5b7-dc768bd4f801"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f7f3d2-194c-4748-9e15-5b8c0016815f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6c9c05a-2a1f-4e1e-accd-37da1bd06ec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "846db807-130f-4132-b099-129df70d5221",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddbd6511-163b-4f25-b411-7319c1ce21da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cbefca3-de4f-4e89-a9f0-fb08d495940d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aeaa663-f197-41f3-8058-e720fd0d8176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "54d7939f-ea0f-407f-b0ac-5e6d7fa2aca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cda8150-ea23-4459-abb0-0cad8ccdcf15",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d3fd4b0-775e-4325-acaa-ec79fbe97ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b39a4989-0a19-4faa-95de-ec5f69192c06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88f6461f-e987-4c6d-b471-8ce6ae133523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "edc8199c-47c7-4156-9b3a-eafbfc0c55ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eb67fb2-2e17-4930-b02c-94e9694cc9fb",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "977edbad-47fc-4881-ae45-681506a1f049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df7d9a93-c373-433f-9b2b-b642a197cd9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d3c4297-f13b-40db-93f8-b82345953ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0753e948-5da2-4493-a861-71b74683231d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c649707b-ed76-46f2-aaf9-6ed11b281f7a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df2a9915-de17-4c02-8ea1-610b98d56d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58c8125d-ac32-4449-849e-d44e90c910e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e449a616-299f-443c-b67e-880745d23eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39ec2fe2-d051-4a2e-abf5-63959a9e4cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14a05608-54dc-44aa-94b3-703cb2432c91",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e88bec-c0c5-4179-a35b-47eb891d6d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea9aadea-3f65-48e9-9840-6ef416224bbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e677c2a0-ae49-4828-a5d8-59960bf8c898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f71176c-496e-48ec-bbb3-311c5c7a69c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "803618c8-6d72-41f5-a7b8-29b4b7a3b5e2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f85bce-5431-4a5c-a9e3-ea9ee4f895c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba071cfb-569b-42b3-b8cd-2ed82ba48fc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea646e1c-9047-4e66-8d60-e5dfc2eac1df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac64607b-53a9-4ae5-96c1-cf24ca3e6d9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5d7637f-0df2-4206-8316-82138d69cdf9",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d5bf5e3-03e1-43aa-aac3-d681f7da6c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f24510c5-eb2c-4cd1-be38-827d23a14b2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5940a841-362d-4c73-8544-95d52aac2059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73c4329c-62fb-446f-8c19-1e23cf1c838f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4a715ca-07a2-48c4-8023-cda924e29143",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "606cf1cc-b347-4cfa-9cb5-15d0951429e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbc32b21-315f-4434-ae64-179dc3ca97ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac4d4b2a-e4b4-468e-a0cb-00d1f933b677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d068506e-0246-4637-b130-5c96c2ba403d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e530a769-1f2a-4bce-826e-668288a93e14",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf83ae6-3d8f-41a9-84a5-529aff63f043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b47384b-5c05-41b7-92a0-0c9976426168"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94e2f173-f72f-4193-b080-225622c8e0fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3c33b56-f142-4007-be72-3abf261a3e4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc7aca4a-8441-4409-8b1c-b7d66842357f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ec43f3-b41b-462d-a6fa-220caa545d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6860812e-1144-4433-ab35-d8c665b3624d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62619fe4-3a86-4b91-9f08-0c1988b9972f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "636e7c35-1883-4947-b7c3-66ad9d6cca09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42858776-3865-4c03-b5be-185b665e408b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afd9b888-0c0a-465b-a959-7f4daab6c8c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b9313cd-9eb4-49dc-a445-e57dd930ce3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b307984d-3945-4289-b99a-196815016758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf0e956a-78e0-4570-b17a-be5e490de06f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e594bafe-e37a-47ac-ae49-40d7450677e0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a1e07b2-9d0c-42fa-ae32-f6fa40c2f105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78bac884-8490-4dfb-b3af-270f261054e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68628d72-215e-49d3-8573-2a923bb3581d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e539e753-04cf-492f-9ad1-239cdbed2b99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "475972fb-688c-4ee0-9041-708e747e34cb",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3081b659-57f6-45b6-9a93-e7819876bf09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3767a469-e2e1-4b16-84f3-633be5031f17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a091576-0788-4d38-ac81-51a13cd72f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79920708-30fa-4196-a263-9f5ca32dcc25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6706b3bb-929e-458e-8d2b-15c5891a5631",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f76eeff-7885-40f9-822e-5c3077968453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e6818a2-211e-4206-8dfb-04ec00e70ccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "645a6d22-da2c-4090-8f75-206acb042eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7cbc17a-ac2f-4420-871a-c48face700fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e5e20c-550b-4974-a202-2ae5177c135f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "612c038a-077f-4e97-8090-2b53d6220b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c7624bc-cffd-42ca-a4e7-40324a1587f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c6a6355-b77e-4925-bfc5-75eccbb0d3fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08351e26-59d3-415c-9d0d-d7c92b336dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f6a53d7-5136-4760-bae3-cd4be6b0e708",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a2f141f-0a0a-493a-9734-0d466bbc4f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feba60a3-76b2-40e7-968b-d7ff8146ab7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a40bd50-e5a9-4a69-96d0-7f8f65186a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71c964ce-2be3-4724-a4a1-25ccd28ccb99"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "146cc448-9007-46ca-a426-76527e8d6028",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a7d6a6d8-7ad8-4a8e-9627-50f71500259f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff524f9a-c84b-4bfc-a1ac-2343f05e4129",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9868363d-e3a6-4794-98ef-cc606d530ca9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c451f8c-b90f-4240-ba50-80723dbe07e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c9dcfd21-02f8-4196-8e68-c05c8bbd8b82"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ead5bc46-c795-4936-952a-ebc1259af33f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cf869f55-c90c-426e-aa15-40ad0819ef48"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "585fc4de-f282-4e7d-920b-9b52b15b3566",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f75d97d3-2f95-49c6-aa20-492f3e2a013e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "752ee305-e0d3-4bd6-825c-21bd3f7152fc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9123c57c-41da-416a-a014-3f4a5913e036"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "555d0e8f-e323-4b2e-83bb-86d9dc2183a0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d7db6e1c-fa96-4790-b247-df8c65864ebd"
            }
          }
        ]
      },
      {
        "id": "32903288-356b-4920-83d7-4a7ab2fbf60d",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "786d2c68-9931-44a4-93d5-ed49b2fbc1d3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8c8b2473-cf4a-4f4c-a13a-02f5571db393",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c82a02cf-bb03-4993-be06-ca4cb87d147a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c2775da-76b9-4424-bb74-fb4618e617a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbda0b58-830d-4749-9394-31564f9bf4eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a43b7c2f-015b-4c1b-98ff-9fc9cd212967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "39fa0e49-fec7-49a7-8f59-d8c5c4551a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b8f0b18-251a-4531-aadf-1003acc973d7",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe71ea1d-7a28-4b7d-801a-ac51d30f6d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f046024a-27e2-4cc1-9fa1-38db3f3088ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa0b4551-9afb-4640-977b-ca08a323043a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "af1114a6-0796-4a59-bf79-ccf1beefadfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec1ea49-74d2-474a-a763-4102c778908c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5efd6a86-9647-4896-8272-04074aa8d7a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a89151f8-4d6f-48de-b114-75222ef13c21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cce81c6b-25a4-4316-8d45-a27adc7250e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c18d1f8-8ddb-4234-94e6-f80f1c4dee14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a86bb4-1b7c-4878-b388-eba3b2b1635e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64c02f86-07a4-4342-9590-a259712c2d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e761d8db-314d-485a-bb74-70838b73a306"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "762e0068-b2fc-4443-880c-cb62231c6291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "06a9e058-e565-4738-81e4-886e33c190f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c16bb78-51d4-40d0-842e-4b860a222ce8",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac6feb24-0726-496f-93cf-8758f87f6473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbc78b19-7ef2-4202-b25a-4ced6df943e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a678a89-f91e-4dae-a155-51d8f3290a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f70eb34-44ef-4b26-99cb-efe1ec529c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "485da807-4e95-48fa-9bdc-7b250fcd3d45",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05eaaf9f-e9eb-489f-88c9-9ccfb13840c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3421c171-07d5-4dec-a696-d18fb6169f77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db5be08-fc81-4116-96f0-826ff5f4f4f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7b7af97-77f2-451b-9640-938bbb41668d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f5e9109-36fb-47a0-8cc0-20a71800a20b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41d71741-9656-4a1c-869c-41461ca6fe4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f6d8552-a323-4c93-a63e-7402a56c7ecf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca1758f5-0439-4949-b369-7c8daf46d726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c527ce4-7ac1-4252-88d9-2d15eeb99c2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe01c567-3e11-4814-b265-67d247a17f59",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e2b1db-8eb3-42a3-bf0d-1bf490c8dbfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db5946bf-5cc6-4b92-aacd-7b9c0b04cfee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd9ffaa-adcd-4858-8053-49a8601f0902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d36d5b1-8025-40d9-82cb-1f8de53f7d73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a455f24-c8c8-4a16-a876-f7770f6af7f6",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9a9b388-4355-41ce-b1f8-66790729dc46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd42b37c-cccd-4a48-b2b1-13b731d775a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c06216da-7196-4e72-a980-276d168c8626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b6d71fb-0c8a-4fd0-b899-4b6295580398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9161d95b-92e6-4ecb-9f58-c2c7ab07741a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dbe8d4e-40f5-4271-897f-785a6ffa22f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30fe1431-71fe-4cc1-a894-2e0409d225c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34c89e58-e77f-4ad1-adba-66d35a015653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9dd9c2b9-e056-44f9-945c-744659b734bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4c64bd7-5450-4f35-80a1-f668cedb8b17",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4a47bb6-caf9-4b0f-91cd-05f239da7974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78daab00-631b-4702-b3d6-e56530376531"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c634ee7-25df-4232-9e48-5cdc9091de41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "66888000-11bc-4921-8513-06caca617884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bdc5e63-a6ce-4810-9b05-a9500ab6b25f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "437f8c27-4d16-461b-b975-ead080bd0bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c71842ae-0bc0-4f97-96ff-74cd9f5a4854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f2854b-bf02-46ba-a965-1ae716f86961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "085c1100-2321-43cd-8646-a493a785d455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcc58357-8665-46ed-a70e-97a9a3076307",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b43a40-f49d-48de-a560-d3778e5444ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6322194-5880-4d67-9da0-ad21518b2d33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b7db471-627b-4c88-a691-6b83bd3799e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7eab5f58-357a-4db7-931e-f9c3e1e84233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4113f36a-62ee-48be-8044-a724c13f3d93",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fbe810f-6ce7-4ee8-8602-eb6ae3dbf92c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38605c99-cbf1-4477-9b75-78a140de5823"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62be8c55-6653-4533-8fb9-9b8d24754029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd936266-361c-4592-85b3-10917f95a58e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7767bd28-886a-4e6b-aa92-0d701af930cd",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5759a5a5-185f-42e3-abc0-d7384c73f18c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f43e2748-4229-4178-828b-d850f214cbe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f988e59-037a-4caf-ba0b-ce4dcdb8b31e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "33e7d3e0-a491-41fd-b324-e1dd9abb88ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3de882bd-02e2-4f01-9306-4db701cebafd",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf9bba49-033b-4ee3-b893-4aeaf53eff3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e50206a4-b37e-42f9-bc20-23300d4c843f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9c07c87-ca61-405a-9fae-e908f4d340ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a821fd77-4734-4e39-97f5-e1628333f542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc0ced86-7299-4ba7-8d93-130a5efca927",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "216e3a42-912a-4c2c-8f2c-5de36fb1cf5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dd2a715-407c-43d1-8dbc-898c1edc7372"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7516d432-4602-44ca-8468-8ce219fcc51d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "49d142c7-da3f-4ca6-b515-98ab68b72b3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b63f4df3-c5d3-4dd4-8873-17137add7b05",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6c3cf5d-84cc-4ff3-9cdf-9fc74c25e86b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b3307b5-1094-42b0-b60c-4fec3b0e8c69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "329793f3-b61e-4d1f-ac90-3d1b62e45623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ee151fc-7265-4fa0-9789-c9c1b11010b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4b3f3f5-8abc-48d2-b5c4-e7f652193b9f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "680e92de-3130-4913-87ef-b3c380bb11b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab762ee2-38fb-48c3-afc5-08347d8a8113"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb13bb4b-6833-445a-a87f-ec34cb5dad3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bd6c154-51f0-4a47-b573-3ec86cc65f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ad61062-5979-4ca6-a168-485e8add307a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29579b40-f356-4779-9032-8c2e4bb900d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77c1c4c9-b79b-40ca-b6b8-c0315633ac11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0462ce0e-e604-4403-9795-4feb843ef677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5bb8c27-8ae8-47e9-b827-65dac85c4d5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "911e7b46-3610-4fdb-b119-389ef2bf2713",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5b3c54d-c01b-4e91-9023-f62b21ecdb45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fff0c14b-56cc-4bf5-a290-1a8ebc724b26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b005492-39ce-460d-b390-775a816ce395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf8f1918-5919-4555-a262-8ccdbedcbdc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f88aa175-2a69-45d8-afcc-3a295aaf700d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e77394a0-230b-4ada-ad19-dfd972448883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fce4a9c9-1527-4c4f-86a3-e22a0a810305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a45da9b-9503-4b63-9706-b2f428ffdb58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2870b8d6-c6cc-422a-938e-539fb4c114ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af94c2c9-f2fc-4985-a288-481c7d586810",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c6549f-2898-40fe-b1b2-0b40406e1d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e3f1cca-bcce-48cd-af34-723cb1bab213"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf80e8cb-2275-4ff0-9e72-7330c49458a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d5bcedb-2ef9-44bd-81e1-bfb02178faaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23eb3bfb-a917-40e3-96dd-2699d0cd3a6a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa905781-95f7-4a63-8cb1-1afb74df515c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee079ed4-bc0e-4c2a-b546-19a2e445c5f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d275941a-ca2e-4d0c-b8c2-d40fb6a708dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bad325e-ca00-4879-8075-73c7571c5808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c41f2d-d68f-4afb-b025-f0cfef8fb563",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "380e66b5-bd80-4ce0-a8af-177648b88d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b20ee1a1-f5a2-4861-be7b-cbad25ba3f08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "862108ae-e9c0-492b-8837-2bb85fa58f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ea3619f-792c-4fdc-89f7-3e52b440fa98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a7634c-e65d-489f-9968-9565bfd00f4a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffedb2c5-57e3-4eb0-9195-aef63e0d9f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6280d8a6-28d9-460e-8256-58c93c7b60f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55864cbb-819a-4fae-9879-3d689fbbe9c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "068e722e-777a-4007-8762-5267a3ddbd02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0fae5e6-35ed-4fb3-8e0b-aa63ea0828aa",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c31c8f6-156f-4cf0-9bd3-3dc7f0d22c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95abc010-8c48-4b1a-a461-5b855f2700ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15ec6f44-eeb1-4017-b061-88d771d56e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a995495-2d20-4057-a372-b672787abba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d08cbe34-ebd7-488e-9302-680db21131b2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c629562-a441-4513-a9cd-d66e0f5835de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a3fe836-9c51-48db-9fe9-c8cd7ad58b15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc15c29a-5eea-4f01-9ba4-a7016fbb7171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72d65848-dc14-4956-bdcf-ce46cf52776b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47c1a9e5-c44a-4038-9f44-52e3904929fc",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a9876fc-f6e9-4a4e-ad3d-9b54de3bae43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49ed2c37-f26c-4e91-8ca8-ca279a52071a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94c8ea8b-cc1c-4b9e-856e-c77245068b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "acaaea2d-7fd9-4185-935f-2f442d1cf5c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0b93ddf-dcca-445e-a84f-7e08de13115b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "552b639b-7dfc-450f-bb9c-7a3a9a63547b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4b7bdff-a863-4afe-8f2d-7588d4507e96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a594fd9c-e462-476f-a6a4-a41c5201ac56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29441f12-c6de-46d3-b25d-26024565ea33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b193f91b-2cf0-48b0-af9a-22d7850a53b8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e03b7cd-4088-438f-b4d3-60038eccfee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7320f569-a350-4799-a83a-604f535eea35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d4658e5-c37d-4bd4-8d35-2276e52aac21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e43eaa45-ac14-4927-a08b-86ffc42ed089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d511d20e-aa48-483d-9079-6e0b821c935b",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c611803-bdfb-4fa0-a44b-1296c4b189f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3424876-a8c9-4874-bdf9-e91dfacb308f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2b1a63c-969d-4151-af63-881b8e3e1b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61b14373-165f-44ea-b41a-26b024fb4424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13323fb2-28de-4aa5-9382-77e89c18ccbc",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e222d39-5ecd-416a-a967-cfa8bc47f99a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "893d399d-8099-4cb9-adf8-ef3a1463b634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7febf589-659c-4c04-8edf-62c3edf3168a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e7c509a-f331-4dad-bc75-600e05bc7ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f25af64-8da2-4b79-98fe-fef310f1c8ef",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f39c0cc6-3339-486b-801f-b654d78fe09a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "419a7e59-c6d3-4432-b493-bee05aa60b42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc4d5d5f-144c-4625-824d-ca462b03556b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82e4d15e-b149-4440-a90a-815196ad6177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b05e5425-dd10-425b-b7a2-1ce359c02122",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf7b774c-0148-47ab-a529-8fa5f09a5d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a101538f-51c3-4858-9618-94d677808e6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12277b28-cc94-43c8-9dd1-a0ab5101d978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0e18bb7-872e-4fb6-8598-0abc2cfbe72e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c42556-2905-45d4-a15b-7bfd9c86f80c",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80f532a3-a2a8-470d-8a31-1b04099fff5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49193ffc-983e-4c82-aed4-6793e73ee722"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4acb63e-0a3e-4d18-bf20-4ddc39cfc16d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa875eb6-0bbb-46ac-b7ec-e9d721b8f50f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cd552d1-c088-4b86-963d-5313a689a800",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b05b72ab-60a9-4ec3-bcff-18662b121b99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c90f30c-a080-41f9-9596-dc5c07d9c956"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30d4e0e0-1e02-4a29-9efa-7a44641adc08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf6fc65d-a3df-4eef-bf56-2b1823085398"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d7180379-bed0-4511-b944-a97bd4a03a96",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f2a48b92-9fec-4df4-a0dd-7f18bb669bc5",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbafe8d8-8b1f-4168-af24-6c571e2e6fd1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2d112c65-0d6d-4c4e-84bc-d0a74bb8aeca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88381a84-846e-4eb8-88ac-fd7ae59a7c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e41a0a82-e3af-411e-b796-ebae29934cd4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2305ad8f-42aa-4ddc-bc82-d45b09d925d4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "50eba3af-886e-4d13-91b2-5f42a40dc7b1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c4838e5-d56d-437c-b014-8b951b17f021",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "83b35e62-c129-4b32-88d6-28d34560d5a5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5dcf8079-42a7-421b-be8a-842c6662870d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bea44db1-0b1e-4600-b862-577b457d2fdb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "33b8391c-6284-4acc-9358-497cfa56c0d6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "66e847bf-7668-41d8-bc84-548bce84c5ac"
            }
          }
        ]
      },
      {
        "id": "d0f08aa6-dc00-4b69-8a93-ea4b595ca530",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6af054f6-bce4-4a9a-8758-e84e1c0aace7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e1063a85-0223-4eb1-aa22-3cd7b3b26f77",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "21378812-c72a-4f73-96f6-b7bf58622c6f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "965bddb8-f90d-4c82-91e5-c17f4325cef6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2df497c-8aeb-4664-acb8-6b5183ff8090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "543fd4d9-90a4-4773-b980-296af355ad79",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18cd2f19-096b-4255-9688-9d1d933a8093",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c452ab1-0aea-41d2-817f-4f451dc55255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c4c08e2-1971-4294-b0ba-7478f9641536",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8350364b-02d8-4c55-ac36-b5378107c189",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49f87a7f-40cb-4556-801b-da38ebc81d85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdb63497-5424-43cf-a58a-88afe334c89f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "305f197f-830d-4637-a890-6bb729c8bce0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84356dcd-1304-426d-8e79-614467502d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "474a45a5-e735-47d5-8a2c-ab2cfd72f12a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7966da3-f511-42da-abfe-281cac688840",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8aa3a9d-00be-4207-b71a-52aadfdd401b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eeed32f-dabc-4121-81e4-63ac1bad11ab",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe8bf3bd-d0ec-4018-8204-be8e1ea978a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b923b499-fba7-463a-bd48-6b5096f93be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e2ed56b-d0c6-409a-8e28-93493ab04456",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf86a8b-dfcf-49d6-bace-54be945d7e69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fb1cf9c-22b1-4bc6-b3d1-94ac355e1fe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "661a2095-c0c5-404a-b8fa-ce8dbfa1ea21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6e0c819-e249-4d61-910a-e95343d34c11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fc3c76e-f808-43ea-9008-db9f3d8e402a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb9b8c8-48de-48ec-8a7d-bdb91f98924f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38d10b0e-5b57-4a38-b2a6-4f4e41569cec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "649551d1-72f3-4307-8134-3dc59973e1c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d32075da-44f1-48a7-968e-105e15f44c1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db6e7168-ea27-4f2c-b955-5c68455b42d8",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd3fdb0-f19d-4bef-ab44-a8cbaad6abd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9009c355-057e-4ba1-a9a9-54d15e72b631"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a67b31e-0cca-4b93-9e30-c8f37eb0287c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7521d893-2cc1-4d04-be71-bedcf61b3f6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f4c63c0-6771-4593-a93b-6e628d01d9a4",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79d8b279-4ad9-4f1a-b27e-dce3003a83e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67aba249-7b99-4eeb-8a87-e9ad4622cbed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a4b8646-9f17-4864-8648-c57306a66c25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b98c5fe-46ec-4761-836b-10ec27795ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd323589-31da-4d09-a521-c856fd178dad",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "755ccd9e-2b2c-4eab-985b-7c19a84514d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dfe9f4e-6962-4828-90fb-3df97170aa92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c52dba-7970-4048-8e80-43b71fe3ecf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66dbf133-6f9e-4fc3-b61d-7a1e35715f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f60576a-6055-42a1-80c1-a60e44b7ee19",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b76ee299-be61-45d0-a3d2-34e78de77309",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ef2fb7c-046c-4361-96cd-ab796a7c61fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a8acdeb-66c6-481e-89eb-0e074d74eb2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddcabeb7-01ee-4fae-a42b-b510e4760652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "435cacea-2a17-42dc-a742-d6974cef3ceb",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa68d8fb-fe23-4a27-ac61-df8ee75f5e7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bd00d21-ae67-4c40-82ef-ba1aa6f31709"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae4e630-0991-48df-8d1d-e221b0e140eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "906e6f63-f065-4dbd-a540-68508dd46f31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "614b1f4a-0ac3-47c9-ac40-7fcab4bfb498",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "224e37d6-5e27-476e-b4eb-469e89e7b0db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1046d997-8e40-4f05-8eda-c62ead88e9b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "439b717e-d4e2-48a0-8593-ae09ae5c324c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a54f8a11-5bf3-44c7-a1f2-359306595353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d4fd39-6450-4e21-9a9a-ebca38012847",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2325f1a-fcbe-4f63-b7f6-9cf71551a930",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5eed7873-30ef-4d17-95f3-7349d76e4d35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5479aafb-79d1-4aa8-bb3f-fe8349ed1ea0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6364c191-9b6a-4405-8e17-69e185eccef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c8eee08-af9c-45e4-94b7-c5b7d7f228eb",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8ab1506-696a-4765-88ae-072d2b1466a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ad9f7c0-e113-4ddb-bb36-0305a3236433"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17194a21-b70f-4387-97db-5281d113ae8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f012c85-b0be-433b-997e-b4ff81bbc739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "761a5dd1-fec7-41d2-aabe-f7af6c9c2c1e",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c63f6e98-d20e-486f-9228-65524423c832",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db0f252b-0736-4025-8e1c-4cad4ba40b65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1d7749a-25a7-4fa8-99a2-0fd20596aadf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af00a4a9-f5ac-4691-920a-3e062f9125e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98a065a2-06ba-4fc6-97e1-74519708473c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "603b21b9-87fa-4ea8-957f-20f2add91124",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e2c4239-67d4-4d85-bc1b-7059f76b232c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90114f1b-3e42-433f-a557-1cd2ec2e4a23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a99ce9b-0880-45d9-bff2-b164676ba999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d261b015-8dd9-4d27-8077-1ec405219fa2",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b656a3a-8a7a-4f1d-87cd-96a9aecd2bd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55c93840-d1c5-4bc3-a731-cac32998630d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c0e7a96-0182-451f-997f-a6b9d9aff64d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20f86c16-166d-40fa-8e2d-6d42d93f623c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0fd8276-2145-4de0-ab32-4fab579b9b57",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "379840b1-13bc-465f-968d-751c89cecf5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1211c82-e9ea-4508-9c66-54e32326a78e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e6b2a04-dcaa-4f21-ba46-424e36ffdc37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "effc23e0-3e3b-4965-bd72-d822040ba672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92dcf734-5060-4e95-bc4b-25e83f18d329",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06e04b97-bd42-432c-93a2-ff28d46dfe15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fe9d141-983d-4dd2-b7ce-a15fec298550"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dafbe0a1-71d3-443e-b308-fddcf46f41c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54ca0c8c-fff5-4472-b942-8d015d3f4785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbaa38d6-1518-4383-95d5-b862ed53a64b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b01bd411-93eb-4183-9b06-c7caf8dd6280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3871833e-1f9d-4b55-a595-710caf916f1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "614c9a8b-c878-43e7-b179-7ccee712291f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be16d67e-7610-4cb9-b4cd-1adf0032ecb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee939e2-454d-465e-b6f1-d13c4ae0a233",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e01a239-55d7-4a80-b850-2cb4a2cfc004",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "408b1043-f4ce-475f-9ede-c298f994abe4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e89b6c6-7200-4d5e-8890-ddf3f4cc635e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23af3baa-2b7f-4c36-a38d-8aa8297538e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6169832e-b1d6-4d09-b8c8-5fb67d7ac7c9",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd96df42-0b79-46bd-a358-98748ca7836b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ed40be6-4b0a-4826-a4c7-f94b09a35201"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00eb492a-7217-4c4b-8791-b4ba5ec7feaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9102d0e-6ce5-4a27-83ab-9c2a6e2ba1bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0adee21-ffa0-4806-91fe-75b4dd9cfb65",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce9b90e6-f782-496d-8204-ec2f10240ceb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eea8d9a5-56c2-4c20-a5a9-09d1a558b2c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afdfdd1a-94a9-4430-961a-e94151f4cf22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4c3535f-c14b-4329-8ffe-8dcf046f0536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f7b6ce-7293-43e1-98db-ad0c9084af47",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5810251-4556-4bec-8d22-4543ab11cd56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c659293-c48c-499c-91a3-81ae289e7b90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4ca22b7-c937-4ca7-b7fa-e2ab366dacd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d579ab40-1bb5-47cf-b1e8-386089e7fa8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "140781ca-e9f1-4af6-815f-9c4007676ce6",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94e6ca40-cf63-476c-9b2f-3e6a8a996738",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97ec690e-2462-4d5b-bf71-0cc0af345895"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc131cf6-b526-4bbe-b5fa-ed30b3f415ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9161f124-f195-4960-83c7-540e3983e941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e69bd6c-5610-41d9-9947-d7233404d1d3",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "212135de-6027-44e6-9d38-02d91d77c04d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ba27c69-85c7-4a72-a9c2-e0244a55445c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb133f8d-eff6-46d7-b7ea-fb4def6b1df7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1d40c30-c22f-4b4c-8cbf-df23f0897aba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41fefb06-a31a-4451-9ece-eeb128ba8735",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e0db5bf-2bc7-4721-985b-c704a3d01bbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "376da18b-de95-4fdb-8ce9-0ebb2003ef2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff67a151-b20a-4926-bf22-17a3d87ec4f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bda9b57b-b865-47b1-a76e-b70a6aaf783d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "281d72b7-a571-471b-bea0-63bcabbeec43",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "750d8248-09c6-4bcd-8b74-e831dfb71532",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27656a0e-205d-448d-8263-c82629d425b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c07b7f25-917b-4c66-ab60-c6b96b907454",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14c57974-a8b9-494e-bc40-c0955568cd03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3009cc52-45b8-4d5a-bb43-1a9b0b35605e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "568bda3c-bd3e-4020-9b04-9685009eedb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec27d4e8-3cab-46d2-a559-4ad06596533a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e789187f-2f5a-4c96-92bd-6f024de8c5bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8572587d-947b-4ef3-856d-4b5918c49054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c698cf0d-9752-4785-a58b-4cfa679b1a60",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f0ce055-13d7-48b4-980c-d8e2ae2e3f0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "889c3c7c-06e3-4918-bf0e-299249c12eb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "326f87a8-6f35-4a9e-bf9b-e18553e63b53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a95ad8ca-ccfb-4b3f-94b7-c0ac7344bcbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6072b51-d81d-4a08-80e0-28411d4ba557",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "244a9433-91c5-4c8c-b09d-f9474a134bf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc8e7daa-8c13-48a9-92a8-10187124fed3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "081180c5-9c8f-4a97-b637-7c1f3a5b43c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cd41a6e-ab60-4d47-98cb-6d824179cb36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de7ff73b-9a26-4e97-a206-1ee8095bc694",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fa43b6e-a3ad-49ec-b5e8-a51dbcbf5ad3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f606c511-cd10-48ab-9eb1-7f47d87daeda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a6a4566-fab1-41b0-9678-5a7ddedef272",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d83cb6b7-72a3-4932-b0b9-ae329ce1f85d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec2dba3-638e-46d4-b81e-e2b7304b6f91",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5861bf2f-82d8-4917-869d-8a84079a3264",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd4e45b0-c513-4fe4-993c-1ae7357e489b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63108cc6-fdf7-4c3d-92ce-41b6468e1dfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acd84812-9141-4142-a80b-4e7516945399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c98671be-ceb8-47a6-8a14-b6c9e8537a99",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d358876-41ee-4f4a-a8ce-3e395745d910",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80ac9690-bd0e-4ca5-8464-f75187e5310b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22b49e32-bfe9-42f9-8d92-00c826214fe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b4cf426-d1da-4627-8621-cb3752f3da69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "063c6fa8-9ee1-44bc-bd82-b1ef73e39dff",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46733768-cb25-4daa-8be5-087cab31bc8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c3375c6-6369-41dc-9367-1cc501d0ed78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9759717-6ffc-4b55-b1bc-2051303b26fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11be4bec-1908-4039-be97-857c2291ac53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8f2a99a-4555-4e02-bd57-563ace8ce443",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ac3c20-c45a-4fa9-bc61-953b6f2354ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b788e19-b805-4cdb-84de-bc4544c7d45d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2db4f0a-dc9f-4258-849d-8d0c541be517",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba1043da-5afb-4f53-83b3-e86fd3192778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d44cce40-9bb7-453d-9f9a-4726a3b34467",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "041537d9-1e7b-4975-840b-ad15c39585af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0ca1f8a-27e4-407b-a0c5-0bb6797aaa3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c97f055-26d6-4c4d-bf4a-c2b6c47f16e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f587f66c-b71f-42d7-8f1e-d632add9d3fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24a2a078-a066-430f-8a55-01a3a575a04a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4574423b-9314-46d4-9e00-0c0dc9239170",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36cd654e-2573-443d-a36f-7ea1b931a37a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b74d0a1e-cb61-4d8d-af6b-e44726af93c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee993d83-638e-4a20-a32f-1188669f4d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64f9014a-9f27-4337-8732-05af2bc43232",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a0f7f1-8a08-494a-8aa5-50f5ee624be0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "506f0a7a-524c-435a-bab1-0c9ba9b6368f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a29efcf-3908-4268-80d4-eea872a6d87b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75ef1db2-ab77-49d4-bc5c-3d528e3a6e2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a8a92c-f16f-4334-b602-ee03d3174e45",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a3289ec-7391-4d98-9998-4eedd6fdff19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e34d9c6-dfaf-44e9-bd56-d802583afd4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "532e66a7-5593-4eb7-9241-ea7f6fc0b45a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66112c9a-0054-4638-8ec4-c8c3c06c0a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10285ed1-aa5b-416b-ad59-e42b35de8e69",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ec1e2ec-42dd-4d53-ae4d-068caae73cc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b000816a-a7ef-499d-9ce3-ae905bf6ce45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "499f20ff-881f-4691-920f-9712ce6ddd47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef0c7d91-006e-41cc-9f99-6befa0f0310b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8557f0f0-6443-45cd-b95f-bd7708fd2cd4",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28505fb5-2691-4e71-a0b9-a7134e511298",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdf70a91-019e-45fc-ab51-b4e3b7305aa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e00cd5c-3b99-499e-b5bd-3c36b2fc76d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "596498df-d391-47dc-adaa-de544f2d39b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca978ae-0cbe-4416-a2ed-d9f0553761de",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f3becec-10c3-4982-a09a-7ff69621aa76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3162df1-20a8-4fcc-a97a-52a0a9cfc046"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c6cdd8a-dcdf-4766-96a2-0ccaa1829465",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "504e99ee-218d-4c3a-9f8e-3f24b35c3791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66f19e8b-e9af-4e30-bda6-8efcb8111ba3",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74aed93e-b060-46ff-9470-1706451d45b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cf8caed-1e56-48a5-aae7-3dd9ca143b2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fff19ec-5333-4c59-a20d-f847785f75b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "395bf25e-5a3a-4da2-a7bb-4e977627cf6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8e97db0-110c-4753-9983-d4a039187150",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a71d7d33-0b81-47ee-9842-9c4a16492bca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26a88673-6e53-4d7b-8fbf-2480d2a940b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a55905-8162-445a-8012-a5199b299973",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b968ca0e-fec6-4426-9695-13d4de2bce4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e3a1183-5c56-4546-a6f0-ebdc6765f4eb",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28761b77-a164-4ac1-af2e-aa4036f3626d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0429596e-17fc-4d63-8706-0af37ce7c43a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9a09b93-b733-4b22-a204-c8979fbbb22a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32da5674-9b1d-4286-a75a-803585fe9990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f6e0b65-bced-4a38-9da1-1a3675421078",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a72bf63-b8d6-4842-b976-ca27246b5642",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9861deec-1cf8-4e55-b6b7-8fe3a7c09d53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c507f37-4ed9-4f00-9bda-7d8a58e75b14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "862449da-ede9-417a-bc81-21c632a4ba86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0243792a-4aa3-441d-afb0-d8ff11acb579",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d039f211-135c-4cee-b2c6-e01e0cee7e5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7e52a72-c517-44b4-99bc-d8277eba1aa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f296ef5-ba99-48e7-80c1-f7afa3bfbacc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ee7a08a-18ff-4ff2-a81a-db0a68439a2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27ea5417-7e57-4692-871f-e4a0b62952d2",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8341e8a5-0ba5-4466-9f3b-b81d1a7ff4d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6f7a15e-fd06-41ca-9327-2aa70a1f3dfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4382b7d-c386-43ae-95a3-6b8030183088",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9279977c-947a-4b26-9e35-d590cceae784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54114e63-9b15-4686-a30f-9a92f38f4957",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec75e8e1-7da2-4a04-8555-71d46400aaf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47dfc9f7-56e5-45e9-b4db-7cdbcea7244a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1483ca05-62c3-4911-b8ae-71ce35b165d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdc9a9e8-f95f-4e8b-bb64-30e0adaa7847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "336f7ad6-42f8-425d-afbf-ecf4f9409474",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8afff0bf-391f-43cb-a88f-cbbbff106c0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dd51529-1f6a-4f21-9506-b6a64daba91c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc4532f7-2807-4b76-af19-0ac2b0aeb6d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9ab9704-bacb-4ac2-ad01-00e374acd46b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c2982e-8025-44b5-ad74-a5cb25a79696",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e07819f-e52f-47f2-98e9-fe92c05286f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56a64cc6-d650-4fc1-9297-0ea05535b2b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6810004-1c72-4e5a-8820-c83e6c93af61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "770f412d-4c58-455a-b927-ab5b85dc8e87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "001a7a1c-839e-463c-92a4-2919dcdfff5d",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f55087d2-a152-450e-aa7b-4aa707c72b35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1265b23-5d46-46f5-8316-692396e1936c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2913af72-a5c9-429c-a2f4-67af7653fed8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1c4ed6b-2c9f-4606-9db5-2ebc4bfffec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14b930a0-24cb-4848-af7c-07aeea1cd7fc",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccc119f5-97be-4b38-ab29-3f0c3dce94a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bace59d8-eee1-4d44-82cc-10e3f99f42a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d9776b5-8714-4d1b-9310-995f0e5e7198",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36d8f654-a0d4-4d17-9028-880693077fa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c652c9e-d423-481d-b002-d532b52a68e3",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3cf769d-ddaf-4c24-bb4a-df2fbb8cb0d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fd071d8-64a4-4311-9c1a-3904eeaba5ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8941b6b0-fd9c-461e-a85d-58804b6efc3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d51b35cb-ae4b-4b39-a60c-adbcba250aa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43bf24ea-f76d-4597-8644-e73b9a8e89d9",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db6354e0-e5a5-495e-9021-1db08112db89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "289e4a9b-964e-47b7-a780-d140adac1560"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f10183-bb59-4772-bee7-3630f730b854",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b443e8a-d662-45f4-a0d1-188ef8d0696a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0975545-e60c-4de0-b812-ede2d539f786",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f79c078-8b46-48fa-9a7b-f20f187972a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3502d67-23f5-4c23-8616-c00d6727fa54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eaf7563-8bc8-4e42-84a6-a1746a521eaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10662602-7436-4229-ac40-f384463a331f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3019c546-b599-41f9-9f6b-f81b069530d8",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbec38d2-f382-4594-8413-cb35bb9a82fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f36210b8-d3be-47c9-a044-e3a1fb58b751"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef66400-1f94-47eb-8008-a3cbcf036572",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3498251a-e9a2-458b-ba99-9681e36707da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0b57cf6-ccca-4f7e-8e70-c329cf3385fe",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcd4aed6-8532-40c0-8a00-6efd70ab995b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "443d2d56-5127-4aa9-909e-47c865bb013f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a763e0-0c85-44be-8e23-cbc6ff315cb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ecca1dd-3447-4402-89c8-2b85b8b43267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a8587aa-7f33-4698-92c8-9c54645fafe6",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a450985a-ec63-4090-85c4-70d00f54d7d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2021b12-6faf-4898-bfd4-4ff3e8cd102f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11152cc4-2447-4ef9-a95f-90067fae857a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea203049-c248-4896-9c94-ee0dcd8cad4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "522f5e26-12dd-46f5-95d4-9240b0435274",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8daeb651-640e-4efc-845f-f91cb3d952e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3b275a2-f90b-449e-a009-cb6f694ed49d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1f88368-bd73-417d-9dca-b14ce6b51d1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c72874e-9088-47f1-b272-dcaa7ee452e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caca3db9-5f18-453b-91f2-93a7028e3e6b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98da10d9-1b54-43bf-ba63-703af3386b77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "baad228f-de38-40cf-999e-d8941fca9c30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b498f18-c475-463c-a56c-61ea91d5a3b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ea4d1c0-19da-4dd2-a7e6-ae54866ef449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50037407-0f85-41ec-9402-e8ac983c7fa3",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a74277ae-9018-437a-8df1-5de385dd2ed4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "def3af7e-6857-46a7-bc8c-b42a0f8df4e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2913d7f9-1a1d-4138-9314-ba9f84ceab04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ff1b4d8-6e43-4025-a3b9-eb95dd044c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27dc7f7e-f101-4b6d-b011-c76d6c71038f",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dc15e3f-1148-411c-84a8-41ce10497338",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d76da11-2ec9-4e59-a776-0c1756dfac25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42acfdd8-b5e3-4c8f-a1ec-15eaf86ed6ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7a24a85-a23e-439d-85c3-c5106cd9bc93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9ea8be2-1946-4075-b564-5a1c5ef7cd2b",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6e435ef-9efe-49aa-af05-8ea9fa0bb804",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b39eb2d-e7a3-42c3-87ce-1bf053ccc5ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ad09df-ce17-4f2a-865e-44a7319c4480",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dddb5eb-3151-47d3-9f19-e21b7f9ce280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9081d141-eab2-4b43-bd7f-432b8ef87b57",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63558ddc-e3fa-42cd-95e6-269e410c02df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "345103db-80f4-439f-9787-3bc1c8920838"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1604d8c-0a74-4748-84d8-a010b886c0ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a98dab1d-760c-4e0e-9a3c-38f0874e63d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fa968e8-2800-4881-978a-629560a96a81",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8ad87d7-a1e7-4684-b6ad-e2be3e7fedc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "949da476-1ef6-4554-8c08-15018c13b6bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eb4156b-942d-46ef-84d4-f1d82d9dc0f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e4b548a-d9e4-4a0b-9ffd-6b0193997453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe85a121-19a4-400f-9904-376ea1e0d151",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd19521-4418-4969-be6e-06526cfc745a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5ebef61-cd0f-442c-9134-05f9df5ae361"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5eb59b8-edef-4f06-8761-bed27da66f69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cf3e161-22a5-457b-8e74-d7c8bd105e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d3623c7-fa0f-4d2f-8cc3-fc3acb99b16e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5dbf05c-31eb-4ff3-9c24-da9ea27a1892",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78c16cfd-cc43-4cb7-bb39-dedbc7f0de9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e43480-83b5-4435-a572-d1d12a04c8af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af652236-b93a-4b29-908c-7f20aa4a6a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4d4ab08-f4ad-41d6-a83e-9c19728544b7",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1c24788-a773-405f-bc28-69abbab3838e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e96ad329-e868-4cae-add8-c81cd233305c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ca4b47-87ad-4581-bfe8-c9aca6fc13ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "846e3ebf-90f9-4221-b944-d8bd0e7c36c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99e8ada8-e45c-4e8f-965b-abeb6abb9b02",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d3fcc7-efdf-47f5-8924-874ad3f31171",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c563016-0700-4c02-b213-1d176bed1656"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e99038fa-d7ff-4d97-aa99-d03f0faef131",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afd5553e-69db-4898-9d6b-0d3106173015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32d20c59-7a72-42f0-9ef9-a2bc1b052fa2",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a5c3b0d-a0e9-408e-8572-042827cdf369",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05983644-bc42-4390-bafd-78c2302cf727"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a8313f3-df23-4f97-a930-9118d8408d08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b30894c-36ca-4754-b8ef-ff629c529b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0165210-3c96-43e2-8a09-4ebab9e28762",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b53842c-60f0-4e1a-b22c-5cb952e07dd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80fb99b2-86a1-4502-b0a3-c6a9168dc606"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33658e19-58e5-42bc-ab8c-2fedb86c4451",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6935865b-07e9-46ad-9c2e-3fff24efcd67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c6e411-7034-4571-b813-23b0c2c67016",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dd0d0c2-0ec1-4f3e-b627-5c8ba8b0f19c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "264334a8-8264-4a4b-8e70-50d31596ba94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67232414-8083-4269-a57d-72ef650c4ff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d284466-9197-42c6-95b9-d8e2f7fd52b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb44bf33-b88b-4427-8889-5358ff0f4d15",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fff9f6d-a8e2-40bb-a05a-b404e10b0ee9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "473c62a0-f1cd-4891-9088-35a36f51f78c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "885ad624-671f-4f1c-b00c-fa95c6d203cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7f81694-7c7d-4ead-a497-3ac2f3d44656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a3edb95-f4d3-435f-9a57-3e6e4f37a4e2",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71456785-05e9-43e1-9cca-0313c7fb94db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "622ec1d8-b96c-4709-bf92-14b39952f84f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30109dd7-9303-48cd-8ed3-463299030494",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2757af53-8899-4022-9023-31d3dcb19e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a2648e7-1659-4ff0-9328-0035d99b3800",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74f88ce8-6b0b-4b0b-b3d5-0ccf2a23d601",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e18d5b13-64b0-411f-97bc-1c86dbaa96f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "929ec1f2-6028-406c-9154-a5d48318f5c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eaddf48-4723-4973-a764-742dc6bb220c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fd23db9-587b-4af3-aef8-426afef26e92",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "778b1f3c-038a-4793-998b-ea76c2ffc062",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5041f07a-4513-4b46-aa86-fd4ae3cf5fe7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c43768e-6453-4125-9086-d2f81fff0e4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "824320bb-79e0-4bdf-929c-368520681171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "877d1cb5-2b3c-4c4c-896c-cbf011368855",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81ad86ad-73e6-4f18-9051-493994fcf3c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3843a418-1d09-4ee3-b501-b91f3e8a51b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "229e1bf7-5d5a-436e-94e7-b61ae3b86348",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c3dfae8-b3f4-42be-8838-7f56c5a989b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c118afc3-7215-495f-a79a-dfacd22944b7",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "513c57ae-676b-4656-beac-f48ce18eda07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4071c7cf-1f7f-4f70-8b2d-ae7a8edfc7c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7cd1baf-f156-4422-8244-236db2e193f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cba68fd-5ec3-4106-adba-3cb0e9fbc9ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2687fed-5e96-4647-bccd-cd6845c8baf6",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bf03694-e1e6-4f99-9690-4ba657a42ae2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48593dc9-0d2a-4aad-980a-7610ba3b639b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f22f9efd-2120-49a9-b6d0-fa24904ad8da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3965377a-3f64-46ca-8b60-8b512bd6e341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82308f8b-84c2-44fa-9b79-09feb59215c9",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57f1d67c-4a24-4d86-b398-1c428774b029",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43eaba3a-9ba1-4cc4-a96b-8ab99aea726f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2b21c37-48e5-4866-b0e6-29bc13b26229",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91d340eb-c4a5-4250-b214-dc49b004bbdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc22f3f-a93d-420a-a4ef-fa88591fc2a0",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f306a01-2d60-4d78-abbe-d6671f296cea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "566c9e86-ef1c-4001-b27f-e0b1beaea11d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70ced464-dd29-497d-9c94-7b3ff792f840",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec5d79bd-5606-4d56-9b71-7767abc1acdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d1a841-1c96-4f47-8597-7073769749e3",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e577fa57-6a7f-49a3-ab5a-385fd9f01b42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14980893-ac7c-4ac2-882c-58293878b4f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ea5f5d-db7b-48d8-8703-c4febb6931db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5c1df83-5e1f-43ad-ae22-2cbd3de737ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "382b0a22-f905-484b-8d0e-0077e34cff56",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a79a61-025a-4b01-8116-17c3f64d617a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "418729c3-7e5f-4af5-b527-e699b04eb7ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94b4387a-2a33-401d-a266-336732ad8529",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7eed117-6fdb-4759-bfc4-ecda5170b126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b030b48-1489-48f9-8498-6bcf8148a873",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae760ca3-e4ce-4119-b1b9-4b3c849e6c12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4d5ae71-7ea1-4405-8873-6a5a9dc236dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "329e734c-284c-43cb-992c-cc42ffbefeb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f57b8209-7ba7-4981-8ec6-233d127eb98f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "649a6c0b-aab8-485d-a510-54391bc20eca",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06897393-e99f-440f-9261-c339b1470dd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13561b57-afe7-4910-b856-e54ed0af555d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7384c25a-e808-4331-af7c-e684aee87b35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed425b7e-85e3-4f87-a96d-e7a0d6c7c5ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24a2bf76-da6d-4fe4-94a3-7d9d70c36277",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df3b872-f7f0-4703-826a-0bf69d30694f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9a0c307-0b42-4272-add6-20a40aac8b18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "514eddbf-e5b2-4cdb-83bc-dbbaf0caa2fd",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31dcf496-2f38-422c-a4a3-28b4e42433ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e893db-e340-46b1-bad8-7710054304e7",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e27a2e-5316-4c13-af40-76d67e55fe9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f617fb68-0637-49a4-9de7-04692c21c747"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "969d19d7-0ad8-4155-9c2e-1809c57d7d76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44e31780-939a-40cb-8b64-939bc8ca9dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73c6d6b0-c1b2-4f81-88a0-e40ae28de5f6",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "514a8eb9-2a77-4bce-af8f-1797d251bde8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73ad5097-319b-44ba-878f-163ff999f2d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "997e2414-6376-41e8-9d44-a3c3d7b6d1e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c67d47ac-95e3-4da0-accb-51aad5598e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4d91954-4487-43ae-af55-117c2914fd2b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7696e10d-1f77-487c-bbe6-d5e7ab38594c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c2b473e-4e82-466b-9046-17a0c86bfe17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0473dba5-b03c-4200-9f91-1c4f62cb2638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d14de70-7599-47d9-9c28-cbcf15759f1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df35d28b-110f-4d4f-81f7-f136c3cf78ae",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a549f42-289c-4d17-9793-29e7d1403e3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f182800-baaf-42a4-8dfe-6cef065f061d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bca4d81-d6d7-4c53-b909-bad168add4b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0c63cfd-7f5c-4d0d-a82b-5f8d27194161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e35d29b-c68d-4406-ac24-53aa9ef12909",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d92356ff-cf74-41b1-8f87-dd388a968226",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "849639eb-9de9-4ccd-b06b-37cfac5be4eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42ae32c5-3c84-4958-a535-c7242a849339",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4c5a733-b16e-42eb-9c9b-f26a7cd50309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12f4c325-ba5f-415e-a71e-0ff91e34596a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be341109-f6d7-4af7-a8da-a391e6f880b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32e0c674-463d-4247-8c7b-d08ddf285d74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab2fed74-c8ba-4f01-97d4-8c64fa4c5e58",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d122e51-0640-4576-86f2-e0afbac4b891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d2e201-043f-42ec-a9c8-9eb959487f08",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "958fcab7-22c5-40e6-bccb-21ff466ee622",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ceaec857-4abe-4085-9b2d-3efcec6e41a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "062f8ce6-7472-4dc2-971c-4842c8b55de8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a76a112a-48f3-4772-a9cd-5fbb7df539ab"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cc9bf140-f695-4051-a844-31e2991a78d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "119d3e12-514b-43e2-84a1-2519d958ae81"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e4c0ac66-3960-4008-9f10-aab5f3a959c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "53e0bccd-0b38-4a02-a0bc-3be7a61c2d21"
                    }
                  }
                ]
              },
              {
                "id": "5b3bfeab-949f-40fa-9f8a-eae9b52af0cf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "edddcb7e-456e-4375-8f2d-ab261becdf87",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0b20a48-0ab8-462c-a31a-1da268243508",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "00918259-3432-44bc-846b-3c9b5190f8d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e5ad1f1-e7d2-4153-b542-01d71e42d3f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2b3cc70d-9996-4929-b6b7-eeb31442a561"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e79e8c9-25bb-4eb1-b33c-6a0d54c5fa2e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "afc44933-304a-4710-ac14-8eacbc3d6e1a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "838d8e90-99aa-4ea8-ac94-506386548b0a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f20ade92-1f20-4899-9e5e-e63cfe1a6fca"
                    }
                  }
                ]
              },
              {
                "id": "3191c292-8be4-4dc4-a360-779460730231",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4b5f1291-cbd3-49ac-88ec-1470ebd0106a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29536fa6-a289-42dc-a11d-ce8a8079b2a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "6ea7c3f7-59be-4bb4-8c7e-8d0705dfedec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aef0544-83a0-4c1f-8dca-54f73b2c4d80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83006e61-2747-4e42-b69e-6543f6a9172c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2e1010f7-4f2e-4a1c-a23e-20be63ea2da2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "28f8950b-9a61-4314-9626-b86b2a66c574",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "799ec1d6-30c5-4641-937c-065fb4921647",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1eb61396-50ba-4d12-af8e-291806527bf6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "73a0f0e0-b73e-454d-8554-488173338a51",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe373545-b99c-4f90-bb02-f2f1e02adef0"
                    }
                  }
                ]
              },
              {
                "id": "d12f5967-9d6a-42b4-a9ba-6bb2e6735a95",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "595fc21c-7113-46fe-b01d-418814644639",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c6a214a7-fd0c-4371-b01a-f45909739b62"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "256cd45d-b330-4dc8-83b7-c92229007670",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aae89103-8e03-4ac5-89ec-b0215f7ee47b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1836ead1-1754-425a-9da1-076615e9727c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "f483b4d5-f871-4f06-aaf5-bb02e1b9347f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dc69b191-2e5c-434e-a737-9e1a0dd7b9d7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b2a794fe-e1c1-4917-9a31-3950d86b2f84"
            }
          }
        ]
      },
      {
        "id": "c8efc66e-0150-42d8-bf10-3b5a686e85f5",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "06940d5c-f0e7-4a54-89b5-d5cb552e3a29",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fabbbaef-fee8-4fef-8ba7-e5030b22eea9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "78cc1ba7-9faf-4f0a-a9e4-b91029d86366",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12707c77-243f-44cd-80f0-a0541a583ec6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ab970c70-aac1-4e38-999d-7545f30c7369"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8bf8ed6-ae44-42fa-8371-1339f9719320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8ac35694-fdf3-46a7-b9d4-e2c85b778ec7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "18a9050f-ad6e-4c2e-879b-db5bb24a1d46",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e342f682-65c3-4422-924e-c051ac4fbcdd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fe968858-bb06-40c8-a097-33454253d1da",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a67f5ad-5a41-42e4-8eec-58fde94b3ff7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d6a6a15c-4e20-43a2-b56e-cbfd4158e3a3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3b86c2a5-751b-4a00-8060-5cc21a645ce9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b15b655c-2f39-436c-aed1-28e6cc68eac2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "01ffb224-177f-4fde-9139-bd8bc58a749c"
            }
          }
        ]
      },
      {
        "id": "acf63aa8-aea5-42dc-9b11-5cc75cbda665",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "384e79cb-ee0d-4ae6-9361-3a4e10dc8fcb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "140c00c0-a72b-438b-a7ef-50744717b6e5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8010c1d2-b69a-41de-a268-d6ee79f1bd2b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c264c972-cab9-4bfa-a5cb-1e5c0e43e9f2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "970527cb-523c-45ac-afdd-1918f6b17cd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebf55bc8-e4d2-4596-a42f-a8f7cbe55fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2f1f25e1-78b2-4b3a-87ba-c4e9866ead84"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f83a36c2-b74e-45cb-a292-1b339a29e033",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "51695085-dd97-44b5-81f6-db2f9078b0dc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3e7aa1f7-c91f-4025-8f2f-810cd3f771a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c53d7597-a91f-433d-a076-c497a644d965"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0ef42232-ea70-425b-bf90-6fd5e6400061",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "de5f46a0-febe-476a-b851-971161c2241c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8969acfc-2cc2-47e8-b85a-29af2958f529",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1e012fea-ac6d-491e-8f65-3de199aab768"
            }
          }
        ]
      },
      {
        "id": "d439baa9-8441-45ee-97dc-f41d79c50187",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "f717f65b-7ca9-43e7-b63e-ccd0c271f2be",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7a393e6f-9d97-4ea7-8409-307f9a860312",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7a4bf4c1-4e6c-478f-8c7e-1552df6f88cf",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d72d46-cbb4-4db6-8b1f-20ef42df3b57",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa25c63e-d3f0-4f7c-8fac-30d4cfbd0bd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89d3d50f-f6f8-4273-a22a-818869f0449a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "30291fe0-9d9f-41ff-ac64-9b53518fc9ef"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bce467c1-cfce-4368-ade8-c0cd7e888992",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "789f51ba-3213-47ed-ae1a-1a70c63e01a8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "997e3a0e-d520-459c-b57f-b3dde5bd0030",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3ef061d5-8d9f-418c-b6c1-5a06c3b68b4a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0f830b68-2b2d-4a2e-9f1b-3a32ba3a5427",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b7619fa2-a279-4ae0-a50f-c5e114a7d52c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9ce35157-ed5e-4f4e-b3b1-f3e1a11aac6e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "704a61d5-74d0-40c0-9225-9b83cdd039e7"
            }
          }
        ]
      },
      {
        "id": "db42dc56-511b-43b9-bfdf-5fcb112c473e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f9151a9f-0d6a-48f3-9e97-5ada253e0960",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4083cfca-a710-4b2f-9037-8fad5c6bc855",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "3898ed46-bfdb-4764-b63d-efc4b7b267f5",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f1ae7703-cd06-498d-909c-8ae59d456229",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "895f343f-a35b-489a-9ace-c486a9d40877",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 131.2701754385966,
      "responseMin": 9,
      "responseMax": 11456,
      "responseSd": 738.7817905327491,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1710031016332,
      "completed": 1710031062943
    },
    "executions": [
      {
        "id": "a34e5428-7c98-40b1-a3ec-3d4ec7e47f09",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "040bef74-dd24-4c84-a077-719cd6eec0d8",
          "httpRequestId": "3b79e86c-1dec-4a12-ab52-b66f09d3daac"
        },
        "item": {
          "id": "a34e5428-7c98-40b1-a3ec-3d4ec7e47f09",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "6f804d75-6589-412b-afd1-652512efa233",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 0
        }
      },
      {
        "id": "2a7102fa-7418-4dfb-a136-dd309392c61e",
        "cursor": {
          "ref": "6baa1c23-722b-461e-9bc1-f0384212d44e",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5570a759-c134-4912-b35c-de66936db651"
        },
        "item": {
          "id": "2a7102fa-7418-4dfb-a136-dd309392c61e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "069a90f9-0eb2-459f-939c-4a8eae7f78c1",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "c6c452e4-8082-40e5-816a-80b60a214ef0",
        "cursor": {
          "ref": "94e52a16-6f74-4f89-ad8f-ed3dd3a9d4b0",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "abfad4d6-fddd-4bcd-a305-c8282d2dac46"
        },
        "item": {
          "id": "c6c452e4-8082-40e5-816a-80b60a214ef0",
          "name": "did_json"
        },
        "response": {
          "id": "842482f0-25b1-4a5d-bb5b-f6b96d902a0e",
          "status": "OK",
          "code": 200,
          "responseTime": 172,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb31cc29-9e35-43b0-9ec4-3d79810e4e47",
        "cursor": {
          "ref": "ce21cb2e-bf39-4d30-a791-f7cae8f79b62",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "79bedcf8-5f9c-42d8-a9fa-b133ab3cfe81"
        },
        "item": {
          "id": "bb31cc29-9e35-43b0-9ec4-3d79810e4e47",
          "name": "did:invalid"
        },
        "response": {
          "id": "e7eeb132-1cba-4dec-9a1b-87390926155b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1136,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb31cc29-9e35-43b0-9ec4-3d79810e4e47",
        "cursor": {
          "ref": "ce21cb2e-bf39-4d30-a791-f7cae8f79b62",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "79bedcf8-5f9c-42d8-a9fa-b133ab3cfe81"
        },
        "item": {
          "id": "bb31cc29-9e35-43b0-9ec4-3d79810e4e47",
          "name": "did:invalid"
        },
        "response": {
          "id": "e7eeb132-1cba-4dec-9a1b-87390926155b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1136,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2f6feb1-9036-4e6b-9005-06de4f165eb9",
        "cursor": {
          "ref": "1528f56a-cc31-4fc7-9db1-4d4ee8e74595",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "dad8650c-45ec-4240-8a70-1ddf07a42ba1"
        },
        "item": {
          "id": "a2f6feb1-9036-4e6b-9005-06de4f165eb9",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "613a7ed7-d6f8-40e9-a28a-3a7bec304098",
          "status": "Not Found",
          "code": 404,
          "responseTime": 124,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f138b5e-58c2-4038-b357-698ff9facca2",
        "cursor": {
          "ref": "b0018037-4277-4c3e-87bb-532a93703449",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "7d2be973-a041-471a-aecf-da49677a43ee"
        },
        "item": {
          "id": "9f138b5e-58c2-4038-b357-698ff9facca2",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "8cc362d8-c25f-40c3-a0ff-c5b612bf0f26",
          "status": "Not Found",
          "code": 404,
          "responseTime": 206,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cda6c719-7d50-43e4-ba40-b337f39f42d5",
        "cursor": {
          "ref": "9250bb0c-ff99-4450-b6b4-421c98fd2415",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "184786ac-3535-45ad-aeda-2315d28d7788"
        },
        "item": {
          "id": "cda6c719-7d50-43e4-ba40-b337f39f42d5",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "7b68047f-9599-432c-9ef2-d6beac7d7f44",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7ccb7d4-41a7-4c77-a482-e35c366d35ff",
        "cursor": {
          "ref": "2b78d169-bf5e-4296-b82f-66a48d5254dc",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "081a574b-e0cf-4a5c-9141-62746ab9e294"
        },
        "item": {
          "id": "e7ccb7d4-41a7-4c77-a482-e35c366d35ff",
          "name": "identifiers"
        },
        "response": {
          "id": "32f4d8a8-fb1e-4f09-9483-5a926b3c8d15",
          "status": "OK",
          "code": 200,
          "responseTime": 214,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db757633-f335-42d2-b91f-f945f3134d69",
        "cursor": {
          "ref": "dc3fe90b-03af-488f-8ad2-47a3d8adbfeb",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "8089a2f2-addc-466f-b620-573768a9320a"
        },
        "item": {
          "id": "db757633-f335-42d2-b91f-f945f3134d69",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "45681c9f-3305-4585-ac60-f7378d946d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6443534e-b628-45bb-9187-da870db1b242",
        "cursor": {
          "ref": "d570b778-2701-47af-a86b-f9be9a686842",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1d365163-9682-4345-9b83-4c4b46ad5453"
        },
        "item": {
          "id": "6443534e-b628-45bb-9187-da870db1b242",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "8323c8fe-cffd-4f7a-939b-988b1f8e8281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85bf0b47-3a35-4ceb-8724-16004e9468e1",
        "cursor": {
          "ref": "e91cd0f7-6044-4a7f-ba13-203e9b836d84",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "f270fd14-5158-48eb-926f-6ced3503ee8e"
        },
        "item": {
          "id": "85bf0b47-3a35-4ceb-8724-16004e9468e1",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "fb028e65-8888-4cf3-a6f2-87b61ba7212a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 140,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "378cd4cd-f9e3-4d99-bcbd-e707d40173de",
        "cursor": {
          "ref": "33c62d96-1a9b-4cfc-8f74-c4c2960b9614",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d06dfa19-255d-406a-bffa-e9f5ca1f64c7"
        },
        "item": {
          "id": "378cd4cd-f9e3-4d99-bcbd-e707d40173de",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "c4e839c2-0499-4724-a6f6-79607af85693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57475cf6-c905-47dd-be99-4a33db7ecc15",
        "cursor": {
          "ref": "75183333-958d-409d-84e3-b9944375ffe6",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "00483c41-0d76-4141-9750-066b87541b88"
        },
        "item": {
          "id": "57475cf6-c905-47dd-be99-4a33db7ecc15",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "b988696c-619a-41b1-8bd0-c4bf6190ce2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 117,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9024bf01-5dd4-4e0f-ab34-c12b1c212136",
        "cursor": {
          "ref": "cb53beb6-7ec0-459c-92fa-0554f1e0d1c8",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "7f4a83f8-5371-4b57-9d0a-15b5744fa294"
        },
        "item": {
          "id": "9024bf01-5dd4-4e0f-ab34-c12b1c212136",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "8332d950-893f-4343-9fa6-4cbfd730c98c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ba16f9-d081-4bbd-9fc1-8b54739c137f",
        "cursor": {
          "ref": "3942f6bb-0a56-4560-aa00-78d6869588e2",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c21aa173-6275-4b07-891b-88e63c29a45b"
        },
        "item": {
          "id": "e9ba16f9-d081-4bbd-9fc1-8b54739c137f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "02acc0b2-ac74-4484-823c-00c68751878e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 152,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa57006-d128-4b9d-b96c-8397ef06672c",
        "cursor": {
          "ref": "c651cd5a-c2fd-40e0-a7d0-4734fc3f91f5",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c8479de8-1373-4390-837a-6dfa0011045b"
        },
        "item": {
          "id": "9fa57006-d128-4b9d-b96c-8397ef06672c",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "17a031a1-1547-42fc-a5d3-51b9a0bd0ef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e08fb1d-3411-4a11-87a3-92f90c128298",
        "cursor": {
          "ref": "e24f5d41-8b3f-472e-aa67-db4deea60140",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "99d68ff8-0463-4907-bf4c-c4459a937987"
        },
        "item": {
          "id": "2e08fb1d-3411-4a11-87a3-92f90c128298",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "2300844b-ead6-4aaf-a1cd-ae358be7d653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d222e487-a9f4-4478-8b67-b9954ac3e399",
        "cursor": {
          "ref": "39b2644b-8185-481b-b40b-853dbf1483af",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "30991c06-026d-4a1c-98be-ea5a3ee0c894"
        },
        "item": {
          "id": "d222e487-a9f4-4478-8b67-b9954ac3e399",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f8acb3fc-53b6-435f-ba90-5fa10f57ce72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 214,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "689c9342-d3f2-46a7-9866-4bb360a6a900",
        "cursor": {
          "ref": "8ddd22a0-61b4-48cf-be3a-0ddeefa3615a",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "8576ca71-a28e-4eb7-9ff4-33fabbbf816e"
        },
        "item": {
          "id": "689c9342-d3f2-46a7-9866-4bb360a6a900",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "581eeca3-0137-4715-9055-cddb23324817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 175,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "349ab1c7-1c72-4cc4-9ba3-d14acdb189e5",
        "cursor": {
          "ref": "f0542102-eb22-49d5-8667-f7d2f6d6218d",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "dac632e0-00f9-45ec-941c-945746c53f75"
        },
        "item": {
          "id": "349ab1c7-1c72-4cc4-9ba3-d14acdb189e5",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "d49ea605-dc8c-4286-ac5d-95dcfefaa1e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d07ed0e5-f90d-4809-8a4c-9fae6dd9031e",
        "cursor": {
          "ref": "7d2c26b7-10d9-4f87-8125-c3a98140b6c7",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c93b9989-c298-4a0e-81b3-ebd7e91172e0"
        },
        "item": {
          "id": "d07ed0e5-f90d-4809-8a4c-9fae6dd9031e",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "c1b87304-f456-4dfe-8318-2ed8f351773a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d02906-8394-4995-bbd2-c75dd86b3327",
        "cursor": {
          "ref": "869cf3d8-4673-4242-9ff9-7e1e0c137d34",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "f16372b1-55fb-49fb-943e-3f1b88134582"
        },
        "item": {
          "id": "d6d02906-8394-4995-bbd2-c75dd86b3327",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "134ce2cb-f54b-4fc3-bbf7-06cafc939314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa9b7ad-566c-4c25-b607-7c398531badc",
        "cursor": {
          "ref": "f762b505-128c-4edc-b3d6-9aec7356e082",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "55b80cd3-6597-4ea6-9021-725cd5fa935d"
        },
        "item": {
          "id": "caa9b7ad-566c-4c25-b607-7c398531badc",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "239fd1c6-2ca9-4b39-ba56-575cb9b1479b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "223d6dc5-7c53-4085-83ff-586f6892bd69",
        "cursor": {
          "ref": "60f0ccb7-552a-4c03-8759-d028642bbb19",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "2cf2d51a-39eb-4221-a365-539779d5229c"
        },
        "item": {
          "id": "223d6dc5-7c53-4085-83ff-586f6892bd69",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "f29c9115-beb7-42c1-9c2d-5594c8fa8140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35733b5d-b64c-4200-81a8-5023619ab7d6",
        "cursor": {
          "ref": "3ab7fbe3-ba66-4248-8e59-3637026f18e3",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "fa282de2-984c-4a0c-87e5-13a08afbcc42"
        },
        "item": {
          "id": "35733b5d-b64c-4200-81a8-5023619ab7d6",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "f7147240-59df-44d1-8036-c909770a4dc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c424052b-426d-4cd8-baef-be901615411a",
        "cursor": {
          "ref": "4d7ced1c-f700-4f42-86d2-de3de4136745",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0da7357e-a921-421d-953b-983165e0ad04"
        },
        "item": {
          "id": "c424052b-426d-4cd8-baef-be901615411a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "00f6ff14-16a1-4ca6-a433-e769729d6fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8552203a-f52a-48f3-b754-443c2cc69c17",
        "cursor": {
          "ref": "dcf17253-26f3-462f-8607-3022c95e8083",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "5dd5465b-3f68-439d-8bc3-065fa465f513"
        },
        "item": {
          "id": "8552203a-f52a-48f3-b754-443c2cc69c17",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "fec98b23-ce9b-410c-a15a-94b48a38fa7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2cdc083-6962-4ae9-8044-db7c318dd889",
        "cursor": {
          "ref": "361fb326-caf7-4bde-b128-13ce45e87377",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "9de37150-c55f-4405-bc5d-29dcd132f94e"
        },
        "item": {
          "id": "e2cdc083-6962-4ae9-8044-db7c318dd889",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "98b0b93f-a46a-4e2e-880a-bf8427fbe4e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9513811f-1100-458c-b8b5-6724b95e3760",
        "cursor": {
          "ref": "75dae422-74ef-4b70-ae4f-4482289e7845",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "4411ba95-3b11-4137-9849-cdccc6f3d7f4"
        },
        "item": {
          "id": "9513811f-1100-458c-b8b5-6724b95e3760",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d26922f3-31e5-475c-b9de-36986a6aa28d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e988405-985c-465e-8859-1a0d0e54144b",
        "cursor": {
          "ref": "3ef5d631-ebc3-42e2-a6e8-caa30e594aba",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "cfa5a6c4-7775-4f2d-974e-e158f336a7b3"
        },
        "item": {
          "id": "2e988405-985c-465e-8859-1a0d0e54144b",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "3c1cd3d0-ce2b-49a8-bf19-d2e16c28c816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c24cf806-fb84-4733-b685-1f1ccf38e9e7",
        "cursor": {
          "ref": "b8bd08a2-f863-47a5-b17a-d6076f47b0e4",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "97d05e19-f0e4-4ced-b3fd-7550f440822e"
        },
        "item": {
          "id": "c24cf806-fb84-4733-b685-1f1ccf38e9e7",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "5c464925-644e-44ce-947c-e46cce344870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bf19a60-b082-4410-9d57-79f02ef6c2e4",
        "cursor": {
          "ref": "0be4e70d-f294-42e6-8abf-b1cefa64df9d",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "c824037d-3f07-48b2-ab3a-dc540ada6da6"
        },
        "item": {
          "id": "6bf19a60-b082-4410-9d57-79f02ef6c2e4",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "2e0da167-fdcf-49a0-8a16-5d07bb36b406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "304249c2-a876-4a0a-a7c6-a94c8f6769a6",
        "cursor": {
          "ref": "4c96f43d-aed8-43ef-b07c-88f6c67a06fc",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "22a0f4dd-c1f7-4d1a-82c1-1100e285c6df"
        },
        "item": {
          "id": "304249c2-a876-4a0a-a7c6-a94c8f6769a6",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "57118951-ab13-4fa1-8dcd-c71ce01857fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f061f3-a69f-49e8-b2b0-3e982150675b",
        "cursor": {
          "ref": "e1598cc5-eb0a-4c2b-9f03-d7c2500c641d",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "420ab6a4-d9f3-4580-8e50-5788c2d4fa4a"
        },
        "item": {
          "id": "92f061f3-a69f-49e8-b2b0-3e982150675b",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "cc60fb29-3ba9-49ec-99ac-d0b710ce0f73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b814dfd0-4378-4916-ab60-156cd6c2a8b5",
        "cursor": {
          "ref": "50813da1-9f85-4ff4-bdef-0851a69b6929",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "cd5f6d59-8d5f-40c7-9166-0238b6a564cc"
        },
        "item": {
          "id": "b814dfd0-4378-4916-ab60-156cd6c2a8b5",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "98449f5b-bb0f-4ed4-9865-85b0d298dbd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32090dca-477a-43c3-8911-3cbbdfdf0caa",
        "cursor": {
          "ref": "b95ada5a-0a84-4066-8e25-a1707cfd24d7",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "3ce810a6-7d62-42c8-a2c0-b93827b20b8f"
        },
        "item": {
          "id": "32090dca-477a-43c3-8911-3cbbdfdf0caa",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "47777f60-c3be-45de-902c-829d9e9c62a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c5058e-0bfa-4d66-8ebd-7debee75caf9",
        "cursor": {
          "ref": "d6c8fcf2-5fa8-4061-afd3-e77fa536dea4",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "da04e299-3c72-4ee7-9f89-e50ae4d1c72a"
        },
        "item": {
          "id": "39c5058e-0bfa-4d66-8ebd-7debee75caf9",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "33c1714f-b8f1-42aa-b2ed-7b05b3bff9aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 145,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6027a7ea-9c4d-4dd9-ba2f-da9f754ce339",
        "cursor": {
          "ref": "5c0e0b05-a00f-4eaa-b1ca-0ee6be637a69",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "44d27775-226a-4731-9154-d094744c9330"
        },
        "item": {
          "id": "6027a7ea-9c4d-4dd9-ba2f-da9f754ce339",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "5d5d3698-1459-4e5d-8bd8-12e10be65c35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97efe5a0-93bb-4f34-9ae1-c82a40ff6b88",
        "cursor": {
          "ref": "a7d87662-7e5d-40c4-9ca2-baf8e7721322",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "68e56343-a256-427d-93e4-2f3a00d06be9"
        },
        "item": {
          "id": "97efe5a0-93bb-4f34-9ae1-c82a40ff6b88",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "5c2d2177-f684-4fa6-8c24-eeb7d5acb338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e3705ed-922a-4039-9f5e-4121c334c54e",
        "cursor": {
          "ref": "de2846c0-7d25-4fcc-b9c4-b32f1708e5ae",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "fe117fcf-d8f1-4eb4-9d4d-0a20ac46cc56"
        },
        "item": {
          "id": "4e3705ed-922a-4039-9f5e-4121c334c54e",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "1bcd6988-7856-4cea-b935-9c311f33ac9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f854ed9b-c675-465a-b548-ec3647c37bf4",
        "cursor": {
          "ref": "e21d1cb0-8762-45b8-9225-8128680badb7",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "a535a528-3e3c-46e8-988a-67aad828982f"
        },
        "item": {
          "id": "f854ed9b-c675-465a-b548-ec3647c37bf4",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "f0471773-fb88-4d68-80d2-d4aea194dd30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e76f781-03bd-4134-b538-4742300ac19c",
        "cursor": {
          "ref": "d4456a26-c295-4b25-8736-df4ba5d9f35e",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "78186b94-3127-46d7-a459-43164901e760"
        },
        "item": {
          "id": "1e76f781-03bd-4134-b538-4742300ac19c",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "55639c76-bf2a-4286-b27f-086992f619ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e360906d-a972-46d5-bd7a-1aa49a5246d3",
        "cursor": {
          "ref": "655df652-9e21-4a2c-a524-78625aff7502",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "5ad671d9-d291-4ce8-ba6d-d745ddf4eb99"
        },
        "item": {
          "id": "e360906d-a972-46d5-bd7a-1aa49a5246d3",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ea9ae18f-856c-48b0-a488-09b396122370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69d1b77b-6b28-4a9c-bbf6-971518818173",
        "cursor": {
          "ref": "0f6cf349-5997-4374-adf0-2d817233ce8f",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f9195096-3799-4a47-88bc-fda6da06506c"
        },
        "item": {
          "id": "69d1b77b-6b28-4a9c-bbf6-971518818173",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "c56130e1-704d-4274-9705-59892f0a8d59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 126,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f01ff9-18e2-442c-a4cc-5dc5f9cbf517",
        "cursor": {
          "ref": "1b74cc4c-6ed0-4e57-9e10-ea829385fa62",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "fc3c4346-ba97-4b89-87dd-fed349e202ee"
        },
        "item": {
          "id": "52f01ff9-18e2-442c-a4cc-5dc5f9cbf517",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e005b9a2-837b-4f29-908b-9d1bba9a37ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f4ac982-e89a-42c9-87d6-f4b953bf7d19",
        "cursor": {
          "ref": "84976f3c-2a8e-44a7-9c71-2922b0335f0d",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "6d486411-1b15-43d0-8e32-b962fbf0b915"
        },
        "item": {
          "id": "1f4ac982-e89a-42c9-87d6-f4b953bf7d19",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "8aacc40c-0ff3-4fef-ae73-c8a5f94d620f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d1d668-ea6e-4789-814b-ba025c2d0489",
        "cursor": {
          "ref": "b268564f-940f-4ccb-8944-a84d248b2620",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "d4362b0c-4d73-4f50-82b9-5cc927bcfcb0"
        },
        "item": {
          "id": "22d1d668-ea6e-4789-814b-ba025c2d0489",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "a6c01165-0837-4171-ab05-25e5cb053f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dad445d6-133e-440e-bd03-61eefb2506cc",
        "cursor": {
          "ref": "7fae8fb3-efc5-4d53-bd87-ec01bfc4d24c",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "3f670217-c5c0-46cc-acad-dc43a4722ee6"
        },
        "item": {
          "id": "dad445d6-133e-440e-bd03-61eefb2506cc",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "bb91b94e-cccd-4ad4-b6b2-a6f4f9ea062b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6febd59-b56d-4e0c-b958-52109a882b4a",
        "cursor": {
          "ref": "5904873e-905c-4e88-856f-cbe029520fd7",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "2ed51c90-8977-4f96-8da9-1f9ddd23d937"
        },
        "item": {
          "id": "f6febd59-b56d-4e0c-b958-52109a882b4a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "6dc14aff-0c77-4d46-87c3-f1e85b5a47da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1587b18c-c7f7-43fb-871f-b8e0d48effa3",
        "cursor": {
          "ref": "8274bc26-119c-44e7-87eb-7d494013a2f2",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "fa3eaa64-ec5f-4e86-8b4c-8d989be39f31"
        },
        "item": {
          "id": "1587b18c-c7f7-43fb-871f-b8e0d48effa3",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "bc387239-330b-4295-bf09-5ce58d60fd61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "988a221f-9129-4e7b-aa14-194efd21125e",
        "cursor": {
          "ref": "fb753a5b-b47d-440a-a54e-62f158648781",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "84792b2a-0dd4-4447-a6ef-10a608b4c524"
        },
        "item": {
          "id": "988a221f-9129-4e7b-aa14-194efd21125e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "69f7e5e6-1c4c-49ea-8de6-8588295b5397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88c131c7-0df5-4c70-afb9-aca132c06d94",
        "cursor": {
          "ref": "6b975325-d452-485f-a6a7-7c9f60b8f040",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2e90d200-d554-486c-9cb4-73f2f4effcdf"
        },
        "item": {
          "id": "88c131c7-0df5-4c70-afb9-aca132c06d94",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "612099f5-bb2f-4ac1-9695-d39aaaee5688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42df4a52-f069-443e-8db9-aed386f565fb",
        "cursor": {
          "ref": "00057262-057e-4cb7-ba08-875c2fcc8524",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "c0976b30-0ee1-4e9c-9a98-57e17bf759d8"
        },
        "item": {
          "id": "42df4a52-f069-443e-8db9-aed386f565fb",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "9b6ba17a-7317-4764-83cd-5d52405d93f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ea7f43-dbac-4565-9990-6eb5aab8c134",
        "cursor": {
          "ref": "91ce1974-e1a8-4a62-aa2b-34c6e5ffab58",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "9e628705-59fa-4aec-8045-af8b4e5ef138"
        },
        "item": {
          "id": "f0ea7f43-dbac-4565-9990-6eb5aab8c134",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "2febc33d-35b7-47c7-be3b-f5abff3838b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4622eed3-2591-40d8-a932-07530f3521c8",
        "cursor": {
          "ref": "ca33e6be-f0fc-41f8-b9dc-aad6294f0a6e",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "bd738afe-48d6-482b-8b2a-a67bbf63d71a"
        },
        "item": {
          "id": "4622eed3-2591-40d8-a932-07530f3521c8",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "350d0a2c-6cf7-4d57-80c4-31bacba8a2d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a8ada7a-ea6b-4d7d-99a3-1b5f17b5b0ee",
        "cursor": {
          "ref": "260f047f-ba13-4f19-b708-b76e83a960c6",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "4b8b0adb-2dac-4fc5-929e-57ba5510c777"
        },
        "item": {
          "id": "9a8ada7a-ea6b-4d7d-99a3-1b5f17b5b0ee",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a4c8782d-e313-42fe-bfc8-eb38c7e50b95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebdfccf9-87d1-489d-9f8c-9082e41eb47f",
        "cursor": {
          "ref": "0c2e0c26-7956-4bfd-9fc4-7fb1ae01934d",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "f6e9da2e-4842-44e7-a7d4-4bd8d6628cda"
        },
        "item": {
          "id": "ebdfccf9-87d1-489d-9f8c-9082e41eb47f",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d5e440dd-96c9-41cf-a620-c92c68f5f2ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1529691-ea3a-4049-ac56-e3b11e58c7d9",
        "cursor": {
          "ref": "abc69b4c-a9a9-4118-ae70-d1a2ea7434fd",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "6da3ce04-2d41-4e40-8d13-af0a0e4d6c40"
        },
        "item": {
          "id": "a1529691-ea3a-4049-ac56-e3b11e58c7d9",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7fe6f0de-c81a-4d69-8d55-3ef6b4bd0080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b4cd746-f882-40e7-80fa-942363c02a19",
        "cursor": {
          "ref": "10ef593b-32e9-4e72-a907-1d249b03bb37",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "b8736f75-24ef-46b6-897b-45712b1151d0"
        },
        "item": {
          "id": "3b4cd746-f882-40e7-80fa-942363c02a19",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "00613975-e9f9-4c22-b211-0e082db20fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "398d10a7-7d84-45ba-8ea4-ef68db9415b6",
        "cursor": {
          "ref": "55fbd46d-7b13-4ead-8245-55125af8f7df",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "31a5b13e-ccf1-4a38-8458-4d0be7d2e778"
        },
        "item": {
          "id": "398d10a7-7d84-45ba-8ea4-ef68db9415b6",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "462baa63-3287-4069-85f5-967ed9918288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d5142a-47eb-444f-a5b3-edd5778e401d",
        "cursor": {
          "ref": "48120ee9-bcc5-4ee3-9a70-6507236e8a0e",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "a64cdbc3-be0a-4c0c-8eb6-2249d739cf6e"
        },
        "item": {
          "id": "02d5142a-47eb-444f-a5b3-edd5778e401d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "fb09e8e6-6e12-46a0-b8a8-49ebe2d4d144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b127d8cf-3636-49ed-8014-de5f405f94e6",
        "cursor": {
          "ref": "a685b9cf-6c75-47b2-b882-3429667ba726",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "57d166b5-3da8-4770-8837-c96914f6c00b"
        },
        "item": {
          "id": "b127d8cf-3636-49ed-8014-de5f405f94e6",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "242dc274-d4da-4c1d-b655-9b11ad1d184b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7946294d-01dd-4982-bef2-afe465bd12f4",
        "cursor": {
          "ref": "01034cd2-f4eb-40ed-ae1e-d1efd211bfa5",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b0709773-2f5e-4e28-91cf-29a8194cfebf"
        },
        "item": {
          "id": "7946294d-01dd-4982-bef2-afe465bd12f4",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "27a8b643-afdf-42a1-93ea-fdad96485e6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23986d14-3955-446f-b6c7-4cc1a9578fb2",
        "cursor": {
          "ref": "18d4e91a-1084-4089-a3e1-511c8b9cf47b",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "7579ee1d-dc98-494e-b18c-47c74924b5f6"
        },
        "item": {
          "id": "23986d14-3955-446f-b6c7-4cc1a9578fb2",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "f4ca058d-b94e-4875-8e9c-f1ab81b25e61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e509393a-fcaa-455b-ae12-45476435c968",
        "cursor": {
          "ref": "92dccc95-63e8-4e2f-a41f-6fdd060f361f",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "49925771-8fb8-41fa-86d3-6999da3f7002"
        },
        "item": {
          "id": "e509393a-fcaa-455b-ae12-45476435c968",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "1a004710-cd8f-4427-8a8e-2b5d52d7e4ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a23ccf-2ed3-484c-93b0-71c6438b7e0b",
        "cursor": {
          "ref": "2aaccd84-fcf2-4fc9-90e0-666a4594f228",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "a1e94322-a6df-4dfb-be32-861e4d8e2d79"
        },
        "item": {
          "id": "02a23ccf-2ed3-484c-93b0-71c6438b7e0b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "303400ea-ced5-47c9-9a8f-9d21b99bb72e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e5e73c3-d490-4c5b-8201-80d6bf0766c2",
        "cursor": {
          "ref": "52a2b342-a651-402f-9939-5bfd7315e45e",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "8d3a9a9d-337c-4d91-bf42-42ddf6ad1d69"
        },
        "item": {
          "id": "5e5e73c3-d490-4c5b-8201-80d6bf0766c2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3c046920-6743-4a66-9830-0552f31bb718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2469d54b-077b-4fab-9fff-3d90944efc3e",
        "cursor": {
          "ref": "000f0e16-8093-410f-8561-af480fc1a1ec",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "1944bfbd-592f-4c74-a32f-d7e97d70d54a"
        },
        "item": {
          "id": "2469d54b-077b-4fab-9fff-3d90944efc3e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "3061220c-af23-4b6a-972c-db453142947f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb30a6f7-7672-44d1-bacb-b53bd07bbaf3",
        "cursor": {
          "ref": "736ce707-caa1-4960-8633-e1ce346d95cd",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "10a40ad2-e4d9-4809-8e1a-0009c9d8c30f"
        },
        "item": {
          "id": "eb30a6f7-7672-44d1-bacb-b53bd07bbaf3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "68da4450-5b5d-4ff0-9229-cd25182089d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "130c87b6-c062-4eae-8566-e6f82d1266ce",
        "cursor": {
          "ref": "29cf6be9-50cd-4791-96a8-4fcd5d8117a5",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "24035a23-406a-4fc4-93bf-e3f307c3ed68"
        },
        "item": {
          "id": "130c87b6-c062-4eae-8566-e6f82d1266ce",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "8792258d-0624-4892-843f-283cf7061bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c12796c-8614-4f56-afcd-3756dd4d9b7f",
        "cursor": {
          "ref": "895c13fb-4bb8-4a8d-9497-8fec7f7448a9",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "d06598ce-3c92-4a06-a0eb-76eafd35b74d"
        },
        "item": {
          "id": "9c12796c-8614-4f56-afcd-3756dd4d9b7f",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "17fd066a-1a28-494d-9dd3-abb71cd36049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf5520f-a3a1-47d3-a2b3-c08b331d5710",
        "cursor": {
          "ref": "ea2b58b4-9efd-46b9-a91f-75955e25eeeb",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ab006dbc-6206-4ecf-9d98-5944e9777182"
        },
        "item": {
          "id": "ccf5520f-a3a1-47d3-a2b3-c08b331d5710",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "ef024edd-bf27-4eab-b541-26c97450b801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dfcf023-ae7b-4fae-9a99-fe677bad8e87",
        "cursor": {
          "ref": "ab00336a-3434-4222-8eba-c92da4b30c29",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "77ff234b-d9d6-4deb-a7e9-fdcc6e9586f0"
        },
        "item": {
          "id": "0dfcf023-ae7b-4fae-9a99-fe677bad8e87",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "5fc4d623-cdd8-4e79-981c-63a3a338f13e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c8c89be-1d82-40f0-9e00-44e47e08b3dc",
        "cursor": {
          "ref": "8244618e-77d9-4ada-b1ea-801d0183bf4e",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "1685ea1f-33fb-44bd-aa15-f7619b9be52d"
        },
        "item": {
          "id": "9c8c89be-1d82-40f0-9e00-44e47e08b3dc",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "99aff495-35b3-4491-a295-2d5915e3ed31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c6f7368-5917-4538-b6eb-352766b829bc",
        "cursor": {
          "ref": "8ae61277-aacd-4d91-b800-c013c9a81aa8",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "37711745-cee7-44d3-b11c-d85bb3dedddc"
        },
        "item": {
          "id": "6c6f7368-5917-4538-b6eb-352766b829bc",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "59850425-e630-4372-b384-373b35e67aed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37c8b820-ba5f-4945-a204-b9aeacc871dc",
        "cursor": {
          "ref": "e8308718-5ae8-46ca-a294-11f0339d193a",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "d63f2528-02b8-407a-b667-d8ace944c1c6"
        },
        "item": {
          "id": "37c8b820-ba5f-4945-a204-b9aeacc871dc",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "e7ef1fd1-f71b-450a-94b9-4d2ce80c2876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "988a804b-67f6-4286-aa1c-49e894448d99",
        "cursor": {
          "ref": "97d20e6d-f31b-4e48-826e-96d9527bc4b5",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "46b29ad2-e50a-4dde-938b-7c2d00665ed7"
        },
        "item": {
          "id": "988a804b-67f6-4286-aa1c-49e894448d99",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "8f4612ff-74b8-4c5c-882c-3e2a76cb2fea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc6760e-1867-4d5a-923a-7177323a62e2",
        "cursor": {
          "ref": "29e225c0-2236-42cf-836a-d573f5b33586",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "14ab5eed-2dd5-4bcb-85f9-7645ae713ac5"
        },
        "item": {
          "id": "fcc6760e-1867-4d5a-923a-7177323a62e2",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "56bb61c3-6dd1-41b2-839c-c85cabb51b15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc2ef9d6-3f9e-4290-8be4-82e0126c5898",
        "cursor": {
          "ref": "cb37378f-ebf8-46e8-b188-d105860a9e54",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "187a1b22-5112-4d98-9c80-65e39871072f"
        },
        "item": {
          "id": "cc2ef9d6-3f9e-4290-8be4-82e0126c5898",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "b57301b2-477b-4374-ba73-c09a3a8e5c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69022d7f-88cb-47a0-b252-6a6b9e196d8d",
        "cursor": {
          "ref": "e05a19e1-22c5-42b6-913c-dbfc7e14baa9",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "4728bc2c-cc43-48db-b3bc-a4206ead99b8"
        },
        "item": {
          "id": "69022d7f-88cb-47a0-b252-6a6b9e196d8d",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e41fc5b7-36fe-4fc8-882b-5dc96f7bfa30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 117,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8434d2f6-7ffb-4d5f-b718-ac95cffd738c",
        "cursor": {
          "ref": "94fc63ac-8c35-4c1d-8bc3-ad4f60e3d304",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "6629bd4b-5d66-45aa-91af-c5cf9dd8dca3"
        },
        "item": {
          "id": "8434d2f6-7ffb-4d5f-b718-ac95cffd738c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "ff188dac-7ad9-49bb-a8b2-7a16710cbddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc170077-c329-4821-a4a2-60505a12282c",
        "cursor": {
          "ref": "c25b223a-e8ff-4446-b33d-7dc43adf3db2",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "6e6aab93-4fce-4146-b5a9-c8ca63ebd1ef"
        },
        "item": {
          "id": "bc170077-c329-4821-a4a2-60505a12282c",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "cd09dcb2-3f90-42aa-ada6-34e2aa6bac37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6185e1b7-75c3-4d78-af23-b44ddafff84e",
        "cursor": {
          "ref": "478c8717-813a-43d5-9329-bb0534bfdee3",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c2449604-265a-42c7-add4-e34ea7664609"
        },
        "item": {
          "id": "6185e1b7-75c3-4d78-af23-b44ddafff84e",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "99520cbf-8eae-4b69-9d4a-44b5ec792da5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ada968-b56b-415c-b56a-105cdde02205",
        "cursor": {
          "ref": "e9062ce2-f260-4290-a379-528f865c2995",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "27306b0c-8c0d-4a86-a917-73049ea54555"
        },
        "item": {
          "id": "74ada968-b56b-415c-b56a-105cdde02205",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "6da7430e-c9e2-46cf-bc63-fcb968b4f7c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d03aacf-0ce5-4d8f-a9ce-c2141d618b99",
        "cursor": {
          "ref": "e346f348-9138-45bf-bd71-b47beaba95d4",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "8cbd4919-16f9-46ff-b4ed-0177ebee3ed2"
        },
        "item": {
          "id": "6d03aacf-0ce5-4d8f-a9ce-c2141d618b99",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f0a48009-c87b-479c-85b8-eee1fcbcc84a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7697025-7592-4b33-9d4f-9a4c693af789",
        "cursor": {
          "ref": "68885a2a-8688-40d7-be61-c4998d695d19",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "0add39bf-d1f3-4767-a530-8efa4eb9f572"
        },
        "item": {
          "id": "e7697025-7592-4b33-9d4f-9a4c693af789",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "2ef1f5df-65fd-4dbf-8196-d356fd24cfe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c94dd8-f0af-46b2-967d-1c2b21f8c163",
        "cursor": {
          "ref": "26e41c37-3890-4bab-bbb2-42af5563a3ac",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "759017e7-2f5e-4594-9b72-a18b9ccdc956"
        },
        "item": {
          "id": "e6c94dd8-f0af-46b2-967d-1c2b21f8c163",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f3149a28-2dc7-453c-b7e5-906d01c1af97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d4befa-6b01-4c42-bd89-66567f880ddd",
        "cursor": {
          "ref": "7c5a6744-b096-42ab-a2f0-4b70bc1fc924",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "8e739f72-536a-4edb-aca1-f869be97a4bd"
        },
        "item": {
          "id": "71d4befa-6b01-4c42-bd89-66567f880ddd",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "7568618e-d745-4a46-bfe6-98cf4b79d04f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a2ea5f-aa9e-47ea-9b05-1ffc52b8beb3",
        "cursor": {
          "ref": "1b5b7217-6ff4-41b9-aac6-d083821938df",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "45d1503c-b679-4052-a587-3e6264a134bf"
        },
        "item": {
          "id": "c0a2ea5f-aa9e-47ea-9b05-1ffc52b8beb3",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "69a0454c-cbfb-4804-80d1-3c3dd3017fee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46806b85-6836-4e24-bc5d-dcdd0ed7d0e5",
        "cursor": {
          "ref": "57bd6149-5072-4c4b-a000-47d0530fe150",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "e97281fd-f688-4b40-a3e9-a8b9616d765a"
        },
        "item": {
          "id": "46806b85-6836-4e24-bc5d-dcdd0ed7d0e5",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "aef04e68-6aa0-4042-96b5-8ff293e3f6f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c5c1f9-bddd-4c04-9960-e65c8197aa1d",
        "cursor": {
          "ref": "3fbd17a1-3147-4a7e-a17a-386158e229bb",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "4fbc49f9-85dc-47c2-9631-2ac7c5aecd1b"
        },
        "item": {
          "id": "d7c5c1f9-bddd-4c04-9960-e65c8197aa1d",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "073e0602-d093-4614-a519-8cab62bc805d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf53feec-4c9e-409b-8c3a-ef8ca2ee21c1",
        "cursor": {
          "ref": "f44c9f27-1cac-4974-932e-0191c09ca578",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "7cd4b7fa-d098-44c6-9783-d86d35cae8d9"
        },
        "item": {
          "id": "cf53feec-4c9e-409b-8c3a-ef8ca2ee21c1",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "5aa83e64-972a-4714-8c3c-d86682e860d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2486e9c-94c9-47f3-a34f-58cc003ef6eb",
        "cursor": {
          "ref": "8d2ab365-977f-460d-8d0e-c357f957e2ce",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "183ad9ce-87d4-44c7-9d15-a244d56e7c41"
        },
        "item": {
          "id": "e2486e9c-94c9-47f3-a34f-58cc003ef6eb",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "16a3ec88-edd5-4daf-9d18-7e6128792696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f62c6df8-2aed-42a4-85c6-5f0ece8dfce2",
        "cursor": {
          "ref": "8ea1e723-57a6-4c65-8f82-0630ee9875bb",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "db9ad6ed-87a1-4832-abb7-27a3ec8e128f"
        },
        "item": {
          "id": "f62c6df8-2aed-42a4-85c6-5f0ece8dfce2",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "2be186d6-852a-422e-ae93-c118760e3916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cce08de-023c-4b0a-b922-bebc21f099ca",
        "cursor": {
          "ref": "4f318840-da4d-4930-bd9b-d8ac2d91f32f",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "764fd9b5-d8c0-4baf-925c-f0948b4ed99b"
        },
        "item": {
          "id": "3cce08de-023c-4b0a-b922-bebc21f099ca",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c979d125-2fe4-4463-863c-90839ba851e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1053f922-47b0-42e5-af4f-2a33a80d82b6",
        "cursor": {
          "ref": "508fefd7-fbd9-4a1b-86ad-b06e80c16429",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c27b3307-26d1-41b5-887c-448cf8ace40c"
        },
        "item": {
          "id": "1053f922-47b0-42e5-af4f-2a33a80d82b6",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "79d6b0b2-7f8c-4db2-a18c-4fe6986ff047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7927d4c-81e1-404f-bf50-3f2a7cecd94d",
        "cursor": {
          "ref": "e34d026d-853d-423f-bae2-3eb1b6fb36d9",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ebf5fc78-d15b-4af6-a9aa-709502083b8d"
        },
        "item": {
          "id": "b7927d4c-81e1-404f-bf50-3f2a7cecd94d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "512bdb7f-17c1-4991-b5f6-eb0c0534bf9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a334145-7eaa-4b1d-96a3-6ea9a567d8b6",
        "cursor": {
          "ref": "7e51f63d-2de3-4f34-987b-dba2dccfcee1",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "67f0171c-7332-426a-9e4a-6c70dce3b2c2"
        },
        "item": {
          "id": "2a334145-7eaa-4b1d-96a3-6ea9a567d8b6",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "d33d8046-9a54-40c5-b77e-6fd4c60bd2cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc0f792a-a90d-4029-ab52-e6221d0b89ed",
        "cursor": {
          "ref": "9ef8ca72-9632-48b6-b60e-0f23f4ba2ec5",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "32166741-6189-484f-8f10-7bcd850737d3"
        },
        "item": {
          "id": "dc0f792a-a90d-4029-ab52-e6221d0b89ed",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "79185b60-0037-439f-ab01-f6757ddf629a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee140e06-8c6f-4389-b5de-0fb6e665e5b0",
        "cursor": {
          "ref": "de0a0363-5612-40ec-8fe7-2ff9d4a51857",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "fa981320-c0ac-4d8f-9e63-7597605b6709"
        },
        "item": {
          "id": "ee140e06-8c6f-4389-b5de-0fb6e665e5b0",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "fdf38eb0-da9e-4442-ad34-676265dea7b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3139d720-49bd-4dce-a270-51841757b65a",
        "cursor": {
          "ref": "fea6ecbe-7f52-4872-8500-b8b0acb38ea8",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "9a89deca-f746-4dba-9f70-48f8d77e145d"
        },
        "item": {
          "id": "3139d720-49bd-4dce-a270-51841757b65a",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "7c326b6f-df4b-4d2a-a7c4-5df20ef6ee61",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99014cbb-9955-4051-9296-6715d381abb1",
        "cursor": {
          "ref": "33e826da-4f98-4f59-866c-867463564786",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "fd23db11-2404-4500-946c-88a724bb8343"
        },
        "item": {
          "id": "99014cbb-9955-4051-9296-6715d381abb1",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "1c886c90-1065-42ed-ab79-3657656dd460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "da88fd26-b7a2-4a16-a279-2b32f347f07f",
        "cursor": {
          "ref": "7d1c28e4-7ad2-4e99-9bdd-f20f0a9b5192",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "02640365-a824-478f-9b3b-ae343a29b5c7"
        },
        "item": {
          "id": "da88fd26-b7a2-4a16-a279-2b32f347f07f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "cfa0f864-c727-4077-8d8f-3ee582759097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "38e17d1d-de42-46aa-8859-6403df5e097a",
        "cursor": {
          "ref": "097b3f3a-00c7-40d6-9b50-2b2ae41cd9a8",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "9c1bfbe6-9c60-408c-9111-a39e90f6694c"
        },
        "item": {
          "id": "38e17d1d-de42-46aa-8859-6403df5e097a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "9a142172-cd89-4d9d-98e7-625a98fa959b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "8f77625a-ac19-4827-a298-f51e2f5b92e3",
        "cursor": {
          "ref": "3f314425-70c0-40f2-86aa-9f937539f9c2",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "5446a5b1-8531-4405-9685-e4d0404808db"
        },
        "item": {
          "id": "8f77625a-ac19-4827-a298-f51e2f5b92e3",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "1dba9560-7032-47be-b039-2c82b5fb92cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "381b5c1d-c52d-4300-ae45-211865da02b8",
        "cursor": {
          "ref": "bbfff5a2-f645-4f57-a1c1-ea1961cdf97e",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "94655bf7-f172-4bdf-b9c3-83555f2d6a7b"
        },
        "item": {
          "id": "381b5c1d-c52d-4300-ae45-211865da02b8",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "4c300f0e-cdc7-4164-a2e3-b58bcef32f5d",
          "status": "Created",
          "code": 201,
          "responseTime": 11456,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfcc40fe-eba7-47b7-bd31-ad1df3a4f6e4",
        "cursor": {
          "ref": "ebcbcd88-aa29-429a-a007-0593059c66eb",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "3184d3a9-dd61-4d8a-8b65-ffea03e9efec"
        },
        "item": {
          "id": "cfcc40fe-eba7-47b7-bd31-ad1df3a4f6e4",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d47d2a5c-25f0-4e66-bf45-a6fe6ddea1b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 144,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "9240ee70-5bf4-43b6-bf4c-c218dbc13e18",
        "cursor": {
          "ref": "6a5076b8-75cd-4653-8494-c22a860be3d4",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "3683f9ab-1367-4681-825b-c048248adc2f"
        },
        "item": {
          "id": "9240ee70-5bf4-43b6-bf4c-c218dbc13e18",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "cc7472e0-562d-4220-b480-6f62a8dadf7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "586bb598-ac94-4340-ab53-e86db4ecb2a7",
        "cursor": {
          "ref": "2414d266-6006-4464-abdf-04e078b3f1ec",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "4a84f2ad-26a6-4276-a43c-0c7867d71efc"
        },
        "item": {
          "id": "586bb598-ac94-4340-ab53-e86db4ecb2a7",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "81f55123-db8c-4f4e-9e8f-9b3e4f41ad25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc9a772-e5d6-4651-8d4f-f2956ab51e08",
        "cursor": {
          "ref": "7e725ce6-94de-4d7f-b601-81dc81cbdfb5",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "6eafa9c3-918d-46f0-b1c2-edd0b4187fc0"
        },
        "item": {
          "id": "5dc9a772-e5d6-4651-8d4f-f2956ab51e08",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "56eb3b52-72d6-4d3a-85fd-af3daea62378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "454457a8-fe6c-4cb3-894f-7e0860b85dfd",
        "cursor": {
          "ref": "5fa13565-bcc7-4312-bc27-ec9a1c634fc3",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "efc1fd94-c1eb-4701-9e7e-944f3bb8091d"
        },
        "item": {
          "id": "454457a8-fe6c-4cb3-894f-7e0860b85dfd",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2fe88080-3e26-4e5f-9b04-3c7cb325f0f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55236eeb-d3c3-4b96-84ed-2d66bf97d4de",
        "cursor": {
          "ref": "56644b2d-6003-41d0-b40e-597618407be0",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "f5819815-8385-44ea-ba3b-b38defe9498a"
        },
        "item": {
          "id": "55236eeb-d3c3-4b96-84ed-2d66bf97d4de",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5c6ed3e8-9368-4842-b72b-2d05f0cf500c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "829b3299-eeea-4a44-b154-37c80eb7b11d",
        "cursor": {
          "ref": "c89dcfc7-cc70-490a-bdf2-2b71537cb83d",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "c66ccfa3-afc2-4c36-9989-3dce61fcbb35"
        },
        "item": {
          "id": "829b3299-eeea-4a44-b154-37c80eb7b11d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "45e7d529-7c8f-4b90-9cbe-75abe66a8e93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92e7c37d-9c00-4394-aa76-81719bc6f4be",
        "cursor": {
          "ref": "d61540cb-214e-4fdf-ad7a-df267b228bfa",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "38e07e24-5f53-40dd-aac0-6cc44a116402"
        },
        "item": {
          "id": "92e7c37d-9c00-4394-aa76-81719bc6f4be",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "af837afc-8a4d-4e4f-9525-96da34c95f15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64a789d8-f62c-4129-afef-038b433270db",
        "cursor": {
          "ref": "9b4600cf-6fd3-4254-943f-e66c89dc8c09",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "7be58f70-5c9d-4c6c-93c5-b8535abdd9fa"
        },
        "item": {
          "id": "64a789d8-f62c-4129-afef-038b433270db",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e1fd1ceb-bca2-4d39-8aa3-062bc7bacae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26338a36-729b-467b-a676-8e3cab012373",
        "cursor": {
          "ref": "12acbf9f-4f4d-4ef3-aa57-d73c1ac47214",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "52b5a37f-bc46-4051-8d34-72bf65377cb5"
        },
        "item": {
          "id": "26338a36-729b-467b-a676-8e3cab012373",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1827bb38-b2b9-4d6e-9f81-90fa8824d5a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b5ca7ae-e967-4b49-87e5-c4e6a7b622c9",
        "cursor": {
          "ref": "14cf0daf-0588-4213-968f-c9178306e9e2",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "65f892cf-dcec-4c44-a51c-dc91934a062f"
        },
        "item": {
          "id": "6b5ca7ae-e967-4b49-87e5-c4e6a7b622c9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "025cfad2-24f8-4482-8165-b929381e7aca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c5860b2-5006-45bd-adc1-c11adef7bcd9",
        "cursor": {
          "ref": "e94afb38-89b1-4ee8-a534-b53d33ce5182",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "5832bd47-e3d0-4c44-b890-a83085d47594"
        },
        "item": {
          "id": "6c5860b2-5006-45bd-adc1-c11adef7bcd9",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3cd59d21-6d96-4773-90ca-a2a7650d64f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffcf7665-1cb5-4f91-8347-8240a0ce2182",
        "cursor": {
          "ref": "a00b1628-45f9-472a-9c5f-51c65f0cc30e",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "5b980c8c-d6ec-4c09-b635-48a0e3f6fbd2"
        },
        "item": {
          "id": "ffcf7665-1cb5-4f91-8347-8240a0ce2182",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "cf2a1445-eb65-4276-9c7c-6dc4e439f2fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec96c88b-27ce-4cd6-95a5-ff3678d05a99",
        "cursor": {
          "ref": "2042c71f-e203-4244-8d4e-c7bc76f8c4ef",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "dd5bc50b-f799-40e5-9128-8845c398a138"
        },
        "item": {
          "id": "ec96c88b-27ce-4cd6-95a5-ff3678d05a99",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3bac5ec6-aeb6-4618-b85e-addda4e36d4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b64f535-85a1-4908-bb10-693611966b90",
        "cursor": {
          "ref": "ee575328-3ad2-4741-ad7d-40353ffb36a9",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "51000ef4-fe8b-4ea3-8272-9d0c758b0952"
        },
        "item": {
          "id": "0b64f535-85a1-4908-bb10-693611966b90",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "47e3ddad-9dd1-41e3-b880-318790c0b413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f7c7ee2-72b3-4de9-961c-938ae21141c6",
        "cursor": {
          "ref": "a4c7dbfb-3f77-451f-ad4e-0a555e2d0ef2",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "0b9ca793-4d32-4967-881b-d08a74ca8498"
        },
        "item": {
          "id": "7f7c7ee2-72b3-4de9-961c-938ae21141c6",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0acc4283-1e63-416c-b84b-598432d9b39c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cad52211-50d7-4486-92c7-6c61e2ead404",
        "cursor": {
          "ref": "c617e85e-6b77-4de8-a5f0-fe26094ed489",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "aa90e111-779f-4bd1-bae6-62ed956490ce"
        },
        "item": {
          "id": "cad52211-50d7-4486-92c7-6c61e2ead404",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b5b66403-d3dd-4ab0-9b5f-1b2871c9fe6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8560fb7b-b112-4958-b6ab-e8b0ae7c7144",
        "cursor": {
          "ref": "513efb5b-5ad4-4c2f-ae1e-d94b1225277a",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "4636b2e3-f260-482a-b1b8-c2f7dc9c004f"
        },
        "item": {
          "id": "8560fb7b-b112-4958-b6ab-e8b0ae7c7144",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "20c6a783-28df-4c9a-899b-fae3e8133659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "846db807-130f-4132-b099-129df70d5221",
        "cursor": {
          "ref": "906c7783-6984-44c6-b1f9-0e46a94be601",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "0b9092f1-dce4-4a37-a40a-858a573fd9f7"
        },
        "item": {
          "id": "846db807-130f-4132-b099-129df70d5221",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4e17a0bb-287a-4150-9a2b-de0968b42595",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 53,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "4cda8150-ea23-4459-abb0-0cad8ccdcf15",
        "cursor": {
          "ref": "7143db25-b496-4bf7-b168-c0be765bf739",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "25fc13a6-223a-428b-ba64-cbd5466eff12"
        },
        "item": {
          "id": "4cda8150-ea23-4459-abb0-0cad8ccdcf15",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f072f2e7-4381-462f-822c-047c86202070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb67fb2-2e17-4930-b02c-94e9694cc9fb",
        "cursor": {
          "ref": "1212dd2c-1ef9-46e6-bf33-174201e6ebfe",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "2acf7a5c-218e-4e5e-a6d5-a0b8f3dd719c"
        },
        "item": {
          "id": "6eb67fb2-2e17-4930-b02c-94e9694cc9fb",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "852f96a9-1572-4e39-a1cc-3e4a7c71e596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c649707b-ed76-46f2-aaf9-6ed11b281f7a",
        "cursor": {
          "ref": "da01ba31-71f8-4f12-a150-820859ff9b7c",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "71c8f0a9-686a-4111-b411-7a69859750ba"
        },
        "item": {
          "id": "c649707b-ed76-46f2-aaf9-6ed11b281f7a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c4b83b03-135a-4735-b9aa-fa58995b1c3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14a05608-54dc-44aa-94b3-703cb2432c91",
        "cursor": {
          "ref": "8750ca7c-ea0b-44a5-91a9-2649c04a9fb2",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "94fa79e7-a875-4d33-94f9-08ee8e7b7dd4"
        },
        "item": {
          "id": "14a05608-54dc-44aa-94b3-703cb2432c91",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5ca5efd4-7520-4fe8-a36e-95423b788d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "803618c8-6d72-41f5-a7b8-29b4b7a3b5e2",
        "cursor": {
          "ref": "1efd9904-39ca-4525-aa52-6c707df36aaf",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d84cb8e3-eda1-4322-a2a7-a5daf49da158"
        },
        "item": {
          "id": "803618c8-6d72-41f5-a7b8-29b4b7a3b5e2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "89dc67c9-45a0-4ea7-ab84-c6cbce2c0a72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d7637f-0df2-4206-8316-82138d69cdf9",
        "cursor": {
          "ref": "5fd0a614-bd11-47a0-bc55-6cd4e7df69a1",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "b5c7974f-71d7-4833-8286-8eb6e0599bd2"
        },
        "item": {
          "id": "a5d7637f-0df2-4206-8316-82138d69cdf9",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "924e9db1-984e-4bad-95c0-9f249a794319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a715ca-07a2-48c4-8023-cda924e29143",
        "cursor": {
          "ref": "d7bd8416-50fe-4f92-8939-d71d93594472",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "0b801195-3d44-4557-889e-ffbaf9be825f"
        },
        "item": {
          "id": "c4a715ca-07a2-48c4-8023-cda924e29143",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5759b034-d09b-4bab-af1f-8bbed4a8ef1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e530a769-1f2a-4bce-826e-668288a93e14",
        "cursor": {
          "ref": "ee490ba5-930d-429e-b82a-224e6b1ca97a",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a35a4300-2841-4577-873b-d3c5e9384df0"
        },
        "item": {
          "id": "e530a769-1f2a-4bce-826e-668288a93e14",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "73341765-9681-4b35-bd88-2b67186c547a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 52,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "bc7aca4a-8441-4409-8b1c-b7d66842357f",
        "cursor": {
          "ref": "485132d3-7c13-4e97-9b27-1060c57e9ac1",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f7319dde-e3f8-4ebe-a1cf-2826061de848"
        },
        "item": {
          "id": "bc7aca4a-8441-4409-8b1c-b7d66842357f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d026f08c-6d44-4b58-a21b-ae01548f95b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42858776-3865-4c03-b5be-185b665e408b",
        "cursor": {
          "ref": "6e4625e9-6381-4c27-a69e-e2607f19db2a",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "7d470b36-24ac-4faa-9c04-4c4a57486626"
        },
        "item": {
          "id": "42858776-3865-4c03-b5be-185b665e408b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "33ef9306-8bbb-40fc-ae1b-6c4e0cd09213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e594bafe-e37a-47ac-ae49-40d7450677e0",
        "cursor": {
          "ref": "9e12fb80-3051-4fad-9e83-e63e9e9c0d5d",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "886b8196-ee78-422b-9a5f-ae26d9cbd7e2"
        },
        "item": {
          "id": "e594bafe-e37a-47ac-ae49-40d7450677e0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2acffa58-d039-4e18-b2aa-e13328a1883a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "475972fb-688c-4ee0-9041-708e747e34cb",
        "cursor": {
          "ref": "53016ce2-f72a-407c-83e6-a76788348f50",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "7279dc78-61ff-4f70-8be1-0e9fcbd5e15c"
        },
        "item": {
          "id": "475972fb-688c-4ee0-9041-708e747e34cb",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "74ec1127-bdc4-4814-beda-47705bc06842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6706b3bb-929e-458e-8d2b-15c5891a5631",
        "cursor": {
          "ref": "0c7546e4-bac4-437f-89c3-5b64e19d906e",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "15fdd0fc-a7a2-4551-a035-7439c51f3f12"
        },
        "item": {
          "id": "6706b3bb-929e-458e-8d2b-15c5891a5631",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4ef79a4e-12da-4a7c-b32d-48a20c6aab81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e5e20c-550b-4974-a202-2ae5177c135f",
        "cursor": {
          "ref": "12b752e4-47ee-44e2-a933-809e1a40bca6",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "9cd4eae4-3917-4b36-8143-234a99d9e885"
        },
        "item": {
          "id": "f0e5e20c-550b-4974-a202-2ae5177c135f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "08c87b0d-7ec6-4ea0-aa63-c3210574a7d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f6a53d7-5136-4760-bae3-cd4be6b0e708",
        "cursor": {
          "ref": "458a00d3-79df-4182-831f-0dd5a3badd23",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "852f6400-245c-485c-9380-4cb8ed45441c"
        },
        "item": {
          "id": "6f6a53d7-5136-4760-bae3-cd4be6b0e708",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "2b7a469d-ac3a-4c18-9a5a-1429bddfcffc",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 113,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "a7d6a6d8-7ad8-4a8e-9627-50f71500259f",
        "cursor": {
          "ref": "c07204d4-54d3-44e5-9f4d-b8351f757b1f",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a370def4-f454-4228-90a1-12910c6ea424"
        },
        "item": {
          "id": "a7d6a6d8-7ad8-4a8e-9627-50f71500259f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7d400461-42e0-4c10-8976-34296ce43e34",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c82a02cf-bb03-4993-be06-ca4cb87d147a",
        "cursor": {
          "ref": "507d59d6-4f92-4b76-91c0-f7d431ade181",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "09ad4d5a-a9cd-4ae5-b8fc-1ce5bda43a7b"
        },
        "item": {
          "id": "c82a02cf-bb03-4993-be06-ca4cb87d147a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7a1ee8f3-449b-4ff5-9661-13d59aa6b765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b8f0b18-251a-4531-aadf-1003acc973d7",
        "cursor": {
          "ref": "a18c6008-0b6e-48a1-b334-d6c4f1467b02",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "017b2948-2f0a-4ef3-9873-40601bb625ba"
        },
        "item": {
          "id": "5b8f0b18-251a-4531-aadf-1003acc973d7",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "fd6cc10c-a962-445c-b228-f0fcee0fa729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec1ea49-74d2-474a-a763-4102c778908c",
        "cursor": {
          "ref": "4c1b3843-5b28-48af-a25c-e1a12af72c2b",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "5dc84277-41a2-4ed1-a7ba-3764e9200e5a"
        },
        "item": {
          "id": "3ec1ea49-74d2-474a-a763-4102c778908c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f98df45b-f3a8-4afa-be4a-b1f8824806fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a86bb4-1b7c-4878-b388-eba3b2b1635e",
        "cursor": {
          "ref": "c0b3b0cb-392c-489e-b7a8-57de41794e70",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "67782c0a-945b-4f06-9e0e-14b3d3645006"
        },
        "item": {
          "id": "40a86bb4-1b7c-4878-b388-eba3b2b1635e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a2a803ad-9967-4bf5-9179-bc7d04544214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c16bb78-51d4-40d0-842e-4b860a222ce8",
        "cursor": {
          "ref": "ada44a17-cbac-4315-8847-dae02e6dc212",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "75adfe22-b0ae-4cde-9100-fd75e9afa80b"
        },
        "item": {
          "id": "4c16bb78-51d4-40d0-842e-4b860a222ce8",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "400a0944-673e-450a-9e14-ae2472ac8015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "485da807-4e95-48fa-9bdc-7b250fcd3d45",
        "cursor": {
          "ref": "eca34cf8-48d2-4720-85fc-f53ed0830f07",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a0d7353e-265a-400e-ac1b-4af313016baf"
        },
        "item": {
          "id": "485da807-4e95-48fa-9bdc-7b250fcd3d45",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c98f9169-63f8-4176-903a-2fb271420571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f5e9109-36fb-47a0-8cc0-20a71800a20b",
        "cursor": {
          "ref": "1c12f7d8-f94d-4ab8-9fbf-cbc4eca0f26b",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ea3a8bde-4428-4c47-8daf-c8909fffea07"
        },
        "item": {
          "id": "7f5e9109-36fb-47a0-8cc0-20a71800a20b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2744458e-db47-4c27-8661-56efe2e0a231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe01c567-3e11-4814-b265-67d247a17f59",
        "cursor": {
          "ref": "9d9a2dc3-7a6c-4cff-b23a-a7497067f567",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "62caa413-d8e8-470f-a933-3e417c4fa9dc"
        },
        "item": {
          "id": "fe01c567-3e11-4814-b265-67d247a17f59",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "51941a7b-700d-4a5e-9837-eb90bad84f5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a455f24-c8c8-4a16-a876-f7770f6af7f6",
        "cursor": {
          "ref": "026b9aca-fa14-4c74-8484-9f3fa72863f3",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "5d5dbc8a-3dbe-4fdd-bff2-1e94cecec94a"
        },
        "item": {
          "id": "8a455f24-c8c8-4a16-a876-f7770f6af7f6",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d235b63f-8260-4333-acbd-d13d4c229f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9161d95b-92e6-4ecb-9f58-c2c7ab07741a",
        "cursor": {
          "ref": "95cf0ad9-f8df-4005-b8fe-f9f0fd3299b0",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ee9afe5c-e957-4060-b358-c3b017f3fc42"
        },
        "item": {
          "id": "9161d95b-92e6-4ecb-9f58-c2c7ab07741a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "14b7e936-bb5e-4fab-bb93-fc074d336480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c64bd7-5450-4f35-80a1-f668cedb8b17",
        "cursor": {
          "ref": "c7a2bb78-d5e5-4455-b3a1-bfce3211bd23",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "70f4dc7f-7c7d-4253-a845-04de905fbb2c"
        },
        "item": {
          "id": "f4c64bd7-5450-4f35-80a1-f668cedb8b17",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ac7c20e4-a773-4a1f-9348-a0f266df031c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bdc5e63-a6ce-4810-9b05-a9500ab6b25f",
        "cursor": {
          "ref": "1076fd08-258d-4d12-b24a-056c9cbb3bcd",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a32d0383-7ada-4478-b9b1-257070e6074e"
        },
        "item": {
          "id": "9bdc5e63-a6ce-4810-9b05-a9500ab6b25f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b126a2b5-e564-463c-95bb-61e23e67c4e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc58357-8665-46ed-a70e-97a9a3076307",
        "cursor": {
          "ref": "79cf12a3-7b29-4ee7-9c2c-10fb87b18447",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a0cce429-0768-476f-894d-b07a63a96851"
        },
        "item": {
          "id": "dcc58357-8665-46ed-a70e-97a9a3076307",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8d7c5a40-b7e5-41ee-895a-9adf0dba0ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4113f36a-62ee-48be-8044-a724c13f3d93",
        "cursor": {
          "ref": "493764dd-131f-4e89-9d30-53e5dafe2949",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "4c9706dd-3acc-49ab-8b39-8e3879352a3a"
        },
        "item": {
          "id": "4113f36a-62ee-48be-8044-a724c13f3d93",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c0e32a18-a7ba-4d9d-a110-c5a1ce7b0d9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7767bd28-886a-4e6b-aa92-0d701af930cd",
        "cursor": {
          "ref": "a61bc4a6-89fa-4058-bd15-be17bb011f87",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "7d108e85-1740-4227-95ae-28b6cf0b3a1c"
        },
        "item": {
          "id": "7767bd28-886a-4e6b-aa92-0d701af930cd",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ac95f956-2bd1-48c1-8085-7a855c0bb073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3de882bd-02e2-4f01-9306-4db701cebafd",
        "cursor": {
          "ref": "f6dd80f6-f774-4746-b017-34ffab94cf87",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "ffbe2747-c564-488d-8b18-41b168bd74e6"
        },
        "item": {
          "id": "3de882bd-02e2-4f01-9306-4db701cebafd",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "36793103-f307-4413-be81-95051c95f1d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc0ced86-7299-4ba7-8d93-130a5efca927",
        "cursor": {
          "ref": "c253fb1d-9bf5-445e-a6f1-d745743f6def",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "d5b034f5-a93f-47d8-bece-5a54dfe4abdb"
        },
        "item": {
          "id": "cc0ced86-7299-4ba7-8d93-130a5efca927",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8f0a9f6b-500b-45e4-8b74-14dc3841c5ec",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 34,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "b63f4df3-c5d3-4dd4-8873-17137add7b05",
        "cursor": {
          "ref": "cdc3c493-65b9-43d1-b6b6-1cdc5af1094d",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "077dce57-c4ff-49c4-b1f8-3cc682f0bedd"
        },
        "item": {
          "id": "b63f4df3-c5d3-4dd4-8873-17137add7b05",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "40ec58d3-0c09-443f-99bb-f3eddfea974a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4b3f3f5-8abc-48d2-b5c4-e7f652193b9f",
        "cursor": {
          "ref": "03bb39ec-1522-4620-bfc4-0109de2d6bfa",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "8de44e92-366a-4772-afb8-290759f9830e"
        },
        "item": {
          "id": "c4b3f3f5-8abc-48d2-b5c4-e7f652193b9f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "bb031f05-1aea-4df9-8004-99684af4b358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad61062-5979-4ca6-a168-485e8add307a",
        "cursor": {
          "ref": "05c288f8-272c-46c1-a68f-1eedc01d69e4",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a64cff88-2cba-4d4a-9995-ab5c1a724986"
        },
        "item": {
          "id": "1ad61062-5979-4ca6-a168-485e8add307a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "fefe8788-772a-4cfe-b832-75f6cf97e748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "911e7b46-3610-4fdb-b119-389ef2bf2713",
        "cursor": {
          "ref": "7e7f6eb6-b97b-469e-b5c5-495b67c59068",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "031eba59-b335-47ed-907e-ff3dacd4fe44"
        },
        "item": {
          "id": "911e7b46-3610-4fdb-b119-389ef2bf2713",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d28b60ff-ef22-46b3-bb3d-7147b21ce622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f88aa175-2a69-45d8-afcc-3a295aaf700d",
        "cursor": {
          "ref": "7a633736-653f-40ae-a6e0-b6a6f8b133b3",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "5229386a-1fb8-4489-87b6-5c6aeb181dc2"
        },
        "item": {
          "id": "f88aa175-2a69-45d8-afcc-3a295aaf700d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c3ce295f-0915-4f2d-ab80-62210f93d374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af94c2c9-f2fc-4985-a288-481c7d586810",
        "cursor": {
          "ref": "8d37e5a6-1428-44cf-91e4-96777cfc2f91",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "a0a4bc41-0d3c-4a73-83f2-312f0da78f3d"
        },
        "item": {
          "id": "af94c2c9-f2fc-4985-a288-481c7d586810",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "fa5fe969-39c5-4e27-931e-8ab8b784183c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23eb3bfb-a917-40e3-96dd-2699d0cd3a6a",
        "cursor": {
          "ref": "862104c8-1530-433a-b2d8-91a7ffee9890",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "d903d6e4-80fb-4e41-934c-f826b98e6a1c"
        },
        "item": {
          "id": "23eb3bfb-a917-40e3-96dd-2699d0cd3a6a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2921d434-53a1-4b3e-ab39-9ff5deaa3eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c41f2d-d68f-4afb-b025-f0cfef8fb563",
        "cursor": {
          "ref": "0e2e2b7a-33cb-40e6-904e-471f64cb89a6",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "5f55edf2-eda3-4e8a-91d7-3f84df22ae97"
        },
        "item": {
          "id": "83c41f2d-d68f-4afb-b025-f0cfef8fb563",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "fe54f9eb-44df-4f31-b6d4-9affe3d2b3e0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 34,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "b7a7634c-e65d-489f-9968-9565bfd00f4a",
        "cursor": {
          "ref": "709ec55d-a0f7-4fa2-9222-42efadd52b8b",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "b9f12b56-0b59-4f15-9816-616fd36b7253"
        },
        "item": {
          "id": "b7a7634c-e65d-489f-9968-9565bfd00f4a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a4beea6d-de06-4711-a8e5-bcb583030ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0fae5e6-35ed-4fb3-8e0b-aa63ea0828aa",
        "cursor": {
          "ref": "07a17159-febd-4f2f-a49f-44f4028d0525",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "0f538c22-e605-41f9-91b6-51ee3e176f62"
        },
        "item": {
          "id": "c0fae5e6-35ed-4fb3-8e0b-aa63ea0828aa",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "51635391-dfe0-42e5-a8f5-10e5cc2ef174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d08cbe34-ebd7-488e-9302-680db21131b2",
        "cursor": {
          "ref": "960610a9-1a49-4d87-84cb-9e823cbed094",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "84a1919f-e1a7-460f-b4c3-aa086c6b48ce"
        },
        "item": {
          "id": "d08cbe34-ebd7-488e-9302-680db21131b2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ee55b668-f0b8-4c27-b42f-048b7cb97b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47c1a9e5-c44a-4038-9f44-52e3904929fc",
        "cursor": {
          "ref": "501a54c7-b03f-4902-87df-5d67f2fde7e2",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "0481e106-11c2-43d2-a1c1-f03a647a2885"
        },
        "item": {
          "id": "47c1a9e5-c44a-4038-9f44-52e3904929fc",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f2363e07-83bb-41e8-8d47-c2b6f0526ecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0b93ddf-dcca-445e-a84f-7e08de13115b",
        "cursor": {
          "ref": "f3e0dd7b-263d-4f5f-acd2-20b3bdcd9788",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "5e8c4f09-c11c-48ee-b86a-e0d27b71d50d"
        },
        "item": {
          "id": "d0b93ddf-dcca-445e-a84f-7e08de13115b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "dde04506-3f8f-448f-aed9-877da57fedba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b193f91b-2cf0-48b0-af9a-22d7850a53b8",
        "cursor": {
          "ref": "d07593ff-fee4-43e7-b46d-cf6f9a1a177f",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b3a75dc3-c5c0-4af4-ba75-99b48c4de342"
        },
        "item": {
          "id": "b193f91b-2cf0-48b0-af9a-22d7850a53b8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0a5f2aa2-d85b-4366-a515-c60898ed4e74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d511d20e-aa48-483d-9079-6e0b821c935b",
        "cursor": {
          "ref": "11e50fe6-294a-4cdc-beb0-0364db582aca",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "090f6588-469b-475b-8408-3b98b2b12769"
        },
        "item": {
          "id": "d511d20e-aa48-483d-9079-6e0b821c935b",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "535e73fb-d38f-4a1c-be62-3de9fcd98b8c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 34,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "13323fb2-28de-4aa5-9382-77e89c18ccbc",
        "cursor": {
          "ref": "1f6ea3b3-5a97-4f3a-a92f-1d14a01c664c",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e99f9133-ae6f-47d0-81b8-7a095c460d13"
        },
        "item": {
          "id": "13323fb2-28de-4aa5-9382-77e89c18ccbc",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "c3f2c758-5ddd-4569-8dc6-05fb4466fb0f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "9f25af64-8da2-4b79-98fe-fef310f1c8ef",
        "cursor": {
          "ref": "5f13686d-7236-47f4-98dc-1a02fc3b28c8",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d8b8e403-5eb0-40d8-896c-55015f3395e9"
        },
        "item": {
          "id": "9f25af64-8da2-4b79-98fe-fef310f1c8ef",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "81dda3a3-0205-4b91-affa-52a2ed10ccc0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "b05e5425-dd10-425b-b7a2-1ce359c02122",
        "cursor": {
          "ref": "c7bbf90c-b4fb-4209-9cff-086426d18911",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "e1bb598b-55cd-4c5f-99c2-f3b72c45ef6a"
        },
        "item": {
          "id": "b05e5425-dd10-425b-b7a2-1ce359c02122",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "9bda8aa5-3a52-4597-9d36-78a5e7f4c9e2",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 34,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "a0c42556-2905-45d4-a15b-7bfd9c86f80c",
        "cursor": {
          "ref": "3e792cf2-4b94-4ba6-b9cb-195f8052fcd3",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f89b9ea6-8fa9-42ee-aa1a-885c6cd7acfd"
        },
        "item": {
          "id": "a0c42556-2905-45d4-a15b-7bfd9c86f80c",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "c1937c90-c5fc-4851-bf33-24d4aa33b93f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "6cd552d1-c088-4b86-963d-5313a689a800",
        "cursor": {
          "ref": "eef29ffb-65c4-4360-b1c5-4a2e408b2605",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "04318d0f-c9d1-4734-8896-4012b1b2192c"
        },
        "item": {
          "id": "6cd552d1-c088-4b86-963d-5313a689a800",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "74a0ee1a-ed7c-4ac0-9633-7d6c666dcbe7",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "f2a48b92-9fec-4df4-a0dd-7f18bb669bc5",
        "cursor": {
          "ref": "88348370-0fb6-4212-8223-705de238d8b8",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "0856bb41-c51c-4d31-b9b0-1f1bc5d9d18d"
        },
        "item": {
          "id": "f2a48b92-9fec-4df4-a0dd-7f18bb669bc5",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "bae13f7d-f5c8-41b0-a367-21b9d01444fd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21378812-c72a-4f73-96f6-b7bf58622c6f",
        "cursor": {
          "ref": "ec2927d1-12d9-4bbb-a6b4-66214ff51c47",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "45b76d35-d656-4006-b549-66e4f89c4e34"
        },
        "item": {
          "id": "21378812-c72a-4f73-96f6-b7bf58622c6f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "1a7bbd1d-7504-4240-8e94-f299b70a223b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "543fd4d9-90a4-4773-b980-296af355ad79",
        "cursor": {
          "ref": "4e5642b6-850a-4380-8421-23d6324695e1",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "28dbdea3-287e-4868-93db-422f91f1a155"
        },
        "item": {
          "id": "543fd4d9-90a4-4773-b980-296af355ad79",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "23075d97-685e-498d-9e29-a2e57335eab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c4c08e2-1971-4294-b0ba-7478f9641536",
        "cursor": {
          "ref": "6bda24ea-b96a-4732-9d7d-a1f6518f8ef8",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "5f68fc48-abbd-462a-a574-a8314b00939e"
        },
        "item": {
          "id": "7c4c08e2-1971-4294-b0ba-7478f9641536",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b58752a7-8eeb-41a2-b939-90915d8c6cb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdb63497-5424-43cf-a58a-88afe334c89f",
        "cursor": {
          "ref": "7faaffa5-e1e6-4446-8545-1c5cd3a0a947",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "b6ab08c7-82dc-4eb8-878f-c177ebbe2d3a"
        },
        "item": {
          "id": "fdb63497-5424-43cf-a58a-88afe334c89f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "f6f3fa51-c18d-4bae-abd1-456045e7237d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "474a45a5-e735-47d5-8a2c-ab2cfd72f12a",
        "cursor": {
          "ref": "e5473d25-16d5-4f8c-ae14-111545184b9d",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "9f6211d6-f4c2-4287-8568-0f639f8c5bb3"
        },
        "item": {
          "id": "474a45a5-e735-47d5-8a2c-ab2cfd72f12a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "dfc3edb9-339b-4dad-9921-907441366418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eeed32f-dabc-4121-81e4-63ac1bad11ab",
        "cursor": {
          "ref": "dbe02e3b-dd24-481e-889a-70133c1d24d1",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "e6999ae6-10ed-4e17-ae78-873626221d80"
        },
        "item": {
          "id": "6eeed32f-dabc-4121-81e4-63ac1bad11ab",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "4100e3ab-f409-4112-8751-e17edc7fe3ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e2ed56b-d0c6-409a-8e28-93493ab04456",
        "cursor": {
          "ref": "5020986e-61a3-4acd-86fc-80a604ebdcc6",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "30e7d957-d722-4d09-b777-7eaaf26768b9"
        },
        "item": {
          "id": "7e2ed56b-d0c6-409a-8e28-93493ab04456",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "4cb82853-044e-42f2-b5c6-d93b0736900a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fc3c76e-f808-43ea-9008-db9f3d8e402a",
        "cursor": {
          "ref": "f4696fb5-743b-4933-90d7-cdf51c274a9f",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c93ec576-2232-4f15-8c58-35ee96664500"
        },
        "item": {
          "id": "9fc3c76e-f808-43ea-9008-db9f3d8e402a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "34327bed-fa23-410d-a587-f1a1094bbf87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db6e7168-ea27-4f2c-b955-5c68455b42d8",
        "cursor": {
          "ref": "b2295f57-f0c3-4abc-8328-3111301c670b",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d3102f23-6d0c-462a-b8ef-9ac557c1adff"
        },
        "item": {
          "id": "db6e7168-ea27-4f2c-b955-5c68455b42d8",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "d8f75f7b-2c21-4d07-ae2a-a73c7dc36cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f4c63c0-6771-4593-a93b-6e628d01d9a4",
        "cursor": {
          "ref": "536b37c0-6e04-4ec8-b50f-8f09ee83c4ea",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "cdc9b37d-f9e4-4e1a-8f78-262d1b936c0e"
        },
        "item": {
          "id": "5f4c63c0-6771-4593-a93b-6e628d01d9a4",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "369880ca-a22c-4442-a384-123f2430d591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd323589-31da-4d09-a521-c856fd178dad",
        "cursor": {
          "ref": "e6d99085-f94c-43e2-9f3c-402d5de11963",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "4f9f84f8-c12c-4830-b6c8-680248784e9f"
        },
        "item": {
          "id": "bd323589-31da-4d09-a521-c856fd178dad",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "2b6faa59-9d7b-474f-8d98-131fd05cde74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f60576a-6055-42a1-80c1-a60e44b7ee19",
        "cursor": {
          "ref": "3f781e4f-69c1-4b14-9e66-1edfc2c0ea46",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "0c182627-4550-483e-b29f-44dd0b6496cf"
        },
        "item": {
          "id": "2f60576a-6055-42a1-80c1-a60e44b7ee19",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c213a64c-8580-4b9a-9b6c-22d0a8f18f8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "435cacea-2a17-42dc-a742-d6974cef3ceb",
        "cursor": {
          "ref": "fb425c9e-318d-49b3-aaec-c913521a4347",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "b16d3848-c094-4684-bb3b-4a9eca98ea19"
        },
        "item": {
          "id": "435cacea-2a17-42dc-a742-d6974cef3ceb",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b4bd816a-7f7b-4932-b768-4265bebc4969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "614b1f4a-0ac3-47c9-ac40-7fcab4bfb498",
        "cursor": {
          "ref": "2b5946f4-03c1-42b6-a972-579a8c9b0f3c",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "acd4c28a-67c3-4950-95be-873285764a9c"
        },
        "item": {
          "id": "614b1f4a-0ac3-47c9-ac40-7fcab4bfb498",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "aaa91255-3479-42be-a8a2-c2e5c12cd49d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d4fd39-6450-4e21-9a9a-ebca38012847",
        "cursor": {
          "ref": "06100374-20f9-4483-a00f-94b1957bcd36",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "3a84bb5b-32ea-4cb3-8962-fad617c155b2"
        },
        "item": {
          "id": "d3d4fd39-6450-4e21-9a9a-ebca38012847",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "bdd03671-17ab-4c6e-a915-3aa84398e81a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c8eee08-af9c-45e4-94b7-c5b7d7f228eb",
        "cursor": {
          "ref": "c9bd6c81-43f2-4de1-9a1e-d7cbe1a8b02b",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "51460850-8113-4087-a4d8-ee94405676ed"
        },
        "item": {
          "id": "9c8eee08-af9c-45e4-94b7-c5b7d7f228eb",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "0c5cdddf-8da7-4826-a5dd-8e81575ed63e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "761a5dd1-fec7-41d2-aabe-f7af6c9c2c1e",
        "cursor": {
          "ref": "3b0c0e41-4d70-4b05-9da0-45ec29c0df7c",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "8ee1ea77-e4a6-4f11-ba54-fa2ef650f1b1"
        },
        "item": {
          "id": "761a5dd1-fec7-41d2-aabe-f7af6c9c2c1e",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "db1f476c-bed1-4bd5-acc1-9f57ecbf37fa",
          "status": "OK",
          "code": 200,
          "responseTime": 80,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "98a065a2-06ba-4fc6-97e1-74519708473c",
        "cursor": {
          "ref": "3a0de631-8ce7-4ffa-bcce-fbcd6e79e0d6",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "26cbc9b0-fd18-4cae-b0f7-007bab76d7c4"
        },
        "item": {
          "id": "98a065a2-06ba-4fc6-97e1-74519708473c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "92ab43a4-88b7-4924-89f7-9664764fb19a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d261b015-8dd9-4d27-8077-1ec405219fa2",
        "cursor": {
          "ref": "81cacbda-a386-40ad-962a-007874c52ff1",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "bb6d9128-2a11-4d6f-99fd-8541a9e60bed"
        },
        "item": {
          "id": "d261b015-8dd9-4d27-8077-1ec405219fa2",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "1ec2940f-6263-4d16-b59c-b285e4514a1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0fd8276-2145-4de0-ab32-4fab579b9b57",
        "cursor": {
          "ref": "fd58bf8a-b9b8-49a3-b149-dffa9e0e5e12",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "440cdfe2-2d84-45fb-a56d-063df3bd60ee"
        },
        "item": {
          "id": "b0fd8276-2145-4de0-ab32-4fab579b9b57",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "a452c45f-6ee2-49a3-8d28-5479f5d2bc08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92dcf734-5060-4e95-bc4b-25e83f18d329",
        "cursor": {
          "ref": "033d4f7d-bd3a-4338-86ac-22ecc051c342",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "2106de41-ff2a-4b5c-94b8-bb3ab9b8551a"
        },
        "item": {
          "id": "92dcf734-5060-4e95-bc4b-25e83f18d329",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "42f1072b-ffa8-42e7-ae40-e61e5f18ba43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbaa38d6-1518-4383-95d5-b862ed53a64b",
        "cursor": {
          "ref": "8ca3c69e-ebaf-4ce2-bccb-9452fc5f634d",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "beedc699-705c-42d5-a23e-a75cd9d4938d"
        },
        "item": {
          "id": "cbaa38d6-1518-4383-95d5-b862ed53a64b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3d94a191-83ac-4c7f-aca5-5c876061d991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee939e2-454d-465e-b6f1-d13c4ae0a233",
        "cursor": {
          "ref": "02e7c968-cba1-4791-af68-50150b16f557",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "58cb4d97-b637-4741-9367-4a23d577c1b6"
        },
        "item": {
          "id": "aee939e2-454d-465e-b6f1-d13c4ae0a233",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "eb10ef58-f800-4f2a-8851-69759e9139f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 138,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6169832e-b1d6-4d09-b8c8-5fb67d7ac7c9",
        "cursor": {
          "ref": "73f7e906-58f8-4a4b-b9da-86b6dcec08d8",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "39297f79-3b68-4151-a0f1-df9f58879fe5"
        },
        "item": {
          "id": "6169832e-b1d6-4d09-b8c8-5fb67d7ac7c9",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "22730ec2-47b0-4ac7-804e-f498530e6c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0adee21-ffa0-4806-91fe-75b4dd9cfb65",
        "cursor": {
          "ref": "754beed5-8dc3-4664-b2a9-d4fd889a41c5",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "ab39d7f4-9b99-4a2a-9b50-cd3bb9140130"
        },
        "item": {
          "id": "d0adee21-ffa0-4806-91fe-75b4dd9cfb65",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "7eca3239-70ff-42af-bfb7-ff5519f89b88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f7b6ce-7293-43e1-98db-ad0c9084af47",
        "cursor": {
          "ref": "b58ccc1e-9c1f-45d9-b343-706b92c7518a",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "88ef9e24-a047-438d-8900-c1a5764f319e"
        },
        "item": {
          "id": "07f7b6ce-7293-43e1-98db-ad0c9084af47",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f51d3859-1d93-4543-9160-3fbb408d856e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "140781ca-e9f1-4af6-815f-9c4007676ce6",
        "cursor": {
          "ref": "298f8f05-5189-4fac-9285-92508829f595",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c38935fd-31dc-464a-9b89-7190d8faa6aa"
        },
        "item": {
          "id": "140781ca-e9f1-4af6-815f-9c4007676ce6",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "30a04e27-4ca5-4891-b76a-f79457a3544a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e69bd6c-5610-41d9-9947-d7233404d1d3",
        "cursor": {
          "ref": "2bb1abb6-405e-4b36-a97f-e87268e1ce8d",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "2b551ef2-26b1-4c96-a824-abd625a135fa"
        },
        "item": {
          "id": "9e69bd6c-5610-41d9-9947-d7233404d1d3",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f1b61c71-e3e8-4b2a-b2c4-0382004a3b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41fefb06-a31a-4451-9ece-eeb128ba8735",
        "cursor": {
          "ref": "1338c50c-44c9-4824-9e62-bbacc8ea00eb",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "57e0d8a7-8888-44eb-8846-30c0dc49b9b0"
        },
        "item": {
          "id": "41fefb06-a31a-4451-9ece-eeb128ba8735",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "cccd9e58-b184-4ab7-a826-b56aa44f5db0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "281d72b7-a571-471b-bea0-63bcabbeec43",
        "cursor": {
          "ref": "b3e0dd64-f72a-481e-a28d-66c6f492a8fa",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "f258b3bc-6b8a-435a-b935-0bb95fc83bd4"
        },
        "item": {
          "id": "281d72b7-a571-471b-bea0-63bcabbeec43",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "afb35c3c-3fa2-49d5-a0ca-56c2d8ae1dcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3009cc52-45b8-4d5a-bb43-1a9b0b35605e",
        "cursor": {
          "ref": "7f748e59-b728-4af1-9ed7-dcdf98926134",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "21489316-8d27-427d-a9cd-a3de8c2d30b7"
        },
        "item": {
          "id": "3009cc52-45b8-4d5a-bb43-1a9b0b35605e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "cbc9ab1b-0a61-4ac3-9cf2-1b2006f8dcc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c698cf0d-9752-4785-a58b-4cfa679b1a60",
        "cursor": {
          "ref": "6452ce87-bf77-44df-8a4d-d6e74532144e",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "49cda470-d443-4e5d-ab55-3cd20d84a045"
        },
        "item": {
          "id": "c698cf0d-9752-4785-a58b-4cfa679b1a60",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "22ce32bb-5a7e-4f98-8cc9-4d74b739c020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6072b51-d81d-4a08-80e0-28411d4ba557",
        "cursor": {
          "ref": "da3da2cd-b394-42df-a64b-dae5ad5b9235",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "1a378abe-48e3-4723-befa-b875a590cb81"
        },
        "item": {
          "id": "f6072b51-d81d-4a08-80e0-28411d4ba557",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b66723e8-0b7f-4fd8-9862-be88da66529c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de7ff73b-9a26-4e97-a206-1ee8095bc694",
        "cursor": {
          "ref": "234cad7c-e262-476a-b172-a9b954539a91",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c86a3040-bba0-4f7e-b7c1-921088c664cd"
        },
        "item": {
          "id": "de7ff73b-9a26-4e97-a206-1ee8095bc694",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "3a668b2b-0ee9-4c38-ace4-05269cf9554e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec2dba3-638e-46d4-b81e-e2b7304b6f91",
        "cursor": {
          "ref": "e914d006-7ce4-47b8-8913-3eb960c863c1",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "189aa5c5-182c-4600-8a40-fa7a08b04be7"
        },
        "item": {
          "id": "dec2dba3-638e-46d4-b81e-e2b7304b6f91",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "6b9707f5-4b34-49ff-8fcc-f959d3c2dd3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c98671be-ceb8-47a6-8a14-b6c9e8537a99",
        "cursor": {
          "ref": "092ecd2e-9a99-471d-949e-fba8ff794f08",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ec782762-f489-4eb0-8f7d-1f3ae67e6430"
        },
        "item": {
          "id": "c98671be-ceb8-47a6-8a14-b6c9e8537a99",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "b7b9a4c7-7b76-457e-b7cb-b1e98e811067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "063c6fa8-9ee1-44bc-bd82-b1ef73e39dff",
        "cursor": {
          "ref": "3a2e0381-6bbf-4ff5-b299-08e6dc697f30",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "06508ff1-3aea-49a2-896b-28d8fcc61521"
        },
        "item": {
          "id": "063c6fa8-9ee1-44bc-bd82-b1ef73e39dff",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "5f6c538a-71dc-461c-a215-7c9d5da960d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f2a99a-4555-4e02-bd57-563ace8ce443",
        "cursor": {
          "ref": "5d5b2d47-fa80-405b-b3f8-060f20ff61e3",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "d6c45c02-a3ff-488f-ac98-3ad46a983c91"
        },
        "item": {
          "id": "b8f2a99a-4555-4e02-bd57-563ace8ce443",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "f2cfc3d8-44b1-496d-b3cc-f5cb42334719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d44cce40-9bb7-453d-9f9a-4726a3b34467",
        "cursor": {
          "ref": "faf623f6-18af-47bc-97df-6dde5112fb2f",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "0b3503a8-b654-40eb-9c52-374fa62ccc91"
        },
        "item": {
          "id": "d44cce40-9bb7-453d-9f9a-4726a3b34467",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8a583cb4-9f74-4158-ac47-a8e31fa9f3eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24a2a078-a066-430f-8a55-01a3a575a04a",
        "cursor": {
          "ref": "693ab039-c295-4a32-bac5-09a795bfbbdc",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "5949e916-04b3-4cdb-a16e-0414569b0ba5"
        },
        "item": {
          "id": "24a2a078-a066-430f-8a55-01a3a575a04a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "b657b0ed-d41f-4938-abf7-aca79d3ba9f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f9014a-9f27-4337-8732-05af2bc43232",
        "cursor": {
          "ref": "c6eed1d6-51f8-48ee-ae1f-758404061459",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d1e8d3e0-9f09-4442-ae99-e05c1f922a88"
        },
        "item": {
          "id": "64f9014a-9f27-4337-8732-05af2bc43232",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "e73ec3a9-57b3-4678-8990-4e9f61ee20b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a8a92c-f16f-4334-b602-ee03d3174e45",
        "cursor": {
          "ref": "8cc23f54-9ffb-416f-bd68-87d44703a635",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "68150b0a-c85d-4e9e-810e-e98ec3dd9cb9"
        },
        "item": {
          "id": "c9a8a92c-f16f-4334-b602-ee03d3174e45",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "989019ed-26b5-436f-9014-ebe859a0e3b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10285ed1-aa5b-416b-ad59-e42b35de8e69",
        "cursor": {
          "ref": "5302181d-519c-4171-948c-b96e4cc123fe",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "17fd2508-788c-48ae-82a7-50f6010cd21e"
        },
        "item": {
          "id": "10285ed1-aa5b-416b-ad59-e42b35de8e69",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "983d3f45-fe35-4ff1-a8c3-3e20c7191c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8557f0f0-6443-45cd-b95f-bd7708fd2cd4",
        "cursor": {
          "ref": "6224546c-48b0-46ef-9bcb-9fe6e5b95bab",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "117bae9d-0187-4f30-a5a8-b9a707e26d09"
        },
        "item": {
          "id": "8557f0f0-6443-45cd-b95f-bd7708fd2cd4",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a3c79207-9fca-4e87-907d-47cfa341a5dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca978ae-0cbe-4416-a2ed-d9f0553761de",
        "cursor": {
          "ref": "7c42b11a-1842-48ef-964e-817e1bfb29ca",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e450bc53-2064-44e7-99a7-327d38ba76b8"
        },
        "item": {
          "id": "bca978ae-0cbe-4416-a2ed-d9f0553761de",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "97221421-cf5c-40da-8529-88437a15a031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f19e8b-e9af-4e30-bda6-8efcb8111ba3",
        "cursor": {
          "ref": "01d24eeb-fb64-43f1-9433-d639b53d31d8",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "573ea406-9dab-403e-80ec-96c835d83290"
        },
        "item": {
          "id": "66f19e8b-e9af-4e30-bda6-8efcb8111ba3",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "8da11dd2-8c9a-408c-b02a-56b4546fc021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8e97db0-110c-4753-9983-d4a039187150",
        "cursor": {
          "ref": "9963800c-1a82-4698-a64a-a24711c9b728",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "c9c38d4c-de81-4eae-81c2-0875287915be"
        },
        "item": {
          "id": "c8e97db0-110c-4753-9983-d4a039187150",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "1a89001b-f4ec-421a-a67a-1a6a129b4a56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e3a1183-5c56-4546-a6f0-ebdc6765f4eb",
        "cursor": {
          "ref": "d0e82ab4-d713-4820-b724-bd16e331dae2",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "8871a25d-6af4-43fa-a962-b8576ff13755"
        },
        "item": {
          "id": "6e3a1183-5c56-4546-a6f0-ebdc6765f4eb",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a53c581c-6aaf-425e-87b6-091551cfffe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f6e0b65-bced-4a38-9da1-1a3675421078",
        "cursor": {
          "ref": "f845b1f6-adcc-46d9-9b41-f59910e44a1d",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f777ea8c-7e94-4c8d-8f7c-d330f1dd291c"
        },
        "item": {
          "id": "1f6e0b65-bced-4a38-9da1-1a3675421078",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "bf735f4b-7fdf-4dfd-a989-2c44ae3ff8d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0243792a-4aa3-441d-afb0-d8ff11acb579",
        "cursor": {
          "ref": "f12865fd-0dd1-4c75-bc6b-eb5b411214b0",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c75232c5-88cf-44cb-911e-0a609f2d3a14"
        },
        "item": {
          "id": "0243792a-4aa3-441d-afb0-d8ff11acb579",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "a01875f4-0a93-4268-964a-9e7a50a8dd55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27ea5417-7e57-4692-871f-e4a0b62952d2",
        "cursor": {
          "ref": "db3c40ff-0277-4264-917b-d4b64b83b78b",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "770c51a8-a7cd-4efc-b485-efd447640d39"
        },
        "item": {
          "id": "27ea5417-7e57-4692-871f-e4a0b62952d2",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "9c975b5a-8326-4a8d-9593-19bc9768be30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54114e63-9b15-4686-a30f-9a92f38f4957",
        "cursor": {
          "ref": "adcfb355-496d-44a7-9247-8ce9d9b5f1d6",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "2f576a66-a365-4ce2-aeff-77ef65b10178"
        },
        "item": {
          "id": "54114e63-9b15-4686-a30f-9a92f38f4957",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "92ff581a-2191-4cd9-9167-347a59d97c97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "336f7ad6-42f8-425d-afbf-ecf4f9409474",
        "cursor": {
          "ref": "7a9ec9cf-28ee-4420-90c8-fd0323ec65c5",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d2e1ef95-1a60-4495-b9c9-85cb926a9375"
        },
        "item": {
          "id": "336f7ad6-42f8-425d-afbf-ecf4f9409474",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "eaf24e17-03bc-41c2-a2e2-2feb2156bd00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c2982e-8025-44b5-ad74-a5cb25a79696",
        "cursor": {
          "ref": "db4fd5b6-de41-40ff-ba77-5809b0411025",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b690aa5f-79cb-4370-80e4-f78f802e7756"
        },
        "item": {
          "id": "39c2982e-8025-44b5-ad74-a5cb25a79696",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "f9b5d858-c244-4577-9fcd-b4539f8590c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "001a7a1c-839e-463c-92a4-2919dcdfff5d",
        "cursor": {
          "ref": "57b6d674-3218-4d57-a158-76d4f9fa827a",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "5dea00aa-d8a4-4356-9a45-1b97ba3cf5c7"
        },
        "item": {
          "id": "001a7a1c-839e-463c-92a4-2919dcdfff5d",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "f18aab94-0eaf-46c9-9232-efec4dd038c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14b930a0-24cb-4848-af7c-07aeea1cd7fc",
        "cursor": {
          "ref": "2cb3bbb6-1322-4ac8-85c0-afc7ef649139",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "4a2b2112-512b-49c8-b4bd-d7c3b89f04e0"
        },
        "item": {
          "id": "14b930a0-24cb-4848-af7c-07aeea1cd7fc",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "97dec68c-2744-40b9-8b80-6d88766288f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c652c9e-d423-481d-b002-d532b52a68e3",
        "cursor": {
          "ref": "543930d0-0a4d-4e56-9dc6-89f1584742d9",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "6a504bb9-417f-4346-80d4-5a19213c6620"
        },
        "item": {
          "id": "3c652c9e-d423-481d-b002-d532b52a68e3",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "ce542353-7623-4c23-b007-8d77116941bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43bf24ea-f76d-4597-8644-e73b9a8e89d9",
        "cursor": {
          "ref": "45bf4eac-fcf2-4d42-8d51-9414e2a853ba",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "b4ac89d6-59e1-4e3f-b801-fee6532c3580"
        },
        "item": {
          "id": "43bf24ea-f76d-4597-8644-e73b9a8e89d9",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "e5941665-f5d2-4cdc-aa47-98d745af4a95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0975545-e60c-4de0-b812-ede2d539f786",
        "cursor": {
          "ref": "30d611d7-fdba-4203-b8ae-bfa20a06e636",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "562fbc9e-d012-4542-a921-526b30c8fa0c"
        },
        "item": {
          "id": "a0975545-e60c-4de0-b812-ede2d539f786",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d5ae1a53-de71-4a98-a024-5c81d060faab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3019c546-b599-41f9-9f6b-f81b069530d8",
        "cursor": {
          "ref": "bb6b9ae7-8849-4616-9007-9738d352397f",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "104d41b1-19a9-411c-aff4-4db877ca5ee8"
        },
        "item": {
          "id": "3019c546-b599-41f9-9f6b-f81b069530d8",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "bbd8f0ea-5da0-4a26-82a7-294f98f24293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0b57cf6-ccca-4f7e-8e70-c329cf3385fe",
        "cursor": {
          "ref": "27158f8f-a37a-4528-9a59-40397b9b2507",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a4ae9db8-0c26-447c-8c2e-98a0083ad2bd"
        },
        "item": {
          "id": "f0b57cf6-ccca-4f7e-8e70-c329cf3385fe",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "51e0a6c7-9d23-4233-94b0-52039006f967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a8587aa-7f33-4698-92c8-9c54645fafe6",
        "cursor": {
          "ref": "5898977f-4535-47a4-a941-b09afdee45d2",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "89e46030-9778-4368-8444-b5f04eadf060"
        },
        "item": {
          "id": "3a8587aa-7f33-4698-92c8-9c54645fafe6",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "81b153a1-9a07-474d-baf7-c51bef4e0c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "522f5e26-12dd-46f5-95d4-9240b0435274",
        "cursor": {
          "ref": "30a545ca-3c2d-46ac-83c7-4d8b815ffc6c",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "322c7a83-647a-4832-80b2-f6e6f5bf7213"
        },
        "item": {
          "id": "522f5e26-12dd-46f5-95d4-9240b0435274",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "53076d9a-512b-4d03-959b-553e32425677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caca3db9-5f18-453b-91f2-93a7028e3e6b",
        "cursor": {
          "ref": "688d3585-0c9e-40d4-ad99-8a61984d99ca",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a485a5f3-db2d-4075-9786-0e6053b295eb"
        },
        "item": {
          "id": "caca3db9-5f18-453b-91f2-93a7028e3e6b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "a9a59d5c-1167-4913-92e7-7dde4c9b3564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50037407-0f85-41ec-9402-e8ac983c7fa3",
        "cursor": {
          "ref": "9b827b38-1e1b-4f50-b241-a4fe87d62017",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d169b7b0-3c59-40e3-aa1f-db1e6ee483b3"
        },
        "item": {
          "id": "50037407-0f85-41ec-9402-e8ac983c7fa3",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "dc103806-6fc5-4dd8-a030-54e51466daea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27dc7f7e-f101-4b6d-b011-c76d6c71038f",
        "cursor": {
          "ref": "7ac06a90-c286-43c0-a210-ffbe862c45c4",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "ecc0274a-2322-49ad-8612-f2d99316bdf9"
        },
        "item": {
          "id": "27dc7f7e-f101-4b6d-b011-c76d6c71038f",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "764c5423-6a15-4cdc-a51a-cb77f921386f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9ea8be2-1946-4075-b564-5a1c5ef7cd2b",
        "cursor": {
          "ref": "1305292b-ea93-4020-a5a7-ee1c1a483636",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "98047148-b9a6-4ff3-8aee-ac29b316e52d"
        },
        "item": {
          "id": "f9ea8be2-1946-4075-b564-5a1c5ef7cd2b",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "c6187ad8-2778-493a-941b-56dac6756955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9081d141-eab2-4b43-bd7f-432b8ef87b57",
        "cursor": {
          "ref": "db77b120-0bcf-4619-a1c1-91d3f138c331",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1f9fcccc-62dc-4af0-a641-6bd3d27342ce"
        },
        "item": {
          "id": "9081d141-eab2-4b43-bd7f-432b8ef87b57",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "eef1b7fa-7a90-4d72-b219-981a587ee7f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa968e8-2800-4881-978a-629560a96a81",
        "cursor": {
          "ref": "0b02b0bd-569d-4834-8101-3f828985c9b4",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "00e94f65-be3a-446c-ad69-8a98b4591570"
        },
        "item": {
          "id": "2fa968e8-2800-4881-978a-629560a96a81",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "47691ea4-ca76-438d-91b9-f234041afd79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe85a121-19a4-400f-9904-376ea1e0d151",
        "cursor": {
          "ref": "9eba87c3-a760-4e2e-87ef-582c489bd9b8",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b6039e4c-77ce-4436-a231-2dc82e1264a8"
        },
        "item": {
          "id": "fe85a121-19a4-400f-9904-376ea1e0d151",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "75e2b35d-c67e-476a-aa8f-7a0d74308541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d3623c7-fa0f-4d2f-8cc3-fc3acb99b16e",
        "cursor": {
          "ref": "d769872d-8b9f-4043-b66a-01ada7a70986",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d2c0c71d-8eaa-448a-bea5-2f2740a67853"
        },
        "item": {
          "id": "0d3623c7-fa0f-4d2f-8cc3-fc3acb99b16e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d4ad3346-c213-4703-b0bf-15d4e79390d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4d4ab08-f4ad-41d6-a83e-9c19728544b7",
        "cursor": {
          "ref": "6c93ae1c-f22c-4bed-b2f7-7b9161595e51",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "c634b002-69f1-4cde-bfee-1040e7239bb8"
        },
        "item": {
          "id": "c4d4ab08-f4ad-41d6-a83e-9c19728544b7",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "04054b58-357e-4267-9082-0ae1e690a994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99e8ada8-e45c-4e8f-965b-abeb6abb9b02",
        "cursor": {
          "ref": "a28b8ecb-07ca-4ff6-835d-e38edc8dea86",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "83359c7b-a7fe-4f73-beb0-cea2ecf4cd3c"
        },
        "item": {
          "id": "99e8ada8-e45c-4e8f-965b-abeb6abb9b02",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "94b92374-ca15-4b49-a04a-c729a1e17c41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32d20c59-7a72-42f0-9ef9-a2bc1b052fa2",
        "cursor": {
          "ref": "a44f2fca-b2f4-4c36-a80a-9210bd248ab6",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "dd62ba89-c079-4eaa-9a14-54dbfc2d4f89"
        },
        "item": {
          "id": "32d20c59-7a72-42f0-9ef9-a2bc1b052fa2",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "0ee3cf3a-1076-4e2e-a10c-2c7c9e95c6c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0165210-3c96-43e2-8a09-4ebab9e28762",
        "cursor": {
          "ref": "d4bc712c-75bb-4702-9486-3a5286364e81",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "e74f695a-03ba-4eff-b4a1-237ab0e97ccd"
        },
        "item": {
          "id": "a0165210-3c96-43e2-8a09-4ebab9e28762",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "73b7dafa-903c-469a-92d4-b0b5623a0ebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c6e411-7034-4571-b813-23b0c2c67016",
        "cursor": {
          "ref": "683bd0e7-9ebb-412a-8f68-305f626e2c7d",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "54e74dbb-61b8-4c47-bb28-ed787994b420"
        },
        "item": {
          "id": "63c6e411-7034-4571-b813-23b0c2c67016",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "6eeb7ec6-5586-4d2f-8ddb-337c1e4fbacc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb44bf33-b88b-4427-8889-5358ff0f4d15",
        "cursor": {
          "ref": "494ce842-5bc3-4cfe-8397-fa1e2be7adc4",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "df2732f6-8368-40ac-9f68-05e816cc5156"
        },
        "item": {
          "id": "fb44bf33-b88b-4427-8889-5358ff0f4d15",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "87fb4e73-2888-4b93-a346-6aaf49ec1549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a3edb95-f4d3-435f-9a57-3e6e4f37a4e2",
        "cursor": {
          "ref": "994adbbe-0b7e-4154-9942-3c8a8c249df3",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "ee342aec-0f74-4ceb-b797-f9ac4aef002d"
        },
        "item": {
          "id": "1a3edb95-f4d3-435f-9a57-3e6e4f37a4e2",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "5d0216cb-27d2-4d38-9780-6daa0c596c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a2648e7-1659-4ff0-9328-0035d99b3800",
        "cursor": {
          "ref": "7907116b-e7f2-4703-854d-85549dfa175e",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "f09ff345-fdd0-4a85-9774-c8be7b2a97cf"
        },
        "item": {
          "id": "0a2648e7-1659-4ff0-9328-0035d99b3800",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "a2377393-d9ac-46e6-b760-34f51e62525b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd23db9-587b-4af3-aef8-426afef26e92",
        "cursor": {
          "ref": "631adee9-cf9d-4f33-8f1a-4ea83038fcb1",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "f3ad7dda-62c4-4e52-836f-c30f03e2ac84"
        },
        "item": {
          "id": "6fd23db9-587b-4af3-aef8-426afef26e92",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "dc0d3090-b527-4645-b056-b6fa40d563d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "877d1cb5-2b3c-4c4c-896c-cbf011368855",
        "cursor": {
          "ref": "009cd5b5-a16c-458e-8862-d475b3b5d443",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "19281f85-d5a5-4a89-a1ef-429c4a163456"
        },
        "item": {
          "id": "877d1cb5-2b3c-4c4c-896c-cbf011368855",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ac810ec3-6aba-4714-97ba-5ee80e949835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c118afc3-7215-495f-a79a-dfacd22944b7",
        "cursor": {
          "ref": "e8fbc215-4c4d-41bf-8b35-e1d24b823cb2",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "e1097554-11e4-4c69-9227-5177b7c9e934"
        },
        "item": {
          "id": "c118afc3-7215-495f-a79a-dfacd22944b7",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "20141545-f4a0-4ab4-a742-7fe3bdd2e067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2687fed-5e96-4647-bccd-cd6845c8baf6",
        "cursor": {
          "ref": "3afe833b-eacc-42c3-8951-d03bd8fb9ac3",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "abe51b01-dc7a-4308-a2c4-9d35e7b94d15"
        },
        "item": {
          "id": "a2687fed-5e96-4647-bccd-cd6845c8baf6",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "75af023b-c0f7-4fae-91ef-3df564f34b3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82308f8b-84c2-44fa-9b79-09feb59215c9",
        "cursor": {
          "ref": "15dcc20e-cb87-47aa-b685-92df167d1d91",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "8adc27a4-cf32-4b63-a8be-591e4d4c839c"
        },
        "item": {
          "id": "82308f8b-84c2-44fa-9b79-09feb59215c9",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "18daebb9-a07b-4ff1-b0a9-7a70623593c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc22f3f-a93d-420a-a4ef-fa88591fc2a0",
        "cursor": {
          "ref": "c7efaf8e-f3e2-4758-a7db-49115d4ae2d4",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "6c396d01-ef49-4c24-9ac0-13ff87d20f5f"
        },
        "item": {
          "id": "abc22f3f-a93d-420a-a4ef-fa88591fc2a0",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "65ddeaf2-6086-4731-ac3b-7d63b6304d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d1a841-1c96-4f47-8597-7073769749e3",
        "cursor": {
          "ref": "d30af0fc-1e81-47f2-bcbc-71c5e7314b71",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "9c455e98-dcdf-4141-a5f7-db3349ead48c"
        },
        "item": {
          "id": "21d1a841-1c96-4f47-8597-7073769749e3",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "fe7e63aa-626f-434e-b9d1-7927c0bb0a44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "382b0a22-f905-484b-8d0e-0077e34cff56",
        "cursor": {
          "ref": "651afafc-c78b-4734-be8c-905cf2683692",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "57e5ca59-480c-4807-9172-26f0101caaa9"
        },
        "item": {
          "id": "382b0a22-f905-484b-8d0e-0077e34cff56",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d37da38d-3d19-4d1f-b489-d41d4bb13a3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b030b48-1489-48f9-8498-6bcf8148a873",
        "cursor": {
          "ref": "b70936c9-4553-4572-8444-cf551368b951",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "7ba7032d-048f-47b7-a53a-1d10236a3145"
        },
        "item": {
          "id": "7b030b48-1489-48f9-8498-6bcf8148a873",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "4b53a9e3-e2a9-49fe-b1bc-50e7478548f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "649a6c0b-aab8-485d-a510-54391bc20eca",
        "cursor": {
          "ref": "d94435c2-bb7d-4cc4-a6a9-f28e1ac14f2b",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "18d15bbd-0dba-4325-9d42-088d2922030b"
        },
        "item": {
          "id": "649a6c0b-aab8-485d-a510-54391bc20eca",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "90b72cf8-f3dd-46c8-89f5-644dfdab1824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24a2bf76-da6d-4fe4-94a3-7d9d70c36277",
        "cursor": {
          "ref": "c589433f-dc1d-4cab-8e7a-e0c4c5c4fbca",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "cdd14d82-84ca-4439-8222-73a5e8c031ec"
        },
        "item": {
          "id": "24a2bf76-da6d-4fe4-94a3-7d9d70c36277",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "afaab13f-6629-420c-854b-1b4d3f5d3918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e893db-e340-46b1-bad8-7710054304e7",
        "cursor": {
          "ref": "99eb4c25-278a-4837-87c9-c8ecd0b04877",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "9f6c0f0d-fb21-49ea-87f2-be78a1bf6a9a"
        },
        "item": {
          "id": "31e893db-e340-46b1-bad8-7710054304e7",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "7650cded-ed91-457c-a19b-e2b7830be8d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73c6d6b0-c1b2-4f81-88a0-e40ae28de5f6",
        "cursor": {
          "ref": "36f3d764-c2a7-42a4-a793-b5a641f33b50",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "6fa5e980-37f7-49a8-b686-8a1bfdcd67ca"
        },
        "item": {
          "id": "73c6d6b0-c1b2-4f81-88a0-e40ae28de5f6",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "1e4b5060-239a-4b4e-a0ed-194621c67d91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4d91954-4487-43ae-af55-117c2914fd2b",
        "cursor": {
          "ref": "24d9b260-cb69-467d-adc9-8920ec116302",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "6825d6e9-b2fc-4483-9393-fb5b15e5bb10"
        },
        "item": {
          "id": "d4d91954-4487-43ae-af55-117c2914fd2b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "61d00f88-22e5-421a-aecb-6f174c12e9d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df35d28b-110f-4d4f-81f7-f136c3cf78ae",
        "cursor": {
          "ref": "95f844ee-1bb3-4f9f-bdb7-5bbffaeb2595",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "fcfaf8b0-a9ae-45fc-a4ed-c0ea6de0aba6"
        },
        "item": {
          "id": "df35d28b-110f-4d4f-81f7-f136c3cf78ae",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c141488b-ccea-4f2a-9b32-bbd77bbdeb51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e35d29b-c68d-4406-ac24-53aa9ef12909",
        "cursor": {
          "ref": "3ba77b8d-2164-4b31-b28a-6b7a0b565447",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "d3a70b11-90e8-4b46-b634-4b17bcc68e03"
        },
        "item": {
          "id": "4e35d29b-c68d-4406-ac24-53aa9ef12909",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "1acbfdcf-21a5-4c1d-8345-e459d902a7e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12f4c325-ba5f-415e-a71e-0ff91e34596a",
        "cursor": {
          "ref": "2d53e5dd-1d51-44d5-95a5-eb43da459868",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "de8f7fac-bbd9-4aee-9b9a-e9b8392e795e"
        },
        "item": {
          "id": "12f4c325-ba5f-415e-a71e-0ff91e34596a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "23746b69-9e09-4c7f-9b9e-602b238c385d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d2e201-043f-42ec-a9c8-9eb959487f08",
        "cursor": {
          "ref": "c3c4eef1-3851-4741-b192-31f41362cd22",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "86f17bbc-d925-4273-8e4c-201f0161d8f3"
        },
        "item": {
          "id": "f2d2e201-043f-42ec-a9c8-9eb959487f08",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "bdcbb5bf-1290-468e-9161-5acf61ab5321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edddcb7e-456e-4375-8f2d-ab261becdf87",
        "cursor": {
          "ref": "de3b778f-78d3-4255-9998-12826d14d424",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "c5602154-692a-46ae-8277-e32d4d107fbd"
        },
        "item": {
          "id": "edddcb7e-456e-4375-8f2d-ab261becdf87",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ebd067ff-2d40-4247-8041-aba03b6ea929",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b5f1291-cbd3-49ac-88ec-1470ebd0106a",
        "cursor": {
          "ref": "8f6d8256-a064-45de-a7f6-1a53c1e85f9f",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "dc8f9024-425f-470b-8331-f1a7e3242bd6"
        },
        "item": {
          "id": "4b5f1291-cbd3-49ac-88ec-1470ebd0106a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "3c0bd4e5-7df3-4ae6-993d-11acaac9d5e5",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "28f8950b-9a61-4314-9626-b86b2a66c574",
        "cursor": {
          "ref": "b5f56f0a-770c-4614-8042-01d7104b7fad",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "334ccb9f-da08-4dae-a3f9-57cc65643b7d"
        },
        "item": {
          "id": "28f8950b-9a61-4314-9626-b86b2a66c574",
          "name": "credentials_verify"
        },
        "response": {
          "id": "122836b2-5c9b-4162-b0d3-9d313e138e94",
          "status": "OK",
          "code": 200,
          "responseTime": 2457,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d12f5967-9d6a-42b4-a9ba-6bb2e6735a95",
        "cursor": {
          "ref": "fcd84fd4-c5e6-4de3-a920-00b52c800817",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "1d6293e0-ada0-47a7-9b8a-f4c9651e9f00"
        },
        "item": {
          "id": "d12f5967-9d6a-42b4-a9ba-6bb2e6735a95",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "036c88eb-737e-4869-8082-bcb8e5811fac",
          "status": "OK",
          "code": 200,
          "responseTime": 2535,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "78cc1ba7-9faf-4f0a-a9e4-b91029d86366",
        "cursor": {
          "ref": "5541fa6b-185a-45bb-bb22-2802584f9f2d",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "276a8334-1b0e-4eaf-80b4-ca39b9a94674"
        },
        "item": {
          "id": "78cc1ba7-9faf-4f0a-a9e4-b91029d86366",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a3dbb3f9-2340-4a58-b20f-4c8c8247f6e0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78cc1ba7-9faf-4f0a-a9e4-b91029d86366",
        "cursor": {
          "ref": "5541fa6b-185a-45bb-bb22-2802584f9f2d",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "276a8334-1b0e-4eaf-80b4-ca39b9a94674"
        },
        "item": {
          "id": "78cc1ba7-9faf-4f0a-a9e4-b91029d86366",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a3dbb3f9-2340-4a58-b20f-4c8c8247f6e0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8010c1d2-b69a-41de-a268-d6ee79f1bd2b",
        "cursor": {
          "ref": "1e0bcd29-9756-44ed-813c-0fd4a37dcdfd",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "bc3c9f14-24c4-4e1b-be86-46ed79b4804d"
        },
        "item": {
          "id": "8010c1d2-b69a-41de-a268-d6ee79f1bd2b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ffe64b4b-b3ce-4ce2-a3f0-fc08160f183d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a4bf4c1-4e6c-478f-8c7e-1552df6f88cf",
        "cursor": {
          "ref": "5227dd2b-cae9-4981-b12c-630f159fd8c3",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "9db2babb-ec2b-4f2f-a98a-08e7a5ed9fe3"
        },
        "item": {
          "id": "7a4bf4c1-4e6c-478f-8c7e-1552df6f88cf",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "44bbc814-fc09-4d74-a05a-f6f5c25b7516",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}