{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "267faaa5-aa04-4e80-a075-715be2e799e7",
        "name": "Clear Cache",
        "item": [
          {
            "id": "13bd1d46-fc95-49cb-91ad-2f1fe6d58ef8",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e73530ac-2d3b-4150-bef4-7e5fa73d1b05",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0b8dfa31-4ba8-4763-b6c0-9bc56ea722cf"
                }
              }
            ]
          },
          {
            "id": "88c53ca7-8162-4afd-934a-94a47d7fd670",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5324b0d4-f84d-487c-a95d-4c17294da06a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "54a20e38-616d-446b-8300-44f6329842a1"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "05f431ba-d8ee-4176-ae33-d072e6c92666",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c296fc14-06e4-44ee-925c-9f3e95ac18cc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "33a49180-28ea-4b0b-ae84-7414ace5f894",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9435f59c-b995-4796-aa06-5200b2d3213f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "996e5a8a-0749-47d9-8b66-101561b7943c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ba8b6070-5a70-4124-8ceb-b3e00a10ec0a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c837c9fa-fab6-4cd0-89c4-390b7d9ba495"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4a3dba63-541c-4c26-93db-9251cd88c6b5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cfc8a067-39fc-4fed-a835-76f3f17b58d4"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4996dfc1-d71d-4973-8d89-d836d1a7d4af",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "9c8e152b-68c8-4514-8905-c237d99531a9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8d4c2d10-85ae-4a7b-b212-0a35fb3708cb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ce53449e-489d-442d-83e5-47b734a1a008"
            }
          }
        ]
      },
      {
        "id": "cab7c2ed-8c58-4f70-aa37-a099a2edbd18",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ea40a82c-126c-4df8-84fe-3e565a1e7b94",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ee6163b8-47ce-4797-8247-7d24b84535d9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "36af96ef-9187-4e55-859c-19228a35d147",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21eba121-1277-4b81-af49-9c618faa7738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "25def27f-2c1d-4cf9-8438-db063ff86c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6422bd2-1a5f-48fa-acef-8752f5b6a272",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16dd5d5e-e3dd-4686-aea4-f84206b8c222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3480c6c8-5af4-4f44-9790-c72850d54da1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f58d608-a271-4386-bed3-537c2e1680ff",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93fe595d-c13e-4ed0-a8a6-29ef685f3a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d5a4cfc4-caee-4eec-9383-3f560ee09176"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "31aa867d-b2e9-4a7e-822e-7bb658ca9292",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2c00b21d-c1be-4ed9-abcb-e30b3d69507a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf745f06-d94f-4346-990f-28f28b86e1d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cab8abff-12ba-420c-848e-db7fca94566c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d21bbcbd-bae0-4c08-93e6-8f0618a26c44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dda5f907-a27a-4ad0-8556-9d62d05d0193"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "92c47dad-e16e-4dbb-a13f-4de3e565c739",
            "name": "Positive Testing",
            "item": [
              {
                "id": "696f50c4-d872-494d-ae68-0e22f80d4566",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7007d231-6926-4b03-9391-53bd61238764",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "7221e4a3-b54a-4dd5-8325-90cd1b9b733a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b4a965c9-3593-4dec-8864-dfd577098851",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "e6f72088-e4b3-4a5b-8ddd-8a60e540c089"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f0456cad-b9bf-4666-9767-254ae5232dd9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "de22ad0d-53f9-40d3-b871-d6fce93c0236"
            }
          }
        ]
      },
      {
        "id": "88991710-fd1b-4a07-abd5-28791e277227",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "144a1d71-5a44-413b-a2c3-c844efe2daaa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "718a3204-1eea-4859-9ae4-bf0f038d3196",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "099ca8a0-7204-4412-b268-c1531952d007",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e171d4e1-2ceb-4516-9df8-8167c70e761f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cb89591-82c7-463b-b1ef-6fe968a82dce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f25abec-edfc-433b-a8e8-5768260dce2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36799627-ab29-404b-8106-4b95b688648d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ef36b47-b406-4254-893a-16a49f0c8fc9",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa20f58-bc00-45f0-8026-8a146ddfa526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4169a94d-ad0c-4fe4-b385-106ba41c5434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c75fb79-64e2-40fe-99ee-5b06cfc701f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d749080-cbc4-4d61-900a-f9af47c7f34f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d44a972-dcf8-43bd-a72b-5154e1388317",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a6e8e00-078b-426b-80d9-f19896c35f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e41f6b2-a20e-4add-90c7-7b660e878c03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f91a0a2-3b6f-4629-a6fd-2734be292ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7e76be4-5d1f-45be-89ae-b7709b4803a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54bb7a1d-37ce-4c0a-90e4-c46ce1a29118",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "985acc23-a93f-4eac-9624-08f68436be8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "182d5879-7f59-4aa4-ae05-596a80d0dd3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39c7b9f3-02fb-4039-857b-045f3e5fbf53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe96a30b-7386-4d35-a4ba-01cea80d1343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c22cce23-5924-4002-9439-8903f42553a6",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc47a308-5e97-4df6-8cda-19937894f806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55fd1b98-58b4-4746-84b6-55fae481ed21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "608a9c6c-b43b-4d0c-981c-4c0d413320a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0869b3a5-a7c1-435b-b9d4-bda14c507c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b77ebb6b-2635-4a74-b3de-89335ad2b999",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c30f67b7-14d8-42d4-84bd-6aa5c467c3c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efaaccaf-10a2-4f67-9c37-96f9b1e31eeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "945826f8-42be-4e2d-95d3-267117719955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c28a5732-a4d7-46fe-be9f-419db6d3d0fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a4f5af-5bf4-4d6e-9842-cb3c20758b4f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bb58428-ce52-4d16-b447-200ac33339b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9aa0b00-1095-4b86-b40a-be7172ee0e28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be0a5228-2b0b-4816-976c-c1c441fc6ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bbbeb80a-3e37-4b46-956e-423378ff9da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba4000a7-e0d4-4867-b612-f20e54111683",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a581ae3-18f6-4ecc-ba70-9caa11a921e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fa1a73a-f84f-4e7c-8ab0-d803fbc954ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3879231-420a-4208-9384-8843cac8e259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f594d513-8615-4da4-b107-55cebbbcee8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adfec4a5-4d26-401d-83d2-c2a3bd03a37f",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3404636-092c-424e-9723-884ab79bd542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b93fcaf0-21ee-45db-ad26-cc9b5183c4d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d025246-969e-401b-be7d-e06afda372f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59f94bce-4c7a-4769-a5ce-292e8aabdae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba653b3-2c75-4106-9c8e-5497178bb5b6",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e4837e0-4c5d-41f5-b551-99c6bd4c9cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8a34241-7b2b-412e-a645-76bc27527180"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bdbdd14-c49c-42cf-b58d-e87290d650c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ce3a9ba-6539-44c9-a450-c8e9ec8bdeb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15fe8556-3c00-46bd-b479-c3067e03c754",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b581b8f5-f208-4d5a-a4c4-d4ab6818f0eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50c4aa8c-65ab-4d02-b98c-86c08e434682"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9e69ac7-618c-43dd-a2e7-b936d5be1409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60676773-a19f-4dbb-ab43-0d32a4c51d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a8df6c1-be0f-417b-bbaf-cb65c0fafbf7",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11db7729-95db-4596-bbd7-804543631a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95461971-11ef-4008-8549-566be32ee35d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e501597f-24fa-489d-88c6-46f633101f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60acbe4f-2407-46d0-b72b-0317e2110e15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11d9d77f-3800-4331-bf0c-38f5aa9ffd81",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30decb80-5510-4ce5-84cf-53151c9fd242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de6622f9-7930-41b8-b997-3e86d0d450ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b90f39b7-c7f6-4a48-93d6-fbc0aa05c2f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45d5c747-ad0a-46dc-99ad-c7dfdb95cfe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60f83be5-5368-403b-b5d7-f7c0c33bce92",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63d17c08-6e09-4098-a00e-8fe4ca9bfd04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6ed07f7-9161-4695-ae76-1fd72bcae117"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18d90b2d-f127-4ca2-8369-f0161fadab03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f5a501b-7b20-4af6-be97-2aaf9c271c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b78c66d-07e9-40d6-9043-60b4bf42585a",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eee67380-34f9-422d-9787-b216085fd538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35316b6b-e72e-415a-b9fd-8c96a399c1d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45fd799a-ec39-4216-a0a9-21a05fccc89c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c562b699-6ae1-4277-aa14-d9b9d17c0020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e270f60-0bc5-4310-8701-9189a7af8af6",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "915e6800-4bcf-4d47-9ed2-9edb967eaa5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27bc197b-7c48-4751-8c64-bf3686c6d284"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "740ff326-649d-4b64-9a63-f4c6778b7909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a75aaaf-811d-43f1-bb99-8eaeabefe85c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13788219-b051-4d15-8b06-dde957224a0c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daf6343e-c25e-4e3b-8b95-77a7cbcff191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ca12b01-66df-461d-a6b9-75012281c63f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f74061e-26ed-438a-8b18-7104a63befdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "89a9f278-c206-4de8-bac4-5f0f9fe9fe26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbaaac74-ca43-4903-b52a-8732819f08f5",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b52bd89-e1ef-4c6a-a995-dc47e6c88b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "368902d5-39e2-45ab-8f0b-26686bb7e929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76d3e8fa-9351-40e0-8e34-48ff9a3e264e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "90fe7e51-580f-43e5-b04b-e2edfa38295f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "552b53a8-03d4-425f-9ca4-40d10c5b7d3a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "155f684d-18b4-4ad2-b9e5-fd18c4f737d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73cf3095-aab6-4656-a9f5-3a07937ed7d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e707bed3-4098-429c-a8bd-6f9f2b1be6d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c52406ae-33a0-4a05-8972-85af525138ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5a7339a-4760-4268-9f2f-4cd6ca65e2de",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8023c59-fb82-4956-a4ef-37234bfd4ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12cd9a38-6ccd-43e3-bf97-23227cb15c4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c31491-7a26-4042-b67b-6a3da153ac7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ea584bf-89ac-4bda-a82b-4b080b567b23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d38796ce-727a-4422-b301-e3a47ed3d4a5",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8edbf47a-aa1b-4fa7-986d-8f9d23f8a1ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aab0b4e-c220-4205-90fd-fabdacad8c4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "962af603-2955-49e6-a239-53eee7576ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d080373c-30b1-4a1c-85bd-429cd8f83b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29744ecb-07d9-42a1-b29c-88b30b3c7894",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2931f28-8931-4df5-b505-c0e9a87dc81e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fa51857-ea70-49fd-abe8-81c709f47019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00989da5-a1f4-446c-950b-160908cb1fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bce47c9e-ff81-457c-b432-7871ebe1cbd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ba4057-e024-4ebf-ac66-5b5d922260ed",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9a3615-ba59-4fca-bd3d-2c6503edba3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8a46ad6-262f-4972-9b08-6fd8af83d620"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b15bd7d-645a-4c6f-aa2d-667128d5f476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b67cb936-7f0c-46eb-bca9-297376cdc755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb0b649-25ec-400c-b208-3c2c39356e28",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72e05984-1604-4991-8c7a-2c5b7172f03f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88643e48-01fa-45c9-913c-d542176a5a6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8efbf5b6-e86e-4cf5-ad00-3b6fbe61a7ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fb4c080-10b0-43a7-a059-be00003b830b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e785aad-c9d5-436d-8862-a687fed476ba",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "916be3bf-16f8-4cd1-8ca0-690b1bc2e9e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b11b54ec-d88a-4c11-ad98-b3b3e326cc1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65eac267-6ac0-41ef-8d59-fde6b20f96d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "508dd674-637a-4d44-9539-e70572f26a78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b617cd3b-ab31-4075-9974-e20204c89ae2",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96208634-b792-4554-b3ee-42f1ef2642d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bafcb3f-7ce3-4c20-bd00-8f92b20184d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "113fb5ae-39d5-40e3-8f3e-9b1693135148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "873797a8-c0f5-4fac-9c72-68c324db4b55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b479136-d24f-490e-839b-b1b75c064d68",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d6cd91-e0b2-48b7-968c-2b5650005e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb803a9c-aaac-4200-ad8a-26b34b875377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c82f19a-05f2-4881-b14c-33dea1396502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c27a2a09-f009-4d6f-b017-a63472c7d393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9722bbd-7c1a-4881-bafb-f00c61c75290",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f3ff3ec-b3ac-49cf-81fc-935dbb485082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cb599d2-ce76-4e03-956a-7246e7ef997d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca6834cf-6b07-4fc7-816f-f2ccc4b582fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "458c73a0-90e3-4350-b8e0-9556874abbf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c99cf0bc-aae7-46f5-af4f-178edb66e601",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18944ffc-f438-47c3-9a81-fa82552eabbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32979563-3630-42f4-9674-5ae8e5304f1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80777c00-a85c-4dd4-92a4-02b8d993ff2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "88f1df07-0bb1-4be7-93a6-cb95ab10b231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55c49fa8-a84a-4cca-9f98-5b07c7833fd6",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c98c2ec-e4f4-47cb-b3b2-1d3dd4597e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c79e8a3-f295-4c94-99b2-07049b5d68e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9be1588-1bc0-4015-af93-32c8d114ee1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c101a49-66d0-462b-9054-20649d71adaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b4d588b-bc81-42e7-9862-a9289c1551f8",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d1ef74-b48f-492e-9f54-95e82a22e793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c854b1f-5a56-48ce-a598-0a122c831485"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93086888-e021-42f2-8b79-71c7d344b5be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cae101a6-708b-4e43-9473-0c4565a9f35e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db9bee12-b5b4-4106-949a-532d00cad686",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "633a0811-8fc7-4fcd-9de1-29b1e82a7cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8c4aace-083c-4915-8c97-531443206e24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5365ea79-c517-4331-8594-4784abf05f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fa2fff2-ec88-4d47-9c7e-91fa11595fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f275859-83a0-4517-8616-18ae65e5fe03",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a37b64fd-5158-486e-a182-1134d599ec37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fad68d04-fa86-41ff-bcf2-49f976f44d3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b501ce2f-ab21-476e-aad9-9c224e76f79b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3285baad-147b-4e73-ad00-58e5c724539f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5c01f90-b01a-4d89-add8-b6c4ee0d2936",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57769e12-5b86-4485-8bb8-5766db8362b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "806880fd-cd4c-459f-ad08-032397332639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e385d81d-1ee8-4aca-8b66-33d9729d3e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "547b9eb0-7af6-4118-a950-599c0dff4ba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d8a986b-4115-4928-b66c-d5fa47d40f8b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66b2c2b3-4d2d-424b-bdfc-c91dba77249a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e52ff0c2-3901-4aec-8af0-1a0cf71712d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13e1a309-efc4-4db3-ad25-d965fcc919dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "3ae538a0-a4bd-4a4a-b11e-eed15e328dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81eb708d-0d3e-4fc3-bcd8-765575d51a52",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec5c733-05a7-4d24-ab5a-47e15d7d2583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d0de5be4-e188-4e78-9ddb-79df9606ae8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebec6878-c14a-4228-b68e-84beb48727ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "53e4cc2e-ef67-41b3-a740-e91a585a3c2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3029e77e-7d66-4215-aacb-396de8cd8ef1",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0170eef4-8ca7-45de-b787-2914072ebc4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b179c1a-2c45-4794-8b77-4d978117e32e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0227cc07-55cc-4c92-a20d-59f60ca0d436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aeb82fa6-b65d-49dc-b370-7322952860fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b8ba0df-7fc9-4c65-8248-d037bc6bfdd8",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ffa621-2dd7-4c16-a129-4dd9d92580c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8dba32b-36d0-42aa-b3b3-c7db61c82757"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d17d3e6-804f-4040-b4c6-5e799c9ff175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c39316a-0ae2-46b6-8df3-59532c80eef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6b8faeb-89fb-4ae6-9870-e1e9e53f3700",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b1dafc-f5cc-4fcb-b9b8-164cc9c65280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94b5f8f0-a92a-41aa-af22-bd3e6b2f81b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e1f8c1-adf9-4295-a7e8-cd9eb493e143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cfb3fc75-2770-48ef-a54e-6e2bc556e040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91922e88-bc0d-47b2-ad16-9c4f6d9e7448",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e19b278-f746-4e22-8f8c-480c4742d8bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ee2bb89-9f97-4cde-89ca-b31f8bb29b6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34b65713-d00a-46a8-8f66-8acfee1d85ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c51f386f-1a7e-4782-9aaf-1a1dbf5475e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "debd295a-49ea-47ce-8962-2cbbbefb834d",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b74e59f4-17e3-4e88-ac1f-910bc126566f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3b88cb5-5781-4e4f-8ef1-8ac56d6582c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "643f368d-e044-42a9-8701-c7255b5dd104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d653cff2-3942-4fab-b283-91e0f15ef065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad17545-3810-47d9-9d08-19f854478da0",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "802d62d0-b364-4b74-9d35-0ec23c177fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48394261-c8ab-4923-bc8f-9d4e64b13e4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68977f6e-83de-4917-b70d-1119247aa001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "84882e09-a1a6-45d2-98f8-7cb13ab87279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a725544-bbc8-4375-a962-0b7f3eea3231",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0d153ca-8996-4d9f-9008-23db03caa9fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d38b1194-7363-423b-9824-225fadfa21a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18f9b42f-3802-4e59-97ba-857f0026417c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4bdb1793-789d-40a8-a65f-96e3ce916302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7efc4694-9459-4145-bb5d-803b39a4f21e",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a42fe9-dd62-4a8e-9ab7-201e30a0091f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82351388-f4de-42ff-b20b-02367cbbf607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d84b3ca0-f38f-48d8-8377-2b3d92b5bfde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad6e3780-d10b-47cd-8cfb-f087b9f81336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f29a6f60-d761-4b7e-9de3-ebffbcf69c40",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73fe5fa6-9c64-4243-944d-846417d167dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b178e251-2a49-435b-afaf-98c1a1c5d9db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5666ebe-41a7-4aa3-a68d-59b591b9e42a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8760e6f-919a-4f31-bbe8-fd670383504f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba42d43-68fe-480a-91de-d76968b468c2",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c1fb15-1257-4df6-8785-dd9fa6b254df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c370d43-70e7-489e-8871-37856243f5e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8775d4a-aaf9-461b-bbe2-2fd680a90a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "38e52592-7670-4306-94e2-8c1ee0f8f10f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a331d634-7474-4b10-9a09-350be6bb180b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2550b2a1-d882-4145-8236-2efd8fc5ee73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "912ae1a7-e2c6-4be7-8afd-b4d2419720d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5077ecd-06f5-4e05-b79a-48f3c08a669e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "21faedaa-fd55-49d5-869c-7f493fa2d13b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c5b5991-7a1e-450a-a890-85a9c1859b14",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be29a360-70ae-498b-9358-dddf880444c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43cd5e0b-8574-46fa-9936-4feef40a82f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f0c7beb-eecd-4e98-a83a-f4948e1f4574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "147b61ca-25fe-4491-ab26-da3b3ee9f9a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4fa6b84-5ebc-4a32-b93b-e12609f39c0a",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c910a4a3-0db1-4829-aca5-82cf3a76f1b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53fdcd2e-8c9e-4cc5-8355-d3ef5986cf4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32b5126a-039b-4ce0-b229-a9e5d4650259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "20496151-803f-4f33-95b8-8a8f74833f80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d36671-632c-426e-9890-4547314eb5c1",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf40c3d-9737-4b23-90bb-f8e9b99eb55a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "232964ef-1b4d-45f2-bab8-22ef5a7c0b6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee04b45f-b39d-4b3a-9d4a-80c1d5174a4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "403c18b0-f0b5-410c-a6c8-cb6e63db9246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "968f5c45-5768-484e-b116-db27365ab8e7",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bbd9ee1-5cf1-41e5-9dba-5a2a362c4d75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e910f7b1-f53b-4be4-9302-fc5166ff59fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac5cb3ce-78cc-43de-9f9c-0d412b6285e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed941262-85f2-4baf-b913-97c196da83c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa94b7d3-de1a-45b3-bd30-a2edda8d57a4",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbcfcb7b-d354-4c10-88ec-baeae6604824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a86d54e9-20be-4d33-971f-29184b51e833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ada17cba-e660-4b69-9853-eaca52982157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b93211af-c526-4c39-ae79-8795b402f98a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1567ddf-9d3c-4a8b-94cb-7a420ba4a8f7",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f03f2a7a-68a4-42cd-b61d-beafd185f68f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e53e9e7-a42e-4ac0-a014-de00e6434186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d92f1f7f-d414-4b1e-a409-f2bf2a047501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "48685f38-0544-49ce-8d67-2f79b164cfed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87137b30-c731-408a-b0ae-cb185e9f9f35",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b2fb46e-ae7f-48e5-9c0c-ec48d87abaf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17a22e18-a776-418f-b35e-9a7d318d1d3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b492ed1f-3c14-4239-b504-bf11e8b1575b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "78d57a8e-e283-4406-8377-3d013185ee6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bfb1f61-8de2-4988-a125-12e1aec775c6",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9721c4a1-8de7-4cb3-b89c-5f2afbe1126f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60cd0c7c-08bd-4169-a251-0b41c468ff5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19707331-38f3-4e8f-bbfc-8dbfa7e1cadc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "df4edb7a-ab95-4b8d-8e26-733166f0d6ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9045a822-8995-4f20-ba8e-1bae6e12fcfe",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89163540-6d66-4e11-a5d1-5b41a4fc424b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10029fef-0e81-4f8b-9179-e49b25068b07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a8ecbf-cc35-4e31-abdc-123e90a9b239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "9cdae7d6-081e-44f6-9711-ce252e84cd70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94d7b46a-3771-4fbf-9d58-59927911315b",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3363610d-e15b-4cf5-ac0e-34c295084275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d60956b-d1a2-4fb4-80b8-dc491a9f775d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d76bffd-c95f-4496-afd9-d992510869b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b15c664-f800-4446-a1bb-2ef092aeade4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b869418-0812-42c7-9682-2b5391927da9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a45eba-4ea9-4768-a728-b1e9e695e541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45d266d6-0ac6-4da8-b28f-32d12b8a3421"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e9316ab-20f3-420f-a4b6-2a69d0742f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "37fa0964-c143-4c17-abb1-7eaa472c1fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93b5e0f4-1771-4588-9d51-2d47a442bfe4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c09e038c-f994-4a56-8154-9468ef216632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74af8a35-ba83-4fcf-a4b9-ea1c8f88057d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec4a146a-ea60-4566-9996-60a63b02acb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7907581b-afff-4c22-8b93-0d9123b1043a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8e5a9cf-72bb-4373-add4-d36ceb4035cf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "805d0b19-545b-4894-af58-6fb20c07183f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4f3477f-bb39-4d07-a489-da12151310e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "879e96c4-c378-4573-8f5c-366e7d1e9251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0e60d08-4d0d-454a-bbc4-0a9c711fd667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad370f25-14bb-45c3-a3f9-3c403f633d76",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "997f88f9-1c38-49b2-8971-cf7fa557d618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55e67ce8-4868-4bfb-9c5a-3f5755a19a89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2953353d-735f-4650-8e88-70a0ed8f5927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "90c0c953-1394-4cc4-ad3e-978fb3457a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff4d3d8-302f-46d2-912c-f5d99bb50a73",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ae74e7-8ce3-4c8e-9ead-93d8eda27961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18994a3c-faaf-46c8-8614-581eb05e3985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8eba316-a63e-4124-9261-ba01c14bbb7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bae0616-4baf-4b30-a87e-8596a141003d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0625330-b5fc-4b16-bff0-3db47e40c3e1",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd01e26a-b12a-4f02-994a-6576f10b377b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1b25020-7b16-4a78-9086-dbeffcd8e3f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d0a02c5-630e-4540-8fc8-aa54aeb2bf5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1447510-89d6-439b-b454-88e9826a2a0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "403c04ce-9447-4ef8-bce3-9f94124468fc",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7270cc6a-6444-4e1c-b513-418c4acd2f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5222b6bd-54f7-4ae7-ac71-ff42495121dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb21bca-df4a-4978-a468-a7609b00b8b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "20e67ce6-d67d-4750-ade6-2a0fe50cd6ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcd7428a-1d86-48c8-b975-1e44142a2d9f",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92bc5415-b4ee-4031-bfce-fae45945afee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab4d9b94-55c0-48ce-805e-1b70e5ab5e61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd398d7-7d99-4eef-9c21-cd6b0d248809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "de98df16-35ab-47f2-9979-0c5bb0147918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07565c9d-2311-42be-8e82-5f1c3ba13832",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09610305-db51-49f2-ace2-387a1cae15da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d073bd0-7e8f-4d77-a2d6-a9290b005f47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c35e40b-65f0-4f5d-858d-aff58945cf7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c7f219c-1cc4-4fb8-9072-32456be2205e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "071dd7f8-05ca-4d52-9343-425b4154fbd4",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0738a60e-623c-4264-8f03-f9bb4748d3f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88a0d1b3-6076-49b4-b51c-0e3ab7290e3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b5bf895-5774-4674-8fba-178edac28a83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5efe6a7a-e55d-4cef-8945-440790ab2443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57bccd2f-8f3d-4054-a0d7-85483c88685b",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f5bdc0a-91a8-4af3-9495-9e4fb38b41ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fb5cb96-e621-4750-a736-fd0277461508"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da43e905-7835-4cef-ace6-1fbf21a45d62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "231ce582-26b8-4009-a0b6-6e6de56722e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d1a3ae-6f47-4d5b-818d-dec25881fc88",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34841875-bc6c-421d-bc88-c56b0957bf87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b3cdb57-e133-4a75-badb-11b107d1e750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca2b64dc-3325-4b22-8533-a5c123eb547a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5522d874-4462-49f6-85eb-173de94101f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21fb1942-56d9-4ef4-afde-e701088082b5",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb444aea-2b71-470e-bd95-4f70179ae063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "682d3a87-9532-4658-b96d-9592cfc35ba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ec5289b-47f4-49ce-b25b-26431602522c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7051c66-e05d-428d-980d-8712b5b7c8fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "598eb33a-65a2-4ea6-b301-f494b2721389",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6e279d6-623a-4e55-b876-0dc9e7f9153a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2bd1aec-c500-41e3-9142-bdae2b774142"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d03a588-f9eb-453e-8d5c-cae36a1294e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7be53e9-f82f-4b99-81d7-ad6a5028b7da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87697748-3aa1-4ec7-a226-8d39e3b4ac0f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d8cd20d-4200-4865-801c-44dcde7f4242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9591e0cc-e713-4625-b852-551e4689f2ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33fdf36-0852-4475-90e5-366c013d348e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8833608-780f-4e69-a72b-52abf48f5b5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "186cfe13-d9e9-4865-8643-11bd361bc8f1",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33e288de-9510-48ef-ac63-e45eaa03c810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "776d9ddf-1b15-45cb-ad37-77bad626ca0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f46e329b-6cee-4a4a-b9b1-de64833ffbe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "64aabd09-818d-4c31-9448-4ee67b678c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ec2e8a8-4c44-43b4-bc52-0ba58fcfb399",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd8c967e-ad21-4c5b-8ed2-7868801a2b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "844a1ae5-f99f-4238-869f-9e38ba123f6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "043dfe73-e6ff-4086-97c4-a7f01fde98d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e47c7fae-6760-4e60-b4ca-bbd4735370c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "722f3bf5-8f14-4fd1-be36-5ddd33d639a2",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ffeadef-5940-42eb-b716-d1a46164a784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7869a37e-04f8-4c99-b2e9-cc9d4b8e3021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d53f439-2226-4f17-8957-1ac5dd0495d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bac0a39-9581-468a-af39-4ba9596cbe2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66afe639-d95d-401d-b840-f18d81b6ba2e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7528fe6e-e466-4b83-846b-604505b57c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65d3836e-a124-430a-8232-00dee73e7b73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f0a3160-8819-4018-a090-d31a2af7468f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "70146243-4ca8-41f7-9f89-7d45edac0507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ca2d854-1f3f-4e1b-9893-caead74c7616",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed91504-ebd7-4d9d-b9ae-fd323cef02f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6001bcf6-a56c-45c8-9ff4-10dc515c4845"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c834e250-a8fc-480e-92fe-e9bcb4e8c6cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b7d8f34-80dd-4a20-b7af-4664316399e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82379e8f-73a9-49bd-9bb0-c899d7a6daa5",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c1e6c9-9166-4564-9c0b-4fa1d73f7052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3033db0c-264f-4c2a-9f8f-d90e3d5825c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02ff9d3b-c758-43c8-b7a2-175c4e702895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4436b82a-d172-4b81-a330-cad4aa163818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc4ddac-34de-440a-86f2-c45097b25e11",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdd16829-12a9-4c34-b270-62350e7d3fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b986e258-80e8-415a-abec-f8bc97d20748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df23f62b-835e-4496-a825-a4d6fc8f2d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "847d6059-098d-42ed-9a3c-7718f60a9a54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec1b1b2-086b-4bf5-aa5f-a5033471f9aa",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "389d7714-b6fd-4b14-8d2e-ea5c9f69a764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95b967eb-941b-40d5-8ebb-dcc1a77acc9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c24e6697-e598-4938-a4ce-2a27b3b54cd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ce3ff3eb-c30c-41ca-a359-2dcc96d7461f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94bf7f48-a9ff-4eeb-872e-9985c752947c",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0133f954-e13e-4b26-b11a-f1188e5beb98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7d2d9de-c845-44c5-9cba-0b3a76bb8d43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7dd6bb1-dfa6-45f9-a393-d29915fd0799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bab58292-e66c-4b36-94ed-1e60b103c6c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d627f934-d79d-4bac-8e3c-55ab7f54935b",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2827acb6-74fe-4500-b746-56a34d7f20a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3545fbcf-881c-4351-819d-95d95845b5fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "008a170b-ac24-477e-878e-91d72c2ef818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "02df00a0-0083-4189-986d-94ca3c62bb78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf288b6e-e466-445d-8613-e8609fc3f9c6",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dae4bd62-bbb8-4a6b-902c-239e07d4fbf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe18bf73-ec57-41d6-9dfe-64ae9b1cd5b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b4eef57-af43-4fe1-8dab-04126e2b4eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ae072dc-a89a-4a97-98ca-72e832963839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf77576d-c303-4119-8cb3-261f29e2b76c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f75874f0-bc84-4e9e-81dd-ab61ca739abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18dfc9fa-3375-4b5a-9be5-433a6bb30275"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f10166-3ede-41ad-8ea3-e5e11bc1cb14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "821e94b5-ff3e-4887-a186-17e6c72748bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec083438-f21c-43f3-974b-dabfdb100e76",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7105f198-e848-45be-9e0b-a1427bf3a554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80fed854-80e3-41c7-8bdc-6cb0bf60b774"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a939628-1286-4e9f-91a0-85dc2a5c9aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a39930d0-ff10-41fc-b9f5-209762c01b8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f43272b-b7fe-4c4e-9ced-80cfecbbdac7",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a8e835c-59e7-419b-9121-5cb7122592e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67437f65-20db-43dd-83d6-37fe1ad1d3aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9391703c-62e2-4ee1-82fc-8cd9ce396917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e225d935-b375-4dc1-863c-52f5dd8fd6fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc2b01d-4e5a-4f9a-87a9-6139354c5528",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3087fb1e-d2a5-43da-981e-a1595da1d8ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e6545bf-fbf4-4f11-bf7a-29450cfd3877"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf843cc1-36a8-4ed4-818c-32e40de91b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3375936-acca-4991-b113-c531e3db738a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e4646f8-3952-4d20-a295-6a1fb48c5c33",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab4a2432-8fc2-4e8d-baed-08354931fead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6549c98-c3f7-43a7-89cc-bd268c8e80fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3a7ffdd-44da-4785-9742-b8484048453d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "929aace5-4609-492a-8c3d-8fcaec657be0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "395fed1f-7eae-4842-8646-7b23f45bb39f",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b83c6a90-01ce-4320-ae50-f6051a609140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03c0824b-a0a4-4ead-8c44-6fc6568d2a91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8669ae7-c380-4817-ac9b-ff89281289f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8bf349f5-e019-4829-8321-4b23ba79a164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1be7f24a-a6e0-49e9-a7b6-3c76691e1536",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d525f43-8cfc-4504-94da-12c9bd9db56a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6787b2d0-65dc-4a00-8e2c-39bf8c8eba61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68e564d0-a20b-4105-bd6e-0869a09ba10c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "aaa2356e-d30d-4883-a3c8-f1258492ad6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c83fb1e-6a7f-48bc-b8bd-a7cc5f0f8a44",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddb3e664-19dd-4e46-acb6-735c162a3723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72fbdd4a-cc36-4466-a78f-40c4b52dc2ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab161fb0-b1f4-4e1a-a58c-816c1fbb9430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "615912df-13d3-4c7a-82cc-985973a81741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5247924f-ec4b-493c-ae0f-e4417084ccee",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa541afd-e0fe-450f-80e6-8ed52df6b1da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ed3b68c6-a979-417d-8c4d-8121e195e3e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91df6e78-e75b-4a40-90ec-e6f6ce3e58d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b76f0189-81db-4945-b08e-478d8e0c555b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4d98f4d4-e959-40cb-ae7e-24b2cf317155",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "de7f1b5b-d608-4f85-97b2-36d75397a694",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78db3c2e-2a1e-4ee2-9a59-9162ae5c02dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "554b8692-bbbc-4793-8fcb-4cf3d83e13a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e817b2e-935e-4d7d-a2f0-088b73550d95",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "268435a5-edb9-40db-a45e-63a353e51de4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8edc7bed-9b84-4c4c-9ff8-25ca1116eaa0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "206e63d5-e481-4133-ada8-0d721a8c52b2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c5d5994d-f47f-46c7-8410-d0e129a1ee00",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "53fbc951-80a1-4a94-8dae-92135d4cd9a9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "566fb1e5-fead-444c-b1ef-afd7d7bb0357",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c72ee99c-cec6-491d-b66b-0a596680076c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "dc6e303d-3471-4372-987e-e28096aaf510",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9916af07-eeac-4aab-ba9a-bd5a7555e8d0"
                }
              }
            ]
          },
          {
            "id": "f93413f8-e676-49ce-8034-45e7d97249d2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6458865c-ef93-4c4f-b4ee-95f82a3c89d5",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "f8951234-4936-4303-bbfa-426b21f6d4e2",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b91f51d-ca13-488b-b5f7-dc95b46eb293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "3ac8c4c1-c57b-4e83-b4be-c539227e92a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c8478f2-3b1c-40af-8d8d-b2c10bc1fd3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3352c014-e3e2-4c30-a2a0-4d50dee64edb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "45718c0a-feb9-4e93-a432-7b8aeb28c15e",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "90f17bff-82a1-49e1-a6da-da13990d13d4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1e0868e7-20cf-4f53-842e-399356c3758f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dbd4eb82-aadb-4330-8e55-b9c05d8245b2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c58ee2c8-fc8e-4964-95e1-6ee14a053eb1"
                    }
                  }
                ]
              },
              {
                "id": "8e83f46c-76fe-4a8c-8edc-5d4868404671",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a9e7eaa6-8614-42e3-bd3f-b1b7a682e309",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aa8a9284-5130-408f-9f43-cbd75187771d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7e2e86bf-1549-4676-82c6-b20fc21f91ea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cf93a15e-dc55-4907-a01e-196447623ec5"
                    }
                  }
                ]
              },
              {
                "id": "1c20a992-6254-4e12-9dc5-5250238a8187",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d9c7cb2a-1cab-46b7-849e-d9474b284c62",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8d6acea0-cb88-475d-b025-76059da4305d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8144dc55-182d-4cfb-8060-112338c1da1f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5b59f458-4c48-4375-9bdc-be569cf43ec1"
                    }
                  }
                ]
              },
              {
                "id": "6b7f097d-39a4-459b-a2ac-a3c66c62e106",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9603a1a9-5ce6-4fc4-9075-0b0376c3922b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "03755f10-c1e2-49c3-8dff-585ee436334b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f870554-d12a-4354-af27-d817917b53b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "7aff7629-9d96-491a-9c9a-966e271b1a5d"
                    }
                  }
                ]
              },
              {
                "id": "33824b6a-95f6-40b0-816f-c597e150d5db",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc10ecb5-5f70-47d0-8574-1c101cd74c90",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f6c4a37e-3fc6-4653-aeca-b6a6fdc765f9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84d6fa1a-1b54-481b-bd4e-06284835b01d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "3d582884-6cf3-45b6-ad32-40089a5b052f"
                    }
                  }
                ]
              },
              {
                "id": "b3326726-1cf0-461e-a236-734cad72e5b8",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f91f12e8-4802-41fe-adcf-d2ce4f188153",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "95047138-a604-4980-ac9c-77da6dcc8292"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "957f2ddf-b716-4989-b860-8be240507985",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2f27b7e4-424e-4c38-8435-4cc8ff93e813"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4999c28b-5c1a-4f71-9260-c0469e6e2e30",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c60a6a72-8459-4b56-8c8c-b10455224a1e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "00b7127e-1770-4f5a-a850-bb00bcc1cea4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e15c7f6b-a3c6-4100-a8e5-b710f58dac66"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1511bde5-e334-492a-a627-a41783d3c418",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "610ee1f3-99fe-4722-8b62-274c3706008c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cf98750c-ed7f-41b1-8e79-85f3bd5465eb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f8f47387-934e-4728-b173-56b491a4fcad"
            }
          }
        ]
      },
      {
        "id": "699214d0-1784-4165-9ef4-49dfa178edf1",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "9222204c-4f3a-411d-8fde-5e6d59db91ec",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0d5ed2f8-9233-4445-bbd2-2ad7ce9f5668",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9a6cfd52-d729-45b0-be7a-62850e446041",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b39f89d-2fa5-4da5-b711-75dc658213c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b4db168-e4c5-444b-abfd-9e4618be819a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e0c0e4a-fbad-4dda-b8d3-a0abc3e79b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e08c1e1-848e-494d-8229-378d5f8a59d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "612051cd-dbd3-4e2a-b7b1-84fa62f0659d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3499a11d-e17f-4184-a218-a86b47a67486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1903ffd5-c510-42c3-a198-1cdb545b99be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f7d2014-b6c2-4642-95ac-698231d5d59f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f949f6c-8ec8-45d7-b6b3-f81b040bc231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "000ebd44-0deb-4808-918d-5abd50b4fac0",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cdd28aa-14c3-41a2-b58e-031a3954a388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79874a70-9f27-4e60-9ec6-9336a9ec1f2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d93f8d-fdf5-4b27-a48f-bcd32b2f7d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8754600-97dd-48ff-bde9-da0ff42b3b78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd4f6fee-a75b-42b3-b26e-b89bd9dcacff",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26a426ad-62ca-41e5-8307-71d60967310c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45848f4a-a077-4359-aaa2-3e1f3ffb6a32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cad576d-83f6-4fda-a525-3134bea7c3e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac531574-2eb5-496b-8192-cd701323a649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20d2a6a0-de9d-4866-9088-98bcefd3d38a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aabfe047-4926-4b7f-aa3e-7b1d3bb27940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "062af7bf-3871-44ae-96d4-c074fc022bc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c7bf0c8-28b3-4e40-a1a0-5c8459fff054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd3d0806-9814-4cd9-aef4-bca3e82eb90e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41d8145c-1dc2-40bf-9d60-ed86f4942004",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd2e2384-e77e-4488-90d2-49b70eb902d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6636959c-7dab-402d-8165-dbd7b683c758"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d44e617-912a-459c-b879-c304a4ee2d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c36bfbeb-8dd7-4620-a8b4-98fa0b09d746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1c47f55-be3c-46a5-bdbc-0edf562f162f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e5ed197-4520-4fd3-a78e-419265e3d2bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "127b24fe-d10f-46d8-8d05-f92b79042de1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca5755b8-2414-4ef7-b91a-6926c3a1c303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e070b84d-ed76-4cd8-bc19-41d661bc1081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17d13e51-fc35-4afa-bf99-36349f52a32e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07aad9b9-e497-4de5-8747-f23143eb2803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac41b62a-a499-4f0c-98f1-4f4b0e2b3cab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1373f815-3ed3-4c16-a981-5c8bf921c6b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b961a009-932c-44e7-bce2-c36535b19437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e242d65-cb2f-4faa-bb2d-96e777b2e45b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f09a11d5-d52f-4d5f-a0a3-898454bc3832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38418f8b-fd8d-4720-af0e-00a92db9f472"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "333b412e-28c9-4126-af86-2c7904b9508c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4810a33-faaf-42ac-bcfd-6ae46183060c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2f2b41c-11e6-4bb4-808e-ba8b4344c7bb",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "116808d3-65b7-465d-aa43-71deab781e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "242d8654-945c-4213-8760-1092e4851c2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f819fa5-d5db-4982-9b38-bd5358c27d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "15aa64b7-674c-4780-aa62-611a79fcd4fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3208b68a-927a-471d-9766-4f21b3fe3cd1",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59dc166f-a21d-476f-86e0-8ffc1cde6409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55da1d8d-74ac-4326-9a20-73e4f35a65a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08d74c1-d232-44ff-9643-5ca643dd0c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "529e1541-aa19-47b7-a5d0-ef4448cc35c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1dbfa46-ad9f-42e9-a4be-ef985476dde7",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d50ecaae-32a1-4079-b4d6-ff83adf7851e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81878573-5ea9-49be-b6f9-1d8517a604f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07c766cd-44e7-47bb-8d73-8b8447f67bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0315de1d-eb9d-4e8a-91fe-049fbe4230d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37200fff-35f6-4445-b995-76c1e65d5f9e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93263689-c35f-40b8-8572-fe644bebdaa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13b90413-87cd-4fba-a2e7-ceda13ad8761"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49152d2d-9fb2-44ad-9227-5d6d325a2cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "360e47ea-ceed-4ff8-afd8-2f26c9a1071d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d3592b0-8160-40b2-b226-c35f4adc9f58",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32695ffa-807d-4b88-8839-d687acbbcfff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c00b8d1c-ecd0-4c33-97f1-d242a7bcbbcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59dc2b0f-7254-4a8a-9c1f-20b8a0f400d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd6ada89-6a3c-4ade-890e-eb61792e268d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2636cc6e-d251-4a07-b226-fa6d3e760e0d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e73179cc-2282-4b0c-aabd-16255cccc5c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b64c32aa-8e77-4479-8dbb-9f9f062263a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7df48cf5-cd31-4986-a0ab-121c797b589a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "dca624b6-05f4-43fb-8866-0810012e1504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8c164b7-e6b2-4cf3-a7d1-b6c6f6e0b3fc",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24f17699-f341-4e4c-beee-d1e007d5b382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5171ee75-72ea-4599-92c1-391e87b9079f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3037b8ed-d5ea-435a-bba9-15fbcdf255aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9855d3f-5a86-4f15-bf79-92b7f4b1e156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc199174-362f-41bf-b2b7-b776196fba6f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bc336b0-3c75-4575-bfdf-acd2313c9128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a659787-bd3e-4b10-8cd5-87bbaf97fa10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cefff322-86f3-4eaa-b8d4-72d82c4f15cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d268e025-2ced-4460-898e-a84146f9e4b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fbe37f8-108b-44a4-bece-4911651e9fd1",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04587de3-273e-47b8-9526-d0d15360ffb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c257330e-5c90-447e-b26f-dba4e2cb5acb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cd53f75-1c9a-4331-b5f0-b43995923c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e48c97c-84cf-4df4-9652-8f2f7a5ec401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e70cede-908f-4caf-be65-a320290a3660",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "797f6768-5d54-4d96-ae8d-74c0e7e06c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "980f4c70-b333-4a98-99ca-987dc16f4a67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af93133-236a-4fb2-8ed7-8d85e97487f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a17418d3-8b23-45e9-91db-3af152142fce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c70ffbe3-872d-4557-8885-70984368250c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c577036-8a7f-4579-8e90-31d8cd0f5519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1646dfc7-427d-499d-b06e-b723f26144c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "886f3ad9-bbae-4f42-b245-354c7e3e9308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d02b0c7-2e59-4da6-8f82-5f125f1ca428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e56dab1-22cd-4974-aedc-90d30f66eb41",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24a9b151-68f9-47af-8e29-c8165d8e80b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d2b0ae3-44b3-4345-b537-8dc7ae214720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13b5132b-0159-4fb0-923c-19f2acaed626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd1de68e-a470-4f27-8100-3b992bdaa050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e62d23bb-2487-4551-84c2-791350799370",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66ef701c-b08b-40b9-90fd-62483456aef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "063047bf-ad95-4a6e-9cf1-c4dda36b61ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "015c7ed8-78c9-48f7-a34e-d9a730569d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0f93c4e-1519-438a-a267-a7ea68f4c3ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dff87030-98b3-4336-914f-015bf43620fc",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0df7894-2dba-4f19-9435-431b31621f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "084ea623-cc0d-4e4f-a2a4-8e7aa792a3fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7de06d27-716a-4976-9757-80bd8db38b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0f16945-ff73-4bf5-958c-09c071c2bd84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0d9a86d-d1c7-48e1-b8f8-ab7d8986fd35",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "642eb33f-cbf2-4683-8034-d3139c0b0837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41314597-38e8-4407-b54d-3493eeb7dd8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "878dbdfe-aace-4a9d-b2fb-16a67c5c4f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3ca17c0-f805-48d4-b477-a0856551714b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f348af51-254f-49eb-8226-5999b0055b90",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4971c950-25b9-4e4d-b381-7ab5a9df0ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6086ba01-8768-4d11-b8be-c48c88886f34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f206419-8bb2-46d2-ac79-0882b4ca3950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db8b038f-edd5-4ac0-a165-42ee915949f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cbf512b-9cbd-4219-85f4-7bd6a514bbf4",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d9f4e7-ef3e-4596-83e0-bdc542c71bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66d12309-d0e1-446c-9478-3e3d3bca04f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1403164-357e-4ec4-a177-15b6a9170ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be283b28-84d5-4fd9-8a6e-314e117fae4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea062db2-7c7c-4622-a9d1-cf372a741c47",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bce248b4-3d33-48d7-a60b-eaf61dd9970d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35e3c00d-63ae-4943-b40f-a8a0702a6681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb0feb4-ba9f-4651-9fc4-dda327fcdf63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8498cc9-d7a6-462e-950b-8b70b51f5ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe88ad98-3a76-450b-b31f-5ebd2e0f4989",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0b87d0-b02f-431e-bde1-95dea27631e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "064b7359-1b6c-411f-afdc-72853ad174ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "804731f2-35e4-4d01-a4d7-6dc60d51f470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5eb3f560-fff2-4673-9e59-48bb7234d655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf492eb5-95f9-4425-b008-f66e88901447",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4857011-b2a7-4670-9fed-8ad71afb9691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad811956-327d-4d81-87ee-eb3316ad4b25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d22505d-396b-4653-9516-8a2e41b91918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "043a44f6-f2a8-45e1-adee-6effa9b73d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "870555bb-45a0-4f09-a5f6-e1484ae6ea8b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f5f4462-81c1-4121-a587-a9b28ca26db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30ec163a-68b6-4cd1-a337-6cae68b28497"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b69ec23e-ab6d-4162-90da-28ee4421d2e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a7341a8-d08f-4eb4-8fea-864e19de8225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71701024-102c-4e71-b4ee-d74213fc872f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef245bfa-dae6-4c36-a248-2a7109aafd3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7821fdee-eecb-4092-9f0f-96acdd370833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d8315f1-3fb0-4751-b475-4e118d9f393a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ceb83016-f016-4265-ae42-f9ff14fcb6f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38e36052-cbd7-4fe9-aed9-72632f4e7276",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f3ecef-edb7-406b-b667-fdecc7228c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1f36524-4bc7-4c19-adbf-1de131aa1116"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcdf6a07-4725-4acd-80c4-90d9ccbcd720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c68e562a-8a10-4385-acf3-b693b1642fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b5318c-cfb7-407a-8bcb-d75134e7c436",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c58b2df-2c39-4c50-8ef4-2db1d0e272d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac94a9ed-d4a4-4cce-be03-f3161e57d42d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a7aa70e-e28a-4783-8a95-757df0ad40b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6137cd76-a466-4c7e-bb0b-a3fd1a45270c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef0db823-c74e-4d6c-aed6-7c76980043c3",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9148255a-83b7-4e27-868b-c6e356866e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "965d06c0-aa10-4319-abf1-fa08b4ee94db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc9769e6-d8c2-4cec-954c-04158b4a8dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f475e383-7320-4140-b7f1-a06a45ff39c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69b45f41-b92f-4aa3-948a-e9d7cb5d36b3",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c79cac-4d22-4507-bbec-5be324a9a9a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc1f0235-0618-435e-97df-34d8e5b53811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a059b69-9428-4c1f-9a61-0076fd6ff754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d99b1d3-f04a-4f56-9668-fba1e88ddb49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88df94d5-af0c-43d0-aa31-372971210243",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5d7a3fc-66a3-4d98-8c66-a9621d846543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d52301cf-17b7-4ca4-aec5-c14fc871f265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7057d366-3c02-44a2-8e09-7255f891ab6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b050ddf3-d7cb-4e34-a467-7ff1053e1113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ed79aa3-37fd-415d-a638-8ac6a514a93f",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6251ce4-d54d-4ec9-b855-d67890dbbdeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb3deb91-9234-422a-ad6a-13c0a9da3040"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81a32a4d-3d8d-4640-a391-81e2ba114fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6087760a-906c-468b-8932-f7e2b17990ee"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a0294fe1-b9bc-4ede-a943-ce9e2ea8e4ef",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "99025714-5013-4e33-a9c2-84fb7deb9e25",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8d97555-c410-49a0-bedc-62beb5968797",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7dbec582-7a6b-4a68-b1b9-91957f930c70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4562c6e9-8ac0-4c03-b607-2fc45cc89d5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b65450e2-0d21-4eb1-967e-44bf2a4162f7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd62c45d-8305-4a7e-88c1-4d4c39f1fc2b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e525ea56-72a9-4a30-ab15-31b5a3b1a7c1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "789d8a3e-0070-4147-bb8a-349c125e2257",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6738201d-5603-4c81-8140-1a26641be789"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "321d0b9f-5de7-46e7-9a87-1102ba702f0c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4446b5ac-1501-432d-b418-315e1ede8ee5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "880d3461-6773-42bf-9a93-80c5c1112596",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d0194477-3c74-4a78-8b77-9d7cd110b99a"
            }
          }
        ]
      },
      {
        "id": "ad0e12cb-651d-4d7a-a2de-3dc9aabc92bb",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "2136ac76-4918-4897-b3cd-1bc570f17d16",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d01b78a5-0bcd-4022-867c-39ec6ed2c91f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "aeaab121-09dd-4a35-a5a6-4c8dfaf162dd",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daf40854-f8ff-440a-868a-587ef9f42cbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7f1929b-405d-42cc-aa06-b00957cf6e67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d4f674c-4932-4aef-b58e-f38195bef59a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "637794d5-7b54-4470-837a-91bd6f8b0b83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9ebb2c0-4c1e-4dc4-b6d3-56fefe733d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3bfb0ef-00ca-45b4-8208-54e3f3f2bc23",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfaa0a31-93c9-4ef6-8022-bc138db9439a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf366a13-81de-4080-b33c-503293f2ea06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f7df951-04c7-4aa6-bcaf-7f4114d5fa72",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea2aacb0-7d60-4735-b24c-d203e646707b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6c02c66-bd2c-4b7a-a57f-554dec621cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b0794b2-ef7c-4e2a-b3d1-59042ebe45f2",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99438b31-dd3d-4e38-9a22-d33a2513d2b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "317f6ed1-b23a-477f-afcb-ea8d1f44de68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85deba57-50ca-454c-94a4-8de0401a382c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf52c09-b82b-45be-a985-2dfaa36669a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "127ba998-a3af-45c0-800b-f89ee53b83a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0511cef-d1e8-47b1-939d-1b700eee1026",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89d2825e-9725-4116-b6f9-e76ed034be76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8701b1cc-e647-4a3e-9d8d-1ba1b2695fff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "160cc6c8-bf5a-42ab-80f7-6d80a423b733",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9336a6f-49f7-40c2-af93-88697fe1c8ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f0105c-f5b4-4830-8080-249e78c62e86",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8485b46d-9228-45ab-a1b4-2076a77284ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db91dd1c-72a9-453c-92d5-c82c520b1641"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51060285-3619-4c5d-8199-f22cccfc297b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50a094a4-2e24-4b5b-b410-f3adb40fedd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81908aab-2b07-483b-bf52-6cbad9e4191e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e5560ea-8372-45c0-9592-367f795d263d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95558b3f-d6a6-4a28-a7db-905359683e3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10212437-c7ed-4ee3-9aa8-3f177e79923e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87289aa8-e8c3-4584-a327-e64f42c7570e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca41819f-f840-4da5-bd36-2a33986842ea",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8429623-50a3-4fb6-a912-21f425d617a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0af6384-ae0b-4dee-9e94-32235243a3cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b150be41-1c2d-4f33-bc87-9d65f067b44e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a8117f3-201a-4b08-8757-68226b06950f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "295906a8-583b-4078-92cc-999df1288bd3",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00e5c6bc-b7ae-49f8-8dae-7231583124d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4153954-a2b4-4f55-96d2-cc4dd661f270"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4571d6e-f2b6-4182-a1ba-865cfea11ae7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3c75b1a-70d0-45ef-90ff-95a0816e18eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89aed915-9488-4352-9d87-e3c58fb195ce",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c24c5ec4-93c2-46d9-94ed-89a622419a8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60dd654c-906f-4e6a-bace-6f1bc96acbdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71e895b2-2009-4979-9b4c-ee4d90ae2859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a36abc6c-ea83-4ef8-9d90-a99431c3e4f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b5f3dba-120e-40ae-86b7-e1eb83c44e2a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8424ba1-6baa-4f82-bc7b-5017026079ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "925fabf3-4c4a-4f7d-9859-9b442b7cb058"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12a3d8ef-255a-47e1-b791-d8a7cc1b60cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caa11c66-25b3-47ce-b543-93a2462fd013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29311c7a-33e3-4984-bc11-c280bf039f01",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f34c55f5-5392-4d83-bb12-47ae442b2720",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7e28822-bee3-49a0-956d-e576411b8ef7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc78f8c-adf2-4ec8-a551-ab8fed7778f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe399774-ec76-4f8f-962d-752335fa9083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3215107-ef02-41eb-97a0-657c05e8e3a8",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9157814-c947-4230-af3f-f65274a377da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b7f2d13-1e26-4e1e-84e4-868f0b9eb4b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "421a2340-eb9c-4866-8618-4a3799ae5743",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7be5aef2-be07-4177-a60f-6c91b4506d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e37c564-346e-460b-8f7e-159c71b4adcf",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb2607f-ba25-4434-8df3-0e81b6f27b81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "caf081d0-d5e5-41a2-b741-f098daae2e15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecd3edf2-2280-4db9-a849-ffd2e9818608",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51d0dd36-1b9f-4368-a868-0c69c94e329b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f5d7c6c-275f-443d-8309-16421c0889f0",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6f5af8f-3140-4cfc-92be-0bd8cc5dd38c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2928698e-c46e-45af-a8b4-3d55e2c491b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcb1b435-dc60-46e7-acca-0a539da29e11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df7144c7-05e2-49c3-8f2e-50f0872d4b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d83078eb-29fd-4d97-8e30-c89a07a7d6ee",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd1c64b0-7853-420a-9695-36498103096e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b0f5ecc-45ff-423c-a7cb-a2caf5ad3b23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ea56320-42d7-4ca2-80fd-0daf74e2ffcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce1203e9-e1ee-4d49-a71b-be366f87f341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8928bd9d-4f2a-4ed5-88dd-2556a7af9058",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a06795c-2dbd-4c15-a0a9-4c082662785a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8b5cc37-df29-4f50-8e19-a8baf3957522"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d023407-87f3-47f6-a304-ead6d3e7ab71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dfb4e65-a269-4288-ad67-67d1f17a304b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82456c09-e513-4e20-bfa8-7c79b1c6c734",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6000f084-5342-417b-80f1-0214a078f5f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1a9c1c6-eda1-4a01-a1c9-3c5854d1ba53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "780b9e83-9df8-44d3-9bc5-6c4c746f5079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1141cef9-7550-41a8-94a7-452ece915a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec255bc6-97a1-4d48-a81d-2cc48cc0bfe8",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "587ba745-7b21-491d-b2a8-a05672be761f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d69a9412-5037-41f4-9b05-e701b4091aae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75cbc122-8732-470c-ad6d-a11f00199cf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e84e220e-9dda-4e01-8e79-5232d6a75514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11ea48b8-cbe9-4dca-9c29-6776509a6571",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4ea3e7b-3a24-4018-95a1-9784e53d91d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64e4a5b7-602a-422a-8db9-24df724d4696"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22329f60-6143-441d-af45-cfaf20cbf851",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a140af41-f9d0-4eab-9636-36167f2fc191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f018d79-3100-485c-b412-addd29b1d9be",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaff0f1a-c20a-492c-8b05-f2b1aeefe2e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d9a68f1-8cc6-443b-bae9-de2a4e38709c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deabd6d2-45c6-4f1d-9ae3-c258cfc2a56b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28097e81-1b9b-4b90-a633-309d0113a964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76fea64c-2f04-4076-b0ee-2009f9cb84ad",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b3247e-d670-495c-9908-3a3ccd2c18cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7541f8a-b486-4240-8023-568ecc538f06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a291a6-8e9c-4a83-bca8-530b355fd1d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac321bd8-7010-4f5c-a8ef-5fbf61d1dabb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "218fef5f-050d-4d92-a899-e0f421de6247",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "301abc3a-b8c7-4019-840a-08d7b9e12948",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f803ba11-14cd-4c4f-8724-5fd831fbcd09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c192d192-3725-49ee-9b70-218ab6be58e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a891fbb-1ab0-4383-82f4-8fa17a115969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "866fcf8c-7967-4e0c-9912-3616fe0b96be",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "928b64e4-54ae-4e69-86e2-e9a5ffd95189",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc487aa5-e086-47ef-8507-efdcb891164b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11a362c9-2708-4ef1-ab10-ff6579c5218b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00b12f9a-042e-462e-9844-23bc809aba48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc262f7-c595-47b5-98fa-786171a4b6b1",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b813006-05ba-43e1-9d45-bbd63b4ce914",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc86852f-a636-4827-8386-c75588ab3220"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43804e55-fcbb-4ada-aca3-c6a016f1c74b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0154926-4292-4cec-b03d-a38db9991142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf30340a-933b-4fd7-b91c-9c8799622f98",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e1e293e-39aa-4e28-87b9-449e6282bd5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14966066-692c-4901-bd6d-762b637c137c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d1566ef-d1cb-4c34-90c5-5e756bd50d06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cae116b-f177-44dc-9034-96d609c0f6f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f1e60b6-0756-4514-adfa-7cf77fb0f4bb",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a57f4330-6c0a-4baa-a295-6be1586470b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23e1de43-d20e-4ed1-ac47-95ba415aaadb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c8e5066-acb0-49d7-b2bb-759f228ac76c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7738205a-109e-409b-9cd0-3e1f72adad59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9109effe-eb4e-4672-89a1-46d01b8fac07",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd18042b-66b8-4617-8b87-136dec1d994b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b13a5294-03e6-4d9d-b843-298c0fa593c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27d8b916-23c8-47dd-9867-e8de1c60feb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "407504d7-69d0-4195-872c-1c0c618bcbdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d2e550-3f56-4d2d-9975-28c53ab3ebf8",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93b51781-ded8-47ec-bbcb-dbea729d2b30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2cf1c61-4051-41c6-87e3-2c72e38b1aad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8f307ed-c854-4a81-8ed5-b7ae60d248fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c3d26f5-8abe-4b2a-9b66-98b673f51036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b901209c-0370-4b78-94d5-f17120b95fa7",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "325279ec-fe09-409e-ad40-77764af8cec4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "506ed57d-a907-45ee-856d-653c76ce9546"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e34f856-9bda-449d-91ed-236a5425e0e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a7eddee-6662-41c3-b80a-3bbf3db69d1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23230af0-89b3-46c4-a1b4-780b00e5a101",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73af97c2-d2c4-4a9b-96b6-dd506d948373",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20d095e7-5f31-410e-8c5f-629a66744340"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c08ff3-b7dd-4c25-9226-6545155d8caf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afb79955-c898-4273-93d1-3288ced8c5b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd575afe-c130-4cf3-ad44-e390104dfcf1",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09689d64-ea64-4a67-8a96-a66a9ad90762",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a13d253-258b-4f01-a5f0-d98bb833d452"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b1ae32c-d3b7-4fe1-aaa2-7230884c1258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3689a62-770a-4794-823c-52173c1d5c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70a3d0dc-eacb-49f1-969d-4b676594ca78",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c0fbc8-b41f-4a28-b3d1-cee1a938d773",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b319ca2-2ef6-4339-b0c5-d6fbae6787d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71e8e21d-218d-456f-9b24-686eaf053b8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fb442d6-985a-4213-88e3-b387b9daf0ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21cfbb83-6bb8-40ad-8372-22bc8e20ad30",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e3cfb18-0682-4c61-adc1-cfeec943e149",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6daa62e-179e-41bb-ad4e-5ce2613ac644"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c56c60e1-5585-466d-bd3c-30fa313753f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ae8af89-00eb-4c89-b0ea-94ab294bfbc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e20b1582-b4e1-4fe0-be61-c46c077770b2",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55d8a9bd-fde7-47e2-a4a6-fc58c53d7d08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95e2e799-0b97-48c5-87bb-fa44d1e26dab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f488acad-91bf-47f8-b33a-cad24a7eb349",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "156832ae-20a1-4c57-9b0c-4a0163a7e0c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e50299f6-ab34-4b35-b32e-7daa06a28b14",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de75c5e-dc00-41c6-b3e6-9430ce45f646",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2a9b2c2-088c-4897-8cde-df7055cc17ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cda3213a-950b-4488-992a-9e4cb0363d13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "834393a0-639b-420b-95b4-b2ccc99daf61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "083641dd-946a-441d-8773-750fb44cd611",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eed601c1-3b5a-4bd3-a513-adccd49c71b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51b076bf-4060-477a-9169-053fc5a305b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f46b1f-8707-4971-b5db-bb8faecfe0c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "329207b0-c23d-45ee-88f7-649d02bf1d05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3984c43-797b-4fb2-99db-a52f283405fd",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5fc52fc-35db-4432-82b4-d1d8c7e0d7fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f98659af-d31f-4b07-810b-01e9f03fbfa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e742e817-fb6d-451d-8377-42144a81f392",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "144f44c6-1953-4e78-a37c-de3ad99c0091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5868c769-ff5d-4516-8940-7353ba51bf50",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ffe808-3fc4-4aa9-afac-237d7d540a7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f52f118-e545-4de3-ad1f-140bcac855c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8dcbdc2-7a3e-4cbe-83b2-3de2d9941e53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7784b8b6-6847-4bda-ae9e-2bfe46685531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bfe6034-37a4-4473-b921-c26b3eb17204",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bd2d629-ab4d-4568-a4e7-19be841dea80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62b5d4c4-35cc-404d-ad8b-cf18a45041e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "571ae7b8-8169-4e69-a1e7-bfa401e83345",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cba86fce-8a45-4cc5-9466-d815e796b84a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0cfe912-11c5-44d8-a111-941857882d12",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08e6e3a4-a0b2-479c-b4a9-823e56e97e93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e47fa20-6fb7-47a6-a333-2e3fc093b1df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd84fdcf-7c0a-4351-804f-f0b7015fe549",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a2859e5-394b-4cae-93d0-b3c02a953a97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56c53d56-352f-4680-9e0c-d37c72c4dc72",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb9e224b-80dc-441c-94d1-d44594dc7e78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0abfe165-8aa2-44d5-998a-23a48195706b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf65669-dcab-4353-8585-60035042a3f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7a0f230-c9a9-453b-9c10-1d0198bf9cd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe3bc537-2819-4933-b68f-8f4ce4c370de",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf537ca6-228b-4ea7-bb0f-25a8fd545d09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a16d9543-7504-4050-ab36-3621551e1064"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3995c04b-5e54-439f-8fe3-276247f94530",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd9a07ff-1299-44b3-a369-a1a927967b81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "513c85ec-ebb0-4f66-ada2-79a5d9ea08be",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a69c7a19-0202-402b-945b-199de16fefc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "954fa701-3335-4c82-9195-f1f5cee121a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a150ec6-144d-4ffb-8ad5-809485e4e80c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a739dc24-b6ed-4a12-866d-c45345f52302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775101b9-4ffc-467a-b43e-dd5f465aced7",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af9b38fc-f53d-468e-a2c5-6ad31c9df935",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2dc7762-ed70-49b4-bcc3-192d49a4dd77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de81797-a5fb-47a0-9c3d-bdbdecfe8f85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c8997ab-1c83-40f3-b488-94a9168a973b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7408ceff-eb11-46aa-96be-d7202a7caacd",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa1ac53a-0f27-42dc-9eeb-d9fa539d6c6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a90d738-d3d3-4d29-92f9-001816e68a05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0768a243-cf50-4294-9ebc-a43772ecc4b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6f3d9a1-18dd-4e06-ad89-bc28bbfe12f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f177c6b-d560-486f-a05a-c2b6ff4ad7d4",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eba503b-ca23-49aa-a9c8-1359238827d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c18515cf-f6fd-4374-a66b-2326ec1b9e55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f48deae0-f10d-46c3-b54a-ba4ea42a3b92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ba65502-8f90-4e43-8e8a-e7f500a2d92b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf6646dd-4783-49b3-b2e4-e04c4a376f40",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3cd64fa-a32d-4e1d-bd30-21790d08ce3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db86e404-a6cc-4349-8fab-55556584b64c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f18df88-4e22-455f-b8ce-9d6a05c02ab3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "703108f2-c353-4a6a-a938-ce327f9a44a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf721cbe-4ad4-446b-bf91-2a9dc16cf484",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe514a8-7fdc-4905-9a94-aa615f5efbc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c55ada0-0df5-4d0b-a475-27ccfa659ce2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a716ab9-eb8d-43e1-b586-156ebf89a1dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd704ef7-0abe-429a-bc32-4999826ba226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9354999c-299b-49c4-8d01-ae1742f76f3a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87fc4261-2aa0-4436-9a8c-e2c0656a87bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dd75df7-a4c2-41a8-9baf-64d1d64c3d4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1efe1fdf-579c-4e55-b4b7-167cb3a65572",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9261f84-d3f5-45e5-b486-44af63060e0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe546d9-6a4f-4f75-b1da-3cf4e60f8ee6",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc59dfa0-8c56-4ede-8e48-2587d40659e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff855726-e4c5-45e6-8270-ebc44694586d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4974acef-f97f-4347-befb-dbcf8fbe4431",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c48b2fe5-1fc9-44df-a35d-17a4b16cfcbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "983e50a2-4a16-47e6-84e5-0cd807c1f92a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85bdb23a-7a77-4cfc-bf56-6b849641b35e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0516656f-a842-4194-9e59-75e36f73d038"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ec26c0-9cc9-440a-a16a-4c68024532df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40fd7d1b-85a1-4797-9d94-5787c45a9374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda1edf3-55ac-4cdc-8b1b-f759d81a176e",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5ce2f3a-fd86-42d8-aef3-39e80b61a85b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62445a44-97d4-4066-a975-1c7152687cfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e3de0e3-b41d-4785-bbae-2ac7cdcf82eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d648f7d0-23d5-4727-aa38-a0890f9c3f71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3895192-4abe-4e68-9031-9599a2f94fba",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0b15e19-62be-44a1-bd37-218e22cc218c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8826756-95e8-4092-ba73-29e55898bd97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "950a3a5d-c799-4831-92f7-3b0b10aafe34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dee5fe7-a94c-4981-9388-49d8c1802147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "132ae6f1-28f8-48fd-b76e-11ddd8d31452",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1009ddc1-6229-46b3-965b-9916702ad8c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6324a9c7-521e-4897-bfa8-42ce1ccf29c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abc53c9e-2ac0-4a89-bcab-c9d2330bb087",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95555bfa-867c-4ab1-b2c7-726c46c53883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acf8010c-9fac-4909-986f-7b3d92df588b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91edd42b-a265-4e0e-a7f7-aaa9a1479ae8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "169b72bf-6298-4beb-a22d-142bb3560feb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "556c261b-0bc9-4474-92b2-28e375814de9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44f04867-f6c8-40bd-a343-d8d7dc3afe2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e566c24c-7003-4347-a905-9e9c6687c938",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd34713-e1a4-49d0-968d-c1183e43bdf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "424374fe-f1bf-45b0-8a53-0ce2075bc69f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f838a45c-6337-4019-9b59-660660316964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4df627f-d1dd-48d0-ab6b-8101fc98a832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8526181-cdbc-423c-97dd-2e9e7d7c701e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e5049e2-4031-485e-ad55-96374be0335c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9a756c9-8fb9-428b-96fd-c67355d2764f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d98aef-a117-4c58-a4e4-9de1ec0bbbaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f163310f-d4db-4299-a978-a8a10de1aa6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "176f6706-c2be-493b-8f16-121fe5554ab7",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df55f9b5-a700-478a-bdba-f2c34dfc300b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11719f9c-9776-4200-a390-7002e54f9bf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "050a572b-1655-4502-b9f2-4e209a538ea8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a7eb6a4-5ee1-4166-9f60-7ef3013ce4fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db5e29bb-a158-4556-8c1f-fc7c5fec0782",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "858a4950-d274-4f58-b5ec-a128aec2ec15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f7ef629-b80c-4039-90f4-3f6d6491c523"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ab66552-deb2-4e6d-9470-861b3c01cb9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ea0ff86-009e-435f-b7e7-71faee8eb5d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22ee0f25-8012-4fd8-8f11-6825f6bd5a28",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f45ce81-48b6-4014-87cd-b827f22582c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf88f678-949b-4d20-95b7-2ae8705e5ede"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f58669a-be14-4f72-9180-d556370d1273",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b1bde98-871e-4358-911e-9836dcdc8ccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe01e570-a26b-4b9e-a09f-e3150db9d494",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0842e66-f14f-4a7e-a118-bc6f8f8c5e87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "081b0f0a-0ab0-4d71-8ef2-0373bd97341e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c54f0f-7bdb-498f-8d94-3c4939346e13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed30449b-37cb-4ee1-ae93-3e774315c412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f712a929-722a-435b-be03-1a57417a72d7",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78640b62-cb11-44e6-a19e-ef8f3eeb6bd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3c870e9-6bdc-49e9-b6a8-d12952505af5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb164b9a-32c7-48dd-ac42-48003f29b4e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fdc17cb-4f07-4756-b740-da82228568b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c98fbf-ac2f-42b4-a45c-055cc680e6e2",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4cacf3a-dc0f-4596-80fb-89810b80d30a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d16aa4a-0ad1-4c2b-9478-d06810c7ab50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff1f85c-e287-4b7f-9625-578049d1dd98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa698cb7-876c-4f7b-9f49-c0460bbeaabf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ca63fec-f520-45c3-92fd-e62c7f6750dc",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47f8f55e-efef-4726-8962-22b71283e977",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec9a153a-5986-4f8b-afe2-0c11143b68af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "249d3dd6-0163-4d9a-884a-15b094a54978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8db1724-b7fd-4400-842a-8b7799a095fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48a63471-2f65-44df-8310-536fa0999dea",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c342768-d23d-4c9f-8c11-d3cb2ccea4ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "593e7e12-a485-4b04-846b-206348d043ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4c6c26-0e38-4290-8271-b75f70cbb197",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30b36bbd-fa71-4ee0-b6d8-b6bed8596d22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9647cfac-3288-4894-ba5a-cbc7c21f5c2e",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb4acd87-3e38-4268-970a-785897980eb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0267eff9-1590-4210-9b29-18ba93aca755"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2585d441-600c-4ef9-9f62-e837f6ca5d18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "185c2d3c-bd5f-4097-b2b6-e36c385db0c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19b0fc39-a6ec-42b3-b1b5-6365ea044a07",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4c90cad-0b5d-4c6b-b705-98426d5f7faf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be7a96da-b6b1-4e45-99b1-15f837ae69a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8faf77a6-0039-46fc-9a0c-be044069e024",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf6d5be5-7d24-4f5f-8d15-568cdc43d331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef20512e-7d75-4584-a6c8-21e3d0667a9e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5d011c8-c544-4429-b5ba-9cb14dc278f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "844cef76-1da7-4509-afa6-b6d83f255bd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab14ed3-bbda-4e4d-a3b7-18e2891356eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce1f311a-81ab-49e2-aad2-ec09f66dd872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8028298e-180f-41f2-aaab-c0486293d75b",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee82cb0-c1ab-4226-af9b-3fe8a6baeaf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ddbf7b5-6f34-4771-9ccb-fd05f38c7373"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab6652b1-2b4b-47e1-a57f-05ade676dbb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87ad8f59-bb87-4f6d-b65f-0ea8ed4d0c71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f63c40-5e00-440b-a60c-79bad538198c",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d25a3a15-7059-431d-acd2-b535a3a97f5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07b28cd1-ed25-40d9-aa63-800f78ac66ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78ce92e3-4d46-46a6-beb2-76d97d8ee5b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3aed03c-45f8-4b1c-876d-279a1d5b1d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fbe4a03-77d4-4b88-931f-6180b9bf8729",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66745abc-3598-4477-8e73-b24764a48c62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa641b9f-5a2e-4c95-8ae8-b9c1006daa99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d79d9e1b-a8fb-4914-96f6-19665939ed35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e595ee65-8a33-4d11-9f3f-d66981d7b1ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bc339f3-308d-4fc8-8599-bdb1063d1a85",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bed3ff49-af9b-4c48-8370-3f4307fc3eea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0e0d500-ff24-4a5a-8779-a37fa2f8930b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc05c36e-1a2c-469d-b8ab-ce2a2e9fb5ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25dd55c8-7539-4a31-8b8a-6de9827c4b5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b251d91-6bd6-450f-b91f-079bad0c16f5",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "915a2b0c-003f-446a-8162-462133e5d3e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fef18f2d-c007-4980-ab58-71834964342e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54806020-4926-4f8a-8787-4beca0eb01c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62b1c2f9-d657-4ed7-ae32-8e6d8d27049b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd5fad5-cbe7-4a96-a989-d3c746412258",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab4060b6-1618-454a-b58a-df4bf4bae060",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20e8b871-a02b-41b8-a157-ded5bab61aa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3814b111-1c48-409d-9e4f-1f6623026dd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6806e128-a136-4615-afc3-ec9e5e603179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86a93334-79ff-44a9-94a0-31d6b2f4c02a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b1f9ae-6f2e-407b-b670-b350fb0723a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c505723d-1cbb-4c16-a01b-0b448b654992"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01097301-819f-4204-8560-929084c13eb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92ac2eac-99d9-4912-b96a-9f7b31f0a034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7926acb6-8beb-46f4-8204-b8c734317c56",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4933ed4-7ed4-4e46-a486-883d977a40f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16cd16fa-302a-49ef-8d9f-73d285d60d11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "417b332e-d86d-4422-a74a-d896e83e8506",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91f65313-d4d5-42ce-bcb8-3172cfde354b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a77bc871-aba7-4ccc-abd2-807e7e80a497",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51410504-32fd-4eec-9578-fa76292efbd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ff59a93-f1c8-4585-80ea-9d9422ecba06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c51edadd-5b68-4979-87e9-008b288c038c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a22fc094-b887-4092-a891-7359512a0d84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f8781e-3bd0-4bd2-8ba3-0a4358e3b3c2",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b42e59a-27bf-4914-b71b-db2185039b62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a55b2650-ceca-41c1-8d06-c0a39b2b2260"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46fdcc4a-1eec-495a-a8cb-67eed1f640b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b159e818-c8bd-45e3-9948-49101918d574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05fec8a8-e40e-4fd5-a325-747b549112d5",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ff36ab-c118-4920-8a72-1cf3163184b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e722be07-835f-48aa-ad56-e134deba2614"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9759ee2-bed7-4167-a23d-e7c676c6fd8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2675ebed-e549-4693-b1f2-69fd4bb02b0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ea4ad33-902a-4cb9-92ed-089bf00df55f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18b054dd-7fdd-4e12-b7c3-06201d789244",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d093c692-ea73-40ba-9f21-331df9fc6c9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67dbfa6f-a79a-468d-9e91-14f8c8fc2c35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86534224-88fa-4f67-b61a-0ae2225a8d7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5de7e42-02a1-4539-8953-79670a123cbe",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16587fe5-aa35-41a0-9756-b594241cb4cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "861e749d-1de5-4753-8bc2-fafad6e6c859"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf6b136-24e3-4abf-aa3f-2fa3f19cb2ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc340e3f-4c03-413c-9395-f071e6a3da68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fc6b22a-2073-45cf-aba9-54aeee393f15",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3defa4e-780c-4853-95a5-a6f871dc2992",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0931b20-ba3c-43f5-9bb5-f7e31ae1306d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "154ed4ee-f92f-4b2f-9528-cb34c698e003",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff5ed6d5-697a-4535-8dc2-ff2598cd900b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5ef3d5f-7500-4273-b4ee-9b2516bd0c03",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae95dd6-ca9e-453b-af2a-d094bc5af110",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e09e66b-1b0a-4558-b59b-ed59c261326f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f9b1a1-3cfb-47a0-af87-f4e229c4d8e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f23eabe-749f-47f5-ac01-2d6030aecfc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8456784f-54ce-4dac-9195-f02c89753b83",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34940100-d094-4741-b55f-d79ed419de62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32a4ba5c-d227-46a7-a81e-6c4fd9d67062"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47dbae76-1eab-414e-9399-3e9052bd0233",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68138b98-d71d-4653-9cd0-26684f35ade2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba37fc23-bdc2-4f3c-8db1-f7092842008f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e80ef36a-e241-4f1d-bc1b-f19da37fdd41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "228dcf29-0d0e-4b71-81c0-782af94a5b8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b91a9d2b-bef6-4ae7-b912-c9095012c2d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f0eb198-f70f-4da5-8280-fc0c8b49ff03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6caf928d-c8e4-4e85-953a-aa920f6f33a6",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bdc4b24-7d4a-4334-9e10-4bff71079b32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03b516c5-0f0d-4cbb-b486-3a69253fbf5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5722bf0c-2585-4980-b081-72f12d0b0fae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcb2a7e3-2b49-43dd-b186-16f0e6646476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "549e1c7d-3a76-4d2f-a1b0-6ec1b844c733",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b55af885-192a-4075-aef8-2a3be29029e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1a6225e-611a-4067-8737-888d1f5d9d28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23796072-6ef3-4c59-bce7-9352aa21306f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19a99734-75e5-4e44-9caf-07c7472b64cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed12927-27d6-4121-b6e1-45fea779604d",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb2d0856-dabe-43a3-966c-286ddf0a7afd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71513d79-56ce-4e54-aa37-d8417c7abc6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07360e87-ca3b-4334-a37f-201e4c058cb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80ce71f0-d806-49eb-89ff-4fb326b65a5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32c1fc08-67df-43a2-af23-57c4918f5e68",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d23ae1ab-37b5-47d3-bef2-acfa42d20e65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d371dd81-d681-4ddf-a918-b35528227b7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8045cc22-95f1-4c02-9c14-d15831d5c95c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6968715b-5472-4280-bdbd-495f1dc55efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75828025-465b-44ed-b67b-63aa5b6a3e47",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eba22d8f-40f3-40d3-940d-36ed54f3d4ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02cd2e12-4706-4e24-930d-533a5e8e56a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6495fb5d-51b3-4257-a3b2-af58d516c749",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d916e016-e424-4d5f-a96c-8f265ac83696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f886ea3c-acde-4031-aeca-ee84277ed5c2",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f65b89d0-1806-43e8-9e09-085ebc2a8c61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30ba6d3b-9e11-4afe-997d-c8226072964b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44fb63b1-5b3d-4d4b-bd47-75c31c949cf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b5df531-8ba9-4749-a5de-7dafe66dfc66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b501db-fa80-4987-9e46-ba5a07eb0896",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "038b56a9-a629-440e-a0ac-4d667eb4ab1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae630df4-7443-46c6-921b-e9b5b00f141f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "224cdb86-9af5-4c8b-a726-efd474a1c095",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16d78228-bc0a-4ed1-8548-9bcbeb48cdc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62481943-603b-4351-8d6e-a45c15e6a859",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b618df47-1393-4b40-b417-8bb31c2cd304",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "724d47d9-13e0-4146-8b4f-a364069f9eca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd94a928-8ab3-4731-bc5c-9f79568bce1e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbe9de71-56fc-4528-ad54-3217ad5ffe64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29dd2e1c-7382-4834-8e39-c336b3e70679",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ee906d-7fb7-403e-851e-44bc67f45e7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb208e61-abfe-4a2e-ab9f-4b8d67367499"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84ba7c8a-dd59-4177-a9ab-8a0bb433e93d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff985c0c-10f7-4f67-ab97-8c38f83d506e"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "50967be1-cf06-4fc8-b1de-b95c5aa86cf4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f822b341-fb2a-49a8-9de4-3d691c9f480c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "27f993b8-d289-4d80-8236-20936b754955",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c18e20bf-ea5c-40a9-abb3-d58c0eaef4c9"
                    }
                  }
                ]
              },
              {
                "id": "5d357d96-f939-4a64-b95f-49885fd80e1b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bac2aca2-ea51-43b5-93a1-3e72881b91fc",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7324aebc-49c0-453e-af28-3087b7991f5c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e40cab65-f2a2-4e74-8be2-f5894c197376"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a9d8dc9-9642-4782-a803-649d357c1ecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7466c581-96d2-4ceb-a277-c1d9ceca0816"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "68914375-15d5-460a-b737-aeb87f601e5f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1828c424-88e7-46af-998d-d109805c757b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fe698090-cb1e-4c33-98d4-eab0886400dc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "72454b5e-8f06-47f0-b2de-5cb5ba729919"
                    }
                  }
                ]
              },
              {
                "id": "97cde923-d7b7-4164-9f53-2961ea49d8de",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "43e744a1-2c90-4683-b8b8-84a38c47a5d0",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1194662-747b-4b60-8776-95c351daf03c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "30dfec7b-e6df-4cbe-9f1b-12baeb0c00b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8ad7dd2-7366-40ad-85a8-543f161d0c80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7875555-cb05-4d8c-8b83-a0dfb5e9a53a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ad26c81a-3e23-4794-94ce-b536f6ad5fe0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "48fea15b-b7b8-47c4-960b-c0cd4fb360df",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6de7f7de-3d51-4efa-ac33-a5693eee5635",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e72b46a7-db1a-4fb4-8588-e291ad38bfb5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6df75df6-1fe8-4e6f-a631-b3fb5fe756df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "04b18320-c25e-4948-b1c3-acdc92e9190b"
                    }
                  }
                ]
              },
              {
                "id": "4fdb5a90-eecd-450b-9416-1ca4e35256fc",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "114c1864-f2a7-4d72-92ba-3ff5eca1a650",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f9498c9a-b49f-4ebb-9139-987456cedd28"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "402c740b-9c66-4066-bdd9-cba2045a1ebb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f759bb0b-e6e8-4d1a-b88f-5ae88a5cbf8e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "479483d2-d345-4470-8301-7d30d2a76437",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "9427896c-8d35-4b7f-ad96-a6011cc75eef"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1817e92b-0e69-4c3b-8c87-d0febba182ec",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "373ea80e-dd92-402e-87c4-67fd1e5c0ce2"
            }
          }
        ]
      },
      {
        "id": "f80e50e3-8a95-4d75-b214-1910efe810e2",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1a766fd6-0c8c-47ad-aba2-3493205e501d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5f16a6e3-cb13-43e2-bf8a-a1caf135164f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1fe175f3-97ca-43df-a1e4-c4e12413db76",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6726c8b-38d5-41e1-9106-91f1458eac00",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "5aae0707-c9a4-4e2e-af26-e15bd5fd964c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0deae301-286f-4d99-a24f-1f5608e578ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d8a488f-23b9-43de-9639-5594fc9a17bc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dafa6abf-5702-4a78-af84-39e7d6a6f635",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2aae56a4-3903-43c4-b211-b527855ad8c1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9631ce80-4266-412a-b786-d241925ce404",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7a49a245-cefd-4792-8b01-37dec17ef278"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "39dc7756-dd7d-4d02-b8e5-ffa2656ea0bf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "8a829f4f-dc58-4fcd-b31d-5b39368f1dd3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1abbf7fc-f19a-4d1b-83c1-2fd355815a15",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a8a4d04f-94c7-4fbd-b4e3-7449020014fc"
            }
          }
        ]
      },
      {
        "id": "2263c9f0-dad1-4b82-8aff-6df82617446c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "6377069c-3e88-4cee-bc5f-c33943460b56",
            "name": "Negative Testing",
            "item": [
              {
                "id": "20044c1e-b0c6-42f5-a30f-d831d568bbbb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "90cb38a7-5608-4c9f-99a9-910a8c4bc218",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1144ad99-c82c-4bae-824e-4498ed1ae7d2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "333356ec-0bb5-4030-9fbf-5747c7154a0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f52d1b5e-ffa1-4784-9598-cee5fcb1a0c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d32b31cb-c907-40eb-a94a-ca75c63202b2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5a3969cd-d4be-4a96-a83a-d454d4c1a962",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c9cac51-65a4-4f07-b08b-3e3169bc8865"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d65f9c6a-8125-4680-81d5-48f9cb27b7e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ecdd3f1e-2266-440f-97e8-c8345bf5dff8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dd0106f8-ada4-406b-a65a-997fca7c2df5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fe9823f0-c23d-4cb2-8144-eb61c1f1fb02"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ba151540-b8b6-4c8f-a7ed-4dcb7a0f9a40",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3286cc3b-8236-4e04-8c55-f5bd99d1f552"
            }
          }
        ]
      },
      {
        "id": "22cccbe1-ffe2-4d36-9678-90040ea36543",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "b374ac5e-7896-4602-9ef4-a3f1eaff678a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "491ec38d-9d50-4486-adb8-7fd5a2cb71f2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1ebeba1b-f87d-4804-9a19-a77eb8a4efe9",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c54a64e-e2f9-40e3-b7da-482a37ec61dc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "58a359b0-11aa-49cf-9e51-5c602c7e8489"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8632e4ef-2646-4246-92d1-94cbf2bd24b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e50503b7-6a2b-4858-ac72-d312125767b7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c11f56b9-bcc5-4a8e-aa9f-de5b22e4e64a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "abbe4740-1e7f-4507-8638-631304971dce"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d8815d3-b6ee-42f7-a246-4e87cbaaff62",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a8a99d72-0357-41cc-a9ef-78f0df8c767f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "997f46c2-4216-4094-8100-c60bc2f18d8d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "57c8c808-2092-45ee-9f67-1f077bba53a4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1e50e6a0-74dd-4b6a-9b4d-e42072ba5928",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5c0dac7e-b2c3-47f1-bdcc-a1364cb8a148"
            }
          }
        ]
      },
      {
        "id": "5c676ad2-9026-4a36-ab64-37df01bec22e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e1849c8b-e83d-4399-b338-4f65b232b11c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3b467f8e-f065-48c2-9732-98a75007d59e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "1e7fff8e-af27-42e4-ab0a-dbe93c9de9d7",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e95cfaf0-5456-4d13-9de2-162bc0be50dc",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b1438917-dd47-4a8d-af0d-6b919c518ce8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 38
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 12.162698412698415,
      "responseMin": 5,
      "responseMax": 248,
      "responseSd": 24.142132814760874,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1720917818610,
      "completed": 1720917829880
    },
    "executions": [
      {
        "id": "13bd1d46-fc95-49cb-91ad-2f1fe6d58ef8",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "371519ac-5735-4077-b82d-94e5f80abef7",
          "httpRequestId": "708156fe-9996-4c57-92e1-d0d8a9c31f2d"
        },
        "item": {
          "id": "13bd1d46-fc95-49cb-91ad-2f1fe6d58ef8",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "6d6ccf9e-37cb-440e-a583-72cc35e177fe",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 0
        }
      },
      {
        "id": "88c53ca7-8162-4afd-934a-94a47d7fd670",
        "cursor": {
          "ref": "5155a24a-b0f1-4bab-ae1a-f0857dfaf65b",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "008aa7cf-8e56-448a-bfa9-e95753a1cbb9"
        },
        "item": {
          "id": "88c53ca7-8162-4afd-934a-94a47d7fd670",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "989cf2e4-15fd-4ac3-b1d7-af6805444b83",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "33a49180-28ea-4b0b-ae84-7414ace5f894",
        "cursor": {
          "ref": "f21798e4-c25d-4716-b4e1-94c9808382df",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "65e1999f-bba1-4213-8329-7c6c23be4837"
        },
        "item": {
          "id": "33a49180-28ea-4b0b-ae84-7414ace5f894",
          "name": "did_json"
        },
        "response": {
          "id": "c1bef475-b1a7-4474-9004-91e37d1c87f3",
          "status": "OK",
          "code": 200,
          "responseTime": 245,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36af96ef-9187-4e55-859c-19228a35d147",
        "cursor": {
          "ref": "017a3be9-2d62-466e-bd22-67f411921a4d",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6b946fcc-ab26-4d5a-a97c-15f5663796be"
        },
        "item": {
          "id": "36af96ef-9187-4e55-859c-19228a35d147",
          "name": "did:invalid"
        },
        "response": {
          "id": "81fda9ce-5d3f-4a10-a7f4-b4d8acfc3800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36af96ef-9187-4e55-859c-19228a35d147",
        "cursor": {
          "ref": "017a3be9-2d62-466e-bd22-67f411921a4d",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6b946fcc-ab26-4d5a-a97c-15f5663796be"
        },
        "item": {
          "id": "36af96ef-9187-4e55-859c-19228a35d147",
          "name": "did:invalid"
        },
        "response": {
          "id": "81fda9ce-5d3f-4a10-a7f4-b4d8acfc3800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6422bd2-1a5f-48fa-acef-8752f5b6a272",
        "cursor": {
          "ref": "6ced6c56-05a4-4fba-88a3-7740e98568b2",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "4abefb34-0d37-49f5-a6c6-a8ac0c7d7b7e"
        },
        "item": {
          "id": "a6422bd2-1a5f-48fa-acef-8752f5b6a272",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "db2ddde7-9bd3-4f82-9667-af3e7463f840",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 120,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f58d608-a271-4386-bed3-537c2e1680ff",
        "cursor": {
          "ref": "3a13e571-ea14-4b7b-8adf-9674f3e04534",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "4f3fdb18-c9d6-4132-b629-b322bd3971a8"
        },
        "item": {
          "id": "3f58d608-a271-4386-bed3-537c2e1680ff",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4179ff2a-af3d-459c-8fe4-1d0ee0349c4b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c00b21d-c1be-4ed9-abcb-e30b3d69507a",
        "cursor": {
          "ref": "1fa150ce-1c41-4480-8b20-7adfe783047c",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "faf3533e-d084-4008-9355-d3ba7a49d6fe"
        },
        "item": {
          "id": "2c00b21d-c1be-4ed9-abcb-e30b3d69507a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "4062f937-79b7-4783-9214-9657ddfc6810",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "696f50c4-d872-494d-ae68-0e22f80d4566",
        "cursor": {
          "ref": "f2d7ac8c-32e1-4307-9523-6382fbf3a621",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "0394e6f1-4a6b-47cc-8dea-c185d8fea1f2"
        },
        "item": {
          "id": "696f50c4-d872-494d-ae68-0e22f80d4566",
          "name": "identifiers"
        },
        "response": {
          "id": "d38fe5d4-e3fc-4354-9753-aa6673707c4a",
          "status": "OK",
          "code": 200,
          "responseTime": 158,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "099ca8a0-7204-4412-b268-c1531952d007",
        "cursor": {
          "ref": "0ab1a66a-18b2-4320-b5db-4570d05fc021",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "df023260-e3ac-4cf8-b9f2-c0eb0395788f"
        },
        "item": {
          "id": "099ca8a0-7204-4412-b268-c1531952d007",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f24e6b11-40b0-47a2-94bc-2694e35ae404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef36b47-b406-4254-893a-16a49f0c8fc9",
        "cursor": {
          "ref": "ae5704a9-f150-48b2-a531-653ae8708d21",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ea7dd8c1-7cb4-432a-a15a-9e30ddd15fd6"
        },
        "item": {
          "id": "2ef36b47-b406-4254-893a-16a49f0c8fc9",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "259d5bb3-4661-438d-a300-74c2df323a59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d44a972-dcf8-43bd-a72b-5154e1388317",
        "cursor": {
          "ref": "2661a82f-4da6-4504-b72c-4f42c76b116a",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a4f9e6cf-5926-43c2-bc91-0eaf50fbdbde"
        },
        "item": {
          "id": "1d44a972-dcf8-43bd-a72b-5154e1388317",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "841f3c0c-5357-43f5-872f-02da6e651cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54bb7a1d-37ce-4c0a-90e4-c46ce1a29118",
        "cursor": {
          "ref": "ac8d5027-0027-432b-92ee-c4f525067168",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "fcdd249b-f3f7-4367-88a8-c8fd5fb6baf0"
        },
        "item": {
          "id": "54bb7a1d-37ce-4c0a-90e4-c46ce1a29118",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b04834d5-aaef-4f2a-9a60-8687938c111e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c22cce23-5924-4002-9439-8903f42553a6",
        "cursor": {
          "ref": "9145194d-ba4d-4d94-8f28-381db35837d3",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "268b6a88-fc60-4da0-baab-1a18db55e3bb"
        },
        "item": {
          "id": "c22cce23-5924-4002-9439-8903f42553a6",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "f38797df-d2f5-4ca5-89a7-25ba7a4f2d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b77ebb6b-2635-4a74-b3de-89335ad2b999",
        "cursor": {
          "ref": "486fc9b8-c5ea-464a-8b5c-d2dc1a241c3e",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b26d1861-597a-42cc-80c8-d614dee23216"
        },
        "item": {
          "id": "b77ebb6b-2635-4a74-b3de-89335ad2b999",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "be5f68e9-cf9e-442d-9705-918c32ee0959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a4f5af-5bf4-4d6e-9842-cb3c20758b4f",
        "cursor": {
          "ref": "06e04d73-7902-47a7-b992-fe72c7557032",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "04b7c31c-ea41-47c4-b623-4a5fb8207176"
        },
        "item": {
          "id": "36a4f5af-5bf4-4d6e-9842-cb3c20758b4f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "7f5041ac-5b57-42b6-af44-0f92c7446195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba4000a7-e0d4-4867-b612-f20e54111683",
        "cursor": {
          "ref": "f7d76c0e-f366-41e1-9c9f-4eb77a017f76",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c4f23de6-745a-4498-b7da-13a17fafa012"
        },
        "item": {
          "id": "ba4000a7-e0d4-4867-b612-f20e54111683",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "da460598-3746-417b-b9e7-80eaf44e86e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adfec4a5-4d26-401d-83d2-c2a3bd03a37f",
        "cursor": {
          "ref": "9c054010-993d-4faf-973a-fe78fed15727",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "2f5c36bb-aeb0-4d00-87c8-a734abc9cdb8"
        },
        "item": {
          "id": "adfec4a5-4d26-401d-83d2-c2a3bd03a37f",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "10ed1dd6-cb4b-4774-b6a1-b4f1c47da879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba653b3-2c75-4106-9c8e-5497178bb5b6",
        "cursor": {
          "ref": "b04bd32d-0290-4ec8-a710-65a3dd1d413b",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f459160e-76bd-479e-9630-755d20b2c008"
        },
        "item": {
          "id": "8ba653b3-2c75-4106-9c8e-5497178bb5b6",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "0a401669-975e-4aaa-a1ac-99733d167e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15fe8556-3c00-46bd-b479-c3067e03c754",
        "cursor": {
          "ref": "f540c7d7-9c1f-46a1-9bb6-8a84c4ce3839",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "7a001954-75b2-4620-a6be-27a9772a7691"
        },
        "item": {
          "id": "15fe8556-3c00-46bd-b479-c3067e03c754",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "bf5b7249-6cd5-4cd4-ab7a-8639ce7fe520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a8df6c1-be0f-417b-bbaf-cb65c0fafbf7",
        "cursor": {
          "ref": "8ae0f257-2ed0-44b3-974f-8a15974d6af9",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "9cc24a2c-b57f-40e3-beaa-009435590de7"
        },
        "item": {
          "id": "4a8df6c1-be0f-417b-bbaf-cb65c0fafbf7",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "f4c7154f-f13f-4f7b-8ed4-068c4bea9c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d9d77f-3800-4331-bf0c-38f5aa9ffd81",
        "cursor": {
          "ref": "c9cb966f-0c33-48dc-a278-251c207fffba",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3681bbef-db35-4245-a518-af226fdeba3c"
        },
        "item": {
          "id": "11d9d77f-3800-4331-bf0c-38f5aa9ffd81",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "8f79dab5-3fec-42a8-a069-7c5ab8b6e3a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60f83be5-5368-403b-b5d7-f7c0c33bce92",
        "cursor": {
          "ref": "fd1e081f-a4a6-4868-a3c5-d55f27ebc693",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "9f5e04d7-4885-4df1-a964-1c853c08fa5c"
        },
        "item": {
          "id": "60f83be5-5368-403b-b5d7-f7c0c33bce92",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "7a24e6e6-7333-44ee-ba27-eacc8d793f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b78c66d-07e9-40d6-9043-60b4bf42585a",
        "cursor": {
          "ref": "0b48e581-5dd7-4a61-82c4-6a1b5e0a3436",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "cc85bb40-efc0-4b98-952b-4629542d4fe5"
        },
        "item": {
          "id": "6b78c66d-07e9-40d6-9043-60b4bf42585a",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "3d4327e1-fdb2-4242-9984-93f17fafe294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e270f60-0bc5-4310-8701-9189a7af8af6",
        "cursor": {
          "ref": "44c44ed2-b1a4-4fc9-8cd5-e1de01eb8dfc",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "a4320157-f339-4871-aff1-255d83f9d9d9"
        },
        "item": {
          "id": "9e270f60-0bc5-4310-8701-9189a7af8af6",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "08a11b0a-7dec-4270-914e-587927bcb5b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13788219-b051-4d15-8b06-dde957224a0c",
        "cursor": {
          "ref": "8a2f4428-d1c4-4d20-b591-8c876a5165bd",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "c2a31cc1-8e02-4156-bd21-b126ed8db0c0"
        },
        "item": {
          "id": "13788219-b051-4d15-8b06-dde957224a0c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "97c98407-9573-4872-8b24-a352ac02a313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbaaac74-ca43-4903-b52a-8732819f08f5",
        "cursor": {
          "ref": "68231ec7-cf5b-48aa-b34d-0f36a3313797",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "321ed7d5-ed0d-4519-a049-fdbf5332d76b"
        },
        "item": {
          "id": "cbaaac74-ca43-4903-b52a-8732819f08f5",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "37648104-baa9-4dda-98dd-115d03fc91c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "552b53a8-03d4-425f-9ca4-40d10c5b7d3a",
        "cursor": {
          "ref": "59ee347f-955c-4921-ae4b-0d0393592c0b",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "927bd97c-56e2-4bf0-b0f2-585bf7236f59"
        },
        "item": {
          "id": "552b53a8-03d4-425f-9ca4-40d10c5b7d3a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "87dc42a8-8b5c-4fbd-b374-c54c5e58d7e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5a7339a-4760-4268-9f2f-4cd6ca65e2de",
        "cursor": {
          "ref": "df0d8f03-66c9-4fc6-89d3-31dcfb1acfd3",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "8ce6c388-23db-4017-ae09-22cc5d402b71"
        },
        "item": {
          "id": "d5a7339a-4760-4268-9f2f-4cd6ca65e2de",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "0181fef4-de3e-41c1-9590-9c70deabe15d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d38796ce-727a-4422-b301-e3a47ed3d4a5",
        "cursor": {
          "ref": "b3d7c843-86e6-40a6-8c6b-bbb83efca538",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "c243aadd-d526-48b8-9c4b-60dcb5ab75db"
        },
        "item": {
          "id": "d38796ce-727a-4422-b301-e3a47ed3d4a5",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "c6cf27ba-9578-4c30-9bc7-9e87f28438b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29744ecb-07d9-42a1-b29c-88b30b3c7894",
        "cursor": {
          "ref": "3eca8059-c500-4ba1-83ba-1c028a1bb28f",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "16a5bd0f-fc53-46d5-88d9-0e2e2db7222e"
        },
        "item": {
          "id": "29744ecb-07d9-42a1-b29c-88b30b3c7894",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "d2c3837f-87ec-4c7a-88b8-f11c0669905e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ba4057-e024-4ebf-ac66-5b5d922260ed",
        "cursor": {
          "ref": "f99a12b0-8557-49f6-a1ab-e4c74fb10dcf",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "27ab5a18-7559-479e-9a31-e7ac84e2662b"
        },
        "item": {
          "id": "58ba4057-e024-4ebf-ac66-5b5d922260ed",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "ab0bd674-6253-4d78-9c4f-6d6f3e42cb27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb0b649-25ec-400c-b208-3c2c39356e28",
        "cursor": {
          "ref": "fbbd19b9-44bd-43e0-8118-bebedc8a2bab",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "6689558a-d60a-48c2-82ae-fb248f262011"
        },
        "item": {
          "id": "5eb0b649-25ec-400c-b208-3c2c39356e28",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "64aab052-bf1a-44e1-9969-c02134614188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e785aad-c9d5-436d-8862-a687fed476ba",
        "cursor": {
          "ref": "a99645b5-4a7e-450b-94b9-91347e327c8f",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "47d651cd-58b3-4f64-81b3-883e42eab0f0"
        },
        "item": {
          "id": "6e785aad-c9d5-436d-8862-a687fed476ba",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "75c2e609-19c1-4695-b121-704c6c836adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b617cd3b-ab31-4075-9974-e20204c89ae2",
        "cursor": {
          "ref": "15d789e8-61bf-45ee-8d53-2d7171e25753",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "fc7c1488-904b-4535-9a8f-452ba9004820"
        },
        "item": {
          "id": "b617cd3b-ab31-4075-9974-e20204c89ae2",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "7b5f2280-4dca-4a7b-b252-424e82e7d084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b479136-d24f-490e-839b-b1b75c064d68",
        "cursor": {
          "ref": "46831edb-24ee-4d8a-be1d-9c6a1ca7bc69",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "34cf272b-1407-4075-b4f5-b46004430085"
        },
        "item": {
          "id": "9b479136-d24f-490e-839b-b1b75c064d68",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "48273ba5-d184-47b3-bdb6-46d1c47c18ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9722bbd-7c1a-4881-bafb-f00c61c75290",
        "cursor": {
          "ref": "22ab3579-ec1e-496b-817a-0ca779febbca",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "afe061eb-3d65-4fd1-a4dd-cbff4600aee1"
        },
        "item": {
          "id": "e9722bbd-7c1a-4881-bafb-f00c61c75290",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "660df50f-1ea0-4791-a6a4-b47a70517de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c99cf0bc-aae7-46f5-af4f-178edb66e601",
        "cursor": {
          "ref": "2f7b6113-e743-4d25-9ae7-78847383ccab",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "9bde0085-d64b-41e8-8e34-ccafc72c1017"
        },
        "item": {
          "id": "c99cf0bc-aae7-46f5-af4f-178edb66e601",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "4ca80ead-102a-44ba-a75e-db096093f33c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55c49fa8-a84a-4cca-9f98-5b07c7833fd6",
        "cursor": {
          "ref": "53772862-0ab8-48af-bb2b-4bbb7e29cefc",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a265734a-3e56-4dd9-b33d-8b06bc5e940b"
        },
        "item": {
          "id": "55c49fa8-a84a-4cca-9f98-5b07c7833fd6",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "4b4cee4c-21fe-4f34-8041-3af73f66b699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b4d588b-bc81-42e7-9862-a9289c1551f8",
        "cursor": {
          "ref": "bb6cef47-cee3-4b21-a915-2ff4e55f8d3a",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4cdc6a65-faa6-45fe-be45-f7a27cb6bf96"
        },
        "item": {
          "id": "8b4d588b-bc81-42e7-9862-a9289c1551f8",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "6bc62093-02d7-4de4-a24e-c78982ea8b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db9bee12-b5b4-4106-949a-532d00cad686",
        "cursor": {
          "ref": "8808932c-53fb-4b3d-9d39-2e59f9687149",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f3293782-e476-4e83-bc20-9e9d1f6b6e39"
        },
        "item": {
          "id": "db9bee12-b5b4-4106-949a-532d00cad686",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "12ca7410-bebf-4182-b896-a2ae99ccd5c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f275859-83a0-4517-8616-18ae65e5fe03",
        "cursor": {
          "ref": "62ebaf3a-86be-45bd-abe8-9637aa2a0249",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "aadc2738-a7ca-4b21-b9fd-b758490cd5de"
        },
        "item": {
          "id": "3f275859-83a0-4517-8616-18ae65e5fe03",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "400ff9b6-676c-4082-8e70-83b3e6e1e372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5c01f90-b01a-4d89-add8-b6c4ee0d2936",
        "cursor": {
          "ref": "c9b00ceb-6754-495e-b191-8d3c34602719",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "8a0ff41c-31d2-4430-a47d-c47d018c7ed0"
        },
        "item": {
          "id": "d5c01f90-b01a-4d89-add8-b6c4ee0d2936",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "ba41102b-554f-41d1-bd86-2bf143bb8250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d8a986b-4115-4928-b66c-d5fa47d40f8b",
        "cursor": {
          "ref": "a7ca43ad-bbb7-4cb4-942b-7b34c75620c8",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "205d07ac-3e76-4dce-b7da-4ef1c7c2496c"
        },
        "item": {
          "id": "9d8a986b-4115-4928-b66c-d5fa47d40f8b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "306bc64f-8f3e-4125-8a44-3b31a5660df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81eb708d-0d3e-4fc3-bcd8-765575d51a52",
        "cursor": {
          "ref": "bb369a1c-8df8-438c-86f8-59f86e8425c1",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c864a6fa-0911-4ea6-92c4-371535ebe166"
        },
        "item": {
          "id": "81eb708d-0d3e-4fc3-bcd8-765575d51a52",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "807fa4a5-ebfd-46a8-a684-78f9fd7309b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3029e77e-7d66-4215-aacb-396de8cd8ef1",
        "cursor": {
          "ref": "91595d86-eb94-4cbc-a86c-e70ea2afdfc7",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "16ad8330-e6fb-4042-92af-c1aa27788148"
        },
        "item": {
          "id": "3029e77e-7d66-4215-aacb-396de8cd8ef1",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "00f53942-79c3-4a8f-a69f-7233ea588b5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b8ba0df-7fc9-4c65-8248-d037bc6bfdd8",
        "cursor": {
          "ref": "21b4026c-6880-4cdd-8002-96d05496bd26",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "b3d9b394-b78f-4154-b090-bc80a8e5912f"
        },
        "item": {
          "id": "5b8ba0df-7fc9-4c65-8248-d037bc6bfdd8",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "609df528-9047-40da-bcb4-1552c9a35a53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6b8faeb-89fb-4ae6-9870-e1e9e53f3700",
        "cursor": {
          "ref": "fb06cc13-1f78-4d47-bd6e-44ee206097c0",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "b8a91888-b229-4a74-bd63-32e2e438d138"
        },
        "item": {
          "id": "b6b8faeb-89fb-4ae6-9870-e1e9e53f3700",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d600aac4-4509-49bb-bf36-44687d5e63ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91922e88-bc0d-47b2-ad16-9c4f6d9e7448",
        "cursor": {
          "ref": "d9147264-9a24-4414-a236-2ae3aa3b4947",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "f91fcb50-7aac-4348-9381-ae9691235b6c"
        },
        "item": {
          "id": "91922e88-bc0d-47b2-ad16-9c4f6d9e7448",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "52c13f46-2189-49fd-ad25-10149a3d4796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "debd295a-49ea-47ce-8962-2cbbbefb834d",
        "cursor": {
          "ref": "1c1318f6-b172-4c5e-b9e9-fad3e2567dfd",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "4e99a3f4-5ac3-4ddb-a5f6-ee9c591aad8d"
        },
        "item": {
          "id": "debd295a-49ea-47ce-8962-2cbbbefb834d",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "d3154bff-f119-4eab-8e98-39878aafdb09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad17545-3810-47d9-9d08-19f854478da0",
        "cursor": {
          "ref": "fcc70402-e9a1-404e-acb1-5f345630095c",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "f5278dea-7342-4f13-af4c-7de08ab00415"
        },
        "item": {
          "id": "4ad17545-3810-47d9-9d08-19f854478da0",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "0c34d5f9-d3fe-4df9-bab7-e58aefb7b0ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a725544-bbc8-4375-a962-0b7f3eea3231",
        "cursor": {
          "ref": "059dcacd-f595-44ba-9429-a91e6238a183",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e95c41b6-f6f0-45b3-9fe8-2febfc814cad"
        },
        "item": {
          "id": "1a725544-bbc8-4375-a962-0b7f3eea3231",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "baf7ebe5-3f28-46b3-abd6-3780179002b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7efc4694-9459-4145-bb5d-803b39a4f21e",
        "cursor": {
          "ref": "4f171ff0-6939-46ad-a3c0-69746ede91bd",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "e72980c6-d918-4950-ba70-1ac60e569f38"
        },
        "item": {
          "id": "7efc4694-9459-4145-bb5d-803b39a4f21e",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "00acd79c-7ce8-4619-8376-7e9e4299f8ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f29a6f60-d761-4b7e-9de3-ebffbcf69c40",
        "cursor": {
          "ref": "1e50df2a-9c3e-466b-b1db-af556ed1614c",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "b57d8ecf-3fba-44f1-9ef3-083f01d55d57"
        },
        "item": {
          "id": "f29a6f60-d761-4b7e-9de3-ebffbcf69c40",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "842876e7-145a-4eff-9da0-1d1ad8e1eacf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba42d43-68fe-480a-91de-d76968b468c2",
        "cursor": {
          "ref": "bf51e5ec-b161-4132-b412-29b9e75a7764",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "ee3a37fd-bfe3-4bf7-9f42-74078c62be4a"
        },
        "item": {
          "id": "8ba42d43-68fe-480a-91de-d76968b468c2",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "bcd070e1-c95d-418c-bb08-83f9ebb9945e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a331d634-7474-4b10-9a09-350be6bb180b",
        "cursor": {
          "ref": "cf39e0f4-9eb6-4085-b681-773c53a7035b",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "86a13f1c-1a73-4a54-90ec-0a2ebf8a8246"
        },
        "item": {
          "id": "a331d634-7474-4b10-9a09-350be6bb180b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "61c5bdee-ba5d-4236-b6ab-e21a3ef716af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c5b5991-7a1e-450a-a890-85a9c1859b14",
        "cursor": {
          "ref": "9ce02b0f-2879-4a96-9bcb-1b5a0ade1fa7",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "910c35cf-c46f-4e90-9d81-dda60c802904"
        },
        "item": {
          "id": "1c5b5991-7a1e-450a-a890-85a9c1859b14",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "4d724721-9a37-46f2-bda2-f47cf472017a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4fa6b84-5ebc-4a32-b93b-e12609f39c0a",
        "cursor": {
          "ref": "4759802b-f7b7-4053-982d-f068fa3eb77e",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "f4e93542-0a2c-42be-9740-031041faf6ab"
        },
        "item": {
          "id": "a4fa6b84-5ebc-4a32-b93b-e12609f39c0a",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "69db1164-9f1c-48e9-9552-9d988da3fbe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d36671-632c-426e-9890-4547314eb5c1",
        "cursor": {
          "ref": "689d6f74-29ac-4c67-a7c8-9d28064a9545",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "463c1dc2-a567-4c5c-9f29-e8eaa32174d8"
        },
        "item": {
          "id": "c0d36671-632c-426e-9890-4547314eb5c1",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "91bccc1d-d43c-42b7-bdf7-5e06e8ac1bc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "968f5c45-5768-484e-b116-db27365ab8e7",
        "cursor": {
          "ref": "1fcde26c-f6c4-4e23-8a63-d66b8a23f474",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "6c35bbdf-dff1-49d4-af22-74afab3ef201"
        },
        "item": {
          "id": "968f5c45-5768-484e-b116-db27365ab8e7",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "1d6becf3-8186-4c6d-a960-62959bde341c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa94b7d3-de1a-45b3-bd30-a2edda8d57a4",
        "cursor": {
          "ref": "4857e0bd-e312-408e-a30f-8ac6f72df9f8",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a1036182-6867-4202-8ccb-80a33bb0e66e"
        },
        "item": {
          "id": "aa94b7d3-de1a-45b3-bd30-a2edda8d57a4",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "4fd94298-cce0-4cf2-8507-7fdb7f767b6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1567ddf-9d3c-4a8b-94cb-7a420ba4a8f7",
        "cursor": {
          "ref": "4742e912-89eb-4ede-83db-c2b12ead84eb",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "60d38078-8c63-42af-a9ed-c9a0451c7cbb"
        },
        "item": {
          "id": "b1567ddf-9d3c-4a8b-94cb-7a420ba4a8f7",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "3f333d96-2919-4b5a-8b7d-ea84f05fe825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87137b30-c731-408a-b0ae-cb185e9f9f35",
        "cursor": {
          "ref": "03f3458e-8b9d-4a6e-87b3-0b077a3ea2af",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "7ed709ab-5022-4136-b594-f2d432361cf9"
        },
        "item": {
          "id": "87137b30-c731-408a-b0ae-cb185e9f9f35",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "a4d260b5-5509-4231-a4cc-5588417876b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bfb1f61-8de2-4988-a125-12e1aec775c6",
        "cursor": {
          "ref": "d418cab3-c467-495f-8ab8-562f02ddb104",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "90866371-b41f-44c0-b224-6459b06de0d0"
        },
        "item": {
          "id": "7bfb1f61-8de2-4988-a125-12e1aec775c6",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "56606c0e-8887-4891-845a-e43626d40f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9045a822-8995-4f20-ba8e-1bae6e12fcfe",
        "cursor": {
          "ref": "7081b282-2581-4d0a-9a43-3fe2581174e6",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "91218369-85ff-48e2-966a-32eec0078922"
        },
        "item": {
          "id": "9045a822-8995-4f20-ba8e-1bae6e12fcfe",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "651899f0-7d34-467a-8c4f-19efa1edb8ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d7b46a-3771-4fbf-9d58-59927911315b",
        "cursor": {
          "ref": "ad344862-842d-4f49-a37e-181c464c982f",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b61e1810-ac1d-4acf-a82d-f357544faff7"
        },
        "item": {
          "id": "94d7b46a-3771-4fbf-9d58-59927911315b",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "c900b4a7-1ddb-4cd2-ac43-52c6f404eb9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b869418-0812-42c7-9682-2b5391927da9",
        "cursor": {
          "ref": "4760cd4f-fe38-4e23-a050-6475aaf55aa6",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "14da6998-9b3d-4841-b863-300174385608"
        },
        "item": {
          "id": "1b869418-0812-42c7-9682-2b5391927da9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "a2d42a34-bc26-459c-99ad-432b2730be43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93b5e0f4-1771-4588-9d51-2d47a442bfe4",
        "cursor": {
          "ref": "dde09884-1f58-48e7-bd0b-bb76e11f680b",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "94f2f9a8-7483-4285-aa19-c43229d58d37"
        },
        "item": {
          "id": "93b5e0f4-1771-4588-9d51-2d47a442bfe4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "703320e0-8a2a-4660-8037-b87dac2f8407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e5a9cf-72bb-4373-add4-d36ceb4035cf",
        "cursor": {
          "ref": "7bede5a2-7174-4ad7-a878-b00a10d6ccb4",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f7b4acaa-b43a-4590-9c45-5ba0dc035e3c"
        },
        "item": {
          "id": "f8e5a9cf-72bb-4373-add4-d36ceb4035cf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "a7394dbd-929c-4b0c-91c9-4e7c8065d9af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad370f25-14bb-45c3-a3f9-3c403f633d76",
        "cursor": {
          "ref": "8f6f34ac-af5c-4acf-9622-b55a16b3454b",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "fb5bb314-a47e-4dec-b869-032740ecee24"
        },
        "item": {
          "id": "ad370f25-14bb-45c3-a3f9-3c403f633d76",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "4db80c7a-c2e1-4f4c-bd4b-4feea5107b43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff4d3d8-302f-46d2-912c-f5d99bb50a73",
        "cursor": {
          "ref": "de5f5030-0c17-4b44-bb67-d6b17a950417",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "3f9d76d2-76e5-4f2f-96db-72810a1207b1"
        },
        "item": {
          "id": "2ff4d3d8-302f-46d2-912c-f5d99bb50a73",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "4ec88a8f-c458-4406-a41e-acbfa4e92418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0625330-b5fc-4b16-bff0-3db47e40c3e1",
        "cursor": {
          "ref": "38bb3b98-3a94-4fe3-8120-edda8cfbc52e",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "239980be-62b9-48e2-b02e-cc7c0654f957"
        },
        "item": {
          "id": "a0625330-b5fc-4b16-bff0-3db47e40c3e1",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c9d09ff5-4f7b-4d7a-80a9-3c6bc300ba7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "403c04ce-9447-4ef8-bce3-9f94124468fc",
        "cursor": {
          "ref": "7ab8ea67-89a2-4da6-93ad-53a8c5fd2f26",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "12fb33bb-1ca3-4100-b1f8-6c48965f7116"
        },
        "item": {
          "id": "403c04ce-9447-4ef8-bce3-9f94124468fc",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "985c7445-8264-4521-882b-bdf505521378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcd7428a-1d86-48c8-b975-1e44142a2d9f",
        "cursor": {
          "ref": "b3f96627-78a5-4e2f-a050-1743d8f0fd54",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "c0c3b5c2-08a5-4ab6-bee8-ce1adbbefd05"
        },
        "item": {
          "id": "bcd7428a-1d86-48c8-b975-1e44142a2d9f",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "4c9d8c65-bc25-4641-a29a-4f830bce36b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07565c9d-2311-42be-8e82-5f1c3ba13832",
        "cursor": {
          "ref": "f437b615-1826-4502-8c5e-df259abcb3dc",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "511e7a8a-019b-4517-bbc2-aad52ed54bb7"
        },
        "item": {
          "id": "07565c9d-2311-42be-8e82-5f1c3ba13832",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a0eb9ded-37d0-4061-bad7-254f182f4a17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "071dd7f8-05ca-4d52-9343-425b4154fbd4",
        "cursor": {
          "ref": "4321f0ee-bec1-4382-9ebe-231e8894446d",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "881f59dc-b068-496e-9b1e-c06e4554dbae"
        },
        "item": {
          "id": "071dd7f8-05ca-4d52-9343-425b4154fbd4",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f486ff2d-bc1a-461c-906b-1af1fb768e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57bccd2f-8f3d-4054-a0d7-85483c88685b",
        "cursor": {
          "ref": "de8f1d5c-8c65-47bd-ba3e-004f688ff3b0",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "4166f2b3-252a-42f1-af64-d5efa8443ee1"
        },
        "item": {
          "id": "57bccd2f-8f3d-4054-a0d7-85483c88685b",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "84c1d622-515e-4f60-a360-c5c3f5ff8e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d1a3ae-6f47-4d5b-818d-dec25881fc88",
        "cursor": {
          "ref": "cfedb066-3908-417b-a433-361eaf9ae942",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ace8de08-9b31-4571-8b46-d3ed1a843bcc"
        },
        "item": {
          "id": "b2d1a3ae-6f47-4d5b-818d-dec25881fc88",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "32666799-f3ef-47bb-bc14-c27977bb457d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21fb1942-56d9-4ef4-afde-e701088082b5",
        "cursor": {
          "ref": "27140690-a9f0-4d73-90c5-0f4556bab08e",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "e9ef230b-48e6-48e5-b9f5-9c990767f1f8"
        },
        "item": {
          "id": "21fb1942-56d9-4ef4-afde-e701088082b5",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "78de91c2-dd9f-4ad6-ab17-bffe4d3c744f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "598eb33a-65a2-4ea6-b301-f494b2721389",
        "cursor": {
          "ref": "cc30d79e-438e-499f-a726-96faa6fd85f9",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f8efd3eb-e1cf-4a7d-9db5-ffd21030c079"
        },
        "item": {
          "id": "598eb33a-65a2-4ea6-b301-f494b2721389",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "86c61676-dd07-4cee-a171-2046c7f83f27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87697748-3aa1-4ec7-a226-8d39e3b4ac0f",
        "cursor": {
          "ref": "c1eea4ef-5aa5-4836-9c0b-e1fa0cd465bd",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "49b4df96-b965-4448-9ed9-f380bfb4f05f"
        },
        "item": {
          "id": "87697748-3aa1-4ec7-a226-8d39e3b4ac0f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "c844aca4-565d-469e-aeb4-88f18734e269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "186cfe13-d9e9-4865-8643-11bd361bc8f1",
        "cursor": {
          "ref": "2d222f88-8ba4-433f-9042-74f49faad663",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "7501ac8e-ea40-41a0-a014-2d06f338e20b"
        },
        "item": {
          "id": "186cfe13-d9e9-4865-8643-11bd361bc8f1",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e36e269d-83b3-4636-924c-c02a5abddcc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ec2e8a8-4c44-43b4-bc52-0ba58fcfb399",
        "cursor": {
          "ref": "26eb4fae-bcd5-471b-b8b7-71e52edfc5ba",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "5da2823a-bf49-43ff-8e38-50421ec0f531"
        },
        "item": {
          "id": "9ec2e8a8-4c44-43b4-bc52-0ba58fcfb399",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b9a0c480-b925-4a54-9606-343884969d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "722f3bf5-8f14-4fd1-be36-5ddd33d639a2",
        "cursor": {
          "ref": "f6d4ae2b-ad6c-4a91-a2de-20884443c87a",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "73f2f0d6-e455-41c1-a19e-8c770d6ca936"
        },
        "item": {
          "id": "722f3bf5-8f14-4fd1-be36-5ddd33d639a2",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "9f2588d4-92ce-428c-be40-47a0ed95d86f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66afe639-d95d-401d-b840-f18d81b6ba2e",
        "cursor": {
          "ref": "731d4374-2681-46dc-aa07-e5043a33ca6d",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "8d6096b6-ef60-4ef5-9838-96d741a330da"
        },
        "item": {
          "id": "66afe639-d95d-401d-b840-f18d81b6ba2e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "d00adbbc-a445-4122-af42-e17c3c6774fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca2d854-1f3f-4e1b-9893-caead74c7616",
        "cursor": {
          "ref": "ce8b8d5d-2554-4dfb-a853-b3c92c403de0",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "4f422ea3-a386-4644-b867-30286fe974a3"
        },
        "item": {
          "id": "9ca2d854-1f3f-4e1b-9893-caead74c7616",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b3315dee-85f9-4b57-9c5b-df73aedc6194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82379e8f-73a9-49bd-9bb0-c899d7a6daa5",
        "cursor": {
          "ref": "33adbe2b-3e99-4f45-b80a-68766cfc79c4",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "2b4c72d9-8ad2-4fc4-a715-9a2ed0d4580e"
        },
        "item": {
          "id": "82379e8f-73a9-49bd-9bb0-c899d7a6daa5",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "9f043dd3-46fb-4bbf-b757-d05850977c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc4ddac-34de-440a-86f2-c45097b25e11",
        "cursor": {
          "ref": "cc0783cd-5bd7-42f1-95a7-97c1bfc0759b",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "5d1cfb22-9bf0-493f-ba14-efee7a36b4da"
        },
        "item": {
          "id": "4bc4ddac-34de-440a-86f2-c45097b25e11",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "4659a057-2de2-43a9-b525-dde919ed5dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec1b1b2-086b-4bf5-aa5f-a5033471f9aa",
        "cursor": {
          "ref": "479d93ea-e68a-4608-9136-8c822dc77023",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b98ae374-2eca-49ef-aa72-1d6887ebe5ff"
        },
        "item": {
          "id": "dec1b1b2-086b-4bf5-aa5f-a5033471f9aa",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "7b8429ab-20a0-4a01-bea9-6f809ddc492c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94bf7f48-a9ff-4eeb-872e-9985c752947c",
        "cursor": {
          "ref": "aac5a653-6a73-41ce-b5e6-dcdff08cdc95",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "90bb8b1d-dd3a-449e-bca7-3f21396e4128"
        },
        "item": {
          "id": "94bf7f48-a9ff-4eeb-872e-9985c752947c",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "0e737535-63af-405e-9a3e-b62d3f5416e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d627f934-d79d-4bac-8e3c-55ab7f54935b",
        "cursor": {
          "ref": "217c21d8-2b41-4d2b-9a14-867f4995216c",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "138c63bb-19d2-452e-984b-a397a5061245"
        },
        "item": {
          "id": "d627f934-d79d-4bac-8e3c-55ab7f54935b",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b7403446-d8f2-4283-9f0e-31e9f44bc5ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf288b6e-e466-445d-8613-e8609fc3f9c6",
        "cursor": {
          "ref": "91f89346-adb5-47a5-909f-e851f45ae0c0",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "2e544053-6d17-453d-b648-0f2e459940c8"
        },
        "item": {
          "id": "bf288b6e-e466-445d-8613-e8609fc3f9c6",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "bc0595a9-f673-4f08-86a7-103d6147a15e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf77576d-c303-4119-8cb3-261f29e2b76c",
        "cursor": {
          "ref": "87898afb-2055-4815-a657-f01a06b83077",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "c9266d9a-f1ad-4ff5-99ca-d3d68bd4fb33"
        },
        "item": {
          "id": "cf77576d-c303-4119-8cb3-261f29e2b76c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "3f90e544-9844-4c84-beec-523ce7edcaeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec083438-f21c-43f3-974b-dabfdb100e76",
        "cursor": {
          "ref": "0ba1d169-c16f-4267-8d7c-9600bef5d2e0",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "dd674344-7553-4b4c-b203-cb2e5d1e33d1"
        },
        "item": {
          "id": "ec083438-f21c-43f3-974b-dabfdb100e76",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ba7b6c69-b5b6-4e80-8e3d-b9f82fe1faff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f43272b-b7fe-4c4e-9ced-80cfecbbdac7",
        "cursor": {
          "ref": "249fd9d6-9d2c-4831-9517-46f18671ea23",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "fa3d9ad6-54ac-4cbe-86a6-91e5cb462102"
        },
        "item": {
          "id": "9f43272b-b7fe-4c4e-9ced-80cfecbbdac7",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "fc901d4e-8edc-45e4-aa23-d00a5f939d41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc2b01d-4e5a-4f9a-87a9-6139354c5528",
        "cursor": {
          "ref": "32af3e9b-f9ca-4e85-9ba2-e864788433bc",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "ae2dff10-066c-4ad0-808f-f9f90db0d223"
        },
        "item": {
          "id": "ffc2b01d-4e5a-4f9a-87a9-6139354c5528",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "bbb2da88-180c-47a2-8946-7b13a10e3e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e4646f8-3952-4d20-a295-6a1fb48c5c33",
        "cursor": {
          "ref": "92a7b9ae-bd76-4509-8209-ac0fa08cb409",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "500a6f77-ea16-498f-9763-f3e20ed3f900"
        },
        "item": {
          "id": "6e4646f8-3952-4d20-a295-6a1fb48c5c33",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "36f1e99e-72b2-4d63-a4b6-839e9c9d55d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "395fed1f-7eae-4842-8646-7b23f45bb39f",
        "cursor": {
          "ref": "532ed229-10a4-4e6d-8302-7c0e1c3a276d",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "cbfe1aa2-b10f-4ec0-80c1-cb13e76823bc"
        },
        "item": {
          "id": "395fed1f-7eae-4842-8646-7b23f45bb39f",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "22d3bdb5-e42e-4100-ae1b-5c02b6257e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1be7f24a-a6e0-49e9-a7b6-3c76691e1536",
        "cursor": {
          "ref": "dfe9f4fb-e669-4049-83c5-f3daae778352",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "961e324f-9e5e-465f-9590-cc760c3dc5bf"
        },
        "item": {
          "id": "1be7f24a-a6e0-49e9-a7b6-3c76691e1536",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "76415135-3355-4359-ba91-f508835dbda3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c83fb1e-6a7f-48bc-b8bd-a7cc5f0f8a44",
        "cursor": {
          "ref": "c3ef0ee9-d803-4961-9436-402b2c00ead9",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d4c97b7e-8ac1-4f49-bd3c-944ee786d05a"
        },
        "item": {
          "id": "0c83fb1e-6a7f-48bc-b8bd-a7cc5f0f8a44",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "9ce8faf1-6546-43d3-b387-b3c0cc0fbf57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5247924f-ec4b-493c-ae0f-e4417084ccee",
        "cursor": {
          "ref": "dcedad76-2436-4104-a674-23312c295626",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d32e0e20-81b6-4121-90ea-da9837d4550f"
        },
        "item": {
          "id": "5247924f-ec4b-493c-ae0f-e4417084ccee",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "b5c1cc7c-17e8-4aa8-b7c7-98f73baf00ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de7f1b5b-d608-4f85-97b2-36d75397a694",
        "cursor": {
          "ref": "56bda3a0-6470-4d47-a286-933a4b364a9b",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "5cf0a623-09a8-4e45-9729-efbfb3f4be30"
        },
        "item": {
          "id": "de7f1b5b-d608-4f85-97b2-36d75397a694",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "715f0238-0aa9-4ce4-942d-917db75f96d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8951234-4936-4303-bbfa-426b21f6d4e2",
        "cursor": {
          "ref": "de6036b3-eed3-4d42-9b4d-dfe6a610cb17",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "2e16a681-ef9d-4c5f-b88d-17a5a652e6ba"
        },
        "item": {
          "id": "f8951234-4936-4303-bbfa-426b21f6d4e2",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "9b986eca-96cd-4760-a98a-2431a68b1cb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "45718c0a-feb9-4e93-a432-7b8aeb28c15e",
        "cursor": {
          "ref": "a83b8e11-a976-4b21-917d-984b66fc55ad",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "bd93f41c-8f12-4fc6-8721-47eeca696dd1"
        },
        "item": {
          "id": "45718c0a-feb9-4e93-a432-7b8aeb28c15e",
          "name": "credentials_issue"
        },
        "response": {
          "id": "c8104e84-a417-4015-b0d4-6098cfac9bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "8e83f46c-76fe-4a8c-8edc-5d4868404671",
        "cursor": {
          "ref": "19214ba9-08a8-4e21-86df-a17857507ad2",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "aaa7ef03-74e0-49be-9756-8572869d8c57"
        },
        "item": {
          "id": "8e83f46c-76fe-4a8c-8edc-5d4868404671",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "2a343c8a-0b15-478f-9b87-8a7d044e1aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "1c20a992-6254-4e12-9dc5-5250238a8187",
        "cursor": {
          "ref": "632902b8-01a1-4404-8605-913e3c4d4b6f",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "36714b34-bfa4-442c-8b95-748400e9d5d2"
        },
        "item": {
          "id": "1c20a992-6254-4e12-9dc5-5250238a8187",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "3db20290-aa79-47d9-bd33-4a9f71347d35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "6b7f097d-39a4-459b-a2ac-a3c66c62e106",
        "cursor": {
          "ref": "428171a6-6378-4a04-b200-78b8ba886df6",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "cceaee5b-4790-4e77-b863-cddd637c53e4"
        },
        "item": {
          "id": "6b7f097d-39a4-459b-a2ac-a3c66c62e106",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "78ed4b37-c7af-44a8-9c4c-10fc0caf46d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "33824b6a-95f6-40b0-816f-c597e150d5db",
        "cursor": {
          "ref": "458f5ae7-fad4-4562-84f0-f4597f9f958c",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "3cf5593d-bdf5-4fe8-8698-465b082ab262"
        },
        "item": {
          "id": "33824b6a-95f6-40b0-816f-c597e150d5db",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "f68bf3ec-db49-475a-a132-0acdfee8190f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "b3326726-1cf0-461e-a236-734cad72e5b8",
        "cursor": {
          "ref": "bef8e76d-c680-47aa-9d7e-eb28f5aa6fc7",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "be1aef33-87db-4776-b1b7-e25dd8b80154"
        },
        "item": {
          "id": "b3326726-1cf0-461e-a236-734cad72e5b8",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "6f3935e7-361b-4812-8618-3eb5e7a5e7d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "9a6cfd52-d729-45b0-be7a-62850e446041",
        "cursor": {
          "ref": "b6f4bd42-85a0-4d0f-8ec1-2e5b20d9be40",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "3e628de4-2094-4d90-b20f-fa2fa7a7eb47"
        },
        "item": {
          "id": "9a6cfd52-d729-45b0-be7a-62850e446041",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "aa9bf541-ac83-4574-b738-2bd22871af46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "612051cd-dbd3-4e2a-b7b1-84fa62f0659d",
        "cursor": {
          "ref": "8c4a73df-808a-4b58-8c5e-b8cc046572ed",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "57337e48-0ace-4c1b-b2da-12cc34ffb324"
        },
        "item": {
          "id": "612051cd-dbd3-4e2a-b7b1-84fa62f0659d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d4ea6a46-74ab-48bc-8037-bef2fb99e503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "000ebd44-0deb-4808-918d-5abd50b4fac0",
        "cursor": {
          "ref": "c9e47b84-164c-4655-b8f7-3b9928d7852f",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c867f825-9cfc-4a70-ae90-6bf8f804daf7"
        },
        "item": {
          "id": "000ebd44-0deb-4808-918d-5abd50b4fac0",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c5f8c8b9-1db3-4c36-86a5-56293f90289d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd4f6fee-a75b-42b3-b26e-b89bd9dcacff",
        "cursor": {
          "ref": "d2520bd0-bf6c-483a-81e5-b6c7ce7faa09",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "ec174cf8-d24c-4676-b781-d2880a71d7d3"
        },
        "item": {
          "id": "dd4f6fee-a75b-42b3-b26e-b89bd9dcacff",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6aac12ec-ad9d-41c0-94c1-ba1f3ae3c537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d2a6a0-de9d-4866-9088-98bcefd3d38a",
        "cursor": {
          "ref": "7615d6fb-2acb-4721-9cae-e0881235abae",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f901401e-0ef8-4536-bcd1-49cafd6e06eb"
        },
        "item": {
          "id": "20d2a6a0-de9d-4866-9088-98bcefd3d38a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a0133023-acfd-4118-9533-3ba599720dd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41d8145c-1dc2-40bf-9d60-ed86f4942004",
        "cursor": {
          "ref": "02b7260c-1cf7-46a7-b3ee-c568f562a0ab",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "a8bb0635-0989-4507-b6f5-0cda599ad97a"
        },
        "item": {
          "id": "41d8145c-1dc2-40bf-9d60-ed86f4942004",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c70ed6f3-58f0-475c-bffc-b34ffb129d51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1c47f55-be3c-46a5-bdbc-0edf562f162f",
        "cursor": {
          "ref": "9c4638e5-3d39-4bbc-81dc-b1b0ab681364",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "d21ccfa7-6096-4239-9c37-c850882e1902"
        },
        "item": {
          "id": "f1c47f55-be3c-46a5-bdbc-0edf562f162f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "131c2afb-c4f3-4720-adcb-f7e8d1caf890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17d13e51-fc35-4afa-bf99-36349f52a32e",
        "cursor": {
          "ref": "fbf74307-54da-4d87-8f65-9cba05786132",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "faef935c-23bf-45d6-9380-b01daf744e3e"
        },
        "item": {
          "id": "17d13e51-fc35-4afa-bf99-36349f52a32e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "500a8f3e-767c-4bd2-9be8-74502a71500a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e242d65-cb2f-4faa-bb2d-96e777b2e45b",
        "cursor": {
          "ref": "88ece8e1-f5ce-4b3f-b810-5b97ddfdaec5",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "8fe203f9-086c-4fdd-8aa6-eae7f2ef9d41"
        },
        "item": {
          "id": "8e242d65-cb2f-4faa-bb2d-96e777b2e45b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "29966adf-ead0-4687-9c08-c3f6028c55dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f2b41c-11e6-4bb4-808e-ba8b4344c7bb",
        "cursor": {
          "ref": "c87b9bd1-6dff-4ae7-84ff-0c68c28575f7",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "8b8be9ca-5566-4bd7-8675-5d2bdcc0487d"
        },
        "item": {
          "id": "e2f2b41c-11e6-4bb4-808e-ba8b4344c7bb",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "022da9aa-1539-42b1-9a97-b53d642f5604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3208b68a-927a-471d-9766-4f21b3fe3cd1",
        "cursor": {
          "ref": "23f11950-98ae-4ebe-acd3-68fbd788aa0d",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b629bce0-67fd-4d31-944f-387e0c558a36"
        },
        "item": {
          "id": "3208b68a-927a-471d-9766-4f21b3fe3cd1",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "39f4fcab-dbe9-47e4-a16d-df2f67c71b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1dbfa46-ad9f-42e9-a4be-ef985476dde7",
        "cursor": {
          "ref": "818ff795-b6e8-412a-8a78-92b335a63408",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "21ea6bdd-5478-44a5-acee-7ad04c0c272b"
        },
        "item": {
          "id": "b1dbfa46-ad9f-42e9-a4be-ef985476dde7",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ae8a814f-7d47-468b-880e-6b6ad6ada86a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37200fff-35f6-4445-b995-76c1e65d5f9e",
        "cursor": {
          "ref": "e8bedd64-979f-4839-b015-2fbaea07f620",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "6bb02ac9-e893-4bca-a337-7160fae0fd4f"
        },
        "item": {
          "id": "37200fff-35f6-4445-b995-76c1e65d5f9e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "173e29ef-f442-4014-9ca1-ef323f3f6042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d3592b0-8160-40b2-b226-c35f4adc9f58",
        "cursor": {
          "ref": "fe884bd7-9f80-40dd-8049-30a0a3f503bf",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "afe6dc11-70a9-4fb7-8146-187cd8f86b94"
        },
        "item": {
          "id": "4d3592b0-8160-40b2-b226-c35f4adc9f58",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "33a2bcf7-77fe-40ea-9f27-495d322c5d9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2636cc6e-d251-4a07-b226-fa6d3e760e0d",
        "cursor": {
          "ref": "8da1256f-9879-43ac-a04d-d639bdab5ff4",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "5f63a648-29b4-468a-bf9b-726cc0ffa491"
        },
        "item": {
          "id": "2636cc6e-d251-4a07-b226-fa6d3e760e0d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "414fa3f3-d64f-4646-b5ad-6d653e655a63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8c164b7-e6b2-4cf3-a7d1-b6c6f6e0b3fc",
        "cursor": {
          "ref": "3aeb00a3-0000-4466-9ac1-d431385c7c3f",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "bc7cd234-0f43-4a62-9950-60bf988fd147"
        },
        "item": {
          "id": "c8c164b7-e6b2-4cf3-a7d1-b6c6f6e0b3fc",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "bf2797a1-00f7-4926-9f69-6f35ea77e258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc199174-362f-41bf-b2b7-b776196fba6f",
        "cursor": {
          "ref": "78519299-714b-4e7f-b79d-b97cc70bc368",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "99d56b9c-a737-42e6-a54b-30cee2d736f1"
        },
        "item": {
          "id": "fc199174-362f-41bf-b2b7-b776196fba6f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3c2f8b50-6f9d-4077-a4a5-f10a5e234411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fbe37f8-108b-44a4-bece-4911651e9fd1",
        "cursor": {
          "ref": "b5ddce93-ff48-444c-83e9-11b48eaead77",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "62ee52a0-22db-4b88-8537-700c773570de"
        },
        "item": {
          "id": "3fbe37f8-108b-44a4-bece-4911651e9fd1",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "86eded8c-8a0d-44c2-a133-84bdcb4ad606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e70cede-908f-4caf-be65-a320290a3660",
        "cursor": {
          "ref": "0eec7f5d-d0c4-478a-bd9e-fb70f057d9e8",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c171525f-153c-4df8-a9da-b6a3256d7ff8"
        },
        "item": {
          "id": "3e70cede-908f-4caf-be65-a320290a3660",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8f374a1a-7c29-4732-93a2-2d13b48c4686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c70ffbe3-872d-4557-8885-70984368250c",
        "cursor": {
          "ref": "da98828a-3d9e-477c-a70d-596ae355653d",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "5d102bdc-0b0e-4b5f-b663-4b3c35c079f0"
        },
        "item": {
          "id": "c70ffbe3-872d-4557-8885-70984368250c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "166e4479-d4d1-4268-9f6b-f910951090bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e56dab1-22cd-4974-aedc-90d30f66eb41",
        "cursor": {
          "ref": "670a68f3-843b-4987-9eb0-1e71ffb64439",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "238d7613-48c5-4e5e-bf78-f2f1b6ec3736"
        },
        "item": {
          "id": "4e56dab1-22cd-4974-aedc-90d30f66eb41",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4d0c80d3-1e49-43cd-b1d9-b4b8fe783776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e62d23bb-2487-4551-84c2-791350799370",
        "cursor": {
          "ref": "d4a65c98-cc5e-4946-9c2f-815f5480f1dd",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "54b5a78c-5f75-48e4-a522-f93237cf742a"
        },
        "item": {
          "id": "e62d23bb-2487-4551-84c2-791350799370",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9b741879-a4ae-412b-9548-15b80a93f2b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff87030-98b3-4336-914f-015bf43620fc",
        "cursor": {
          "ref": "14bf7490-5a68-49d0-9364-53aa6462b9ae",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "c6394d2a-0dfa-4b1c-99c0-a549846e20b9"
        },
        "item": {
          "id": "dff87030-98b3-4336-914f-015bf43620fc",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c2467ada-2a86-4bef-a40c-6debd06cb523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d9a86d-d1c7-48e1-b8f8-ab7d8986fd35",
        "cursor": {
          "ref": "bbc975a8-983d-4fc8-bd04-dfdc76de3445",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ca7abc10-8531-4a97-bfb6-8d8257b44642"
        },
        "item": {
          "id": "d0d9a86d-d1c7-48e1-b8f8-ab7d8986fd35",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a7734a73-1e12-4bfc-b8e5-c9be25529fcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f348af51-254f-49eb-8226-5999b0055b90",
        "cursor": {
          "ref": "b48c4d88-0054-4840-8e33-b179efa07938",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "34528958-c6f2-487b-893e-fbfd46dbb929"
        },
        "item": {
          "id": "f348af51-254f-49eb-8226-5999b0055b90",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9fab1cca-041a-4c16-859a-b867787e33cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cbf512b-9cbd-4219-85f4-7bd6a514bbf4",
        "cursor": {
          "ref": "3720b863-8748-4bd8-ae31-819e6e87714f",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a3a08f16-1487-453d-8ef0-cd1b956cb883"
        },
        "item": {
          "id": "4cbf512b-9cbd-4219-85f4-7bd6a514bbf4",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "9864c0d3-78bb-495b-b57a-5325a7c90ae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea062db2-7c7c-4622-a9d1-cf372a741c47",
        "cursor": {
          "ref": "0e036878-299c-4b27-b54c-f2170c84a7c1",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "b94e81c4-da09-4074-b8aa-119375f72bf1"
        },
        "item": {
          "id": "ea062db2-7c7c-4622-a9d1-cf372a741c47",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "bd448108-d6cf-4d45-8538-e2d379d0e062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe88ad98-3a76-450b-b31f-5ebd2e0f4989",
        "cursor": {
          "ref": "893ea138-e995-4853-879d-1b4f5393a6c3",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "ac8171ae-6671-44c5-bbcd-c39d77863922"
        },
        "item": {
          "id": "fe88ad98-3a76-450b-b31f-5ebd2e0f4989",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "52ef861f-1c42-4ffd-9383-a29ca845b5a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf492eb5-95f9-4425-b008-f66e88901447",
        "cursor": {
          "ref": "d5987013-29fa-491f-8e74-3b51c82410a6",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "751489be-b056-4d4f-aa00-e3bba07a8133"
        },
        "item": {
          "id": "cf492eb5-95f9-4425-b008-f66e88901447",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5b65c3e9-a4b8-4f4d-8a82-c66125d01b60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "870555bb-45a0-4f09-a5f6-e1484ae6ea8b",
        "cursor": {
          "ref": "df00598e-61d5-4e9c-881c-2ff8878884be",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "b2bebee5-8f5a-4228-996d-4f64326a5d11"
        },
        "item": {
          "id": "870555bb-45a0-4f09-a5f6-e1484ae6ea8b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "98f56eca-e86b-4d45-90c2-5ed1638d734d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71701024-102c-4e71-b4ee-d74213fc872f",
        "cursor": {
          "ref": "d1ac47bc-39e2-4a43-9303-347fc0cea91f",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "33b76498-9602-4987-8de5-2be88a76f496"
        },
        "item": {
          "id": "71701024-102c-4e71-b4ee-d74213fc872f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7ec87152-7168-40bf-9baa-dc58961484bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e36052-cbd7-4fe9-aed9-72632f4e7276",
        "cursor": {
          "ref": "d81fec55-d7df-4d65-8aaa-260f933953d8",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d9c1f42d-754e-405a-b4c7-768a7523e176"
        },
        "item": {
          "id": "38e36052-cbd7-4fe9-aed9-72632f4e7276",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "9b77e33d-702e-4c40-831b-acd9c58ea14b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b5318c-cfb7-407a-8bcb-d75134e7c436",
        "cursor": {
          "ref": "af665150-bbc6-487c-810f-9477f1bf46ff",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "059ea1f6-09b1-4b37-b4d7-bbf61c9992da"
        },
        "item": {
          "id": "f5b5318c-cfb7-407a-8bcb-d75134e7c436",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "41418d89-50b4-4d63-850a-e8e7369cd272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef0db823-c74e-4d6c-aed6-7c76980043c3",
        "cursor": {
          "ref": "0f16430b-6623-4478-9d8d-09994ce8ab30",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "210456cf-1452-485e-b121-9ea4828cc72d"
        },
        "item": {
          "id": "ef0db823-c74e-4d6c-aed6-7c76980043c3",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "39c59424-e293-4d81-9b1b-8f38f62fe01e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69b45f41-b92f-4aa3-948a-e9d7cb5d36b3",
        "cursor": {
          "ref": "1b36d716-fd3d-45c5-b21c-be9f12ff484b",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a1bfee47-046b-4f40-a2a1-9ed9bba90b0f"
        },
        "item": {
          "id": "69b45f41-b92f-4aa3-948a-e9d7cb5d36b3",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "ef838337-0f2c-43ea-bfbd-a8aacb4fa2fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88df94d5-af0c-43d0-aa31-372971210243",
        "cursor": {
          "ref": "0d694281-7d39-41ad-8929-2be77c861bea",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b447db60-60e5-4c7d-a4e4-68ec303fb6f1"
        },
        "item": {
          "id": "88df94d5-af0c-43d0-aa31-372971210243",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "67de64a3-2613-48ce-a72e-d8d09aa5fb3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed79aa3-37fd-415d-a638-8ac6a514a93f",
        "cursor": {
          "ref": "a634d956-881c-4818-b0ae-bbbd9c5a56b9",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "617ea9a4-b99a-4fe1-b980-c50e450a286a"
        },
        "item": {
          "id": "8ed79aa3-37fd-415d-a638-8ac6a514a93f",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "71e604dc-caf4-46a3-9a92-8dc85f02708d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99025714-5013-4e33-a9c2-84fb7deb9e25",
        "cursor": {
          "ref": "251c031b-c28c-44fb-868c-7b4b8e912b2f",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "68f71a8e-21e2-4db8-ada0-064376fa0089"
        },
        "item": {
          "id": "99025714-5013-4e33-a9c2-84fb7deb9e25",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "41c1d930-3aa8-4ba0-b1e4-7aa52dd19956",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeaab121-09dd-4a35-a5a6-4c8dfaf162dd",
        "cursor": {
          "ref": "17ac2e80-d9c1-4784-a9e4-c8fbc01ac44a",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "d322b2d1-aaa9-46d7-a405-79925ceedc92"
        },
        "item": {
          "id": "aeaab121-09dd-4a35-a5a6-4c8dfaf162dd",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "fd6620b2-0015-48da-a384-2d074f256231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d4f674c-4932-4aef-b58e-f38195bef59a",
        "cursor": {
          "ref": "786858b3-b368-43e7-a566-4887248b19ae",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "3c388c04-9b27-4a27-b19d-fbe4476a8fed"
        },
        "item": {
          "id": "9d4f674c-4932-4aef-b58e-f38195bef59a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "9430c482-acb8-4c16-a827-42e8100492e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3bfb0ef-00ca-45b4-8208-54e3f3f2bc23",
        "cursor": {
          "ref": "23e87085-e081-43aa-898e-0226736949d8",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "96246f21-62c3-444f-8238-7bfb617abe9d"
        },
        "item": {
          "id": "a3bfb0ef-00ca-45b4-8208-54e3f3f2bc23",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "4b6f992e-7e9f-4ecc-9cc9-b21314304bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f7df951-04c7-4aa6-bcaf-7f4114d5fa72",
        "cursor": {
          "ref": "dfb28f93-2172-46bb-9417-4ce567e52e1c",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d4885fe0-be7e-44ac-b25c-40e1403251b7"
        },
        "item": {
          "id": "1f7df951-04c7-4aa6-bcaf-7f4114d5fa72",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "dbe8a091-cd49-4347-9730-69a077eafec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b0794b2-ef7c-4e2a-b3d1-59042ebe45f2",
        "cursor": {
          "ref": "9cac0af6-6204-416d-b89e-e4d23a666fc6",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "31885a01-fc1e-446d-9e44-b49c94e61b94"
        },
        "item": {
          "id": "1b0794b2-ef7c-4e2a-b3d1-59042ebe45f2",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "2e2c29fc-799d-492c-9497-0523c55437c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85deba57-50ca-454c-94a4-8de0401a382c",
        "cursor": {
          "ref": "58994e01-2611-4ba3-ae40-bca8da2f37ee",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b26b87b4-00ce-4902-8c3e-cf2bc58d130e"
        },
        "item": {
          "id": "85deba57-50ca-454c-94a4-8de0401a382c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "05dc219a-3e7e-4c72-aa86-343c631b9c0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0511cef-d1e8-47b1-939d-1b700eee1026",
        "cursor": {
          "ref": "e69f0bee-c498-423e-a238-1e11025e9406",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "8ce27a13-1806-414b-b9aa-d680490b4bc5"
        },
        "item": {
          "id": "d0511cef-d1e8-47b1-939d-1b700eee1026",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "1759e298-f3bb-4d04-9520-790b6f79e726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f0105c-f5b4-4830-8080-249e78c62e86",
        "cursor": {
          "ref": "52521ead-876e-49fe-b4ed-302a9519cef5",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "7733f896-fff6-4efc-828e-1885229b3528"
        },
        "item": {
          "id": "a3f0105c-f5b4-4830-8080-249e78c62e86",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "0d7e50c9-a95e-45ba-9e78-73f59ca2854b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81908aab-2b07-483b-bf52-6cbad9e4191e",
        "cursor": {
          "ref": "173f33ad-4768-4181-b710-efb6bf3424e2",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "667e5f90-3f51-456a-8672-2e0eda3a7055"
        },
        "item": {
          "id": "81908aab-2b07-483b-bf52-6cbad9e4191e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "deff0c55-9a5d-466e-b1af-e05fd0017c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca41819f-f840-4da5-bd36-2a33986842ea",
        "cursor": {
          "ref": "0a078f6b-5a86-45d2-a1f4-4d1b7115b03b",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "baec98a0-17cb-4a04-8642-fb221307458c"
        },
        "item": {
          "id": "ca41819f-f840-4da5-bd36-2a33986842ea",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "711a8009-842a-4573-a386-e390f4fa6885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "295906a8-583b-4078-92cc-999df1288bd3",
        "cursor": {
          "ref": "727fa10e-6d5d-4a8d-beff-ff8b74944aac",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "65ad497c-b695-4c8f-bcde-62d26d3707a2"
        },
        "item": {
          "id": "295906a8-583b-4078-92cc-999df1288bd3",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f6877247-7d28-4392-a52c-0cec730da67a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89aed915-9488-4352-9d87-e3c58fb195ce",
        "cursor": {
          "ref": "e552f3fe-c0e3-439b-9eb9-e40efff3bf84",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "5fae4cea-d39d-45a1-ae31-63abf8c33f60"
        },
        "item": {
          "id": "89aed915-9488-4352-9d87-e3c58fb195ce",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d27b7381-3850-400d-8a04-d7ed0754b2b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b5f3dba-120e-40ae-86b7-e1eb83c44e2a",
        "cursor": {
          "ref": "22e8c273-a94f-419f-9bad-f933890fbf69",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "0477734c-281b-4023-875b-5bff81968bb7"
        },
        "item": {
          "id": "8b5f3dba-120e-40ae-86b7-e1eb83c44e2a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "06ea6f5c-8111-4cd0-bb12-1c2d30d87ef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29311c7a-33e3-4984-bc11-c280bf039f01",
        "cursor": {
          "ref": "c5657677-3b83-4c11-ae80-9106f27a0f14",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "0f51b04c-d464-4be3-9596-cf0b4febf01e"
        },
        "item": {
          "id": "29311c7a-33e3-4984-bc11-c280bf039f01",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "64725ec6-f64c-48db-9750-e61429db0115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3215107-ef02-41eb-97a0-657c05e8e3a8",
        "cursor": {
          "ref": "f4184928-857c-4fd9-8344-b5705f6e8199",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "6218ba83-5fb9-45ea-a45f-7624ec7e593a"
        },
        "item": {
          "id": "b3215107-ef02-41eb-97a0-657c05e8e3a8",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "2029f622-0fe5-43a0-8874-b4b9891003f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e37c564-346e-460b-8f7e-159c71b4adcf",
        "cursor": {
          "ref": "feac1606-1708-4bf7-9573-9b57694e1176",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "1f4ddd42-4339-47a5-b0da-8d93839c3011"
        },
        "item": {
          "id": "6e37c564-346e-460b-8f7e-159c71b4adcf",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d6cf3187-925d-45f0-b854-cadbd4681232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f5d7c6c-275f-443d-8309-16421c0889f0",
        "cursor": {
          "ref": "0679328a-62df-412e-980c-c09bc2e3d632",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "1c761af2-d759-4433-976c-83fd6fde32b7"
        },
        "item": {
          "id": "6f5d7c6c-275f-443d-8309-16421c0889f0",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "50f06bb0-a3fa-46b9-aa2f-b06eeb871a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d83078eb-29fd-4d97-8e30-c89a07a7d6ee",
        "cursor": {
          "ref": "84677ef7-2d2b-4d80-a61d-e5a82dffeed6",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "feac9747-e41b-4f63-83f9-0816cb70aefc"
        },
        "item": {
          "id": "d83078eb-29fd-4d97-8e30-c89a07a7d6ee",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b142c91a-a83a-4f2b-a4f7-94df38ae57cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8928bd9d-4f2a-4ed5-88dd-2556a7af9058",
        "cursor": {
          "ref": "a95fee29-e7cd-4f48-a143-faea0f456c3c",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "8bb48872-e5e2-4bb5-a87a-4ab836e828a7"
        },
        "item": {
          "id": "8928bd9d-4f2a-4ed5-88dd-2556a7af9058",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "bed50aa6-9b41-4962-a847-0224a051c5e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82456c09-e513-4e20-bfa8-7c79b1c6c734",
        "cursor": {
          "ref": "b147d294-a47b-4dca-9b8a-a2d02bdf8d97",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "5f95aa3e-035f-4ecd-880b-ca1f583a553e"
        },
        "item": {
          "id": "82456c09-e513-4e20-bfa8-7c79b1c6c734",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "232d4429-372c-4013-9d76-be58d40a172c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec255bc6-97a1-4d48-a81d-2cc48cc0bfe8",
        "cursor": {
          "ref": "96540a97-adf6-41d5-a8cc-42cfb1cc7801",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "2196d391-09e4-4206-a9bb-5358938aac6a"
        },
        "item": {
          "id": "ec255bc6-97a1-4d48-a81d-2cc48cc0bfe8",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "1a6df861-6f1f-40c6-a749-cda506aaa616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11ea48b8-cbe9-4dca-9c29-6776509a6571",
        "cursor": {
          "ref": "379a28c5-377b-481b-a171-1d65e4a241e8",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "230a7f04-8de6-4b30-be7c-b2f891ca4b10"
        },
        "item": {
          "id": "11ea48b8-cbe9-4dca-9c29-6776509a6571",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "70e29452-9e0c-476e-aefa-4b44764a2acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f018d79-3100-485c-b412-addd29b1d9be",
        "cursor": {
          "ref": "764f8cd2-b8bf-44b2-8728-2510a25d6718",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "22a6b92d-97d1-49f4-a04c-8f9eb1ae9768"
        },
        "item": {
          "id": "7f018d79-3100-485c-b412-addd29b1d9be",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "3c78193b-4086-4ea4-8969-5cbb89a3febe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76fea64c-2f04-4076-b0ee-2009f9cb84ad",
        "cursor": {
          "ref": "cf43adba-8b6e-4218-916e-b1450bcf31bc",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c0c1fcb6-1b71-430f-bfdb-fefe753faebd"
        },
        "item": {
          "id": "76fea64c-2f04-4076-b0ee-2009f9cb84ad",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a5c4d2ba-9b13-49d3-8cbc-333ecde03384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "218fef5f-050d-4d92-a899-e0f421de6247",
        "cursor": {
          "ref": "49071a40-77c3-4d42-9577-0de50b3efc71",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "45d431a3-0a50-4aba-891a-5cc1196a99cb"
        },
        "item": {
          "id": "218fef5f-050d-4d92-a899-e0f421de6247",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "a75ad33d-0a26-406a-bbe7-1b41a8662a43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "866fcf8c-7967-4e0c-9912-3616fe0b96be",
        "cursor": {
          "ref": "d3c7b5a5-1d50-491e-b84a-d1b46b12110d",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "0f07d37c-0b5f-4b49-b0a6-df99fa75c946"
        },
        "item": {
          "id": "866fcf8c-7967-4e0c-9912-3616fe0b96be",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "72247cbc-f916-404c-b6f9-e33e20894854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc262f7-c595-47b5-98fa-786171a4b6b1",
        "cursor": {
          "ref": "c3a8423e-8236-48cb-ae9b-b910027ec15d",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ab6f38b0-cd94-4663-a105-29a8be516963"
        },
        "item": {
          "id": "4cc262f7-c595-47b5-98fa-786171a4b6b1",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "6b26386e-1af5-40e9-ab08-fbe8bd00e1c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf30340a-933b-4fd7-b91c-9c8799622f98",
        "cursor": {
          "ref": "1ae66d46-7069-419e-8465-b2700bc865d6",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "49514d59-14a4-4715-a056-de86464de7f9"
        },
        "item": {
          "id": "cf30340a-933b-4fd7-b91c-9c8799622f98",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "5e58e5a9-9324-4462-82d8-3fed4c6a089a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f1e60b6-0756-4514-adfa-7cf77fb0f4bb",
        "cursor": {
          "ref": "7789f7da-fb8b-40ee-87e3-813a0df88d0f",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "04188760-b256-4cf8-aca7-f2988e4cb54a"
        },
        "item": {
          "id": "5f1e60b6-0756-4514-adfa-7cf77fb0f4bb",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "363927e5-c822-4839-bb55-9a799803ee4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9109effe-eb4e-4672-89a1-46d01b8fac07",
        "cursor": {
          "ref": "7a2c1aeb-4be8-4ebf-a631-dc926703d622",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "8542295d-e72e-4d56-ab00-8b7b0543a332"
        },
        "item": {
          "id": "9109effe-eb4e-4672-89a1-46d01b8fac07",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "8cfd5ea4-e49a-4117-b5c6-1dfffcdd4de5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d2e550-3f56-4d2d-9975-28c53ab3ebf8",
        "cursor": {
          "ref": "a3c4b30f-459d-4ac7-a90c-a0c3fb27e28f",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "240f952e-ffb6-4e2a-9915-c1aadbfb4958"
        },
        "item": {
          "id": "43d2e550-3f56-4d2d-9975-28c53ab3ebf8",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "88ac2c84-c0e8-4e09-82c8-c65aa45cdb9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b901209c-0370-4b78-94d5-f17120b95fa7",
        "cursor": {
          "ref": "4d49a2f9-139a-42a9-99d7-1ce1fc910e29",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "acb0b3fc-f39f-4f92-b275-33888ea07083"
        },
        "item": {
          "id": "b901209c-0370-4b78-94d5-f17120b95fa7",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "47acd1ba-8b67-4ff2-8870-c06dbb8c8d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23230af0-89b3-46c4-a1b4-780b00e5a101",
        "cursor": {
          "ref": "03381a8e-4f5e-471d-9337-257f4d688301",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "bb0dbb6a-c191-411f-a1c4-011c5c6d3644"
        },
        "item": {
          "id": "23230af0-89b3-46c4-a1b4-780b00e5a101",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "ecb08817-9527-45bb-96aa-7d829145e6fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd575afe-c130-4cf3-ad44-e390104dfcf1",
        "cursor": {
          "ref": "0d64967d-8123-415a-9f89-17a68b4874a1",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "9216cc74-d7a4-4819-8d78-24a7cbf0cce2"
        },
        "item": {
          "id": "bd575afe-c130-4cf3-ad44-e390104dfcf1",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a0247341-3042-4f25-ba40-6f6b52241730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70a3d0dc-eacb-49f1-969d-4b676594ca78",
        "cursor": {
          "ref": "b2ae2c13-cc77-4c01-8903-f84a5582293a",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "7b348352-138f-42bb-804f-d08d81f742b7"
        },
        "item": {
          "id": "70a3d0dc-eacb-49f1-969d-4b676594ca78",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c1554afe-5241-4262-8368-3e4b66c0e122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21cfbb83-6bb8-40ad-8372-22bc8e20ad30",
        "cursor": {
          "ref": "bdd912d1-8fa9-4bce-93b7-f248f093a4bd",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b3ddafd3-6c06-4720-87f4-212c57559471"
        },
        "item": {
          "id": "21cfbb83-6bb8-40ad-8372-22bc8e20ad30",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f1c352dd-2ddd-44f7-989c-68abc6bf00c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e20b1582-b4e1-4fe0-be61-c46c077770b2",
        "cursor": {
          "ref": "a9dbd17e-400c-4e0f-be7b-bf5e6def5673",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c1585cf9-f877-4348-8d4e-196bf8dd1dc5"
        },
        "item": {
          "id": "e20b1582-b4e1-4fe0-be61-c46c077770b2",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "939ee770-6b73-4452-9e1f-5e8b15d6e7f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e50299f6-ab34-4b35-b32e-7daa06a28b14",
        "cursor": {
          "ref": "0aba7488-750b-4659-94e3-1e3dfa3be7e5",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "5f5c55f8-ab0b-4e6f-8ccd-cb746d08fce5"
        },
        "item": {
          "id": "e50299f6-ab34-4b35-b32e-7daa06a28b14",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c5d7415c-9e43-4ee8-8bc0-6627259e5e6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "083641dd-946a-441d-8773-750fb44cd611",
        "cursor": {
          "ref": "c4247fd2-37e3-4f34-a453-fe596d178ccf",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "6299f5a7-4686-40fd-8019-5d99b987389c"
        },
        "item": {
          "id": "083641dd-946a-441d-8773-750fb44cd611",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "0b5f8884-9a02-40b7-b389-87d2b6d0386c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3984c43-797b-4fb2-99db-a52f283405fd",
        "cursor": {
          "ref": "cb1d3ff5-2c07-4481-a315-4eac52afd862",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "6265e44d-5d71-4108-b84e-e2e46c9be1de"
        },
        "item": {
          "id": "f3984c43-797b-4fb2-99db-a52f283405fd",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "5dafccc3-ae1c-4ce9-87c6-b0666043abe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5868c769-ff5d-4516-8940-7353ba51bf50",
        "cursor": {
          "ref": "23770a60-ac57-4349-afac-ff0f03c8e89c",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c009e9db-cb23-48f8-9cc2-4412daa16ebe"
        },
        "item": {
          "id": "5868c769-ff5d-4516-8940-7353ba51bf50",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "07167c43-58de-4a9f-aa47-d24286b3358a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bfe6034-37a4-4473-b921-c26b3eb17204",
        "cursor": {
          "ref": "e3ef0cab-c032-4345-bea7-a33ee576b76d",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d83a7e5b-1c81-4e7d-bdc0-4bc694b60bfc"
        },
        "item": {
          "id": "9bfe6034-37a4-4473-b921-c26b3eb17204",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d2038627-bc12-46ba-ab1d-80dc9b5c9b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0cfe912-11c5-44d8-a111-941857882d12",
        "cursor": {
          "ref": "d271ede2-0c8f-4b82-b2f5-fdb50d424d71",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d7c774b4-b175-4635-914e-5fba1875d838"
        },
        "item": {
          "id": "d0cfe912-11c5-44d8-a111-941857882d12",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b133221a-9c6d-4a80-b98d-f1db57d21b57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56c53d56-352f-4680-9e0c-d37c72c4dc72",
        "cursor": {
          "ref": "5f082af5-7ece-44ee-9487-e321b82ba568",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "de604dda-1bf3-4300-b5ad-6a7a8285faf2"
        },
        "item": {
          "id": "56c53d56-352f-4680-9e0c-d37c72c4dc72",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "2fab0039-46d8-4bbe-878a-4acd8537593c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe3bc537-2819-4933-b68f-8f4ce4c370de",
        "cursor": {
          "ref": "5058d93a-aee5-44f7-b51d-6287a54d59d1",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "45c48328-0a92-4190-9245-6408915359ab"
        },
        "item": {
          "id": "fe3bc537-2819-4933-b68f-8f4ce4c370de",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "73275134-cf90-43bc-96c0-bf0f21477e27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "513c85ec-ebb0-4f66-ada2-79a5d9ea08be",
        "cursor": {
          "ref": "b6950424-0b8c-48a1-a420-4445281c24b2",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "5117c47c-9af2-454d-88b5-c3c321d3c8c1"
        },
        "item": {
          "id": "513c85ec-ebb0-4f66-ada2-79a5d9ea08be",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "7b5867fc-892c-40e2-aa7c-ba7caa5db298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775101b9-4ffc-467a-b43e-dd5f465aced7",
        "cursor": {
          "ref": "45ad364e-57fe-4e4c-b243-d5ef4c9c2412",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "251c0458-f488-42f8-a9dd-d708c7da37c0"
        },
        "item": {
          "id": "775101b9-4ffc-467a-b43e-dd5f465aced7",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "108d195a-0b3e-4577-aa4f-eda17118d7e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7408ceff-eb11-46aa-96be-d7202a7caacd",
        "cursor": {
          "ref": "81be7262-3c01-423f-9e78-2fb9b11ed6ef",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "d73fea2f-90a5-44a8-813b-95aa2c5e2d9f"
        },
        "item": {
          "id": "7408ceff-eb11-46aa-96be-d7202a7caacd",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "fd68eeaf-2efd-42a2-91d0-1c952fba5b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f177c6b-d560-486f-a05a-c2b6ff4ad7d4",
        "cursor": {
          "ref": "dc87104c-2f44-4acd-af10-50a7fd28d647",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ac982506-9d4b-455c-bd7e-cb2858090d8c"
        },
        "item": {
          "id": "5f177c6b-d560-486f-a05a-c2b6ff4ad7d4",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "46a6349b-0b53-4af9-b3b9-0d70a31cb7be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf6646dd-4783-49b3-b2e4-e04c4a376f40",
        "cursor": {
          "ref": "e50cb028-fb93-48db-9d16-6547e0039381",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "6f9acd79-3a72-4b40-bd7b-f6394aa3c108"
        },
        "item": {
          "id": "cf6646dd-4783-49b3-b2e4-e04c4a376f40",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "f82e30ed-127f-4e50-aabe-f0b16fb0c107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf721cbe-4ad4-446b-bf91-2a9dc16cf484",
        "cursor": {
          "ref": "971463fd-a238-403f-8fcb-24935278a239",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "d4ffe6a2-ad76-444e-99db-c60e466dc957"
        },
        "item": {
          "id": "cf721cbe-4ad4-446b-bf91-2a9dc16cf484",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "cf35ebeb-eb66-424b-ad9b-7f4351a5f541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9354999c-299b-49c4-8d01-ae1742f76f3a",
        "cursor": {
          "ref": "e171160f-16e3-467f-b4d8-f4e5b33a06ef",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "3b39a94f-1a5b-4c2c-aed9-7f3deb0233fd"
        },
        "item": {
          "id": "9354999c-299b-49c4-8d01-ae1742f76f3a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "7123099a-ced4-489d-a4a0-9b911cc26381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe546d9-6a4f-4f75-b1da-3cf4e60f8ee6",
        "cursor": {
          "ref": "7bb02aca-5b27-405a-8106-e38a17ca95a8",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "57c31b1d-2ef5-4424-b7a8-b68dad41622d"
        },
        "item": {
          "id": "cfe546d9-6a4f-4f75-b1da-3cf4e60f8ee6",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "bd0a87d4-6ff0-430a-84d8-755a11c3f29f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "983e50a2-4a16-47e6-84e5-0cd807c1f92a",
        "cursor": {
          "ref": "cf012238-adeb-42aa-bea6-e1e87ffb2578",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b0965fa6-b601-4ecd-865a-2fa256affc0f"
        },
        "item": {
          "id": "983e50a2-4a16-47e6-84e5-0cd807c1f92a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "77f62a06-e62b-41b6-83e9-0b8db7f1feb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda1edf3-55ac-4cdc-8b1b-f759d81a176e",
        "cursor": {
          "ref": "5e9db82b-c8e8-4611-a882-7a6ff37dad9d",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "4f72342d-3864-4cd4-8d64-51f899243aef"
        },
        "item": {
          "id": "bda1edf3-55ac-4cdc-8b1b-f759d81a176e",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "9e221f69-5371-4cac-a2d9-4f4c36ecf37d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3895192-4abe-4e68-9031-9599a2f94fba",
        "cursor": {
          "ref": "da20b32a-85b9-4cda-b2c2-21f8fe72e5cc",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "c07f1f17-f3e1-458a-bbe8-fd4960a3dd71"
        },
        "item": {
          "id": "e3895192-4abe-4e68-9031-9599a2f94fba",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "351182cf-2f73-4fd2-8b38-ca3bb17512e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "132ae6f1-28f8-48fd-b76e-11ddd8d31452",
        "cursor": {
          "ref": "9df292fe-83a1-4f4f-aeff-a77709694230",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "8bb7c5c3-1edb-4cb7-a5a3-171160f5e4b8"
        },
        "item": {
          "id": "132ae6f1-28f8-48fd-b76e-11ddd8d31452",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b61d8f09-d2ec-4ad7-9525-fd8423e525e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acf8010c-9fac-4909-986f-7b3d92df588b",
        "cursor": {
          "ref": "c30e24e8-579b-4e9d-8712-45c71a217d02",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "bd2f2513-9058-4882-90e5-bf34636ad685"
        },
        "item": {
          "id": "acf8010c-9fac-4909-986f-7b3d92df588b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "28a3e9e8-33fc-454e-903f-08d5c8d0fb42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e566c24c-7003-4347-a905-9e9c6687c938",
        "cursor": {
          "ref": "375698bd-5691-416f-b3a1-34c6e90473ec",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e605cf69-e816-41c4-b864-e56586e689a3"
        },
        "item": {
          "id": "e566c24c-7003-4347-a905-9e9c6687c938",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "8de7a6dd-5698-48cb-a005-b20dfe943fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8526181-cdbc-423c-97dd-2e9e7d7c701e",
        "cursor": {
          "ref": "dd1b50dd-758c-4d0d-8e96-1603a5717b56",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "e7200aaf-53ff-4586-a2a6-a41b23292e82"
        },
        "item": {
          "id": "c8526181-cdbc-423c-97dd-2e9e7d7c701e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "2d6d7b99-caf1-4456-aca8-42f6fe74a302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "176f6706-c2be-493b-8f16-121fe5554ab7",
        "cursor": {
          "ref": "470eae0b-026e-48e1-8d94-9ad11cb1af36",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "51994d54-c25e-4c72-9479-3dc8a4f22409"
        },
        "item": {
          "id": "176f6706-c2be-493b-8f16-121fe5554ab7",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b7bb866d-cb18-45e3-8bef-bed55e129202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db5e29bb-a158-4556-8c1f-fc7c5fec0782",
        "cursor": {
          "ref": "1b8751c8-8f3b-4fad-8c52-12a3fb598241",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f6937d4d-8950-454d-a473-972524569c2d"
        },
        "item": {
          "id": "db5e29bb-a158-4556-8c1f-fc7c5fec0782",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "c4f86d02-d438-48d2-9dfa-6069fef11996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ee0f25-8012-4fd8-8f11-6825f6bd5a28",
        "cursor": {
          "ref": "e36b366e-ebf7-45d3-b1a6-ff901347d715",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a66dc9d2-0066-4347-b09c-bd472a77e175"
        },
        "item": {
          "id": "22ee0f25-8012-4fd8-8f11-6825f6bd5a28",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f125d963-f043-44dd-b84f-2be64983cf77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe01e570-a26b-4b9e-a09f-e3150db9d494",
        "cursor": {
          "ref": "339393a5-e9b8-4da3-9cb8-bdba537dfbae",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ada1730f-cf00-47a5-a209-6371433385ee"
        },
        "item": {
          "id": "fe01e570-a26b-4b9e-a09f-e3150db9d494",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "35162157-6976-4f45-9d42-47dac48bbc87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f712a929-722a-435b-be03-1a57417a72d7",
        "cursor": {
          "ref": "4d9f4761-27c7-4cb1-a0c8-830dda43e020",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ce2381d7-fe30-4083-839b-3a1b27b2e7d3"
        },
        "item": {
          "id": "f712a929-722a-435b-be03-1a57417a72d7",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "edd64444-2d4c-4e98-9cd7-defbc3da6c9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c98fbf-ac2f-42b4-a45c-055cc680e6e2",
        "cursor": {
          "ref": "5620fa8c-6970-446d-9d24-943200d24925",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "158ef053-eb99-43e1-9d83-55e7d31ca652"
        },
        "item": {
          "id": "f5c98fbf-ac2f-42b4-a45c-055cc680e6e2",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e53330ab-e93a-4dc7-8e1d-15c35e9236cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ca63fec-f520-45c3-92fd-e62c7f6750dc",
        "cursor": {
          "ref": "e2e59068-f4e6-438c-ab08-3cb79f93efa3",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "37a7e987-818f-4cab-a4eb-384deea47e9a"
        },
        "item": {
          "id": "7ca63fec-f520-45c3-92fd-e62c7f6750dc",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "59babb3b-7889-44cb-afab-505e267d6179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48a63471-2f65-44df-8310-536fa0999dea",
        "cursor": {
          "ref": "9b69881c-d66e-4a97-8eaa-30f3575c72eb",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "d260fe33-7f3c-42c1-b1a8-a7e06f38e894"
        },
        "item": {
          "id": "48a63471-2f65-44df-8310-536fa0999dea",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f915ec94-26e5-4d35-a38c-f4274dd8f09c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9647cfac-3288-4894-ba5a-cbc7c21f5c2e",
        "cursor": {
          "ref": "4367a76d-3cd0-4bef-ab3e-d8287be68380",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "e6a1ea95-85da-496c-b92c-0d96b8489044"
        },
        "item": {
          "id": "9647cfac-3288-4894-ba5a-cbc7c21f5c2e",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "fd4acd5e-a5db-4d41-84a8-6b68c4620222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19b0fc39-a6ec-42b3-b1b5-6365ea044a07",
        "cursor": {
          "ref": "a32e6251-c026-4d0f-ab6a-7b6062d7e36b",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "c1b19353-e772-4649-a39b-3252a81b0061"
        },
        "item": {
          "id": "19b0fc39-a6ec-42b3-b1b5-6365ea044a07",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "184254ae-5586-41f6-a692-c026cfc74d61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef20512e-7d75-4584-a6c8-21e3d0667a9e",
        "cursor": {
          "ref": "c928f0a8-88b1-43f2-b7b6-4d385912fcc1",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "50076a9d-f803-4472-84c0-348a7232579b"
        },
        "item": {
          "id": "ef20512e-7d75-4584-a6c8-21e3d0667a9e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "3126914c-a4c9-43d1-bf19-f846e4474686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8028298e-180f-41f2-aaab-c0486293d75b",
        "cursor": {
          "ref": "2dc21d78-6a15-49a9-893f-67aab943dadc",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "79a4d9f4-97dd-47b5-aefb-719287ba9173"
        },
        "item": {
          "id": "8028298e-180f-41f2-aaab-c0486293d75b",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "fffceb30-1e5b-40a0-a34e-d2da8bcf3578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f63c40-5e00-440b-a60c-79bad538198c",
        "cursor": {
          "ref": "99d1d89c-af79-40cd-b430-faf2e1a62675",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "53b5bf91-7f7e-47b7-8e35-804c09ccd7b2"
        },
        "item": {
          "id": "f2f63c40-5e00-440b-a60c-79bad538198c",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c7b0d4fe-f760-4db8-af99-46a7c6fcc6d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fbe4a03-77d4-4b88-931f-6180b9bf8729",
        "cursor": {
          "ref": "100dd86f-0b9b-4402-ac06-90c932f479bb",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "313a6250-7488-4425-b472-f52640db2f13"
        },
        "item": {
          "id": "1fbe4a03-77d4-4b88-931f-6180b9bf8729",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "c0d9f7ff-76d3-48a8-89d4-957ca155bebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc339f3-308d-4fc8-8599-bdb1063d1a85",
        "cursor": {
          "ref": "bc2410b6-73af-4d90-bef7-efde31d3ead3",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "43dc4788-270a-4461-ac3d-c866fd5fc821"
        },
        "item": {
          "id": "3bc339f3-308d-4fc8-8599-bdb1063d1a85",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "26bb8909-69b7-4c79-89e8-2695bff550c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b251d91-6bd6-450f-b91f-079bad0c16f5",
        "cursor": {
          "ref": "7df7c497-bb70-4950-85ac-784f15f42538",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "0d7e17aa-6122-4118-98cc-864d78aa7782"
        },
        "item": {
          "id": "9b251d91-6bd6-450f-b91f-079bad0c16f5",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "1dd0e986-7c8a-4113-9ea7-9693c5de7539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd5fad5-cbe7-4a96-a989-d3c746412258",
        "cursor": {
          "ref": "977a5265-9db0-4425-a85f-4813a1477c18",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d4a6789d-76f0-4d2d-a4b1-91e95dd0efda"
        },
        "item": {
          "id": "bbd5fad5-cbe7-4a96-a989-d3c746412258",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "7c90994c-2dca-48e7-9380-3b460f47f923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86a93334-79ff-44a9-94a0-31d6b2f4c02a",
        "cursor": {
          "ref": "45b56485-254b-49d6-970b-1d732f304043",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "00051428-5751-441e-af4c-f37025b234d8"
        },
        "item": {
          "id": "86a93334-79ff-44a9-94a0-31d6b2f4c02a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e49359d7-6bb9-409d-b685-330e8f7f1b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7926acb6-8beb-46f4-8204-b8c734317c56",
        "cursor": {
          "ref": "a6381d55-6649-45b4-84c5-3772a25b45e6",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "61b4494d-c100-4a9d-8a5a-554cdbf30032"
        },
        "item": {
          "id": "7926acb6-8beb-46f4-8204-b8c734317c56",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "b8c8c55d-bdae-45ef-b47c-aeea80e07b0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a77bc871-aba7-4ccc-abd2-807e7e80a497",
        "cursor": {
          "ref": "30a605ea-46a8-4956-97cb-7757830fe551",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "cc5fea68-5063-48c5-b9eb-9ed035a0a9d8"
        },
        "item": {
          "id": "a77bc871-aba7-4ccc-abd2-807e7e80a497",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "92790312-6c86-41f2-80ab-d5398a324c1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f8781e-3bd0-4bd2-8ba3-0a4358e3b3c2",
        "cursor": {
          "ref": "4583113f-3ef7-4150-a73a-1b9fbac076df",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "c9e76234-caf1-437c-af82-45803f38c7bd"
        },
        "item": {
          "id": "a8f8781e-3bd0-4bd2-8ba3-0a4358e3b3c2",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "87ec65d9-1bc4-4b13-afaf-b20496f02ce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05fec8a8-e40e-4fd5-a325-747b549112d5",
        "cursor": {
          "ref": "b0e98d68-20a5-455b-9d2d-96fbc0d3ea2b",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4ab653a2-0c61-454c-b65d-003839faf9b4"
        },
        "item": {
          "id": "05fec8a8-e40e-4fd5-a325-747b549112d5",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "33bfe615-1c58-4318-aa11-d6ffa58b9b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ea4ad33-902a-4cb9-92ed-089bf00df55f",
        "cursor": {
          "ref": "83e49f62-fc49-41d5-9ada-e5daac28ea90",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "2ce1b59e-9919-4e6b-93d1-7e39f5f4d429"
        },
        "item": {
          "id": "1ea4ad33-902a-4cb9-92ed-089bf00df55f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f21f6b12-cce7-4a84-9456-1e7155564375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5de7e42-02a1-4539-8953-79670a123cbe",
        "cursor": {
          "ref": "457a0294-dbb1-4109-811c-47603779d6cb",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "a5850aba-34ff-4829-90b6-6a37a81df744"
        },
        "item": {
          "id": "e5de7e42-02a1-4539-8953-79670a123cbe",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d3a63f6f-de75-4d8b-bcc1-ec5f1edaca08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc6b22a-2073-45cf-aba9-54aeee393f15",
        "cursor": {
          "ref": "53baa3f8-fd8f-4596-b13e-6cf51d8782d6",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "896cab90-b672-4860-aa52-ce8a25693414"
        },
        "item": {
          "id": "1fc6b22a-2073-45cf-aba9-54aeee393f15",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "39ba16dc-cc92-40eb-8794-a6714cec1a70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ef3d5f-7500-4273-b4ee-9b2516bd0c03",
        "cursor": {
          "ref": "b67619a1-c37a-4bbd-a8ba-bfaf453a4bfe",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "8813b1fc-1491-4137-a3ba-1fbad7369f75"
        },
        "item": {
          "id": "e5ef3d5f-7500-4273-b4ee-9b2516bd0c03",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "57c5af79-30eb-43a8-86d7-6c7634f4cdef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8456784f-54ce-4dac-9195-f02c89753b83",
        "cursor": {
          "ref": "6271628e-9675-4df8-95e5-f3fbb45df6f3",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b2eea214-f3ee-4930-83ac-3d5b558e2d8f"
        },
        "item": {
          "id": "8456784f-54ce-4dac-9195-f02c89753b83",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "778e1890-b3a7-42ab-aee1-8e06630fdef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba37fc23-bdc2-4f3c-8db1-f7092842008f",
        "cursor": {
          "ref": "cdeaadd2-7339-46c2-b10b-2e00b675ede4",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "1cd0c6a5-df14-4b55-9b9c-9bec01d72576"
        },
        "item": {
          "id": "ba37fc23-bdc2-4f3c-8db1-f7092842008f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "8b5f0b89-7ebe-42f1-8f31-881e219bccb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6caf928d-c8e4-4e85-953a-aa920f6f33a6",
        "cursor": {
          "ref": "b8e4b366-a97d-4eb3-a12f-d4ce485bf823",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "470342a7-f8dd-47a1-a54d-8270a4f4232b"
        },
        "item": {
          "id": "6caf928d-c8e4-4e85-953a-aa920f6f33a6",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "fb89e593-edcd-4d14-ba66-a5ff780e7e33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "549e1c7d-3a76-4d2f-a1b0-6ec1b844c733",
        "cursor": {
          "ref": "434cb69a-d6af-48d6-b8ef-dd79fd118113",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f92dc3e4-62db-46da-bb4c-d7e32e88c776"
        },
        "item": {
          "id": "549e1c7d-3a76-4d2f-a1b0-6ec1b844c733",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "25fa6a6e-f1f2-4885-80f4-42aaafc43dac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed12927-27d6-4121-b6e1-45fea779604d",
        "cursor": {
          "ref": "ad3de2bc-f5c6-4d01-8ed5-de699c51843d",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "28997600-f388-4423-9f15-27823aff136a"
        },
        "item": {
          "id": "0ed12927-27d6-4121-b6e1-45fea779604d",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "dcff8a19-4624-4789-8614-f1881a0d68cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32c1fc08-67df-43a2-af23-57c4918f5e68",
        "cursor": {
          "ref": "9614930c-8e62-41c4-a409-2212f64d6197",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "46e9357c-d93a-4b89-adee-e9aa715a6795"
        },
        "item": {
          "id": "32c1fc08-67df-43a2-af23-57c4918f5e68",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "01774e2e-63fd-4444-8d5a-9ee4e8e5ffe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75828025-465b-44ed-b67b-63aa5b6a3e47",
        "cursor": {
          "ref": "6e31c410-97c7-4872-ae1d-96364c1f7ed2",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "120c6b7b-e503-4945-b1df-9a73a5e5addc"
        },
        "item": {
          "id": "75828025-465b-44ed-b67b-63aa5b6a3e47",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "36cfd937-73c5-42e8-8f45-e4d713b9f9b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f886ea3c-acde-4031-aeca-ee84277ed5c2",
        "cursor": {
          "ref": "a5c1c3f8-5fc9-4bb6-b171-6ca95e5546dc",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "972546ba-66db-45b1-a771-cec381c7dd0b"
        },
        "item": {
          "id": "f886ea3c-acde-4031-aeca-ee84277ed5c2",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d6062426-ffc6-48d8-bc34-a19497cd0a43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b501db-fa80-4987-9e46-ba5a07eb0896",
        "cursor": {
          "ref": "3714e759-54d0-4ee5-94d6-3fc05578bddc",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "2cb8c655-9510-4581-9e1e-f07fd31e7f23"
        },
        "item": {
          "id": "62b501db-fa80-4987-9e46-ba5a07eb0896",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "358c53a5-60b1-4815-9b73-d754939a1d28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62481943-603b-4351-8d6e-a45c15e6a859",
        "cursor": {
          "ref": "6187b297-715e-492e-9866-0db53588fb8f",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "15a38d3b-80f2-4bbd-9ed1-e1bdb6f4069f"
        },
        "item": {
          "id": "62481943-603b-4351-8d6e-a45c15e6a859",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ea3c8fb2-fee0-42dd-8182-f9bebe552fd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29dd2e1c-7382-4834-8e39-c336b3e70679",
        "cursor": {
          "ref": "40365e5c-6416-46ce-afc3-1f38559b82f4",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "968be2b7-6c45-41c5-b7b8-92efb1e132c3"
        },
        "item": {
          "id": "29dd2e1c-7382-4834-8e39-c336b3e70679",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "7a0aab86-afbe-4006-808d-9845f8cd66ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac2aca2-ea51-43b5-93a1-3e72881b91fc",
        "cursor": {
          "ref": "fc2cddf4-b7fd-4957-9f85-997ad0bdad2d",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "5aea2e59-b213-4ad8-b9a3-c48a5f6491d9"
        },
        "item": {
          "id": "bac2aca2-ea51-43b5-93a1-3e72881b91fc",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "a3b37a3a-f409-49d3-980c-497f1e904264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e744a1-2c90-4683-b8b8-84a38c47a5d0",
        "cursor": {
          "ref": "79087447-f88e-48a8-813e-4f58f512fea5",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "02ea9746-47e0-46d5-9ed4-3ae115752b24"
        },
        "item": {
          "id": "43e744a1-2c90-4683-b8b8-84a38c47a5d0",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "82e57148-c37f-44c4-a7a5-8604f2a22100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "48fea15b-b7b8-47c4-960b-c0cd4fb360df",
        "cursor": {
          "ref": "c2092d56-04e9-43f4-b65d-e7a8d78bbf12",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "0c106dd8-6ebd-4664-957f-22751b7a73b0"
        },
        "item": {
          "id": "48fea15b-b7b8-47c4-960b-c0cd4fb360df",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c1c86f7f-51f0-4d3d-8d3d-ed3615342d6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "4fdb5a90-eecd-450b-9416-1ca4e35256fc",
        "cursor": {
          "ref": "e24134a8-144e-4581-8f34-09eb759fe2be",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "61950801-b6cb-449a-b695-ab94313653c5"
        },
        "item": {
          "id": "4fdb5a90-eecd-450b-9416-1ca4e35256fc",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "a39e8f4c-f900-47ed-b67b-d20c37feea9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "1fe175f3-97ca-43df-a1e4-c4e12413db76",
        "cursor": {
          "ref": "14759ccd-9250-4ce7-b270-ef164d953c7a",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "cea7b077-c6fd-4eab-bed9-c2cf2f5c8472"
        },
        "item": {
          "id": "1fe175f3-97ca-43df-a1e4-c4e12413db76",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8472a7c4-8512-44ca-9a93-9c3966ee2b46",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe175f3-97ca-43df-a1e4-c4e12413db76",
        "cursor": {
          "ref": "14759ccd-9250-4ce7-b270-ef164d953c7a",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "cea7b077-c6fd-4eab-bed9-c2cf2f5c8472"
        },
        "item": {
          "id": "1fe175f3-97ca-43df-a1e4-c4e12413db76",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8472a7c4-8512-44ca-9a93-9c3966ee2b46",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90cb38a7-5608-4c9f-99a9-910a8c4bc218",
        "cursor": {
          "ref": "2e269d62-9cf9-4b2c-b7ab-7c503adeb234",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b31207f2-f2b5-472f-9f70-8f11e089fb14"
        },
        "item": {
          "id": "90cb38a7-5608-4c9f-99a9-910a8c4bc218",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "635e16e8-6a6b-4c57-8d9e-402b63bb07ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ebeba1b-f87d-4804-9a19-a77eb8a4efe9",
        "cursor": {
          "ref": "bc92f391-475f-44fa-81de-d6ba84bed79e",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "94d388e8-459a-4d88-8ba6-c800d5279e74"
        },
        "item": {
          "id": "1ebeba1b-f87d-4804-9a19-a77eb8a4efe9",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c05f8fa0-89ae-4438-9b1f-6d976c0531d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}