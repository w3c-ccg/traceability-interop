{
  "collection": {
    "info": {
      "_postman_id": "e9c7f21a-ef69-4217-8f40-0424834c0fdc",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "00a6ea52-65df-4c52-8035-c3ec6c77b16d",
        "name": "Clear Cache",
        "item": [
          {
            "id": "cb3c82d7-c8bc-4e45-bcc5-6817fb1083b0",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "02ae01bc-0ece-43e4-8028-3f1671515ea1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0ce24ee5-5a77-424b-a200-5c24132b1053"
                }
              }
            ]
          },
          {
            "id": "c790a44e-f410-499f-a447-58d7ffae7f58",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a1427afa-9220-4ca1-95d3-d69903daf90c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7d758ed1-b706-45ed-bd4a-827d79c517fe"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "133877b1-e342-4e0d-9f9a-c94b6ce50e75",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "01365b47-4ba7-491f-970e-5cc311709c39",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e158fbba-9ebd-417e-9c21-f9ebaec20bfa",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d97ee8fe-275f-4950-84a8-e0b09592dc1e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9a97bbfa-0b94-4f21-84fd-c53eb02f9f64"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cbef295a-9312-4b44-9ecc-ccf525a81894",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b8f3b1ed-6501-4810-97b2-4d4f0aaa8f0c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "502dd781-ae88-44c5-ad0e-d7b75ad4fbcf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7a0bfa97-7804-4c53-b35a-0cb73aadca60"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8066afb3-f35d-40ce-81d9-5d60bc449aa4",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "913a2a28-dc86-4f88-b492-d17895e46e35"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fb05eb2a-8d59-49e3-b51d-32fd03e724ee",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dd03af28-5b6a-4374-9a46-29c6354285b7"
            }
          }
        ]
      },
      {
        "id": "7b9456b7-9e1a-45fe-8258-d01ab1cec3ca",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "fbcc39de-a53f-4bab-b7cd-765a6db45990",
            "name": "Negative Testing",
            "item": [
              {
                "id": "55efb371-13af-4bca-a0de-10c58ecf6e0c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5063e162-d641-4508-b29a-c5d93c0cfa51",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc207ea6-da7d-4ac0-91f8-12e56658a34e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9793f318-029c-49c8-80d9-e5ddc93cc0be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09b34855-9746-42a3-a3a9-f71c691f1377",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eaff6af-a644-4f7b-89f4-8b9eed915056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bbd73fce-9231-412a-8f4f-7e50e623724d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "991d9d05-47d1-461c-9c3e-1d21ff3b0bf3",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3813ac72-f5c9-4f14-9829-1d8f1379e138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "62381478-af3a-4802-bdd8-cbd1b7408397"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "31a334e2-902d-4213-81fa-7fdebc10ddb9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0f796c65-8502-444e-a899-816227cc75e4",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "769de402-55a3-4ef7-9efd-69a8a25595de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5eaffc1e-e468-4ff0-958c-b19443e9e308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03111d02-d21f-42f4-8974-ab8296805648",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88385553-4886-4aa2-a9f5-dbe0317ca7ff"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8209c183-711f-4c29-9a06-0f10875ba8f5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "73c47278-62bd-4435-91fe-c4c3f2928ed9",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0995807-dfba-4ec0-bdc5-fb4e5055ca7b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b638aa07-bb4d-4f12-a8a9-0a980f202202"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2b88d5d3-5143-4804-88b0-d6209138678a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "2c72ef30-05ce-4e3f-a574-7d8208822782"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "987d1312-3c60-449f-8541-0900bf2a05ac",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "469b4b89-ffed-4b04-80b7-0679269caf33"
            }
          }
        ]
      },
      {
        "id": "ee87921f-44b9-49ae-b39b-29731a8431f6",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "ce1f9d91-978d-4165-83df-5d9e82317683",
            "name": "Negative Testing",
            "item": [
              {
                "id": "046c15ed-7fba-4a43-83d4-65eae523a47a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d304f161-597c-40d1-b47f-368e2552ac45",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8246bba9-da9b-4e70-adf5-6a40a1e41487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6103982c-7f07-4f92-bbcd-657c3904750e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f9fe6a8-f067-4ddc-a19e-0e0abc38a397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51eecaeb-6960-466c-92f4-85958dac8d4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33af740f-0569-4521-ad78-a60c6faa9d90",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c44b5e6-fa15-4079-8ec1-5e848397e3b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55bb4fba-843f-413b-b8ab-bf64776b4903"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5666eb4d-66bd-4626-9e2f-f9514b6d13cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c3756d20-d046-4986-88aa-3b3825590c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "646f4d1c-d239-4070-9a92-f6a32da91fc5",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8036504-4f2a-4422-bbf4-8fcef03d0838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51a44dc8-84cf-4029-b3c0-11160c5720e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e2c6d15-7bc5-41be-a126-de71693c5ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "395713e3-5918-42c6-b910-f325c84e1fd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f993ece-4a4e-4310-bfbc-ae719936bc19",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29020ab1-8d4b-4d48-b4da-68c6d39d15df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af401513-5f6e-4a53-ab10-3f2de72ecb4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1088f2d7-4536-4ad7-a016-1c7085cc787c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df9f66b8-7a1b-4066-a7cb-5eafaf440bc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c162540-7d57-4b20-9bbf-a04d844f3c82",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7749ad-f9b4-42af-b478-f89acaedcf13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e2f9adb-2d96-4250-a378-840c392398d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91b39c5c-2a93-4013-9991-be4c28f44e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "571aa98a-ee36-4a5d-a93f-2522492a6964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3205bb53-a35d-4970-bb29-9fe4d32efa57",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "450f1bf8-3595-48d6-9ba1-ffdd299e4636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9f4b4ae-415d-4403-b791-6dc9d2118134"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c7644ed-1e0e-4097-8f34-cde88fbf1faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "607edc78-c338-43af-aa66-9f45d5b181b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "350b962b-58ca-4d37-921f-c661d1084f1e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6443de62-dce2-4c3d-9176-3f18f4614007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "628164ba-6022-4184-bdad-0d9f0026e419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad5d9df8-b094-47e0-96e1-9d70d3f3b7c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3f64504-d7b8-427a-9f89-3924f54cdba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f78a0c7a-d93f-4585-98d0-c5e0ddbb8cce",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6fc7a5a-0fce-423e-95b4-a5ff86cbe5a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51fd1851-9aed-42f0-8b31-f0ccedda9b35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d38834bf-2089-4445-9df2-d016b3ed4fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c6771e5b-54e9-44f8-994f-87e95ec3e832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64fee566-30b1-4e9f-88cb-90141d79fb3f",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f86f01d4-d374-4367-9218-530d1e46e195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7ec0c60-9e05-4192-8642-ea1d13a9fdcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ab49cb7-1c18-4070-adf8-bfc398fbd4a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d6b4fa7-867e-41fb-a5b4-97b70ea45aa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0741ca50-b191-4c3d-953b-c5e2969ddfab",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e723349-58f3-437b-a88c-656529bcda19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02836fc4-0e79-441e-b662-eb4b15efa948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "360214ca-a362-4b54-ae1e-70077a71f8a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b3b7b90-32eb-4cd4-a4ba-b20faeb6efa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a4dcd07-a0a8-4a89-8f0e-765d5b9176c4",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c86a2b-eee1-4a70-a64c-62e6c3346103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "476d0c52-9049-4070-aec1-0866be1188cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebeb0196-1508-447b-b944-e478fbca188a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4e7bbb0-cdc9-4b1b-af84-039ec4ad7ee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38840a1e-7b60-4a0b-a849-2c65e8fe035c",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3393529-071a-4564-a306-e548d9f02645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afd21aeb-2aa3-464a-b4c2-8a5b2c1cbc96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36300ffc-a3f5-4fab-8013-ca37aaf0c176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8522246e-9f58-4e9a-ba97-af59db617f59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd4e962a-75b8-4835-a132-dca9c3a3df05",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd46d07d-3ba8-4b17-9105-7396a8229481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84e0505f-bb5a-48b9-9bb3-7b93d41f949d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e551416-809a-417a-8847-96b7313a0b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3e257fa-0ad0-4974-ad7d-bea8166e147c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7193bd2-e040-4bd7-a22c-533cc01c1dd9",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e3ea3d-ba7f-4bc5-88c1-930b93eef8f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cde79f62-9320-4ce7-8c72-1958a879b53a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "731d258e-4f46-4c87-b9a5-c6edf7533b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d6d020e-920d-4616-a745-da4487a8bf4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66c107b7-c55d-40ff-ae8e-20438aa5c6e5",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98fd4ed9-12ff-4245-8114-79ee1a979e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e96664a-0bcd-403d-8946-77324efc7e44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a60f20f-d559-4fea-8e61-e008b1e58658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ca766ff-0156-44b3-8378-a7469f5d7c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1d3c34f-f5f0-47f7-b519-5d4bf5474954",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c115cd-4193-4b70-beaa-544d2615b693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "083c7485-e69c-4a17-9cd7-1af211ba40f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "464aa550-07cc-4ebe-890a-8163a5fcbecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "43728466-85d9-42b3-a56b-9794f6f48633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d9c4172-8b0b-4ff1-bc62-19dc2a0eabac",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "338ea06d-3827-43a7-b78f-eb94e93055ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e935a412-e652-435b-90c2-ff611210e935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c859d16-4ca4-45e1-b1f0-f8b662ddf939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4ed6569-fa07-4109-a095-d4ac7b6585ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b952cf01-51f6-4983-b0f3-f189b181f9ee",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "562afbf4-b0c1-4cb1-90a9-7538012fe038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bd4e7f8-da46-4c5a-b41e-23039cbad5d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc8ce5e2-5e0a-4c93-aade-a81dc7f6bc8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c99e0d5-7f69-40d2-b894-76c6bc9784c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd2418e-8fed-4652-82b8-f27e18ebcd8c",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50fd7d68-3be9-45e0-8d4d-44ea7254e86f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9edae60a-bd5d-4a71-af47-e212761a7779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "490c5e66-a4a1-4cab-8c85-5b3d5d31791a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e3d5c91-1859-43f2-9db9-640d54a8c90c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "466bac27-d4f6-4607-8a08-f68dbb758b09",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb46b45b-e538-46f8-bf18-539d4888efc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dd78f46-2cc8-4128-bdee-0a7a1b37cb05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a22da4-3f6c-4f02-b191-53e3bbc86d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4a623a2-1f33-416a-9726-fa85ff508476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33f03cab-60bc-4712-8c4e-3691335fbcec",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7491dbd-eada-4798-b6b8-9e0e3f1aed78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bdb0691-faf7-4434-94b6-9d0af4e4e5a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2584cd25-bc34-435c-aaeb-ca52857d09a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c91d3e8-b6f5-4fe5-9405-a7db160dfba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "265af01c-6806-413f-b47c-dbb748e0e26e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b10b69e-e7a6-4b07-b50d-6d0695713afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd785739-eae3-4695-8a7d-fb5e929cb375"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59959088-22f5-4596-adfa-dcbe9bf8e96a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0cc60fb-9829-44ed-961e-5d1166f8bb43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3baeeaea-c0ad-4154-8b9f-fc1f1fa95752",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3629406-c293-42c1-b6b8-29afd60a9d2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d55d5de-3275-4596-a480-88dfc6b3e3c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b3c9f4-2d43-49de-a616-6b5417bb7efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "838f59fc-c45c-4bf9-973b-25e1c7e1eef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0166040-823d-4439-b298-d676e7e32f47",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0657ec6d-7200-44db-aaa0-a8bb66ae7456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d039b1bb-2545-4d1c-9591-06c343b270b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "911e0261-8452-46c1-97d8-1d0d0a492452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "09f272c6-dd93-4236-acb9-6442ec1adf74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "682f7c9c-3e65-45fb-9034-fb7fbc69bade",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6913c831-455b-4491-be54-09b2f50aa6be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5e9ae8f-afa5-4ce3-acb3-ec1758162f3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9290de0b-9c53-4932-bf99-d8aa515c2385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "04904f7e-3e1c-4e71-bc1e-004aa9593a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebb24bad-c048-4f11-8366-7a7ab9fa5a34",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80aea2a6-0b0c-4b0b-b5d6-ffb285c444ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1df48267-a27f-492c-822b-6795efbe67ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a57a8ba-8aca-4c02-815f-dec430a8b0f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1aa2aa0-b5b9-42fc-86b2-4c330c111ae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "327bc990-4f2c-4a80-aa4f-db37b480519d",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddceccf2-24bd-4fa2-9423-e321671bca03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd1e9ff3-3e16-458e-bd16-5cdf21329f4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f182fcfd-ad77-4926-bc20-cb39c77a6944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f82842a-bc2c-43ab-961a-4b064af98c93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db1d946b-782e-4483-b7e6-5b9ca36891e4",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d582c810-a4b0-401d-8798-dfd127236e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4924479-f9cb-4823-9615-99ba5e18f78d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90111ba6-1e85-466d-a1e5-602f564f4c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c5cd897-a7f0-4825-b829-2916897cedba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e304af33-6117-4b71-9814-a201cc3c629f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e2b327-35b0-4fef-a4bb-a74565b30ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaaa63b5-8422-4ba1-8d8f-4a66f30a5b37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd08085b-f044-4efa-a7e1-50c66e1dac51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "519f2e14-e82f-47a4-80a2-882fe08bfe74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fbdb197-7c5d-4686-9f08-4fa1da3601c0",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0288ca4b-d247-4b87-b287-b1a96d9b8f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3979640f-7e0f-46d0-a4b1-ccdb1242e22e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a9b5139-fc9a-49b1-bb8d-e110e549d76e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "1944998b-a6c5-457e-8ffa-2cd5c8974dd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96bd1ce3-7259-4409-a885-2066e554d625",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5f100b3-5909-42bf-84db-48a7e662dd20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c92f850-98fa-401c-bd05-e07a5f20d722"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "786b3e7b-901a-4bac-a78f-8ca491371040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1f2b069-3395-495f-96ac-bce063919e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c3b7315-26ef-4074-b283-7ce7a7b49df6",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28bfad8c-f416-4349-90b5-20e23c34d049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e3c6c4d-909a-4b10-aa40-91aca7ab1737"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eba83213-3d12-4a88-b6c0-e27b739d2760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc5083fd-b680-4928-890a-d7bcee3badb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3698d0d9-d5f2-4bb2-855b-96ec4a904a7b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "205da066-fbb5-4d3c-9c07-470b732d0b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68f6d0e6-6d23-42d9-b3bc-1bf54cee6058"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ccbb26e-f6fb-4e66-8b0c-0ff159fa2c82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "167aaf05-8cb8-4424-83d9-1881d3185013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8962dc75-9157-49de-801b-f33afc1f9ed7",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea559091-c721-43a2-a40f-99bfddf3296a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d9b6461-caa4-45ba-82d8-bc61b421b6ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76fc2c3c-c3f3-453b-a67e-3e98eb356c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e43c36d-accf-4584-acfd-c239b5bce84e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d93daa4a-7836-4b9f-96a1-6e8feb4faf61",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b1da2f-82a9-4e1f-975b-a576e20f7634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41ec2e1f-10c9-4c61-a78a-a508b400fde2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96a41524-feb6-4c13-a179-a84c0c534d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "1a82a63f-5b3f-4679-8b19-3059302d13f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f71ea36-6381-4d74-beac-7ff84e4c35f9",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "721b9d88-b98e-4da6-b571-6c36699235ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "525f6c95-b730-481a-bb01-f3231fd7beed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e5898bd-d855-4e83-8484-fe85f1cba7cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2b46881b-2a6e-49ca-a001-58d1ea8bb1c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c8fb137-705c-460f-9280-b4d425be6ce7",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb85cc9-bced-4fbb-b2f7-3ff2cda9a9c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95e8ee85-8ca2-4d05-bfa6-857ce62817c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25aa76e5-33fd-4a78-9fcd-3c6c407cf089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee1e4528-b212-459b-bd59-af974452fcad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "958ef3cc-e0ac-4872-b38f-457bf3b23192",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43d4657f-952f-4eda-a5f8-ca4e1288ccdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01cc5399-966d-45b5-bc49-37d42738b84d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe8f715e-4a0a-4d0c-a19d-eca4b7100a36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "13c2d74b-9f27-4bca-ad12-6c9e02765df5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca41ce1-a5f0-4f16-8943-5dd4f6d338df",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fdd9eb3-56e1-44d2-8110-3f4a390d51a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c718b8d-9c14-4dc4-92bd-8d4fa809dca4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68b750fe-96f9-4e5e-9278-4b8c1594a66f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d80da6d-f810-425a-8f9e-16a213e67994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "975470d7-288b-4e4c-815a-c55a08351046",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d996b480-bb07-40cb-9ff5-56b2c44347cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17c65f4e-62d0-4ed0-8967-b3536b0b4568"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ed19411-c65e-4a43-a4bc-e173266ec456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff51e0e1-46e9-4f94-9f92-bacb62c7acd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b617580-ef58-4fc0-9d84-68dd5be89eec",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d3cd66-8900-4258-8543-4cda442249e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4965dba-e5b1-4141-b7c2-4bc4219fb16a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c8b92c6-8e19-4a2e-b310-841014d6582e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "726434d1-a880-4c77-ba4b-0e9419ec167f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65405450-862c-48ad-a650-be12199f4497",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3913c17d-ec57-4a24-a99f-741547b91194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60a89b33-ccfc-4563-a6da-17fe3fd1343d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64333036-a929-48af-b41a-ba24aca7d871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "2558dae3-1026-4a20-b5f9-e9911fe72845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfb3cc87-5d88-490e-991d-dfd32423c1a6",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f92ebb9-76e4-45b5-a415-e593debf30fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25890aaf-64f7-45ee-b510-b2dc8f7cffa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6935e2e1-9a84-4440-9d6a-360f1a51d9dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ee9b56d-6be4-4ce7-b015-bc7501eeae84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5becfe3a-3693-4295-a301-a1413a5a8b62",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24a66be4-7675-4552-b38b-0ad1e5135c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35806337-1100-43c3-8a72-9c51e3c8ff6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "892803c7-accb-4606-8deb-8410f7c4728e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "afd50c4c-76c2-4b1b-a1d9-df59305bb32c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7053e884-6871-4e24-af29-8c1071739a8b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73fbb4cc-819b-4a40-9c17-b1f03489ef8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a69d79a-eca1-483d-bb41-9a49683051bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75d783f4-bbd0-40a2-ae04-a137460233ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc4ae4a6-9d06-4e02-8dc7-877d586b98b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4066b9d2-844d-436a-bd61-c0e19f6dedda",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e32a10d0-b8f4-43e2-9a0d-101953ebb5fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ce96ce2-62f5-4d00-a819-a717ada560a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0286c09b-cbba-4e7a-bdc8-1e768d5977a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "69b1f6dc-0fba-45ad-a4ca-165b8d1b84a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2209e09b-2ad5-4ff3-89bc-5aad48ea8ca3",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc8875ce-7aa3-4f52-b12a-a4d56fc15f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80c1a82d-5bd1-4724-a809-f355bbf3db5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "417e64f1-0ec4-40a0-bb52-a222000304ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b94a193-03bd-457b-b253-8e202b46e7b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e39b53e-3d94-400a-92ea-a6f7ca72c9a0",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84471516-e504-4506-acf6-a058e4ddbf47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b126a1e-2b91-4d5e-b18e-4c89d21b1026"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd88019-19b3-43d2-b9b5-154edf326e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c089949-91bb-491a-86ab-483cf6366de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cd64d1e-e329-407c-82fb-7471daf81342",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22d6f624-a9b1-45c9-9b80-dde5903a18f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3bed811-f7f5-4a6a-8063-e49586602be1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f12ee58-fd61-454a-a369-a8e8750628de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d233799f-42ab-467c-a722-5e2b970ce254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30b45ae7-3cf1-43ae-a9c1-71a8ad3b98a8",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4527b63c-a807-4956-b180-4d7f6fc5f87d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9070a06f-3545-43cc-b4c9-ea1040fb38bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5597f660-c6f2-42f7-8c6b-0fc3b8cb983a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "29aa084a-a453-4d20-8627-8221327a027f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df37301c-52e5-4c3b-8189-d619c816adcf",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c72d819-d4ac-4222-b032-8b08a001807a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cfcb81e-86b6-47a3-9694-2506533bd321"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb135df-a258-41c5-8c5a-0f8a5f8b34fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "afb9dc0c-237a-4cc9-aadd-1cae11b75f68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "694ced26-0175-4960-8324-78ea66a250fc",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9160893-0681-4bbe-aaf9-951924032def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99a48d3b-7c80-457b-89be-b1baa69a50a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c16d2f6-63c6-4191-8f4e-e45d1fefe7ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdd347c5-6fbb-4e4e-84ed-11b569d873f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bdc0463-50b1-48da-96c8-61f522caac3b",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fea42b60-a3d6-4b14-88c2-80c815b2d4b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "075da723-32cf-4c24-b3e6-01228e812c4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de5155b9-2761-4d1a-9adf-7b07d0e8efe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "92fdbd95-fbc9-495a-9123-4ba5fa99036a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c2a1e7-6dc6-4fa2-a642-96f716b72e7f",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "321cfbd6-7474-44f8-8fe2-c2a7db9f3896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c465538-a37d-4aff-b37c-7663e65996d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "271ac0f9-d294-4b30-8241-679a4cb7d449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f3c17c3-18b6-44a7-b280-6b3ad285ce02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "772011c5-422c-4fec-ac6c-915dc606fa75",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd021c4-6359-4d9a-aebe-121bbd9cbb87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "955f6e60-c758-4063-b92f-7808e987bcd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a2c6d61-9d98-471b-a822-72c592876c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a338a0b-8560-463f-bb25-e44e8f813ff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b358448-a758-40c7-9983-2e8804ff8875",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d69b9a-2f20-401d-ac13-bce51245d59e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d1f01be-f4b6-4c63-9313-72f7bebfe4fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7683fbd0-0819-45f0-b3c0-834830346c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "5fa51a47-3083-4a41-9917-320fb814f0c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13af3416-3d55-452f-b840-80c8529fdaad",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2161d74-866e-4dc8-aef5-8991aac4f09d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b087b41-00f7-4ec4-be16-97303505dfc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d98af867-426b-4ab3-94e8-7b995d354a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "74248768-4842-41fc-86af-b4feb09ebd4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc0bf5c8-572d-419b-a719-791c26525240",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3127d32-64e9-4e0a-9ae3-8eb0260b6666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "476257c8-6669-4038-9ea9-f4cb7748cfdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4e9cc54-48e0-4c91-b242-4efc6c300e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c36a7b6f-c42f-480a-a50b-f67cb7a449e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85764d1d-0ec8-44cf-a880-693f760c9b95",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e53405c0-8c82-4d57-8a54-0fb74e3a7006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48722e9c-6869-4dfe-af9e-38be1a16c4ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d74b163-bfbe-43d2-9d2a-1267d70d56ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7828bcda-58fa-4a75-9e39-a7e02258a1b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f78be546-1b04-49e9-a901-cf8179bcf605",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2e74987-4a54-46eb-b0ca-067446e39b09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0e61f6b-0244-4034-8e4d-61f59ac081e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13fbeac7-eb31-4302-a8f0-986080edd7c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c08779b7-6199-452c-a384-3a21d87fd931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2bf4eb4-4782-4c3b-a8c8-4e32dee1b9cd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a54a221-9d34-44a2-b25b-252d22e8b43b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d42e8c3-4819-4a11-a6d1-74277b0bf286"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "671bb461-8dc2-4aad-90bd-f3631d93837f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "64845a62-b03f-4bfc-8379-1fa016e700a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5b4f481-e4ac-44de-a2c5-1304242adfea",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9029c756-d738-434f-b00a-e733922b8729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb7368ba-9696-4e35-9260-a18e4769eb87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0fca80b-de83-4e59-9ba7-873bef7bc665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b238bdc-a9c4-4e88-88f9-d115432c84b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d805ae6-71a6-4182-a451-2236daf1d7d9",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56ec81a6-a5b7-4bad-bfc8-fe92a406c8f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ecc5c79-6443-4892-aaa6-504c20cf1b3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88faf7d8-444f-4d92-a861-d6f6688bd635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "29f56a69-5510-4027-8287-6b4939bde6cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b66a841b-2623-49f4-98db-b69326faf436",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7bac43d-cc08-40d4-9537-bc695969059f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8393c8e9-0d3a-4012-9c49-80fe6a238fd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6136a24d-f763-4d66-836a-39d9de88cb6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e532625c-2541-4e69-a90f-a5f40de7c9e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e0195ae-19bf-4526-b93a-c940044df10e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50deadaa-9024-4143-a908-b58efe383d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9dec5fb-4b0c-4a71-975e-48f1c883bfa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c01339-8f9d-4a8b-8d0a-5678c657bafc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2a2dd10-634f-446f-bfee-54af7d5827eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49b50423-fe53-4ca5-9cf5-d5111bf5581b",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b04d6906-8c2c-4eb7-bad0-20b02efdb6ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcecbbb0-31b2-4ed7-9d06-3f5919835650"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7606d32-21f8-4942-b704-e2811f72ff1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a04eeb8-e029-460d-8980-0393a43e74af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3b14d48-4761-4ae0-8b7d-c0ea63ac390b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8dc25ef-51ad-4ecd-b052-e5388a4f6a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb801d51-2b58-4d30-ac02-5050ca767a31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "506c20b5-fbfb-475c-a017-f174d1321d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c26d1764-4c73-4c4e-9065-586476002b8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5426f47-ce85-4342-8911-163eb67d4cca",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f61fd0d-3c06-418e-b928-1451b6738204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a24fb3c-2da2-4e9c-a81d-ed4548cb773b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e1012f4-e061-4719-be3f-64e2c1d3cc10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f33a49f2-0d5c-484c-8d0b-43498878d874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b362d90-5997-4016-bdd9-82418773bb20",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcf694b9-8b03-48e8-b2e7-f72159ffb74a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54f366fb-9875-484b-bad7-583e613b04ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7229472b-3111-4f55-80b1-ee36214112a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6001484-1eff-4603-b669-f5d10c56afb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d3eba3-09bc-4ba4-9ec4-d94dc85727a5",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba3f75c0-9b0d-46f4-9a0b-15672e693824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "112e2eb6-19de-47b5-91e0-aa8702c5a2a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8fc5065-b2c4-4faf-9edd-6e068b104981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bd49f88-e471-447a-8ccb-993d8c7970f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e819f0b5-93ab-416c-9c69-c9a9e38591bc",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c4e612-827c-4e90-a7cb-8579dbdd3475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e37625d6-77c7-464c-a7da-a5fd40cfba16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31652001-d255-4e47-ae83-c9894981ee39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "57d717d7-83b3-4e7a-83c8-a1a3d465a153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cda0beaa-774e-484b-8684-71e62d9f1a74",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3feb03a1-ec1d-46d6-80df-c098a93fadc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e5a79ad-3dd1-4338-87fc-d06445ba7f85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e54fc2-adc3-4a0f-8420-45a4767f78f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d730e67b-8c92-463c-b6bf-22fce0b6f0da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c990d88e-9637-450c-b246-0345a2684921",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23dbca7e-d1df-4a24-bc59-b2aa2036c847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60c5d8b8-cffa-4581-8ce0-408be505e8d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f91b4c-bf39-467a-8618-d33855acf69c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4dc3cfd-6f65-4c7c-8d06-278907889535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d0a05a-8805-4bf1-af3a-60f64ffa8721",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "816fd5f7-50d5-43f3-b05e-90895769635f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01c5b551-b3d5-4dc5-82ed-f2c316931282"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2169bfd-098c-46f4-a236-c0c566c4fd99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ff11c6b2-86c9-4c22-ba8e-d5f0ff5aaba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8df10473-6e7a-4d1e-8681-e41bf6d2b37d",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "844e107e-480c-4d6d-8657-46931ff2acb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb6b867d-d6dd-436a-b315-9153ee733eca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6353e241-c948-4da5-ba9b-c0c7a4721cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fe2e298-6f5e-4669-a32b-7676e1e53303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e88a9fd-168b-4cbd-b702-87b0cf4e867b",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37b09df4-9ec1-4a8d-a525-e818224ebb32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74175587-b4d1-4d9f-b728-b3083723ffc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d32ec597-95f7-4f1d-8fdc-23828af62113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d61de28-d3b6-4453-913c-ddc9c0f6aa28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f04e4c9-a330-409a-a95e-c4c42057d678",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63fceed6-555c-4e5d-8f2a-2132568cdfab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa531b7f-9fd1-4525-a123-3f08f44cbbb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36a5f15e-2b5c-4e36-a77f-946cc138604e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fe1673a-0fd6-481c-9c4c-e4992d2b9307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d54f31e-2067-43c6-b5df-1d623bd4e964",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b237af0d-6112-4e7e-9b0b-99eebce6947f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ae68d42-9dca-4df4-8b8a-60ed94801795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08a4d2bc-7e9f-4232-98cf-55c4c6719887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "76f7d2f1-55c2-44ae-bf79-0e181159e5d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06d0abc8-b52b-47c1-bcca-02c6ce39ba54",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca882df-fb12-43fe-8174-2a3552a598ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73dce9b8-47da-4604-b017-830ace28fc91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e468d7-e8c7-4bf4-89a7-880172408ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ad3860d-816a-4101-b0fc-b8fce00207a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c2791f-d04e-4bbe-9ee2-c2b166577cbf",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c785d87-4536-4a41-8287-be34743a8334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3af63de-b0c8-495d-9871-3c6b5f02548e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bebffbe-3782-4cf8-aab1-d88413d41650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f6a82dd0-6f50-499f-95c0-25e535343e1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a0caac-66a2-4f3c-bac5-ce7b11675fb3",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b46b0df-dcb1-4842-89a5-7f845ccdee19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "663fdbd7-900c-4868-a8bb-16a21ad49599"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e0c6ea-b065-4844-8c7d-13185f23c6b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8e35b93-4d70-4c6c-a2f2-61b04d08463e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e01a32fb-287e-4556-9575-056d889b9e7f",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cca0ab5-76f1-4b5b-8ecf-1526a37e4999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca336839-cccd-4982-bf4b-01bb14587b93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebf4b489-7d93-404f-b77a-fed7969e5feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d85549cb-ba95-4081-8ba1-0dd9efd6577a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5c0130a-23d7-4f53-a224-7fb890a2fe26",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "152c3aac-11f1-4bee-afae-84dc7a409a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18f1f90b-090e-490b-be67-9a7335ee0f0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a220abfe-d3d3-45f4-a87f-bd2de22dfb0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5ef9400-25ad-4c6f-be2a-8c264039a79c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d92b1c73-f362-4438-b359-ee509585befb",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "553c80af-e257-43fc-916a-06716ffb1dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53d3fd70-8387-4428-a282-39d175f50cf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "057c85f1-006c-4f72-b3eb-6188cc3f6864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "76fc520f-5513-41bb-a83c-6002994a9676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c43081f3-8688-4f9c-b80a-69de30dbbcc5",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64420060-2f4e-408a-aae7-9aa215311e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88c8a6ed-30fc-4807-9aed-76bd736c1e9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a1f70e2-c3b5-4b0c-b63f-fb2316b16892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c64070e4-2a3b-4bc4-ad2b-8c71103287d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e661777-45e7-469f-bcf5-ffc0b591444f",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4126489a-8b88-4351-a714-60b6d40da371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b751c87-3d8e-4978-8df9-682dafd26db0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dda1fa3-74af-4eee-97fe-1f9ce3983bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e491546-187b-4707-ac41-21921d392e33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2714e6e-a2fc-48b1-a93a-bf9791d90ff9",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "026ba356-b607-4a2d-a6fd-18f649968450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d18783b6-b0b9-44e8-955f-10b490705e07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe41a7d-cdf5-4283-85c0-d7180c181422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "760cc2a8-3182-4a41-b536-4cd12e55d581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d506c1d5-595b-45bc-b4d8-eea85a4e34f3",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3890a68e-0b00-4d78-839a-e897cfa21eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e20e3a53-e9c9-40a5-8d10-a7766e257b71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c2be80-5d85-438f-8d74-3026f2a6b80d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a97bdd3a-3567-4fbe-bc17-bb0de894e4c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d54d670c-495e-4b86-8ab4-2519567fc9cc",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b3fd8f-e392-496d-9b59-fc13dae0f1ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "572c9eae-c792-4488-90e0-79ceab44692a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa7591cf-fdc1-4b62-8a90-3599b578e6bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "52fe3d2b-cdde-439a-9d53-fc729b476886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b94a17-67ce-48e7-aac4-0c3298f97fba",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c0b625b-6937-46db-856f-d43faed531d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fc6791f-a2c6-4dd6-852e-d2e6d4e74d9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10752daf-e67c-409d-81da-6b81ff79da37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2dfdcff-410b-48b0-9fca-8605fea81439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85c809b0-c54c-4329-9a00-3fd048cff578",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74feeccd-7cf2-4a1f-950f-542002d0ff9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3bc98c1-f17e-4cef-b62c-2e675c4db2d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d134c90-0fa4-414a-9757-a57654eaaf95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "490c19fe-39fb-44ea-9665-d61e44d50a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab62260-cfef-4fff-bb20-603a49b9db09",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "719e373e-a402-44f1-bb22-74bc68634364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "156742b4-5628-4f4d-83ef-76e8825c0181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b688b9-2ba1-4659-bd2b-7f12a0b582cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7dd80fdb-f8ed-45e5-a665-ca7fc43027f8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "96b6611f-df3d-4512-b503-08173863496a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3527de86-3922-46bd-b135-9fb14299e7fb",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10fa16d3-b10a-4821-b4be-a20542fadc94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b2b8b871-7698-4959-8379-e8ec4db7c3f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e6a1178-20eb-4e14-bf6e-d4d07782b2e6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc43f63c-a689-494a-a9f4-c15cdb60d169"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "51637bbb-aa03-4f0d-8828-20ddfbe1579e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d524f2e2-9743-4f7d-82b4-d377ff6e0230"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "59c9b371-6ed4-43e7-b90e-aba8a565b331",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af87ace3-f914-41e6-9720-629756e88869"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f84a1c68-d7f1-4541-8f3a-b1e7033a0333",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "76878e48-ed52-4a31-a156-a84f9bf08900"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "09ec7edf-db12-4122-940a-1e8e2ccba7d4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2483f9a7-3538-4c0f-92d7-c6f0af768636"
                }
              }
            ]
          },
          {
            "id": "e5544ab8-b798-46f6-ad62-17803cc63b4d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "860eb805-3362-4e69-aa99-e5a03b6af22e",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c1ba1ce0-b4a6-48f7-b54c-0f22499845fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b2621f69-d0f5-4185-b553-d3bc2323dc34"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6397a2b6-8d6e-43ee-ac09-2f0e829dfb14",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "081befa5-4e71-4f83-9351-fd0eeee7adf8"
                    }
                  }
                ]
              },
              {
                "id": "994d93f7-1f77-4bee-955e-f75c76ecf5b4",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "51b9d447-fe8f-4a9b-8b7a-ffa203a33e96",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cda70035-12b7-411c-a33e-3ff5d6beede3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "38554cd8-8852-4361-9025-593a75ef4fa5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b9f2ef9f-2708-4502-818e-13c58cc293fc"
                    }
                  }
                ]
              },
              {
                "id": "b3020c67-ceb2-4b76-8a6c-f146c3199393",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "27b37133-0af4-4f3a-b1d2-6f943b45a8ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "56796fae-14df-4ebe-b1d8-c43f5cedd4f3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "35dfc913-0b70-4837-9887-0e0923d10d2e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0c97a988-70cb-4f03-842d-843a6d850019"
                    }
                  }
                ]
              },
              {
                "id": "541b7bca-621c-4412-adf2-07159476ad88",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b54940b5-96c3-4fce-8b60-7d114bb8c8c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "99dbef2c-e46c-443b-9f32-a8a38851f864"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d1fd1bd3-3771-495e-9521-49f751edda5c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "630246b3-e7d0-433e-aaee-2e4701217ebc"
                    }
                  }
                ]
              },
              {
                "id": "7146f2cb-d677-46bb-8f97-d97671efe7ba",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e5773654-ac1f-47da-a1e7-0369eadc9e9f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1626ae2d-0a4e-458f-a6b6-5dbef8d68e77"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6561acdc-660e-4305-940a-cc11962017a5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "f760fe9e-01a9-4c80-a7b4-307c40824062"
                    }
                  }
                ]
              },
              {
                "id": "61b42724-03d5-46c9-8734-87836725f081",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c451af77-34b9-4557-8323-c65b19455258",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c7386593-16ff-4966-856b-372dd33c7698"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4bf8a648-e81c-42a3-9072-e6107e1ceb80",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fdbd2579-d80e-4edd-8471-ccee0c6183dc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a373f5fd-13a7-4016-acf5-f8b30188c215",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1fa11bff-b7bc-4afb-b56b-dc4f6b8e5ccb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b51c942e-145e-4053-9d13-82130be95a0a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e1443583-9bdd-47a6-b99a-e87b8a551997"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "af6bf1ce-ecbf-4304-953c-42699a136210",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "eda4b02e-d845-4cef-baaa-8dfb2f968704"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "04c01ca2-bee8-46af-96b9-1ac4cab9c4bf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "333de26c-7629-457c-84ac-76826c6b7777"
            }
          }
        ]
      },
      {
        "id": "e9e8ad89-4654-463f-94b2-0cdc29e322c8",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c7cb16b8-026a-4ad0-a40c-16e00ce4380c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "884925aa-7032-407a-840c-bcecd89121d7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "05f5eb5f-5d4f-4522-9165-78f85a8c9c8a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a3a025-e103-443f-8d6c-35fb2f7e0366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d7c9f79-d838-41ee-a88d-f76ec42f2740"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59391147-6c24-46c8-9031-3ae7d22fd2b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e68c9e47-10d0-40cd-a754-b1674fc5eef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d985648-23b2-40af-b515-7fc7125fae15",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05afb10e-381a-4826-b979-b78a56b027c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99f9e5ce-272d-4bef-8f79-892fbfdb5de4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f8e4399-a1ee-4f1f-8b94-0dfccce6214b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1d76655-17ee-4c70-98fc-0545a1481f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acbc001a-e4b0-452c-a6ac-bf5318cfabec",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8975ac4-78a0-4722-b5a0-d4c5cca8050c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4ce5bdf-d9b6-4f98-b33d-b79427c90d77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "620924e4-3584-4369-a7db-518dbd96af5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecc03a85-2f3e-4095-b892-525d51bd7b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cec7c1a-e83c-4259-9cef-858983d02ad8",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66188760-4e0c-43e6-a883-88e2c346cdb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63787152-33ad-4834-bdca-e7480afd8d6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "807581aa-afa1-424f-b9b8-e4541347f1f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "412e2885-7f3c-4bd7-b703-eaf9c96c1908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77933b78-14d4-4e98-abb3-ef3a662b47f9",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc2daa0-316b-46b6-a760-9dc437906244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01717701-2bb0-4f71-9a5c-d3a33c8c5ec0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07279200-d362-46cf-b292-fb4dd59fe866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "be23656b-f547-4999-abb5-c969b0789222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "267bd22e-c8de-4f44-a24e-b7c3de0b0c1f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd77c02f-209b-48bc-8ab5-02d40d9360de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7255b74-1e77-42db-b1f8-c3f7c1d03382"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1322ad84-c342-4ff1-90d0-cf29023ffec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "267e5aea-e12e-4b75-ae67-324691924840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13eb2624-0288-46ec-ace4-954bcc146450",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8c78850-6d18-430e-93ea-29257076ced7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "477fe571-f71b-4e64-9591-f5340276df2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd6af9d9-e693-4a01-9cf9-697287442c1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9252ffd5-6fb7-47ce-b433-5a7666dc9707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e68c0ef-b013-4670-8f3b-7798a64e41db",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf35901-dd87-4d21-b68a-a813aba1067f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0321c48-ec58-4211-a4a9-207593f02bfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b8de9d6-0d06-4321-ae1a-539407abce71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9af5c4f1-cd4d-4091-b080-b8bdd9473118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "970d84e7-1961-4a14-9061-25bf00320a5f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c7d10a7-1b1b-468b-80df-dae247ddabff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d533a2a5-57a1-44e9-a0a3-c80522e954f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2441e7de-283c-43a0-b040-efbe74d4e952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed0abbb9-5e08-4826-acf0-2d87ba078ed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b57c7282-d364-4fee-93ba-6f52b223f390",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79688696-5c19-4eec-ba36-be7418926998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62a2c5bc-1ad2-4686-8230-b5759c142a85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66c4f9d5-1a4e-4ae6-ac71-76bc9e4e5e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a40687ff-4232-4da9-aba3-337914893ef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84eb1786-808a-45c6-849d-7907dd12e5c1",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01193b5b-a496-40a4-82b8-5bf660d5032d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6b1fd94-408d-4e1d-bef5-a0612c70d0ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed1b84a-6482-44de-b68b-d78fb9e204ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9e431c02-7b87-413d-b34f-f71877c00177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2a25c74-e451-40ec-80e3-5ca93946077e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "843f8ba8-f12b-438a-b647-c19f89fbff7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20bf9dd6-1e92-4a25-a0e2-6d12a471bc7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdb16e8d-ead7-4223-a6ea-de8ae13080b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "36eec46d-8e58-4bc5-9342-4de3fea66c7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce710bbb-cecf-44d9-9757-b4e87521805c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d2eb11-6106-4510-85db-eef36f511d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68f87191-fabc-4829-9a7e-14e0e906abde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7942124-1725-45f5-a9be-802831fb2d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b02da64a-72db-4262-ac2a-206e478a1d97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad615cf8-2ac2-4f0c-a049-2651d697b461",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c09fb899-026b-400d-88e2-061bc2b855b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8b0e454-843f-44bc-b460-85c8d4e39e3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a43a79-fe3a-419f-b0fd-f4b3e8b17d55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5dae444a-a528-4464-b53b-1e360457fa38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1d6fcc2-bdf1-49a9-8746-b1477117a39b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "150bc4d7-e7ca-45a7-89c1-178cccc91804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b40700e-1c7b-494b-9749-4d6f0891cad7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61b8d849-ab50-4ba1-940a-2c37c7fa54d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cdcffc1-155c-4650-8bb7-d9db3bf8776b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e56b1c7f-21d2-4023-ac9e-ad5a97f6fba0",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30728753-433a-468b-92ff-10f4c2c6b226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0b495eb-383a-42b9-a2c0-6b3930d6c617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d04f8700-1876-4be0-8ca7-2292840120a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "76843276-0adc-45ed-b2c5-79321e5d4a1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeb2b124-eded-49d7-9b0d-48a208cb8eaf",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6a74f14-b68b-4176-a15d-9facedaf96b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c668707-a123-4136-8257-97593db9a2cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf48598-869c-4899-b37e-c8ebdee6e207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c35bb01e-249a-4f56-9bce-25669ea8e3ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58f28aaf-4de5-4d0a-81bb-6ef1c1aaddcb",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb0e395b-8c0b-43b2-9c27-6a5fadaa49d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e21696e0-33b6-4ace-8067-5ae22ddf8357"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b81c872-0ff4-4ffd-88b2-c42e9f037ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "db09463d-e9e3-4f39-a1a8-9cdfcb86cf7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1191ef22-e2f9-4ac2-a030-2f52cbf90892",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d4d1f5-bb23-4d17-a328-7e5ce9d482d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1d2e416-8f18-41ee-9752-64397067c8e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8729483-b193-4ece-83c7-a9378829d56b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af9be355-42b0-4a46-8f3a-b4ff77e4fafa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29ee1049-e91c-4a4d-9fd7-24c2daa833c5",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6537d414-6087-4f0d-8b63-6bbf6dcd8c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59c98cc0-701e-4d24-adbb-5e2f08110b84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20be6a52-0ea3-4cdf-9a25-eb282b755568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f11daae0-2e0b-4e09-ad0f-733e95126af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc46e8f4-a970-4889-9380-4faf5c65dcd5",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f5a560-74cf-4a1d-aa70-fa941f65a6fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c768b88-8a59-4747-abed-2a435f2c8fb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baa5c780-3b27-40c5-955a-f9ae34c719c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c7fc4f4-19f5-4343-a179-383ba9475397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d8f8540-b32c-4713-9899-9bd918ee4acc",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ba14283-d75e-4fb2-86f1-36b8366f9aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8ee2b1a-e005-490b-81cb-3f5cf838da9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1903ed13-73f2-4e50-afad-2c5e712995c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "122560ee-215d-4203-b93f-1abffd93a215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9153c98-03f4-4c52-b271-1d33df6f3350",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77672fd1-a507-47dd-97ba-18a6ec33127b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1cbd3d4-d3b4-4a77-b4e0-e1a25c9f1b23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6da150e4-efbd-4448-8a7c-6c53119c16c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "633ded65-e8ec-4d9d-b3af-0c6bc316cf88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e359f75f-1e36-4931-b95e-280b7768c442",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90f0507a-570b-41b1-8526-0faa8f84c85b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99e555a8-8cdd-4c71-b255-2d184f420f68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "656580dc-c0ec-44be-9aa5-c3196b30b7f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f3fde39-5db4-44e3-8848-828a0e6a4d86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc842733-3607-455b-baa0-0ec98c03071e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47bd97d3-7211-49ba-aa39-66f19e6c3e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a914243-b1d1-4ecf-878d-4977dc196b94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afb10dcf-411f-46f6-8a13-d308fc9e796a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "930c19fa-43c9-41ff-a093-c5ba92b42833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2ca73c8-b442-4578-8ed3-bf9fe449f4b6",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ca12800-e171-42b2-8237-62127ea26caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc756691-274a-4ba2-89fc-47c5ba7180e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c89609-8013-4876-82a4-33744d16e89d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bd6eb63-59b5-428e-992c-33736d1bb10f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9862f29-6343-495b-a53d-86e654e7965c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd939db2-c7e1-4d9e-be3d-e987809e6c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bed6e1c2-5cac-4ffe-8471-1928aeab2d36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee366a65-87b0-49ce-a595-4bdb95fb6a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9080ddff-7117-4c8e-ba6e-af26343447df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6dcdaf1-b76d-4478-b69c-cc6cba364a8e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "444fe0ab-43f3-47c3-b60b-f2f2083066ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cd547b7-51dd-4be0-8d6f-8a6e9fb07705"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e559f3f-cb05-4f60-a1ad-2eda6b11a4db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ad77f41-186d-499a-bd28-5244c202cdce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb4d4687-2734-43ca-bc9c-cce8c5f5c08d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd237b9d-9925-4d14-8ef1-8a66a1b18263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9d00231-cf95-444b-9e31-3d211cbb0f23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c23bf6e-6304-4f10-b4d9-54c0cc098bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e1937bb-b72e-4091-b6e1-9d29e2466f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "571fa5dc-779d-4ec3-ac04-6284918f8a78",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77da1626-e589-4268-9592-330170d25546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaf40364-4807-4db8-9808-8bd8f3da575a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6dd908e-e6d0-4f2b-b478-890643600204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9eb2570f-63af-4a28-94e5-d42df72b3ea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d7e0007-be2d-4573-895b-c32158de59db",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c47b9f6-af99-4515-96a4-96f225bf2b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d023c6d-2af4-4564-ab6c-8acfa348db27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c4368da-e7b2-4368-83af-727ec46621e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be391c61-4d71-465a-82df-17d707d56edd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b7f4c85-e74a-414b-8a7d-810c3c7f056f",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5621ba0-8e0b-4488-81cf-8175ef5a36c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a902156e-de60-4c0d-a5ad-15ac515ab2cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "072df50f-14a8-443f-bb61-695f61144293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a413802-fc8d-415f-8323-5da21c37c0f3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "df55426a-acde-490b-ad25-0bb05b371c68",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c0efdf50-8e1b-4c1e-9257-2ed70bee60c4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ceed840-bbaa-4d0c-976f-74bdb128057e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "58a2681f-b8cc-4d1e-9659-e6270ccca3b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee5d815f-9e70-4b68-baf5-9c347ed5aca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "087f9420-2376-4b32-ad02-a05ac2ec647f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "90dac50a-1329-484c-8f73-4a50caac9513",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0a69dc7e-c424-4b89-bcf2-8bcbb6a0a536"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5df7cf54-2d10-4749-90c0-7aafb5086d21",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "17ca6fa3-287e-4360-830f-e44ce0e1a057"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c7dcb6ec-6f7e-426a-a127-73fb4c49973c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f5bcdc84-cc87-447d-bc36-5dab5ec7169a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f0ca5022-1a41-48e8-9c24-4a23b44df7a6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3c3a2c28-a87c-4bd7-9323-418d13b77170"
            }
          }
        ]
      },
      {
        "id": "9090d817-5d86-4cba-9c23-16106f7dd99b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "62c300bf-6ed3-401d-82da-ec1e217be258",
            "name": "Negative Testing",
            "item": [
              {
                "id": "54673fbe-f5cd-4fa8-9374-09bb829ea8db",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c477cf8f-0a46-42ea-9b4a-0879b7a73e5b",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da60a396-0c6e-4787-9cb3-c7c23ff00d27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51a2bd10-8182-4313-9793-47a94a6b976d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76d10ad9-2142-47ae-86db-a3867a6d7c1e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c358a902-2350-473d-8e07-f29bb03c3127",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b53f06b-a0da-436b-85d3-c8ba9909626f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2815fef-3cd0-4167-8ce5-8a1405cc032e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d422db9-8298-4caa-a22e-6db0f21e0443",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2c9244c-e35f-4cfa-bf5c-6c3d51f843fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43ef02fd-1485-4971-a35d-02196d7e4ac0",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de6e9a41-8f3a-4d5e-b28b-99e8e41ab693",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62a4052e-3b68-45df-b086-5f3793f03e70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cbeb071-0a60-4ba3-827f-85aa6dfd30f9",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa0342e-3e1d-4d8b-bd5d-0ece986dec4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3d50a73-b6d8-4af2-9d0a-d80bf4e3f31d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5df439f-7151-4923-bafe-65d790dda358",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a31bb7-3dd9-47ef-ad21-708bb98596d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bfa7a5b-fa72-48ef-a292-d54fdb0c2e5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8980bc27-d038-4a3b-8b79-2eb8471a0bfd",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b99297c0-859b-40a2-93ea-7c9aa3fa0f0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aec9d1b-4209-4448-8244-1d125d20c0f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b721af7f-9d32-4f47-a7b8-e9ed60450bf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65eabcc6-8661-4e92-94a7-4362369b4f9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a8bcb9-18be-4010-a7ec-30bdd40dd65a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea20fa67-e798-4e48-af9a-0d28b6f6eaec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88e8ca31-044d-4610-9790-5e984454ef79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ede128a-991c-46fb-a56d-e9a0a0158fe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1761b0f-e0e1-4895-9a03-6190686e5e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01711f87-a73a-452b-8658-7a11bf509d22",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "026d5377-13d4-49d4-bfc8-a746277b3aaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfe0b476-9780-40cd-9ad2-36e576309037"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6049e3-b706-4269-8cdb-d2b95fe107ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8bc91ea-81e0-497c-89ca-9ea2591d43c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "409e1e04-f553-4c47-a4da-fc2107fad1eb",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0537e7ec-7ed6-462f-a37d-f0460e41a472",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0c9583f-2110-4ec2-b238-87a6fe97c8ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ee5af67-5bbc-429c-b339-6a8f45c22aa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab001f00-41a6-415c-bd11-272ff4c25dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cf686b7-39fb-401f-93c2-946573a781c3",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3880bd3f-da5b-4b93-9629-108113fac8e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba702871-9db5-49d9-aa07-1b381c5f880f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb4c6d02-bef8-46c9-82d0-aa3962b867f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d530cd2-342c-463b-8529-97515cb5ba9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea8aea7f-a5fc-4371-ac24-5cd82464bc11",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07de9ee2-edc0-4487-875f-f2fc0368a3ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cc9981c-56b2-4d58-bda9-fe7177d130ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7804b043-0201-40b7-ba52-7af89276d43a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea238b1a-98a7-4648-99b4-29b1ce51724c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7218155e-355e-4f8f-b43d-c38b1653c54c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8b1d5c3-de09-4d8f-b7ce-a604532fcccd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ba3ffae-8ab8-4e9b-ac60-78d1108c5704"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbfeaf4e-27a8-4b12-b909-7cfca96dfafb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c1cfcf5-e403-49a5-b8d3-2c6346505f17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "503e9a52-0b12-4337-b780-969297a9c069",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e74f7285-352c-4e3e-aaf8-9894aa5062b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85df8633-1db2-4b23-9b26-12440dc876b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a92adaea-e0e4-4753-8de5-42950f91f22c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e688e6a4-6b3d-4a08-81dd-c1c8243b2b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "009ca32a-90b8-47db-b7db-2f0852c76e0b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "788e5efc-ed78-46dc-a45d-d2da49dccf41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2172dd3-e221-4bad-a9ad-66f4534ad870"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c5e8ba2-58f9-423c-8048-189db250e959",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "000fdc4c-68e1-47f3-b954-1253562cc17c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9de5aea2-20b7-4fbd-95b7-689debf027c0",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd25553e-76f7-4ddd-a1a0-c1899f313b06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "541cbd96-5b0d-4318-b854-5dc314ef768b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec68b70-752a-4031-a49e-8ed5e7b43dbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b84a13b9-fd95-44dc-9799-91180c5f627a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "791cf16d-b946-45ac-b52e-eb9d8350e47a",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac338db-635a-4f1e-bac2-6f14e6273886",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51f121b5-badf-4fdc-b722-5e6ae412a036"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a040c46-6c59-4af6-83a7-c55db188f7ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b797a64d-fe9e-4f8c-b20d-e4f6763cecab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44c2eac1-04ce-4693-a436-5790ed9990ae",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b31dba3d-ac35-421f-b696-a4c851bee895",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "141b54f2-0e0e-405f-b547-db457c786b30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3301855-4ba0-437a-9622-9b5b7e3392d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9436f71-c3da-47ba-9c44-d8d984deda6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb7ee915-1dab-4693-9f19-6c70a316e9cf",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25a441fb-27f8-43c4-9f9d-898f9bf859e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "996e12ff-f5af-4771-a481-64e21419ee36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42278c40-ac46-4368-9ca4-29593696948d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "202857a9-85f5-4dd7-b12d-deca997129ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d028ee7a-fc68-4b31-a393-e3d36a6234eb",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef272e0-8dd8-4658-80ab-983c6de09c46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58550628-bbc9-47d5-91a6-7e5829592b76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc1a991-921a-477c-a425-2cd76dc662d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "830031c4-3684-42d9-b3f3-6b5e9f6975b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c38ffdc-b535-4adb-86a1-c6f7ac18b658",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8439ea9a-b584-4b38-94a1-5d9a39245a9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9adb4936-bbf9-46ca-97bf-b1e47668aaca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec84c98f-b39a-4291-b8f8-35aa6b37479b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "845e7c04-7f83-43f5-bfb8-3cf121bd9932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8486c196-fc16-405f-8047-b88d5055e45b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b986348-8c1e-4cb4-972f-21a594e7da5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f30bbeb-ea9d-47c5-aa6e-00e49d1d3681"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff0f3c99-0848-46c6-b744-20e7398ef6b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ecfd8c0-fbd7-42a8-bed5-9e295b30a5b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "556f1347-78a0-4ff3-98e4-e540341a9067",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e53e1c0-d1a0-4bf0-b9f6-325b6b426aa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62a4933e-81b3-4e6b-91c3-de55b5ea5285"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8aad8b9-39ac-422a-86a6-370c1c30c596",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee84aa96-ea37-4fb6-8d8b-b0044b3fca72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3591abac-7de2-4ec0-b47d-522cda6390b5",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb180080-51fd-4d9b-8484-c56e9acabfb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "538d19e3-60eb-4520-b5e9-6df655e4dc44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15458841-9a7d-455b-9924-b9b84c2268f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bf7fa36-74ae-4a7f-8c30-56df3ef7b75b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f2b26ca-9190-4292-816e-09a27d861a1b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2a95add-7c18-4317-b7f0-448ade5f6ccd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f59646c1-2dfe-4e84-8204-7e785cc6a618"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b399a6e-cf5b-4e1e-84b5-65941fa45923",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e3fcbb1-9d07-477e-a480-22c072c4c79d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0fa9e2f-dbb4-4ac4-a2b4-a26225cb3c0e",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "266e5460-021d-4241-b9c5-83a4af3c2c25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a046abc-9a6a-4921-98d3-9ccd3b5d39b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dbc8ab1-ce53-485f-828f-bfb3662ab862",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0820750-58e1-4c9a-a07a-2922837e48ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5064e03-72a3-46bb-ab29-0fc89e2b35a5",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f27286e3-a27a-4a03-ac02-42070cb5ccc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e70bb2d4-8e45-4da8-bfbe-bba4189600f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f0b0444-a78d-4460-b257-149c7760ffa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1834b151-61eb-48b4-abda-d22ce32e3faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc93010-eb7d-4325-8a00-fb446d9e5be2",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a560dd6-73c6-48d7-b44e-609a6dbce0c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a978682-5ec1-4411-8c34-11e86e810f69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a10db5d1-14de-41c2-9b5a-35e995c4afb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22c14b44-c35a-41a8-b0f4-36cdba8e4ee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e12c7ab-4b43-4371-a5a7-922ba1fbd1ae",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd31805f-aed6-4ad4-acd0-225a875f430b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1525cb6b-6354-4126-9590-04dcb1184791"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f1013a-9dc2-4693-a82f-12f9917c887a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83c416be-26e8-48e3-b78c-3ec5a078f06e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a64e6731-a7fb-45b4-bf7b-552f520f7211",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e065e59f-5562-499b-ad4f-f20c50b63d4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd0ba32d-fbce-4929-bcb0-389d771026bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b28eb8-7185-4642-ad0c-2503fb647fd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fecbf9e9-0c2a-4e16-b83c-3865549a1854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7ca123d-71f2-4ef3-a6e2-cea5a7d7f616",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4a5055d-1112-47fb-8eab-50afac97719c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c086a528-9b15-4a90-8b11-64de709ba759"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6737385d-e712-4c23-9e30-6a19d57ea9b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd17487a-b53a-44ee-b8d5-03e6dad4b753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a292109-09c6-41e4-bd61-f85cb69b0f14",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e7d31df-89fb-471a-8966-6286d2e9a654",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7e31639-cfee-418a-8c0b-dee3eb278f46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1531d82-4939-42ec-b56b-8a19a5c68fc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21b4e67f-c815-4ae8-b8df-0c66f38e1888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f57b77f-2e0c-4e89-b809-ac986bf1582f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c4fa77-cbd7-4253-bfc5-4b315a2bc03b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8034653d-945b-4226-8af5-f998e1f6960f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e05777d-77e6-4a14-baa8-9649b5785e31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a7bf8a0-343f-48bb-9924-91abf054a8ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1a891c0-b177-4c3d-a0af-8842b85be7b9",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04b703b6-3920-4db3-b9a3-c1308280d3fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f570919-ec74-4fbe-9645-31fef8d49f86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5c108ea-8d57-4afe-9f3b-d03b7c234c0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1485f2b6-a1b0-490c-b42a-1e2cb87ad37c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b603ea7e-d903-45fd-9bb2-c04a75f13c3c",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c6e6b81-949c-4ce6-b366-174b9bcf9a47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b11f3f0f-ea69-4ab8-8eec-5a97e7ec295c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6984b5c8-8237-488e-ab05-4d900f63ed7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01b70f46-c793-416c-b44b-7f99efb518ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d40ea308-7774-4fef-ac1b-676be0db6d26",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c68ad129-b5d0-4447-b133-3206deb99c5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03a537c2-47ce-4d1e-962a-a8d48a3201c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3d3566f-426a-42fe-afa2-a0d9183917f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44275bd1-253a-4516-9cdf-d88f5b9a014f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f241c209-25b1-45e9-92c5-f1a652089e61",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "764c4168-09d0-4bd2-ba96-ec6844947c52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b21802c-568d-4e7e-b5cf-f696daed3423"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02aed9b6-b168-4091-b23f-19e37af110d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cd2433b-8078-4c76-b80a-6df01370b45f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "252c2d51-a211-408f-a5cf-29db95ac19eb",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d26e736a-adba-490f-941c-ab47b0941a62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "928dc8ea-374f-4a0f-a1e3-a8d3cde305e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eb95cf4-07c5-4494-aae3-2d5df11faba2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0e22449-fb80-42f3-bc34-f9026588005b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1339a73-143d-4e56-8bad-ef518ba04da0",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e08f4d8-324d-4195-a570-f19c60748520",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cb41ca0-3993-4c58-b351-412d416bcee4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca3ef2f5-ab2d-4e84-9282-67d673881ca6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d18a105-eb65-41a1-be75-313f1d0a16f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "168bd3a7-1641-4500-88ca-bbdf2e21ef17",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b5043b9-09db-46e4-8ef9-07a592d21600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc44b4c6-5860-4e82-92f6-dce9b41680c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8592e9a4-8d1a-414c-98d5-511ad19d50c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9c548e7-7c03-4ced-8eeb-5cbd9fc40fa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e62a0bb-35be-4ff6-8ecc-92894fa06dac",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91709430-b971-4167-a42c-07c96615466f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5bc3d82-afc3-40ca-b07b-8bc5192b8c7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c13ca15c-fefd-453e-85ec-a974b6f18fbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "244ddc79-2bba-4650-802d-1d2640220f0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9fe8e9a-17b1-43c4-9031-617bc28996b9",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a0dbec7-2963-4848-a8fb-523ab4861d62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81d72bae-3d1f-4a1b-aabf-b9b994329cb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d42c634a-9a89-4fd6-92d2-72bff375dded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c18d530-9968-4ff3-abcf-8acfa48814b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6529c1ba-e216-479a-a45e-89ce6a746688",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd69231-cce3-41c0-bd36-7229640f0641",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e03bd55-f228-4292-a2e9-7305e2bca468"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4347b015-c06b-4539-b572-8eee2f0de8e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5d93dd8-8eee-4b3c-8383-5adf28448c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "481870d2-c927-4f97-b9e4-2243ac07ce42",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aa15685-72d9-42fd-89af-7497abca05db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4415f0a2-deff-4a16-a4ee-a803e1dd9247"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a0b0c49-c46a-4870-9fc9-a587a39cadb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55a4d37a-61d1-46ad-9b0b-8ba9f74cff42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e222dbb-dea2-452f-881f-a2307b2f5dae",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73122349-9a45-4fb0-9e48-ac87e3fa4826",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7419ca1c-7f88-441e-80ce-c59db78056a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb1e602-ee63-4c1c-bdc4-bb838718b188",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6ba1327-2f7a-4be1-96b0-e2ec2adc3a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db6333bc-b529-4cfc-98f5-3597c4bb76b7",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d114869-6dec-4f16-8573-13236ea2e9db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0075571-b584-41b8-b4eb-b8a417aad9f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d7cb0fa-10ff-4c0d-ab25-fa5e0e06b06b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc1f98a0-1c13-4070-8af6-3b492981cff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cefd08e-9104-44ce-8513-85873f8f9210",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c2e03a9-b21a-49dc-94d8-dd536e57e94e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7483350-396c-4ad3-ba6a-851a81a4c85a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e896c0ca-c43a-46a0-8af0-305b2d1749f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f73b3fda-2a28-4bf5-a1f5-65443d4fdbd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be256e0-1fae-4411-a7f2-65a3db6435a4",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4627fcc-1ac0-442a-bdec-5c2786a50022",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acfb2ebd-e9fd-4cd8-ab51-484c1097dd62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de276c3-e318-489a-af56-1d5e6c4a742f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49ff17ae-bb72-4dc5-b13a-c6cb3254acab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84cdd256-8f0d-4edc-b4f3-568daa6fddef",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9df5e301-e714-4bfd-9915-9ef171d0240b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55eedc38-74b6-4831-8651-4b78a7494723"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "794ade71-cd01-495f-8b8a-726af4377536",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41968d63-8aad-4a7c-95ac-852bda40ac90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1408fc4c-81f1-44c1-8c21-0ff0301d629a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea0dd62f-af0b-48f3-aff9-a4c5ebe300b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a991720-8f5d-42d5-b639-8e43eafa6591"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d8d6fa6-c5a2-4511-bd96-1164bee3a99a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bfaea1b-53d4-407f-8b3b-be26b556e390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f6e36ff-c83e-4bac-b6dd-589780ce6cfd",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae4ab69d-ef46-4c58-a834-155fe9c0d600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca7cd590-3782-46b5-8620-c49d00471206"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66c53ea7-6c51-490c-925d-05d4c1e2e7a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c90adb1f-fa30-47f5-b6fe-b76cab565a59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3800794-f5c8-4d23-a2e4-f3c039d2117e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93698def-351a-483e-b7f4-18708b45baa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08317844-0f4b-444a-8ec9-981cccbf5649"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd3b6fd5-23d7-4ea6-81c6-f88b6abdd3a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a83f1cf1-2c93-459e-ae45-674efcc1f8af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c93b5816-4ca8-4066-9258-c8d6d6702425",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3170724d-3468-48da-8902-dddad38d86e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd01cd2e-434c-43e6-b706-5218173c91b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea51bbe4-ab14-4e9d-8415-15ff426371fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dac57132-1ebe-4700-ba3c-eb2ff5f4bb8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01febfec-c86a-49a0-8aad-5584c62cfd06",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33e12dc-8e02-4cac-a4bb-0ef57c665630",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cd4409f-ec86-4f00-a038-fbd95dad6ba3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8539465-0f9b-4eda-93bd-f6dd323fced0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2de7bb4c-cde3-47a4-89e5-0dbe70f3b3bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f71b213d-d0bd-4631-975d-1a52de96eeed",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d80d55d-ae7a-4628-a84c-edced5721f86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22f4ec09-d7f2-4620-887f-ff167d9dea9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbceb90d-448a-4cc2-873d-988bdc3c8547",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6809595-b908-415c-80f4-2974008afec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd944df1-62d4-4456-9646-5808f9be4913",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd030bef-0f4b-4799-b894-7e75cb6d91ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b11bb918-08ed-46e7-b2ed-90930e0c458c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "453a419c-c95f-467c-8e6b-5a339ab06691",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "770cd7e9-2ef2-491f-9f94-069668c8f03b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e4b430-ef93-498e-99ad-a3d93a3ff173",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "555137a1-8b48-4b9c-8be2-7152268071d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adfb267c-c17a-47c8-bb14-895812564dd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "902b1d09-2f11-4075-8b69-1d1a9b3b08a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4192ed4-9c00-40d9-af2e-7c06acb03fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9ad711f-309e-47a7-9c44-84c8d9b1ffb7",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9708ca65-d66e-4a09-a3a3-f132e34549b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "949f15ba-f92d-4c6e-9c8c-94d4a3a2199b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "295ee666-dcd1-40bb-97e5-b139b90afa4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49576e9a-cb45-4b5a-bf65-cc11901096f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b2ec92-14e5-41eb-913f-a798b45d8eb0",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b43510d2-cf53-4dfe-aac6-9d43c2046dc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efe4bf82-50af-4aec-a0d1-25ea718ca84e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82b4a1d5-ba32-433f-830d-66a0ba7dd304",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fbe9451-0ee8-4e2f-9cdf-58502a54c618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11b64bfb-07d5-4b53-a2bb-b7445b0a0d77",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f45538-76b4-4c51-8454-1fb3125596c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5146d30d-3525-4fb3-9e2b-3f1e9ea119cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "562b1d8e-ef29-4007-840d-f1d14ba0b010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c6846b9-9cf3-4098-9a9e-5cb46feb4e11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a9195a0-5e13-4458-8de3-2bbab0e5b2fb",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a020a1-3803-4fe0-8770-0611e55ccfd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15c6bb13-5fba-459f-9f13-f92ac4110c4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "647d8db4-c5cd-4011-90bc-54e7788986dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9ed837a-9a69-4c8a-bb0e-f1c5a262c84b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d6ad88d-d170-4ad1-aecb-e2e8b6545093",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "426cda4b-1426-4692-a1ea-b2402e14be06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "348062c6-db0f-4efe-adec-0b26f66456c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e586a7c-28a3-444a-9474-905b16e33bb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e02d09a-8db8-4e26-ab3d-26dc7db8265e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35e5e0c0-1dee-4ebf-8b31-2d531865f685",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df322da3-6c14-45a0-adb9-dc904c6edcf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c6b46c6-00d9-418f-80ea-e67152048fb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f46d34b-6ad9-417b-81b8-b467bb489202",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fad5af6d-1fb6-4581-8da2-2368642eb7dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de3cea02-1e38-43ae-9201-02c736ad2a9b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e38b4e94-4346-45e7-8a69-3146ba00ac9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ff3a6dc-5666-4293-a323-29cedfe55eb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3bc9ca4-f035-4453-ac74-dd3a384e8ade",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f048ba71-269c-4ee3-bd88-f848c9b0c918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74609db4-6f67-47f7-8d8e-9da9cb90f37a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7f241a9-ec7b-4105-9e87-48d8d2144390",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5fbe154-9668-4309-a49c-b40d88f416bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac0ade81-9f4a-4ebb-b185-ba6348baddfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e79ce49-111d-43f2-a21b-0efb1a4d006b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e917712-fd74-4da9-987d-5badfd4dfa3b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99faf846-2b48-4bee-9184-f4b0ac46c651",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8aff2a51-bd8c-4ce6-bbe4-a83fbdae6581"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a822e26c-56bb-431d-b64f-dd276ddbed6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "747becad-16e5-4dfa-90f3-d6c1acb75af9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8db592ec-08af-4901-8a57-414e308c621d",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d54bfd-296b-43e3-8ada-129204f6b408",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32b44859-de43-4c2e-89b2-fea43edd6d88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea2f1c7-01ca-4e51-b2a9-5528c05100e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51bb27e0-2851-4c80-bdd9-0b513691c3dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cae0867-3d2e-4074-b94b-1d3c9f3faf61",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91478af6-e3c7-4f78-926e-23ab1c545c04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a600d4e-fc36-4cc1-b8eb-f01f312e971c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8a64517-2475-46b9-bf9f-769a25542891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b3a673a-07b1-4d7e-9c7c-3673139be50b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0cfb9d8-9e3d-4213-afb3-af227cf86e79",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72637d3a-197f-4255-b92e-9c0988f28bb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "810a7a39-c99b-4c0a-be89-dbeb98241e3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1141c8bf-0df6-4804-b0b3-a8f5558c9146",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf356236-b071-46d4-a59e-7469901114fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67942c05-181f-432b-a071-dd9bdda44312",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a0f3f4e-d686-4ce4-9096-cd88ef419892",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5872d9b4-c032-4083-910b-1dbf1b46173e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90e9e6bf-a5b4-42cb-9c1d-3f294eb791d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "550d0636-612c-49fc-9902-043473c79777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fb6ad80-710e-4d99-a520-872bd1d81536",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55a921a1-b501-40bd-864b-1efb9ee9a53b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a183059b-6d58-4144-92cb-1808b4b66ac7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b95ef32b-4894-46bc-9863-6f77d309e78d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43d5ba38-da56-4143-a689-edb2c35ab2ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e132e84b-ff37-451b-911a-2d7669d45d3f",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf1d4fb-367a-403d-bb47-957071dc2280",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43965138-0523-4ca9-9a18-c92f5cdd4770"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b75a4a0-f236-459e-a9d2-b9783b1df726",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb814eaf-db77-466c-8edd-db96ffbfdf7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26df49bb-8c55-4d63-b638-350354c3db79",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07fd9acb-fa36-4b42-bf2c-389cb355c8e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bc47128-c1c1-4060-bd0f-658f126dcae0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc2610f-b7f4-4d4c-9bd5-9915e9327799",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9701e3a1-2b09-4f32-be9b-61d25d608767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed70464d-b24b-43c8-a640-829adef629f9",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25180caf-acff-4798-b5d3-715eefcc48cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9d8641a-7c32-4792-a98f-f03fab20b9aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21ea7c34-67cc-42ff-83ab-d047146c58bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e16be5e5-e1a1-4dab-b5e4-e480b8ce216a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16bca1f0-4d84-4f6e-827f-3c0fd5c779a0",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c85995f5-2867-4ef5-8722-08e3ef568a03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4ed081f-a5d2-45df-b412-a6238896a06b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "935256a9-e5a7-4407-afb7-a6cb91476ba9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5429c61c-39ac-401c-b03f-a8760a331cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb588155-b152-4315-8fd7-dfa7e47ebea7",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c62b164-ea8e-4951-b814-81063519e320",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c362818-ce30-47a5-b8de-ed3f600bdeac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c740b8f-5b02-4252-a236-0451e00353f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9684ad21-3148-46cc-80d2-7e2db8e52a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5e87817-880a-41c2-a7bc-16559c4d8801",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e1a5b93-3dea-409f-a617-efc3e0d714b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4822a4bc-2b2b-4d52-83aa-a54ddf6cd220"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "153696ae-432d-4032-923c-02a122eff458",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "205a9a9b-6c98-4e9f-b781-f8f56f4cf138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e35820e-96d6-4344-9a75-2251f0df23c6",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc76939-d926-4a03-845d-7ecd5331c286",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f152409-3f5e-4392-80c0-28ee98965e51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78cc1c90-7330-42c6-b3db-1c5ea179133b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3364fe73-596d-426f-8ffc-69c4af59f312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d50cbda-934b-43b9-8ac9-35b6b47e60fe",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f740ecf5-d178-494c-a709-5fd17ee568bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc51ddd5-0fa2-4ad7-a38b-0b357b500616"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "203dc788-eaa6-4630-b214-64e87ee8586f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "231203cc-3033-497a-ae72-2827fffae852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b2d05fe-3b59-4b3f-be87-df9fa1cf7662",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c419fa-d339-4b99-ae10-12a7532a0909",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bb21bc7-b8e3-406c-b89a-1f77832f35c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4744947c-a6a7-4e9f-8034-6dd38df23172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61efa91f-5100-4064-a45d-e3d6edea2e50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e6df0a-ac77-4c9a-a78b-691861efa53e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4a5abbc-081e-4e2b-aaaa-f4081466abfb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db614d72-2d2e-4492-b159-686fe6f954dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f3b481-efc6-4576-a223-02787117f91f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ba15946-fa1b-4770-96bf-a90773d13611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5c8dfe5-ceba-45ff-9d0f-a73a27bae01d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d44e6dd-0523-422d-ba63-cec3531575c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c811e524-a5cd-41f1-b4ab-a62b34241d54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81927386-ab5d-4986-8960-9d3d462c5772",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "607faa29-3790-44fb-b237-8b54eb2c20bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27531af3-7243-4b68-baac-3212446cc4fb",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0392b13a-d31b-4779-a947-c4cbec4f3928",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0dcef1b-b637-482c-9467-d12368f1e8f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a48007c8-8ffe-410e-a217-5b11488df117",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b362028-37c3-44ad-a30a-e24fb4b41067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bee6600c-8bbc-448c-9a52-922e36ccf1ee",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06da5c1a-4a5f-494f-a7e4-4e72430dea53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c908acf-db3c-42bc-931a-5f488a498a0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cdb4510-e128-4320-836c-00cd4c8773c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f667082a-64df-493f-bf8f-bb87b03bab9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03aae272-7ba2-4071-97a1-5709c5cc69d5",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1298a82-4745-474f-bb98-07e2635d7050",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de4f357e-4b84-4b9a-8bed-c696cb6cb78f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19755ea1-ca93-4694-8d69-ad76e4903075",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb61bdcc-c118-4da5-b9d5-68f4ac7e6246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec228c1-520d-499c-8d9a-5a6a088c8021",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "137434df-6309-4bb4-8f41-0f9233e63376",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e51eac51-d392-4914-958c-093c3a137be6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba0f615-7860-4a81-b99f-40795b8bd056",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49f729af-4ec9-400f-9baf-fddcf9c85f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "611f103f-65f3-4bcf-9a40-42fca55a2c3d",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa40855-2a94-4a1e-aab8-002243750755",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbf23602-1f14-4416-97ac-75cf54c06eb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e31d250f-c2cc-4d33-94ff-21b908e4cf4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7222254a-b2be-4f06-9519-88a868e1cf85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5de75ca-ddec-4a89-a445-80fe0d7be1fe",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab9dc617-6a58-4a82-a061-089f862cc1fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e459759c-bbeb-4388-a79b-717a90ecdf80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43fee5c1-5f3c-4fe0-8468-26e13d2eb7ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cdc41e6-b391-4605-903c-f2f902d171d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "253de08b-da6d-41f3-980a-9cee188f39aa",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36e34aec-ee25-4d56-a0ae-ce903f42378b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eed734b1-b6fe-4323-8f77-8af21c690ef4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e78b366e-b892-48a5-be1a-d8111b718c1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dda20d3-32c2-4ba4-a574-467e0c00bf22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e13de8-9ee9-4b5c-ac55-7f92af2199ad",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cac9242-2913-4d39-9d6d-331980bcb5a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bdbf400-162e-4dad-905c-0b86e280a2a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a72387-729c-482f-810b-ed5277943a94",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f134a159-5c4f-46bb-86b0-b9e44db271ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdb500b3-02b2-4201-8c3d-5e006cdbd784",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38830bb4-1e60-420e-b763-16e1c5984932",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0abd2fc9-be28-43fe-9b56-043a6b7fd2e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea0ece8d-3119-4109-b005-267a9acf392b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a76a7c50-8130-48d0-84e5-5a96a8b932ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88604a68-2650-4cd3-ab76-3f0f178d225e",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4059004-78bb-4282-ac8c-03a0a5c3715c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9ef6139-c9c8-454d-b977-e088cf5fa569"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a6f0465-ea4c-43d6-8e3b-7814611ab451",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57a16b03-4f3b-4493-b15f-afd303994ceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a37631fb-749c-4d4e-94c2-f87758b9111d",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73d15587-ba9c-4c04-9707-6fc508e739ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "710398b0-d074-4aa1-8ed6-342401ebfa8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a62a9ae-263f-4cfa-8c68-e8c64fe458ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e190db52-b78f-45a2-ab15-7a966bf6186f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "575720d1-e122-4c6b-8081-4570bef4e89d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ebe5204-d081-48bc-9935-91b7ed83b705",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "323819b2-d432-47b8-83cb-172f2971f921"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b73a6fc-eb3f-4b8b-9095-0a6bbe0233fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "564c76a0-0179-4b19-bb13-57906e0aebd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5f48a01-e949-4fdf-87a0-83c1fafb93f0",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbddf03e-be91-4bd9-b191-01434cd7c5a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "214823a0-4745-4bbd-84ac-7b376b80ba8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcddb58d-3ab0-4fa8-8f12-46561b0e9989",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0477ba0-db03-49e1-82de-cfa713c89cb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74ffe91b-415a-4c4f-8954-59bd8ecf1b51",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6bb0298-d5be-4182-aaf4-489335745265",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9f29cda-23d3-4701-9eaa-dfd7c67cfda7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2503fc3d-d77b-4f70-adde-545f744945db",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "299e6117-34e4-4024-94d7-2bd696aeed5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d9f49d-dbd8-4e7a-828e-2c8d4dc4bc52",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "228ae99d-4da5-4924-b8d9-92e0804ad59e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "282beba5-db98-401b-982c-3bbd94fc75dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "517f0716-0810-48a2-9150-91f447eacc03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6769d582-df2e-41f5-91c8-a391226a9b78"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "faef2ed2-68f3-422f-bf8a-e72872a4cea8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "08f1d133-dc32-46ec-b3ff-c8699fec9bb8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c133d1a-bf07-433a-bffd-1015f456789e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c380e41f-231e-4615-9f78-4eb0b66d5db3"
                    }
                  }
                ]
              },
              {
                "id": "bf85ee58-c5ce-494a-9923-7baa086916ce",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "89a47be4-9e63-4407-a774-1e54609545a6",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3029e188-3e79-4545-89a6-a0dd8d508a7e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "030218bc-13c0-4e84-9458-c120f6ddf31d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66582412-96b5-4b5c-91fb-c2a34d13f2b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6d24544a-e7c2-4a9e-815c-8790eaa178b3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bf3db7cb-18ed-442c-97d1-8ea9e33c084f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b05704cb-5e28-4053-a995-0435390b05a0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "225d6adb-4d01-47b3-97a9-77f4fa3776e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "185ee2b5-2490-4802-8c9e-709f80ca9b7a"
                    }
                  }
                ]
              },
              {
                "id": "69d12cbb-d510-4f76-8628-2c8a5be91bf5",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "9162a34f-e2a9-4ed7-b3cf-b9fde84c00a7",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "add7b778-e833-4b45-be8b-f52e67742687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "6ee6c168-50ab-41e3-af05-cb44e05c89e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aeabaa1-cf75-491f-8432-1654cc3fb218",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18b20971-8d28-4c49-8c51-4c7fde6ee651"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4c01e46e-a675-4df2-b972-d9b7451d69cb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ce7998b2-6eb4-432e-a8ef-7a21c92bbd09",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a277ed17-b74e-4ca5-8d1e-02ead561cadd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "bfae702b-a5ea-413e-84c9-83a1edf600ef"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b58a22f-41fe-4577-9330-76f2e2b19c88",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c7e4fe7a-2968-42e4-a00c-fbff4b7c9286"
                    }
                  }
                ]
              },
              {
                "id": "dc6bf6cd-8d10-434a-81fc-1e58f0645977",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "549f8dd2-7d12-4321-9b59-23eed414268c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3b18d518-7f6d-4528-b6e7-22c049759b87"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd40c043-25da-4e70-87eb-a4f934fb4ad2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5a24b2ae-dacf-4845-8a10-776fd834e506"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a7b39df0-0ca4-4a79-b5e8-90d0341667ba",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "7b252b3a-29a1-43e3-938c-03cc6ed7c42a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "157389fa-f915-4cc3-a6bf-f903fd8b1f25",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "73ad9886-bd85-4a74-b89b-cc2614f6ffce"
            }
          }
        ]
      },
      {
        "id": "fd699696-da51-4429-9eed-74b82adcb226",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "bfce6466-435a-41e5-9a73-ff49a43700c3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7fc74158-d4fc-47f6-a6f8-7a32ccb75ca7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4809e9f4-1268-4675-9e24-6fd7b5e674e1",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c90e2e6-e5a8-4fe5-bb7b-9f6e89cc948c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2f81b313-6ee9-4927-92cd-7578d63b6fa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "187d7b81-c13d-4752-93a5-6077fca851c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a8298285-bbf9-4b5c-9638-67e296569347"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4a6d01d0-f6cf-4496-ae36-8bbef4dab3fd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6209807b-b79e-4df9-963d-862b03594032"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b4a6f13-80ca-4a41-b031-2e573ce7d769",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3c08c517-300e-4a01-ab1f-eea341352534"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9b1ab5ae-bfda-4c63-b3b9-669776ade9a6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "58512c01-6b2f-4486-82c0-7c674a648c20"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "82abe764-16d3-498d-b03c-38190c67b919",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eb98e64f-60fb-43df-80f1-5e6adc330ab7"
            }
          }
        ]
      },
      {
        "id": "13e540d9-781a-481f-964b-25b38491e996",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "0180341a-bd8f-4d0b-969a-755b5ab59c06",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dd3611bf-8d25-4613-9964-25cc50999a0d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0d65fa24-9b7f-4185-b0f5-4464ce4ac2d6",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52cf369f-5ef6-4cdb-b152-841aa2967a17",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "383f2d4e-2c03-4fff-b544-9b17bed9abd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d400eb-3a34-43a0-ae21-a4504c9e99eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "878d5837-f5b4-47ca-b2b1-331766e46465"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da88616f-2eda-4e95-925a-ec5b86853b4d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "779007bc-6bd9-4104-b3bc-86306f697e08"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "37499610-1fc8-45e9-a23b-1520c005f5de",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "81b72d5e-baf4-4943-bb81-656cd6b85022"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "09d21ad4-a3d9-4513-aae3-d150d5d86470",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "273d0df1-a30c-49da-8742-b0e37f5e7b72"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0cab2d29-4412-40f0-9c78-fe88ce4f7cf8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d1cebe1c-b530-40a6-8d7f-318be82128ec"
            }
          }
        ]
      },
      {
        "id": "74f5bfb5-c5e4-4203-b34f-e27280d1d598",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "2f55607c-665f-4d9c-a201-91c9ff73476e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0658a250-9ef8-44a3-aa5a-30d0d15cc31b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "29dd46c7-b644-48c0-87dd-7746eee8f16d",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "346a9ab1-dfd6-406d-826a-17e84566b14e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2db4f74e-6d75-409a-a45b-d36b9d22f038"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe4e86d8-d3ce-44e1-aae4-335b42d6e833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "119430a3-8ccf-4eab-a0e1-c44a984a1d9b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "85a80991-4352-4eb1-9004-a1abeac9d749",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f8848e1-f81f-4c1e-b1a7-096ca1fb818b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4692018f-6da8-42d6-ac1d-b52680a5a636",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6063acb7-30da-4ed0-ae36-5dc2f6e35125"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cc31ffb1-81b4-4344-8d96-60c32352a51f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1ee56e68-6fd9-4696-94d5-4e18dcc8464b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "16251041-2ca8-4db5-ab09-15ff9f5b6df3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "235c0218-c8f9-4340-acfa-a650dd87e43b"
            }
          }
        ]
      },
      {
        "id": "88e8c145-3147-4b25-b71f-f678ff1e82f2",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "82cc3a46-0e87-43fd-a41f-9ab6d609da46",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8403325b-f5bb-476e-87d9-3bf419f86b3c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c6c3de79-3f6d-43d8-9aef-b0e1ea6b7387",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1a6fc470-b90f-4994-95ec-6c8ec3714519",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5f39a642-82f2-47f5-9f17-5d0027f4fd0e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1853,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 246,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 495,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 931,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 922,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 1128.865853658537,
      "responseMin": 8,
      "responseMax": 38774,
      "responseSd": 3453.386094042352,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1686962375255,
      "completed": 1686962667251
    },
    "executions": [
      {
        "id": "cb3c82d7-c8bc-4e45-bcc5-6817fb1083b0",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 244,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "cfd1e287-482d-429e-871b-34ed4ff2e0b2",
          "httpRequestId": "2f70d5b1-2844-4194-8533-0fe54b13595e"
        },
        "item": {
          "id": "cb3c82d7-c8bc-4e45-bcc5-6817fb1083b0",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "51cc33f7-0c13-48c8-aa92-546da82e8be2",
          "status": "OK",
          "code": 200,
          "responseTime": 87,
          "responseSize": 0
        }
      },
      {
        "id": "c790a44e-f410-499f-a447-58d7ffae7f58",
        "cursor": {
          "ref": "acb09ab8-f92d-4b07-a59d-0477ce3a432b",
          "length": 244,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "49e64f74-1dd1-4a95-85e1-b430195c8725"
        },
        "item": {
          "id": "c790a44e-f410-499f-a447-58d7ffae7f58",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "c0f8cc43-bd85-4fb0-b2c9-62c613cd5ae7",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "e158fbba-9ebd-417e-9c21-f9ebaec20bfa",
        "cursor": {
          "ref": "5d391b30-1bf4-4478-bfea-a18deb6d8856",
          "length": 244,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "c9049654-fa9e-417a-a108-bd65d34300a8"
        },
        "item": {
          "id": "e158fbba-9ebd-417e-9c21-f9ebaec20bfa",
          "name": "did_json"
        },
        "response": {
          "id": "e9aad84c-fe8c-428c-9d3a-6b3ded9ad32f",
          "status": "OK",
          "code": 200,
          "responseTime": 1126,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5063e162-d641-4508-b29a-c5d93c0cfa51",
        "cursor": {
          "ref": "2b265e90-bf8c-4eb1-b3cc-285186f8afe9",
          "length": 244,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2ea14d0d-f682-46d2-8dd2-ba23cbcf48f4"
        },
        "item": {
          "id": "5063e162-d641-4508-b29a-c5d93c0cfa51",
          "name": "did:invalid"
        },
        "response": {
          "id": "a4dab407-0df9-4261-a0c8-26f439e7376f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 886,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5063e162-d641-4508-b29a-c5d93c0cfa51",
        "cursor": {
          "ref": "2b265e90-bf8c-4eb1-b3cc-285186f8afe9",
          "length": 244,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2ea14d0d-f682-46d2-8dd2-ba23cbcf48f4"
        },
        "item": {
          "id": "5063e162-d641-4508-b29a-c5d93c0cfa51",
          "name": "did:invalid"
        },
        "response": {
          "id": "a4dab407-0df9-4261-a0c8-26f439e7376f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 886,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b34855-9746-42a3-a3a9-f71c691f1377",
        "cursor": {
          "ref": "cb9108f6-6896-418a-9a42-5de2bd30190b",
          "length": 244,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d1e36084-e621-435c-87a0-e50d281a07ea"
        },
        "item": {
          "id": "09b34855-9746-42a3-a3a9-f71c691f1377",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c7ace000-376a-435c-a1a8-90cc226336e4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 970,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "991d9d05-47d1-461c-9c3e-1d21ff3b0bf3",
        "cursor": {
          "ref": "a497a4db-0f9b-48dd-b2d5-e8c5bd505a72",
          "length": 244,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "766fd968-8db3-495b-8baf-91c78783a16c"
        },
        "item": {
          "id": "991d9d05-47d1-461c-9c3e-1d21ff3b0bf3",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "247d8cef-0d0c-485d-abd0-2976b0ee377e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 739,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f796c65-8502-444e-a899-816227cc75e4",
        "cursor": {
          "ref": "2ec1d0a6-3ad1-4868-b861-84ca211a8eea",
          "length": 244,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "bb2826b8-1606-4e8a-9e55-11317fa3083d"
        },
        "item": {
          "id": "0f796c65-8502-444e-a899-816227cc75e4",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "1e5f78c6-257a-44f7-a5f4-9b3b1bf0aac8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73c47278-62bd-4435-91fe-c4c3f2928ed9",
        "cursor": {
          "ref": "fa753b6c-06d4-4d61-b2f5-b03a402db569",
          "length": 244,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "4b78fad9-9a74-4337-93c9-c9f5cc09e293"
        },
        "item": {
          "id": "73c47278-62bd-4435-91fe-c4c3f2928ed9",
          "name": "identifiers"
        },
        "response": {
          "id": "4a6df5c6-9abd-4a4e-8350-81abdf9ce84d",
          "status": "OK",
          "code": 200,
          "responseTime": 1638,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d304f161-597c-40d1-b47f-368e2552ac45",
        "cursor": {
          "ref": "14cdb1d6-34b4-47e3-bac8-f71e94778ad1",
          "length": 244,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "0b53eda8-4599-4b46-9ba6-eaabb4611356"
        },
        "item": {
          "id": "d304f161-597c-40d1-b47f-368e2552ac45",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "512ddb7b-b664-4300-9822-d9b13ab51124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 766,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33af740f-0569-4521-ad78-a60c6faa9d90",
        "cursor": {
          "ref": "f1fb53ac-28cc-49ef-a898-56f8274d1e7d",
          "length": 244,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3b70dd04-486d-4a8f-a9e7-60bee9fd8c7d"
        },
        "item": {
          "id": "33af740f-0569-4521-ad78-a60c6faa9d90",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d9fb9d06-1587-4a3f-8eed-218c76c4cd54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 777,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "646f4d1c-d239-4070-9a92-f6a32da91fc5",
        "cursor": {
          "ref": "d0138168-4b7e-490c-b277-5d4ad5c561c6",
          "length": 244,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a7a105ec-5f12-4e3e-b970-c33e829640fb"
        },
        "item": {
          "id": "646f4d1c-d239-4070-9a92-f6a32da91fc5",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "ebaeeedf-df28-434c-bbda-ee51b9f39dc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 836,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f993ece-4a4e-4310-bfbc-ae719936bc19",
        "cursor": {
          "ref": "0228fcfd-ac2b-4817-bf06-f9bd4611e443",
          "length": 244,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "af51b42f-6bc8-44ad-bd9d-bab8d8530cff"
        },
        "item": {
          "id": "1f993ece-4a4e-4310-bfbc-ae719936bc19",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b3520f07-e4e7-41cf-885f-ad6c075dd0e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 747,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c162540-7d57-4b20-9bbf-a04d844f3c82",
        "cursor": {
          "ref": "e218b9e2-59af-488d-9bf2-7ea5bd08e85d",
          "length": 244,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "259e6dc1-3abb-4097-aa77-f385504a3630"
        },
        "item": {
          "id": "1c162540-7d57-4b20-9bbf-a04d844f3c82",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "d1e487fc-edb2-4034-b26b-328caf851c3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 732,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3205bb53-a35d-4970-bb29-9fe4d32efa57",
        "cursor": {
          "ref": "49b3e85b-7675-4672-801c-2819d692874b",
          "length": 244,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b072ab1c-4b90-41d9-a156-962e6e1b00b9"
        },
        "item": {
          "id": "3205bb53-a35d-4970-bb29-9fe4d32efa57",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "1079d75d-41fe-4c1e-9f7e-1ada0f3c2819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 813,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "350b962b-58ca-4d37-921f-c661d1084f1e",
        "cursor": {
          "ref": "a980ea89-b227-41cc-94e6-4e50ec4200ea",
          "length": 244,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "8b3910f9-7445-4316-9e02-82ecef0c8e6e"
        },
        "item": {
          "id": "350b962b-58ca-4d37-921f-c661d1084f1e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "83573c55-1569-4c19-a7bb-934729c11d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 776,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f78a0c7a-d93f-4585-98d0-c5e0ddbb8cce",
        "cursor": {
          "ref": "80afd058-25da-4847-9ba9-28b4c1478e4d",
          "length": 244,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "cd00ebf3-f916-40e0-9eff-b1f6485f49ad"
        },
        "item": {
          "id": "f78a0c7a-d93f-4585-98d0-c5e0ddbb8cce",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "ccd3dd83-c4e9-4410-a789-0cf8fc583a68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 770,
          "responseSize": 592
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64fee566-30b1-4e9f-88cb-90141d79fb3f",
        "cursor": {
          "ref": "348e8400-4b72-48d9-bb9f-8d0af1cfb11c",
          "length": 244,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "d4bd2997-8e91-49d2-b9a5-ccb2e3c07cf1"
        },
        "item": {
          "id": "64fee566-30b1-4e9f-88cb-90141d79fb3f",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "14ca554e-72ed-4e26-98ad-5cb86e6d2508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 778,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0741ca50-b191-4c3d-953b-c5e2969ddfab",
        "cursor": {
          "ref": "9ee416d9-9441-4ad2-a4ee-8858063809ac",
          "length": 244,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b3aa159f-6396-4cb1-ab35-de2deac79d3e"
        },
        "item": {
          "id": "0741ca50-b191-4c3d-953b-c5e2969ddfab",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "97d4c65e-ff79-4d63-84d8-355b486fa088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 785,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a4dcd07-a0a8-4a89-8f0e-765d5b9176c4",
        "cursor": {
          "ref": "2bb891a5-3e4c-40d5-97ad-cc6259883f79",
          "length": 244,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "bba8616f-406c-446c-a7b3-18ed67cf2f37"
        },
        "item": {
          "id": "8a4dcd07-a0a8-4a89-8f0e-765d5b9176c4",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "720121bd-b91f-42b1-b19e-26b773b7c782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 836,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38840a1e-7b60-4a0b-a849-2c65e8fe035c",
        "cursor": {
          "ref": "e771259c-8bae-49df-829d-ebb5dce9c38b",
          "length": 244,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "0fc33734-20b1-48e1-9407-e12e1619b86a"
        },
        "item": {
          "id": "38840a1e-7b60-4a0b-a849-2c65e8fe035c",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "7e56131f-8b5c-4afb-ac8a-13f32587e29e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 747,
          "responseSize": 601
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd4e962a-75b8-4835-a132-dca9c3a3df05",
        "cursor": {
          "ref": "eff73967-ae40-4f33-9936-3911a3ce38f5",
          "length": 244,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "765f1535-320b-4b6e-ac86-3ef3991ff6cc"
        },
        "item": {
          "id": "dd4e962a-75b8-4835-a132-dca9c3a3df05",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "35eaa1c4-c411-4188-8239-657c04281fa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 760,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7193bd2-e040-4bd7-a22c-533cc01c1dd9",
        "cursor": {
          "ref": "d9957892-e1fc-4192-8bb1-dc06fe41c8f8",
          "length": 244,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "080cfa57-2148-4ffb-8dea-048db6863c58"
        },
        "item": {
          "id": "f7193bd2-e040-4bd7-a22c-533cc01c1dd9",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "3b8dff45-2882-4949-8c70-d46a0029d4ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 782,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c107b7-c55d-40ff-ae8e-20438aa5c6e5",
        "cursor": {
          "ref": "52366479-5930-40b9-8bea-b435c7b1a0ae",
          "length": 244,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e913dadf-ec15-44fd-8ecc-08622409ca5e"
        },
        "item": {
          "id": "66c107b7-c55d-40ff-ae8e-20438aa5c6e5",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c993df30-3a24-498b-878d-56eb47e62cc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 760,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d3c34f-f5f0-47f7-b519-5d4bf5474954",
        "cursor": {
          "ref": "36bfaf1d-69af-4867-9083-080f57bba0cc",
          "length": 244,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "0a972681-848e-4762-8fc2-49df8e9fe9ad"
        },
        "item": {
          "id": "b1d3c34f-f5f0-47f7-b519-5d4bf5474954",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "51677c71-0332-49d3-ba5e-6c76d4dd0536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 742,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d9c4172-8b0b-4ff1-bc62-19dc2a0eabac",
        "cursor": {
          "ref": "25841bb3-abb5-42d2-8cad-71e10373ed11",
          "length": 244,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "1a5e7859-4363-47de-b801-b9c52c4f6165"
        },
        "item": {
          "id": "3d9c4172-8b0b-4ff1-bc62-19dc2a0eabac",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "b05ebb21-d347-45ba-8e1c-9e85794af910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 749,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b952cf01-51f6-4983-b0f3-f189b181f9ee",
        "cursor": {
          "ref": "6457c0f6-2ac8-4c1d-9b6b-672d90ac656f",
          "length": 244,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "6fa90d0c-1d8a-40a8-ab83-e8641a7e4bd4"
        },
        "item": {
          "id": "b952cf01-51f6-4983-b0f3-f189b181f9ee",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "3d23bf3d-087c-48b2-91bb-eeab368da2f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 907,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd2418e-8fed-4652-82b8-f27e18ebcd8c",
        "cursor": {
          "ref": "68a81195-5f1d-4df7-8ae0-54be99759872",
          "length": 244,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c3d1cab7-94f9-4bbd-bd6f-11a1887d115c"
        },
        "item": {
          "id": "9cd2418e-8fed-4652-82b8-f27e18ebcd8c",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "0c5f719e-5a42-4ebd-8f29-cec8dd7b6633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 781,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "466bac27-d4f6-4607-8a08-f68dbb758b09",
        "cursor": {
          "ref": "e0974e70-b7c4-42b8-b420-51ace370ff27",
          "length": 244,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "eab720eb-ffc5-47e5-906d-33e3ff30f6d1"
        },
        "item": {
          "id": "466bac27-d4f6-4607-8a08-f68dbb758b09",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "853eaa8f-6064-4c14-a31c-cbc3a9a0fd32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 763,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33f03cab-60bc-4712-8c4e-3691335fbcec",
        "cursor": {
          "ref": "bb3ab639-5109-407e-abe2-7a8f5fbb60c2",
          "length": 244,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "60c35cd6-c81d-47f8-8650-d58c87c8da8d"
        },
        "item": {
          "id": "33f03cab-60bc-4712-8c4e-3691335fbcec",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "c45e706f-6560-4c9e-8c0f-4580d8c0317f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3009,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "265af01c-6806-413f-b47c-dbb748e0e26e",
        "cursor": {
          "ref": "84b27c9c-421d-407f-a942-8d6d08093d23",
          "length": 244,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "a6f86958-771c-41d6-a9cd-7a999b944177"
        },
        "item": {
          "id": "265af01c-6806-413f-b47c-dbb748e0e26e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "1ae287f5-5a05-473d-ba7d-045a9ee36932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36474,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3baeeaea-c0ad-4154-8b9f-fc1f1fa95752",
        "cursor": {
          "ref": "4f4d009b-4543-4bda-830b-3f90add0bb11",
          "length": 244,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e777f7cf-76a4-499f-8c85-3d4214d892b7"
        },
        "item": {
          "id": "3baeeaea-c0ad-4154-8b9f-fc1f1fa95752",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "23969337-c3de-4c76-b477-0a1d87510d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 799,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0166040-823d-4439-b298-d676e7e32f47",
        "cursor": {
          "ref": "ed3db847-3825-40bb-91cf-cba06d244d46",
          "length": 244,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "8bc54261-100d-4149-80b3-5aa8c19561d2"
        },
        "item": {
          "id": "d0166040-823d-4439-b298-d676e7e32f47",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "aa23eb4a-e5ea-4425-a4e3-7e29d35446fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "682f7c9c-3e65-45fb-9034-fb7fbc69bade",
        "cursor": {
          "ref": "2474ce69-16a0-4b2c-b417-1009ff98363f",
          "length": 244,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a5bc227c-7161-439c-89c4-976e75f4bafa"
        },
        "item": {
          "id": "682f7c9c-3e65-45fb-9034-fb7fbc69bade",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "d7c1e99b-f87c-4810-a442-0e596759a348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 758,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebb24bad-c048-4f11-8366-7a7ab9fa5a34",
        "cursor": {
          "ref": "5fd6ee6b-2db0-4d29-b516-ea2ace56fc7d",
          "length": 244,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f02bad1a-12b7-4343-8d42-6e1adb69d18f"
        },
        "item": {
          "id": "ebb24bad-c048-4f11-8366-7a7ab9fa5a34",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "1c5a126e-6ca4-4d68-9513-c16bb0baa736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 745,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "327bc990-4f2c-4a80-aa4f-db37b480519d",
        "cursor": {
          "ref": "77cb3ea4-0985-441e-8f9c-12edaa0f64d2",
          "length": 244,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c0637b78-4d82-4cc2-94bb-002a7d4c3481"
        },
        "item": {
          "id": "327bc990-4f2c-4a80-aa4f-db37b480519d",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7ace3334-e3a6-4891-901f-2c35deaa9fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 771,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1d946b-782e-4483-b7e6-5b9ca36891e4",
        "cursor": {
          "ref": "3f82cfd1-adbf-4337-ab43-cf108cd82231",
          "length": 244,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b3f9f686-95f7-4782-8477-9ff61c01d821"
        },
        "item": {
          "id": "db1d946b-782e-4483-b7e6-5b9ca36891e4",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "8557369e-3613-4a43-83fa-0a90dedd0786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 763,
          "responseSize": 578
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e304af33-6117-4b71-9814-a201cc3c629f",
        "cursor": {
          "ref": "2efddb94-95c7-42a6-a1cb-484ea6b9e99d",
          "length": 244,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "29fbf115-0085-460d-90e1-5236b23e1124"
        },
        "item": {
          "id": "e304af33-6117-4b71-9814-a201cc3c629f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f9a14249-f2d4-40ff-8ec8-2e4fec6750e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 747,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fbdb197-7c5d-4686-9f08-4fa1da3601c0",
        "cursor": {
          "ref": "3b614c58-b16f-4c1f-b8c8-ff243d398d72",
          "length": 244,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "49f8bed2-c600-482e-b22d-ea44f1f57e2a"
        },
        "item": {
          "id": "0fbdb197-7c5d-4686-9f08-4fa1da3601c0",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ac8ed898-809c-431b-949f-6410b3217351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 761,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96bd1ce3-7259-4409-a885-2066e554d625",
        "cursor": {
          "ref": "93f6b0db-1f98-4498-a93c-c00ba374a65e",
          "length": 244,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5e353039-bba0-4b00-8b91-3d2e9233a814"
        },
        "item": {
          "id": "96bd1ce3-7259-4409-a885-2066e554d625",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "fcf847e7-fff1-4c80-8c80-6d25da02e20f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 775,
          "responseSize": 1001
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c3b7315-26ef-4074-b283-7ce7a7b49df6",
        "cursor": {
          "ref": "ca885603-aba3-479b-92a7-5e307b272311",
          "length": 244,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "399f5575-f7ff-4be6-a17b-e1c9005e063d"
        },
        "item": {
          "id": "8c3b7315-26ef-4074-b283-7ce7a7b49df6",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "c5756da1-4f2d-4913-900c-c8220cd3b235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 825,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3698d0d9-d5f2-4bb2-855b-96ec4a904a7b",
        "cursor": {
          "ref": "59d2d859-7724-4c4b-8bba-ef9cfb571716",
          "length": 244,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "7f45d350-c055-4232-8dba-3f86817acb8d"
        },
        "item": {
          "id": "3698d0d9-d5f2-4bb2-855b-96ec4a904a7b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "4a26b907-fbe4-49d7-a36d-4f56bde5595b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 757,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8962dc75-9157-49de-801b-f33afc1f9ed7",
        "cursor": {
          "ref": "fc628959-cc7d-40ae-b18a-0a8ee5baeff5",
          "length": 244,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "747d79ee-aa16-406a-84f0-0c0b320a54d3"
        },
        "item": {
          "id": "8962dc75-9157-49de-801b-f33afc1f9ed7",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "cced0661-00cd-4886-a686-a4989ca00527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 765,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d93daa4a-7836-4b9f-96a1-6e8feb4faf61",
        "cursor": {
          "ref": "5983bf52-7e54-4863-82d4-a33b11a61475",
          "length": 244,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "0da62049-3fa5-4ded-816c-a14308f9a6b9"
        },
        "item": {
          "id": "d93daa4a-7836-4b9f-96a1-6e8feb4faf61",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "c44eb971-f0da-44ac-854f-a8b6734abc16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 751,
          "responseSize": 1332
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f71ea36-6381-4d74-beac-7ff84e4c35f9",
        "cursor": {
          "ref": "9ebeff8d-2a95-4d01-a8e5-377fbddde8f8",
          "length": 244,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "60a33149-ae9e-4e05-93c0-fa2ce0c05cea"
        },
        "item": {
          "id": "6f71ea36-6381-4d74-beac-7ff84e4c35f9",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "918fe5f6-3371-4925-8ad4-f99b41240bd8",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 966,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c8fb137-705c-460f-9280-b4d425be6ce7",
        "cursor": {
          "ref": "6b8123ce-d7d3-4895-bfed-5eb23cc7d27c",
          "length": 244,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "dd9fad2a-4622-4a65-b248-77d8c44010ca"
        },
        "item": {
          "id": "9c8fb137-705c-460f-9280-b4d425be6ce7",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4f0852f8-55e7-431e-bb78-6048320cb936",
          "status": "Payment Required",
          "code": 402,
          "responseTime": 38774,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 402",
              "stack": "AssertionError: expected response to have status code 400 but got 402\n   at Object.eval sandbox-script.js:1:45)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:45)"
            }
          }
        ]
      },
      {
        "id": "958ef3cc-e0ac-4872-b38f-457bf3b23192",
        "cursor": {
          "ref": "0e7e0733-4c5a-4a69-a18c-5217ccbcd899",
          "length": 244,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "7659c6d3-60c3-4f45-bd0f-3d2a0c54f50b"
        },
        "item": {
          "id": "958ef3cc-e0ac-4872-b38f-457bf3b23192",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "6e97d72c-049a-479c-bf6c-b40ea9731916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 765,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca41ce1-a5f0-4f16-8943-5dd4f6d338df",
        "cursor": {
          "ref": "6f9fda80-a07f-4f56-808d-70d15c19f9f2",
          "length": 244,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "2b1ce1f4-592a-4d22-9d29-190acb01b68b"
        },
        "item": {
          "id": "3ca41ce1-a5f0-4f16-8943-5dd4f6d338df",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "6d612b5d-ea21-4ee2-9e97-7eda2e9210de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 785,
          "responseSize": 1269
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "975470d7-288b-4e4c-815a-c55a08351046",
        "cursor": {
          "ref": "a607b274-610a-4d7d-95d9-c50f9ac53b4e",
          "length": 244,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "67f4c321-a4bf-4825-ae65-a18053246ca7"
        },
        "item": {
          "id": "975470d7-288b-4e4c-815a-c55a08351046",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "455ffed8-a2c8-46c3-853f-1d1477494f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1023,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b617580-ef58-4fc0-9d84-68dd5be89eec",
        "cursor": {
          "ref": "e6181432-c77d-4fcb-bb4e-f8d0bec650d7",
          "length": 244,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a2c65df0-811a-402f-a0ce-583e0890e9df"
        },
        "item": {
          "id": "3b617580-ef58-4fc0-9d84-68dd5be89eec",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "95640898-dcf8-4b2b-8a08-d03b27cf810a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 752,
          "responseSize": 1268
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65405450-862c-48ad-a650-be12199f4497",
        "cursor": {
          "ref": "3f8c631d-4793-4cfd-b4ee-dfc65481c642",
          "length": 244,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b027a705-6883-4921-986c-979e173b202d"
        },
        "item": {
          "id": "65405450-862c-48ad-a650-be12199f4497",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "26116d71-f897-4797-bcc1-52e562eef224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 780,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfb3cc87-5d88-490e-991d-dfd32423c1a6",
        "cursor": {
          "ref": "0cece5a9-3e0a-44d7-a2bb-2e8c57361fa6",
          "length": 244,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b83ec6be-0d8e-40ac-8f32-0a45b8db0d4a"
        },
        "item": {
          "id": "cfb3cc87-5d88-490e-991d-dfd32423c1a6",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "627f8a4c-ed68-4eb1-b6be-b89dfbf9fb94",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 988,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5becfe3a-3693-4295-a301-a1413a5a8b62",
        "cursor": {
          "ref": "bec59e0c-c587-41d3-9f24-ee97941378ad",
          "length": 244,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "82b2a9a3-e611-490a-8fb4-68083c7cd085"
        },
        "item": {
          "id": "5becfe3a-3693-4295-a301-a1413a5a8b62",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "32bd184d-ca00-46fe-80a5-d1f54e97d38f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 784,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7053e884-6871-4e24-af29-8c1071739a8b",
        "cursor": {
          "ref": "1d726380-ba65-4505-90ac-4e74a7f22430",
          "length": 244,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "2fd8b505-8609-478f-8edb-8a2d2623907c"
        },
        "item": {
          "id": "7053e884-6871-4e24-af29-8c1071739a8b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "647c76c9-34b1-4318-969e-2b7bb2e80ce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 798,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4066b9d2-844d-436a-bd61-c0e19f6dedda",
        "cursor": {
          "ref": "44571713-4f92-418e-8941-e61e2e2001a8",
          "length": 244,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "babbb5ed-0633-4691-bb99-50f0dcee8251"
        },
        "item": {
          "id": "4066b9d2-844d-436a-bd61-c0e19f6dedda",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "63f617c7-a385-4f9b-aa81-c9ca3629c748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 759,
          "responseSize": 564
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2209e09b-2ad5-4ff3-89bc-5aad48ea8ca3",
        "cursor": {
          "ref": "6a9f9500-cbdd-4ea1-bad6-61d702906d7c",
          "length": 244,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "909667a1-e055-460e-a7b8-bde0bc9339e3"
        },
        "item": {
          "id": "2209e09b-2ad5-4ff3-89bc-5aad48ea8ca3",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "3cae3fd0-8c3e-4919-b8c7-1f7d552c8808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e39b53e-3d94-400a-92ea-a6f7ca72c9a0",
        "cursor": {
          "ref": "522f3451-474f-4fbb-8df3-b2bcb7f917e2",
          "length": 244,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "db263e2b-5da5-4a29-8f55-78d06bf22f7c"
        },
        "item": {
          "id": "6e39b53e-3d94-400a-92ea-a6f7ca72c9a0",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "2e8400e5-8b0e-4db1-90b4-c7cb56328108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 796,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cd64d1e-e329-407c-82fb-7471daf81342",
        "cursor": {
          "ref": "12e7b0ab-9ecc-47dd-b714-44d736b6a6d0",
          "length": 244,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "ea411aa1-ab4d-4ad9-bbd9-46e5193d0452"
        },
        "item": {
          "id": "6cd64d1e-e329-407c-82fb-7471daf81342",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "f001061f-673b-4047-b865-e8898ef1eae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 744,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30b45ae7-3cf1-43ae-a9c1-71a8ad3b98a8",
        "cursor": {
          "ref": "06046053-7f42-47bb-9080-3e5f81514894",
          "length": 244,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "1ed82dda-dd57-4d25-a956-dada31ea1c5d"
        },
        "item": {
          "id": "30b45ae7-3cf1-43ae-a9c1-71a8ad3b98a8",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "be940077-8b49-452c-99cf-5a129510a970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 776,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df37301c-52e5-4c3b-8189-d619c816adcf",
        "cursor": {
          "ref": "76233efc-55e3-41a5-a196-fcbcec013df4",
          "length": 244,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "30ac154e-41e7-4443-abc0-2593ab8222d8"
        },
        "item": {
          "id": "df37301c-52e5-4c3b-8189-d619c816adcf",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "932c1570-ee6b-4a06-bef7-5251415747c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 779,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "694ced26-0175-4960-8324-78ea66a250fc",
        "cursor": {
          "ref": "68682e5e-a722-4d12-8634-fea563f7e13a",
          "length": 244,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "7efffa9d-b595-4dc1-9ee8-ca6dbb7ef4f3"
        },
        "item": {
          "id": "694ced26-0175-4960-8324-78ea66a250fc",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "14d8441d-4b7d-43ca-82cd-f9a199696243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 759,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bdc0463-50b1-48da-96c8-61f522caac3b",
        "cursor": {
          "ref": "33ceddeb-3ffb-4a02-a4cb-54a174cb77bb",
          "length": 244,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "d3df5826-0ea7-485f-ac70-2e3883039135"
        },
        "item": {
          "id": "6bdc0463-50b1-48da-96c8-61f522caac3b",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ecef287a-eb11-4231-8915-337a63142db4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 753,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c2a1e7-6dc6-4fa2-a642-96f716b72e7f",
        "cursor": {
          "ref": "098e765d-c964-4bd3-9b45-b9a078e1cf72",
          "length": 244,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b36965a7-1e63-4b87-a0e4-c4814d006697"
        },
        "item": {
          "id": "82c2a1e7-6dc6-4fa2-a642-96f716b72e7f",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "8c7bf0e2-29ec-42f7-ae1a-eb6f8f4c2b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 759,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "772011c5-422c-4fec-ac6c-915dc606fa75",
        "cursor": {
          "ref": "3e3b6e6f-2c3f-4911-88f4-75c726822493",
          "length": 244,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "9557b2d1-1bc9-4697-b453-f0f7096d01a7"
        },
        "item": {
          "id": "772011c5-422c-4fec-ac6c-915dc606fa75",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "52af2f24-97f8-4dff-901c-6889dc683838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 762,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b358448-a758-40c7-9983-2e8804ff8875",
        "cursor": {
          "ref": "823047ab-26d8-4c9e-a7e6-8cecc5fb3466",
          "length": 244,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "2beeaa08-0dd7-4ac6-9ea1-62e83babdf27"
        },
        "item": {
          "id": "3b358448-a758-40c7-9983-2e8804ff8875",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "13923ad4-5c49-433d-a7de-bd11975a9e68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 803,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13af3416-3d55-452f-b840-80c8529fdaad",
        "cursor": {
          "ref": "71a0b03f-a70b-42a7-b837-3540a6ae0833",
          "length": 244,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "2a9dda08-ecd6-49de-964a-e8ec1a202f34"
        },
        "item": {
          "id": "13af3416-3d55-452f-b840-80c8529fdaad",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "855a99e1-3b19-4823-98ca-ed90a59dd847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 796,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc0bf5c8-572d-419b-a719-791c26525240",
        "cursor": {
          "ref": "fc4575ae-58e2-4ce4-afb9-88586a9b58fc",
          "length": 244,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "3554979c-6098-43c5-a88d-ff29ec09ec50"
        },
        "item": {
          "id": "dc0bf5c8-572d-419b-a719-791c26525240",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "0065ebfb-7367-4083-91fd-5abc8760a40b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 780,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85764d1d-0ec8-44cf-a880-693f760c9b95",
        "cursor": {
          "ref": "0203929e-41a0-4976-a9bf-f4f27e7e662f",
          "length": 244,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "acb23100-6ef0-4da2-bcf0-b11a7282ede6"
        },
        "item": {
          "id": "85764d1d-0ec8-44cf-a880-693f760c9b95",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "af45e60f-b46e-4d82-8586-152872350759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 723,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f78be546-1b04-49e9-a901-cf8179bcf605",
        "cursor": {
          "ref": "136a88b1-ebaf-40f1-a9df-24d591f0a62e",
          "length": 244,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "d525be8d-1ae6-463e-abb2-f1e2ecf79da8"
        },
        "item": {
          "id": "f78be546-1b04-49e9-a901-cf8179bcf605",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "fc5b18ca-e1eb-49e0-b261-c47d1e95f838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 770,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2bf4eb4-4782-4c3b-a8c8-4e32dee1b9cd",
        "cursor": {
          "ref": "6dea3c95-1ce2-4e02-9c45-9f1936aad432",
          "length": 244,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "35a6c5f2-2207-44e7-840a-db3694dc88ff"
        },
        "item": {
          "id": "e2bf4eb4-4782-4c3b-a8c8-4e32dee1b9cd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "23a94c09-4772-4c8d-a897-c12b234686e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5b4f481-e4ac-44de-a2c5-1304242adfea",
        "cursor": {
          "ref": "7ab26957-4099-4a06-9ee3-f1524727dc96",
          "length": 244,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "dd8ee5da-f4cc-49fa-9b19-9350c4ece439"
        },
        "item": {
          "id": "c5b4f481-e4ac-44de-a2c5-1304242adfea",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "eb6d7b37-0f6c-4119-81aa-60d69fda992f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 785,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d805ae6-71a6-4182-a451-2236daf1d7d9",
        "cursor": {
          "ref": "574c007d-09f6-4a03-825c-6ff0a33fe298",
          "length": 244,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a7f32fcc-1873-42a9-ad0c-40a033c13770"
        },
        "item": {
          "id": "0d805ae6-71a6-4182-a451-2236daf1d7d9",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "1c625a2a-dffd-4b6a-ba6c-b85f8269f4db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b66a841b-2623-49f4-98db-b69326faf436",
        "cursor": {
          "ref": "21519310-83ea-4c36-8a0e-8246a00e3843",
          "length": 244,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a9a8451a-575e-46be-85ea-f90c30a16850"
        },
        "item": {
          "id": "b66a841b-2623-49f4-98db-b69326faf436",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "d730fd62-eb4b-4570-81f1-d5afcef75d24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 761,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e0195ae-19bf-4526-b93a-c940044df10e",
        "cursor": {
          "ref": "8af637ec-f3b4-4e87-b44d-8ad97f88a04f",
          "length": 244,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "a61df62b-7f07-499b-8c8a-61b5fa35320b"
        },
        "item": {
          "id": "1e0195ae-19bf-4526-b93a-c940044df10e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "b23b74e5-8631-4cfe-82c1-8ce5bce8c29c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 789,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49b50423-fe53-4ca5-9cf5-d5111bf5581b",
        "cursor": {
          "ref": "e32d901f-8bcf-4134-9a73-218e64400697",
          "length": 244,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "32268a0e-e381-4150-843f-f1139c111903"
        },
        "item": {
          "id": "49b50423-fe53-4ca5-9cf5-d5111bf5581b",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "3c20bea9-3c35-4517-8542-0db6efdc8028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 805,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3b14d48-4761-4ae0-8b7d-c0ea63ac390b",
        "cursor": {
          "ref": "44961fba-d914-4de0-88a1-d9ca8a3d3ce4",
          "length": 244,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b77d0fe3-3963-496f-95ab-6c066a192a46"
        },
        "item": {
          "id": "b3b14d48-4761-4ae0-8b7d-c0ea63ac390b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ee44c9b5-7195-4153-b7b6-8569ff786921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5426f47-ce85-4342-8911-163eb67d4cca",
        "cursor": {
          "ref": "7117cad2-5a2b-4f3c-8c53-5a7e56c2f6c8",
          "length": 244,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ebdb086f-f6e1-44f1-b820-d5c74e95689d"
        },
        "item": {
          "id": "c5426f47-ce85-4342-8911-163eb67d4cca",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "dff57d42-d5cb-404f-9690-7bd94858ede4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 755,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b362d90-5997-4016-bdd9-82418773bb20",
        "cursor": {
          "ref": "3707eed7-00cc-4a3a-a4c6-8b4282211ed3",
          "length": 244,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "820b2b9e-98f3-4cdd-9f0e-24d4740008f5"
        },
        "item": {
          "id": "8b362d90-5997-4016-bdd9-82418773bb20",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "baa03e79-46ad-40cd-9eb8-9fcded38f1e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 801,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d3eba3-09bc-4ba4-9ec4-d94dc85727a5",
        "cursor": {
          "ref": "fc28484f-2edd-440c-93c7-57d1aabb4ddf",
          "length": 244,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "2d803125-41ba-4927-82a8-de8320b24b9b"
        },
        "item": {
          "id": "c8d3eba3-09bc-4ba4-9ec4-d94dc85727a5",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "16c9dd34-4e3a-4b6a-88ac-6cf978118f52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 752,
          "responseSize": 772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e819f0b5-93ab-416c-9c69-c9a9e38591bc",
        "cursor": {
          "ref": "d6e74969-c6f5-4e11-9170-c0e89277fac5",
          "length": 244,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "73bba20e-0f89-45c5-aa0b-5e8eef457acf"
        },
        "item": {
          "id": "e819f0b5-93ab-416c-9c69-c9a9e38591bc",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "38d50821-c19d-4eea-b7d7-8703dcc484c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 769,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cda0beaa-774e-484b-8684-71e62d9f1a74",
        "cursor": {
          "ref": "7095fc63-31b3-4b9e-8ea1-5fa91c560194",
          "length": 244,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "7deb311d-9429-48d4-b0e3-6942f1314653"
        },
        "item": {
          "id": "cda0beaa-774e-484b-8684-71e62d9f1a74",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e163cddc-dd4e-458a-9bea-26345c223957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 745,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c990d88e-9637-450c-b246-0345a2684921",
        "cursor": {
          "ref": "6b9371bc-0055-4ce5-b8f5-94399579b463",
          "length": 244,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "2abcd67a-6556-4a62-9e26-e7cb7e02ff16"
        },
        "item": {
          "id": "c990d88e-9637-450c-b246-0345a2684921",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "5e7fe8d3-13c8-49a7-ad74-04e3fb9b3ec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 755,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d0a05a-8805-4bf1-af3a-60f64ffa8721",
        "cursor": {
          "ref": "edd0365d-d30f-41c0-8875-6a8e9dba9d54",
          "length": 244,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "c2016f68-ee4a-41a6-95ea-c02bcd71f008"
        },
        "item": {
          "id": "e7d0a05a-8805-4bf1-af3a-60f64ffa8721",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "8044888b-7fe2-45a6-bb6a-3a4c7617fdc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 790,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8df10473-6e7a-4d1e-8681-e41bf6d2b37d",
        "cursor": {
          "ref": "e059b6d8-e3d5-480a-a081-cba39236adaa",
          "length": 244,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "be16ea11-dfa6-4395-9f96-69ffe2804f58"
        },
        "item": {
          "id": "8df10473-6e7a-4d1e-8681-e41bf6d2b37d",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "727f0dce-3931-468c-a037-9dda9e18ab62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 775,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e88a9fd-168b-4cbd-b702-87b0cf4e867b",
        "cursor": {
          "ref": "d7289adc-3654-4b94-9b6a-eb215a6fc436",
          "length": 244,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "bd1b910d-c5cd-4458-a81c-d6ff0412c607"
        },
        "item": {
          "id": "3e88a9fd-168b-4cbd-b702-87b0cf4e867b",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "0929df4a-9e1e-4a68-a107-f8767b096e3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 804,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f04e4c9-a330-409a-a95e-c4c42057d678",
        "cursor": {
          "ref": "c25695ff-2d2a-4420-9dad-c4e45ad73b22",
          "length": 244,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ff26d940-d357-46a2-ab77-c1bd31299502"
        },
        "item": {
          "id": "7f04e4c9-a330-409a-a95e-c4c42057d678",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "c07672df-c98b-416e-be93-fc4acbbd56e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 758,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d54f31e-2067-43c6-b5df-1d623bd4e964",
        "cursor": {
          "ref": "ad2fa8d8-3ddb-4c72-acb6-e96801b8c23e",
          "length": 244,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "03320c70-fbdf-441c-bf7a-b698270c76b9"
        },
        "item": {
          "id": "7d54f31e-2067-43c6-b5df-1d623bd4e964",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "cfac270c-cc3b-41ca-8dfa-7e9c7fc7c485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 772,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06d0abc8-b52b-47c1-bcca-02c6ce39ba54",
        "cursor": {
          "ref": "626e3650-5003-486a-a889-db74b576787c",
          "length": 244,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "db225d0f-29c7-4bd9-be8a-5d29764ad445"
        },
        "item": {
          "id": "06d0abc8-b52b-47c1-bcca-02c6ce39ba54",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "4cf4b3fe-4230-490e-83ee-509e21231207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c2791f-d04e-4bbe-9ee2-c2b166577cbf",
        "cursor": {
          "ref": "6e8941f8-9c94-4fd8-bc4c-761e90e21850",
          "length": 244,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "36e392fd-934b-4c92-80b2-5b245e05e5de"
        },
        "item": {
          "id": "53c2791f-d04e-4bbe-9ee2-c2b166577cbf",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "93e21412-7345-4ca7-aed8-ef14bf603c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 747,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a0caac-66a2-4f3c-bac5-ce7b11675fb3",
        "cursor": {
          "ref": "4de924d1-762f-4b6b-8b2b-ffa4c6d1f2d8",
          "length": 244,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "4adc4e0a-23af-4584-a7d9-cb652b6fc849"
        },
        "item": {
          "id": "88a0caac-66a2-4f3c-bac5-ce7b11675fb3",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "0cc5cb88-0034-4613-9de9-0db39f924929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 800,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e01a32fb-287e-4556-9575-056d889b9e7f",
        "cursor": {
          "ref": "67e65cef-6b3b-45be-a9df-8ef86e8e295c",
          "length": 244,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a28a5d40-96ba-404c-91bf-ecc298d0ac57"
        },
        "item": {
          "id": "e01a32fb-287e-4556-9575-056d889b9e7f",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "1de25cd1-aad8-426a-8bcb-9ac66e6aa888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 772,
          "responseSize": 611
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5c0130a-23d7-4f53-a224-7fb890a2fe26",
        "cursor": {
          "ref": "bdf5ae10-71a4-4179-ae52-f0570f793d34",
          "length": 244,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "d155f097-049a-4acd-9e31-09834545f5fc"
        },
        "item": {
          "id": "c5c0130a-23d7-4f53-a224-7fb890a2fe26",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "38bbbb62-f20a-47a0-ad1c-2ac44a61e17e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 776,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d92b1c73-f362-4438-b359-ee509585befb",
        "cursor": {
          "ref": "dc09951a-4d1d-4e1e-bd66-ac0c0156da8e",
          "length": 244,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ae5a95b2-f6fe-48e1-8e69-3de2482d347f"
        },
        "item": {
          "id": "d92b1c73-f362-4438-b359-ee509585befb",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "000c59bd-6f9c-4b5a-a1bf-d9e74d386163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 775,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c43081f3-8688-4f9c-b80a-69de30dbbcc5",
        "cursor": {
          "ref": "f0a33b49-b8fa-4a97-bdcb-034ad15354af",
          "length": 244,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "3f9d1f7d-721d-44f0-ac11-1acb32100632"
        },
        "item": {
          "id": "c43081f3-8688-4f9c-b80a-69de30dbbcc5",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "e2a70477-3bca-4d51-818c-bbbf8e1f6429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 792,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e661777-45e7-469f-bcf5-ffc0b591444f",
        "cursor": {
          "ref": "6d8582db-a9d1-4ea9-b7a2-c889b0d7cdac",
          "length": 244,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "c724bce9-bedc-467a-8a71-db94c239a2ac"
        },
        "item": {
          "id": "8e661777-45e7-469f-bcf5-ffc0b591444f",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b8fc4085-328a-42a4-9f51-142625abc8cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 753,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2714e6e-a2fc-48b1-a93a-bf9791d90ff9",
        "cursor": {
          "ref": "5a9098ac-e995-4c02-a44e-9d4170d3e045",
          "length": 244,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "4249f7a8-bc73-453c-a85c-3b4da25a245b"
        },
        "item": {
          "id": "f2714e6e-a2fc-48b1-a93a-bf9791d90ff9",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "6aa73492-45ff-4f8b-b60b-be53cfadb261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 752,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d506c1d5-595b-45bc-b4d8-eea85a4e34f3",
        "cursor": {
          "ref": "73fd81c1-b33e-4226-8ed9-dcd88c1012ba",
          "length": 244,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "5b3e7ac8-87eb-4901-b66c-e9fcd9d948b9"
        },
        "item": {
          "id": "d506c1d5-595b-45bc-b4d8-eea85a4e34f3",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "9731d18c-10ab-4e80-819d-5645a7d913b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 761,
          "responseSize": 885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d54d670c-495e-4b86-8ab4-2519567fc9cc",
        "cursor": {
          "ref": "751aa487-1e6f-49cd-9540-c84ea7cb4149",
          "length": 244,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "69a307f8-2657-4f1d-a740-b8b0cfed4b6d"
        },
        "item": {
          "id": "d54d670c-495e-4b86-8ab4-2519567fc9cc",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "fe0f0084-901f-48f6-a5ec-73d3fe074a42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 778,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b94a17-67ce-48e7-aac4-0c3298f97fba",
        "cursor": {
          "ref": "b6f31f5a-c4a6-4728-8b84-4c17cb8feb08",
          "length": 244,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "64574792-9520-443c-9484-4340f30e4b99"
        },
        "item": {
          "id": "f1b94a17-67ce-48e7-aac4-0c3298f97fba",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "cb7fa4cc-a738-4016-8649-062a02679680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 780,
          "responseSize": 884
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85c809b0-c54c-4329-9a00-3fd048cff578",
        "cursor": {
          "ref": "e73cce4a-5969-4df9-9104-015bba60cd0c",
          "length": 244,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "81ac6d64-2d46-462d-95be-68a8c50b057f"
        },
        "item": {
          "id": "85c809b0-c54c-4329-9a00-3fd048cff578",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "cda59198-ec66-4a95-8791-09bb63565a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 752,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab62260-cfef-4fff-bb20-603a49b9db09",
        "cursor": {
          "ref": "18a2698a-d3b1-4583-a8f3-4fe27065f095",
          "length": 244,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "03f5ccf1-518d-4bc2-9486-f73fd2cd7334"
        },
        "item": {
          "id": "cab62260-cfef-4fff-bb20-603a49b9db09",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "143ee6fa-4963-4d41-a315-c092c92e4639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 740,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3527de86-3922-46bd-b135-9fb14299e7fb",
        "cursor": {
          "ref": "0faf603b-d6ff-4681-9e27-fcf2b813cf62",
          "length": 244,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ceed4359-e93a-402f-837b-9bb9e1594f37"
        },
        "item": {
          "id": "3527de86-3922-46bd-b135-9fb14299e7fb",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "fc52080d-4736-42d8-894d-b18d5bde5966",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "860eb805-3362-4e69-aa99-e5a03b6af22e",
        "cursor": {
          "ref": "dea1c062-45f3-4da2-ad79-f3a70f64f1e2",
          "length": 244,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "3a546e00-4268-4842-90c4-f9ded80454fd"
        },
        "item": {
          "id": "860eb805-3362-4e69-aa99-e5a03b6af22e",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d605a14b-df46-4f37-b0bf-d426e6d4566b",
          "status": "Created",
          "code": 201,
          "responseTime": 7818,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "994d93f7-1f77-4bee-955e-f75c76ecf5b4",
        "cursor": {
          "ref": "024166e1-2cf6-417d-a673-a6874e141877",
          "length": 244,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6dabba1e-14c1-4067-9569-eb53cbe109ea"
        },
        "item": {
          "id": "994d93f7-1f77-4bee-955e-f75c76ecf5b4",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "0829958a-5ff1-483d-91fa-9095556050fd",
          "status": "Created",
          "code": 201,
          "responseTime": 6925,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3020c67-ceb2-4b76-8a6c-f146c3199393",
        "cursor": {
          "ref": "db0743e5-6a08-4951-a243-82ccc5608d07",
          "length": 244,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "99698f54-fc1d-40d1-9528-798beb88c050"
        },
        "item": {
          "id": "b3020c67-ceb2-4b76-8a6c-f146c3199393",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "e7276970-a2c0-4c40-83c0-5eb9aa6b1ef3",
          "status": "Created",
          "code": 201,
          "responseTime": 6537,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "541b7bca-621c-4412-adf2-07159476ad88",
        "cursor": {
          "ref": "2bf23e84-19f7-43a2-af1f-3b8ac10c5d93",
          "length": 244,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "a68fc3db-3d88-4943-9dd5-3c7d5c14347b"
        },
        "item": {
          "id": "541b7bca-621c-4412-adf2-07159476ad88",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "9a3e5f9f-259f-43df-9542-52e31a832ae0",
          "status": "Created",
          "code": 201,
          "responseTime": 6168,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7146f2cb-d677-46bb-8f97-d97671efe7ba",
        "cursor": {
          "ref": "905ad515-38f1-4bf2-a3a5-9f530a05d99a",
          "length": 244,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "8527ece1-2471-4c52-a053-b4069c76f974"
        },
        "item": {
          "id": "7146f2cb-d677-46bb-8f97-d97671efe7ba",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "7ca2569a-9aba-4f22-86c4-5e30a6228de1",
          "status": "Created",
          "code": 201,
          "responseTime": 6428,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "61b42724-03d5-46c9-8734-87836725f081",
        "cursor": {
          "ref": "e6dc15f2-e2d0-4b4d-83a8-54b411993dff",
          "length": 244,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d17f9347-fe5b-4e21-b3c9-653810806b3f"
        },
        "item": {
          "id": "61b42724-03d5-46c9-8734-87836725f081",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a09e6e6a-5250-4512-af59-70d1cddc92f8",
          "status": "Created",
          "code": 201,
          "responseTime": 7613,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f5eb5f-5d4f-4522-9165-78f85a8c9c8a",
        "cursor": {
          "ref": "4908ebb6-5def-4929-9adc-167595db5519",
          "length": 244,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "6dc696ad-c524-4803-994c-bc3a860b2774"
        },
        "item": {
          "id": "05f5eb5f-5d4f-4522-9165-78f85a8c9c8a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "35c7496b-548e-430c-8954-672777251d3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 733,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d985648-23b2-40af-b515-7fc7125fae15",
        "cursor": {
          "ref": "d4a9162c-5cce-47ec-88f0-1e81f1bc617a",
          "length": 244,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "0d1ddbbf-1aae-4254-86da-f8824e9a81b3"
        },
        "item": {
          "id": "6d985648-23b2-40af-b515-7fc7125fae15",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "aa724e1e-10ce-487d-a65c-2b07347c0d2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 757,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acbc001a-e4b0-452c-a6ac-bf5318cfabec",
        "cursor": {
          "ref": "22849af9-4bb9-4410-855e-d7b87b9ce92f",
          "length": 244,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "2fa48c0c-5890-4329-8ce7-1f8e2ef2b3d0"
        },
        "item": {
          "id": "acbc001a-e4b0-452c-a6ac-bf5318cfabec",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "066bc0b6-2bdd-471b-b2c4-48bffa38a26a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 764,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cec7c1a-e83c-4259-9cef-858983d02ad8",
        "cursor": {
          "ref": "1418718b-c756-4c21-9ab1-cb5794aa3b4d",
          "length": 244,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e885739a-4f5e-461e-94b3-687c318147d2"
        },
        "item": {
          "id": "4cec7c1a-e83c-4259-9cef-858983d02ad8",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a789c9af-4f28-40be-8862-f0ecd235ba98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 755,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77933b78-14d4-4e98-abb3-ef3a662b47f9",
        "cursor": {
          "ref": "2e8ebc3d-802e-4273-99e6-9b1718634db9",
          "length": 244,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "66bfceb0-3416-496a-a3a1-e01575b64ee9"
        },
        "item": {
          "id": "77933b78-14d4-4e98-abb3-ef3a662b47f9",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b0e59ac8-6d2a-4fa5-bcbb-2219ae1e045e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 827,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "267bd22e-c8de-4f44-a24e-b7c3de0b0c1f",
        "cursor": {
          "ref": "972a673c-271e-4e33-b1c7-7857bafc181a",
          "length": 244,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "0e34ee11-d205-4229-92fd-6be55cd32a81"
        },
        "item": {
          "id": "267bd22e-c8de-4f44-a24e-b7c3de0b0c1f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ccf6e1d1-d091-42d2-b9f5-9d6b09bd70d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 777,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13eb2624-0288-46ec-ace4-954bcc146450",
        "cursor": {
          "ref": "279c7d9d-91fc-46ed-bdf1-37de092d86ce",
          "length": 244,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "5da0e3eb-2d39-465f-9088-62bbb4f169a6"
        },
        "item": {
          "id": "13eb2624-0288-46ec-ace4-954bcc146450",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "77be5f74-20d3-4dd8-b2c1-ac6acda88ed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 774,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e68c0ef-b013-4670-8f3b-7798a64e41db",
        "cursor": {
          "ref": "e0e6747a-6670-4718-b055-8074ff08d746",
          "length": 244,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "8ba6f658-6b73-41db-aa70-fb590458d7cc"
        },
        "item": {
          "id": "1e68c0ef-b013-4670-8f3b-7798a64e41db",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "021320e9-4392-4311-82e2-15d4e2eb750b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 781,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "970d84e7-1961-4a14-9061-25bf00320a5f",
        "cursor": {
          "ref": "cbdd13cc-d157-4acf-aa8c-34ea30a08492",
          "length": 244,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f17b4759-fe9e-48f4-ac82-19555d6e5d3d"
        },
        "item": {
          "id": "970d84e7-1961-4a14-9061-25bf00320a5f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3f94c565-a722-4331-b6a7-8d3b05a1dc05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 787,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b57c7282-d364-4fee-93ba-6f52b223f390",
        "cursor": {
          "ref": "c1172bc9-a22c-46a7-a989-d2b69aa9e8c9",
          "length": 244,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "2a9e3e5b-506b-4ab7-9f33-af73daa941f8"
        },
        "item": {
          "id": "b57c7282-d364-4fee-93ba-6f52b223f390",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d15ad55a-8f44-4e20-b42e-9301c5e50086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 761,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84eb1786-808a-45c6-849d-7907dd12e5c1",
        "cursor": {
          "ref": "da99695f-348b-44d6-93fc-46a51043f9fe",
          "length": 244,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "b792a945-2fdc-4b63-b5f9-91a675d13b71"
        },
        "item": {
          "id": "84eb1786-808a-45c6-849d-7907dd12e5c1",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2be63de9-346a-4f2a-a64c-412ebc82a312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 823,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2a25c74-e451-40ec-80e3-5ca93946077e",
        "cursor": {
          "ref": "ce6a1858-4a10-4d9e-bd7b-53033e27d29d",
          "length": 244,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "1c65b073-29a3-44ea-8e27-614fa14bf35f"
        },
        "item": {
          "id": "a2a25c74-e451-40ec-80e3-5ca93946077e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "77da1965-ff5c-4e69-929d-a684584f3ee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 729,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce710bbb-cecf-44d9-9757-b4e87521805c",
        "cursor": {
          "ref": "9e4cafdb-315a-4451-9464-491bee9b7607",
          "length": 244,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "72e9115b-2c96-47b1-ad48-5b56382327b1"
        },
        "item": {
          "id": "ce710bbb-cecf-44d9-9757-b4e87521805c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d9ba174b-2110-4221-ba79-9eec8880809f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 759,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad615cf8-2ac2-4f0c-a049-2651d697b461",
        "cursor": {
          "ref": "f1e4cd4f-6e52-477b-909c-3c525b0a5816",
          "length": 244,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "0bf18ce3-9221-4f85-82a9-f0452cff2293"
        },
        "item": {
          "id": "ad615cf8-2ac2-4f0c-a049-2651d697b461",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8720ee4f-97bf-4fa8-9783-51fc74000d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 777,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d6fcc2-bdf1-49a9-8746-b1477117a39b",
        "cursor": {
          "ref": "8b57d063-d7ea-487d-a6e2-f5461daad5ff",
          "length": 244,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "fe00b679-45f5-4b3a-b8b3-5e37154ead43"
        },
        "item": {
          "id": "e1d6fcc2-bdf1-49a9-8746-b1477117a39b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "40f0479b-7188-43d0-9eda-bce0a9f46126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 840,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e56b1c7f-21d2-4023-ac9e-ad5a97f6fba0",
        "cursor": {
          "ref": "24e2929c-a506-49e1-9dac-be31898ca876",
          "length": 244,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "57fe513d-a95d-4dbd-a55b-aa995211a610"
        },
        "item": {
          "id": "e56b1c7f-21d2-4023-ac9e-ad5a97f6fba0",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e9355da1-4993-43f8-941f-c5057298e863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 753,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeb2b124-eded-49d7-9b0d-48a208cb8eaf",
        "cursor": {
          "ref": "5aaa3603-2f8e-4f15-a32e-849028039c85",
          "length": 244,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "fd965289-b241-4a64-b9f8-33d9646a6840"
        },
        "item": {
          "id": "aeb2b124-eded-49d7-9b0d-48a208cb8eaf",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "21f29054-8ee7-4af4-98af-80ccec1f79af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 776,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58f28aaf-4de5-4d0a-81bb-6ef1c1aaddcb",
        "cursor": {
          "ref": "b0ed235f-2ce5-4e9d-994c-95903387ddbd",
          "length": 244,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "077f0a44-e78e-43da-b6bd-021571b58394"
        },
        "item": {
          "id": "58f28aaf-4de5-4d0a-81bb-6ef1c1aaddcb",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "04c5601e-8f59-4737-99b9-811f6f8acf72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1191ef22-e2f9-4ac2-a030-2f52cbf90892",
        "cursor": {
          "ref": "f5bf1161-4101-4c02-a033-1883fcffee82",
          "length": 244,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "9d11ab2d-2a00-4dd5-beb4-9e67a22ba497"
        },
        "item": {
          "id": "1191ef22-e2f9-4ac2-a030-2f52cbf90892",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ebe41c8b-4854-470b-887f-561fd9622861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 782,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29ee1049-e91c-4a4d-9fd7-24c2daa833c5",
        "cursor": {
          "ref": "9ef099ad-f321-4f25-9ece-b7bdbcbfbfad",
          "length": 244,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "5d83ac79-1001-4f11-b3fb-d066ccc5e85b"
        },
        "item": {
          "id": "29ee1049-e91c-4a4d-9fd7-24c2daa833c5",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "135bdda5-184b-4798-ba2d-bfa6f5eac298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 828,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc46e8f4-a970-4889-9380-4faf5c65dcd5",
        "cursor": {
          "ref": "d61df682-01e0-4a75-9159-47c10f6a9794",
          "length": 244,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a614a951-a150-4b37-a664-a561efb6098f"
        },
        "item": {
          "id": "bc46e8f4-a970-4889-9380-4faf5c65dcd5",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "059dba32-0642-4fc9-9043-ecca2f36bc2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 760,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d8f8540-b32c-4713-9899-9bd918ee4acc",
        "cursor": {
          "ref": "c6bb355e-3e23-4533-bf5d-271b864acbca",
          "length": 244,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "89d7b263-dbad-4a7b-b1db-309e1eefd261"
        },
        "item": {
          "id": "4d8f8540-b32c-4713-9899-9bd918ee4acc",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "96cd1d1f-b519-4178-82de-5c228a3d89d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 818,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9153c98-03f4-4c52-b271-1d33df6f3350",
        "cursor": {
          "ref": "efeb633d-1024-43ba-907d-b5add67838db",
          "length": 244,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "b7d083f6-9167-4d9c-bd3e-c825a06c6070"
        },
        "item": {
          "id": "f9153c98-03f4-4c52-b271-1d33df6f3350",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e5f25154-d5dd-4175-b3b5-b5401d87bd21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 742,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e359f75f-1e36-4931-b95e-280b7768c442",
        "cursor": {
          "ref": "f14d4244-2563-4e1a-8c83-8b7969673c3c",
          "length": 244,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "17ece166-57e0-4326-8284-1ceae70be15e"
        },
        "item": {
          "id": "e359f75f-1e36-4931-b95e-280b7768c442",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6740fc48-0756-40b5-b863-4ad578c80750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 764,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc842733-3607-455b-baa0-0ec98c03071e",
        "cursor": {
          "ref": "f3f58adb-bbaa-4b30-b5e3-81fc1c1ae196",
          "length": 244,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "cb1efa6c-603a-4816-8e02-63b29850adce"
        },
        "item": {
          "id": "dc842733-3607-455b-baa0-0ec98c03071e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "08f96da8-816a-44ae-9ca9-db70f5c6db97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 755,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ca73c8-b442-4578-8ed3-bf9fe449f4b6",
        "cursor": {
          "ref": "0361e8eb-7982-4e88-8c75-793c0b76b0b6",
          "length": 244,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "67e0c792-9467-4b61-a107-b4c6bb14ba7d"
        },
        "item": {
          "id": "f2ca73c8-b442-4578-8ed3-bf9fe449f4b6",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e1195624-6078-484b-9aae-1b6f644d183a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 760,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9862f29-6343-495b-a53d-86e654e7965c",
        "cursor": {
          "ref": "b1b13a4d-5de5-4dda-aa26-1ab1e2a5864d",
          "length": 244,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "4581f956-841b-458a-951a-37acfe2e870f"
        },
        "item": {
          "id": "f9862f29-6343-495b-a53d-86e654e7965c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f24e5043-32bf-4ce1-bf5b-66f68c4877f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 725,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6dcdaf1-b76d-4478-b69c-cc6cba364a8e",
        "cursor": {
          "ref": "5da4feda-ef6b-4a17-b8fa-c02889466620",
          "length": 244,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "208c5c3b-b156-48fe-b372-d2c3bae98df3"
        },
        "item": {
          "id": "f6dcdaf1-b76d-4478-b69c-cc6cba364a8e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6b514e9e-5f9f-4392-9f4f-7e826095bc43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 805,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb4d4687-2734-43ca-bc9c-cce8c5f5c08d",
        "cursor": {
          "ref": "cb0235c7-6e42-4011-b7a1-612fddb6d114",
          "length": 244,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "16d91694-00bf-43d9-bedb-1c3ea1d2e6cc"
        },
        "item": {
          "id": "cb4d4687-2734-43ca-bc9c-cce8c5f5c08d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ccc62780-cf51-4576-8b55-e09e4dae86e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1000,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "571fa5dc-779d-4ec3-ac04-6284918f8a78",
        "cursor": {
          "ref": "c6a4028f-7203-4db1-acd6-75dfd67a5350",
          "length": 244,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "dc97b141-4a2b-4a5b-8cb1-f02fd904f8cf"
        },
        "item": {
          "id": "571fa5dc-779d-4ec3-ac04-6284918f8a78",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8bb1fb1a-a6e4-4b64-b073-51674c975e48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 888,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d7e0007-be2d-4573-895b-c32158de59db",
        "cursor": {
          "ref": "ba599308-1436-4750-b739-cfe80704e8a8",
          "length": 244,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "c152b9c6-4244-462a-b4c6-0590683e4e9b"
        },
        "item": {
          "id": "7d7e0007-be2d-4573-895b-c32158de59db",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "80221414-3a0a-44fe-bdca-e37687adc80d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 844,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7f4c85-e74a-414b-8a7d-810c3c7f056f",
        "cursor": {
          "ref": "3d4bca61-4555-4a5e-b8f3-b3872b5e3db3",
          "length": 244,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "7b5794a7-fdf8-470a-9851-9d0a047a5a35"
        },
        "item": {
          "id": "1b7f4c85-e74a-414b-8a7d-810c3c7f056f",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "8c0935c2-ccf8-4dd6-ac3f-1fb6e0a97f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 765,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0efdf50-8e1b-4c1e-9257-2ed70bee60c4",
        "cursor": {
          "ref": "798e7b79-3f96-48d3-a5c7-e983f975835d",
          "length": 244,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b27b838f-ad42-432f-bbb8-9d163333ad00"
        },
        "item": {
          "id": "c0efdf50-8e1b-4c1e-9257-2ed70bee60c4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "bdee95ec-6bbf-4bbf-ab22-1ac11c9e4e31",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c477cf8f-0a46-42ea-9b4a-0879b7a73e5b",
        "cursor": {
          "ref": "6a8e1e4d-4c94-4e44-8c61-cc5b678fec63",
          "length": 244,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ac7bf781-98f0-48db-8b3d-0c010272cb48"
        },
        "item": {
          "id": "c477cf8f-0a46-42ea-9b4a-0879b7a73e5b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4dacc383-df89-4c78-a63e-825320d2ab4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76d10ad9-2142-47ae-86db-a3867a6d7c1e",
        "cursor": {
          "ref": "954b390b-46dd-4a30-9340-74d336960103",
          "length": 244,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "0ce19999-1c7c-4bc1-8bf7-362d08815d6f"
        },
        "item": {
          "id": "76d10ad9-2142-47ae-86db-a3867a6d7c1e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "9e2c46ac-b49a-455d-8933-90bd9f074118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2815fef-3cd0-4167-8ce5-8a1405cc032e",
        "cursor": {
          "ref": "bae1e412-84c1-4c59-bd4d-f3732e132d5d",
          "length": 244,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "f8069784-529a-4c34-92d9-f8d0d61397ef"
        },
        "item": {
          "id": "f2815fef-3cd0-4167-8ce5-8a1405cc032e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "7e125b59-01b7-467d-b805-58d41e53a0ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ef02fd-1485-4971-a35d-02196d7e4ac0",
        "cursor": {
          "ref": "1b9cc0e5-bc94-4c71-b887-68477e774e4a",
          "length": 244,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e7f25a2c-ee91-48c1-81d2-544dad2b7cf0"
        },
        "item": {
          "id": "43ef02fd-1485-4971-a35d-02196d7e4ac0",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "313230cb-0ba6-4368-b77c-5b3514f873ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cbeb071-0a60-4ba3-827f-85aa6dfd30f9",
        "cursor": {
          "ref": "6d5daad2-93d8-4c3a-ac0e-93deaaf12357",
          "length": 244,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f2bf5346-f2eb-45ba-9227-ac917ef65e67"
        },
        "item": {
          "id": "0cbeb071-0a60-4ba3-827f-85aa6dfd30f9",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "086b4868-5bf8-4872-8eff-ca372be4925f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5df439f-7151-4923-bafe-65d790dda358",
        "cursor": {
          "ref": "16998cb9-c011-41c6-9997-669f627c5e4f",
          "length": 244,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "96816e2a-6754-4dee-aaf2-ee0627348cec"
        },
        "item": {
          "id": "c5df439f-7151-4923-bafe-65d790dda358",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b43b1d9e-8fbb-4dcc-8968-9c449f1998ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8980bc27-d038-4a3b-8b79-2eb8471a0bfd",
        "cursor": {
          "ref": "84cb1a69-2d86-4238-8ee9-559674017ceb",
          "length": 244,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "88d29ce8-5ad4-438d-a754-d06e0416d9a0"
        },
        "item": {
          "id": "8980bc27-d038-4a3b-8b79-2eb8471a0bfd",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "5d51d90b-d88d-478d-b3b3-f3f19eda9286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a8bcb9-18be-4010-a7ec-30bdd40dd65a",
        "cursor": {
          "ref": "54a2e3cd-7bc5-41c7-90f3-be5bfaeb60d9",
          "length": 244,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "a1be930a-c6b1-4742-b4d9-93885e43ce40"
        },
        "item": {
          "id": "c3a8bcb9-18be-4010-a7ec-30bdd40dd65a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e61566f6-0e41-4396-a0e2-000e85576358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01711f87-a73a-452b-8658-7a11bf509d22",
        "cursor": {
          "ref": "f898ba49-c059-4f52-af1e-b04a47ab4636",
          "length": 244,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a5318c07-2288-4f93-a66c-696daf3fee28"
        },
        "item": {
          "id": "01711f87-a73a-452b-8658-7a11bf509d22",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a902bc6d-8078-4a98-a78b-50a4c04f9d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "409e1e04-f553-4c47-a4da-fc2107fad1eb",
        "cursor": {
          "ref": "a46128a9-8606-4def-894b-6ae8c294ffdc",
          "length": 244,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "dc6dc705-dfcc-4f11-bafc-7fb029381972"
        },
        "item": {
          "id": "409e1e04-f553-4c47-a4da-fc2107fad1eb",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "26032409-3ee8-45a8-a639-13490bef5f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cf686b7-39fb-401f-93c2-946573a781c3",
        "cursor": {
          "ref": "4b97c200-5893-4b44-879a-5bea89c0c6c4",
          "length": 244,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "46051bba-80f9-4289-a19b-f4ab1336cf53"
        },
        "item": {
          "id": "3cf686b7-39fb-401f-93c2-946573a781c3",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f6392b58-43b5-4662-9041-cb46d25b6eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea8aea7f-a5fc-4371-ac24-5cd82464bc11",
        "cursor": {
          "ref": "32e2593f-2b37-4c02-a6e7-05ff61136915",
          "length": 244,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "0b91b879-cc64-41af-9f58-157b867938a3"
        },
        "item": {
          "id": "ea8aea7f-a5fc-4371-ac24-5cd82464bc11",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b5a18809-8b14-417e-919b-11f70a563f95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7218155e-355e-4f8f-b43d-c38b1653c54c",
        "cursor": {
          "ref": "74cad8f0-ba26-4c9f-a6d7-4f9f5f973990",
          "length": 244,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "fd7d9b7b-a17d-48bc-a31b-b99618c5dd1f"
        },
        "item": {
          "id": "7218155e-355e-4f8f-b43d-c38b1653c54c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "22d07995-d82f-4b78-881e-1d7cfaba1328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "503e9a52-0b12-4337-b780-969297a9c069",
        "cursor": {
          "ref": "f722d370-da54-4780-be14-2f10bcf9f841",
          "length": 244,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a76a7a67-47f5-4039-a8a5-ec103069f946"
        },
        "item": {
          "id": "503e9a52-0b12-4337-b780-969297a9c069",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a8018237-2944-47fc-85e0-e4ac065b362b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "009ca32a-90b8-47db-b7db-2f0852c76e0b",
        "cursor": {
          "ref": "ffc37232-dcc1-42ed-9763-7365b6271a4e",
          "length": 244,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f40077c4-44cb-4c18-97ab-2572279313da"
        },
        "item": {
          "id": "009ca32a-90b8-47db-b7db-2f0852c76e0b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e11b736b-6c9a-48f0-99c3-3fcf5922edf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9de5aea2-20b7-4fbd-95b7-689debf027c0",
        "cursor": {
          "ref": "051a45bd-e970-408b-b1fc-cf8c0208df85",
          "length": 244,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "2e7c520d-541b-4ef9-b654-112f332045de"
        },
        "item": {
          "id": "9de5aea2-20b7-4fbd-95b7-689debf027c0",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b88ad5f7-8d0a-4ddb-bc33-cb45c7a0184a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "791cf16d-b946-45ac-b52e-eb9d8350e47a",
        "cursor": {
          "ref": "0e76ad70-4439-4845-b570-34d270a94bea",
          "length": 244,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c2c1ef73-511f-4184-9e0e-685edd004d5a"
        },
        "item": {
          "id": "791cf16d-b946-45ac-b52e-eb9d8350e47a",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "d20de0ca-2ef7-451b-bee9-ac3d7ad12dc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c2eac1-04ce-4693-a436-5790ed9990ae",
        "cursor": {
          "ref": "34cd9425-f885-45c9-ae11-35e69e114dda",
          "length": 244,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "8becf2ae-61c8-4b3b-a081-de615c2684b4"
        },
        "item": {
          "id": "44c2eac1-04ce-4693-a436-5790ed9990ae",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "c7b6c7b4-3ed9-45b1-b459-b483dc9dc0ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb7ee915-1dab-4693-9f19-6c70a316e9cf",
        "cursor": {
          "ref": "adb24346-9432-4ecd-958c-e111cf7f73b7",
          "length": 244,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "14c79e2e-f65e-4197-b781-6375aabc4f14"
        },
        "item": {
          "id": "cb7ee915-1dab-4693-9f19-6c70a316e9cf",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "b902901d-7de4-49ad-8399-2592b18d55a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d028ee7a-fc68-4b31-a393-e3d36a6234eb",
        "cursor": {
          "ref": "5d3ccbf0-ed46-4c79-8730-2b461273c79c",
          "length": 244,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "a4dc1605-b764-4368-a479-1dee83795867"
        },
        "item": {
          "id": "d028ee7a-fc68-4b31-a393-e3d36a6234eb",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "4936a26a-2ef0-463d-95d7-09b337877fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c38ffdc-b535-4adb-86a1-c6f7ac18b658",
        "cursor": {
          "ref": "df7a41bc-dca8-4ef3-8b9c-1ca2e60b2bb8",
          "length": 244,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "6c437287-402d-4873-ad68-c8916242551b"
        },
        "item": {
          "id": "2c38ffdc-b535-4adb-86a1-c6f7ac18b658",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d00af1e6-716d-40d7-84b2-8653bb9483be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8486c196-fc16-405f-8047-b88d5055e45b",
        "cursor": {
          "ref": "48104732-c2d1-41cc-85c4-0537c4f5526c",
          "length": 244,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "00160f72-6be9-4069-a1db-3f59f8657eb2"
        },
        "item": {
          "id": "8486c196-fc16-405f-8047-b88d5055e45b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4523eea9-f340-47dd-a018-492b2ff18da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "556f1347-78a0-4ff3-98e4-e540341a9067",
        "cursor": {
          "ref": "83f77b3d-daf9-4c6f-9202-a9654ce0c6d4",
          "length": 244,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "2c41a620-fce1-4305-a3df-63143c6a3e40"
        },
        "item": {
          "id": "556f1347-78a0-4ff3-98e4-e540341a9067",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "11966562-4b8e-40b8-b9ae-9841cae2d832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3591abac-7de2-4ec0-b47d-522cda6390b5",
        "cursor": {
          "ref": "d23ff4b8-0348-4b36-947e-561fac82e3d9",
          "length": 244,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "169c01fa-b985-40a1-8b4f-462d1b3ea845"
        },
        "item": {
          "id": "3591abac-7de2-4ec0-b47d-522cda6390b5",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "efda8e43-8f81-4a72-a638-6db1f72e5815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f2b26ca-9190-4292-816e-09a27d861a1b",
        "cursor": {
          "ref": "e8ef9f12-5dad-4517-8c88-75555f54264d",
          "length": 244,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "bfb25f42-1387-40a8-aada-ea6a2bc3f106"
        },
        "item": {
          "id": "3f2b26ca-9190-4292-816e-09a27d861a1b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "2b6e1e8f-2e92-4839-bcdd-474fc6835f1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0fa9e2f-dbb4-4ac4-a2b4-a26225cb3c0e",
        "cursor": {
          "ref": "ffe9afb8-de17-4228-8524-a07155c60949",
          "length": 244,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "58c29882-3dda-4c40-8d19-d638fb8862f6"
        },
        "item": {
          "id": "c0fa9e2f-dbb4-4ac4-a2b4-a26225cb3c0e",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e4d3f698-6c18-45d8-a8e6-53c8e873dacd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5064e03-72a3-46bb-ab29-0fc89e2b35a5",
        "cursor": {
          "ref": "46e75206-b0b3-4439-a991-7b74a562a453",
          "length": 244,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "abbe1728-f7db-4db6-bcf5-1c23139b446a"
        },
        "item": {
          "id": "b5064e03-72a3-46bb-ab29-0fc89e2b35a5",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "0b31d748-362f-4081-b7a4-8daaa19f52b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc93010-eb7d-4325-8a00-fb446d9e5be2",
        "cursor": {
          "ref": "d2b8632a-e264-40ef-a3c3-c066132d977b",
          "length": 244,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "56593d05-ab66-4a61-9b1b-48ed91253234"
        },
        "item": {
          "id": "ffc93010-eb7d-4325-8a00-fb446d9e5be2",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "64480c5f-dc95-4fe4-bf2f-c082efc41f8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e12c7ab-4b43-4371-a5a7-922ba1fbd1ae",
        "cursor": {
          "ref": "028c1e2c-b301-4500-884b-48511cad9b04",
          "length": 244,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "3c99fe45-50c0-4ab7-8990-21471e10c565"
        },
        "item": {
          "id": "6e12c7ab-4b43-4371-a5a7-922ba1fbd1ae",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "37956153-54b8-4c26-876d-763534c4afa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a64e6731-a7fb-45b4-bf7b-552f520f7211",
        "cursor": {
          "ref": "7dd2ccbd-c0b1-4319-af23-ffc10e72ccf5",
          "length": 244,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "7d3b418e-314c-44a2-ba94-a9fb1fae47da"
        },
        "item": {
          "id": "a64e6731-a7fb-45b4-bf7b-552f520f7211",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d3f4a7b4-5dd2-49e0-86cb-e8d3538f357e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7ca123d-71f2-4ef3-a6e2-cea5a7d7f616",
        "cursor": {
          "ref": "da35af1c-b0f8-4b83-ac45-335416ed6c20",
          "length": 244,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "4b743134-e6b4-4141-a06c-017c49a605fd"
        },
        "item": {
          "id": "c7ca123d-71f2-4ef3-a6e2-cea5a7d7f616",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "c08b8f77-0346-4fa2-9866-33c2e89266f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a292109-09c6-41e4-bd61-f85cb69b0f14",
        "cursor": {
          "ref": "9a226601-fdd0-4353-86d7-ce8f6df340fe",
          "length": 244,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "27282450-621d-420e-9a9d-af8e388c5edf"
        },
        "item": {
          "id": "8a292109-09c6-41e4-bd61-f85cb69b0f14",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "b6061dbe-c1af-44f1-b7c5-184484febbf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f57b77f-2e0c-4e89-b809-ac986bf1582f",
        "cursor": {
          "ref": "dc2a617a-fbaf-4aeb-8b39-2c8412f48745",
          "length": 244,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "31d00bc7-0384-4b2f-9ada-2693c02d681e"
        },
        "item": {
          "id": "4f57b77f-2e0c-4e89-b809-ac986bf1582f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "2e0fa216-93da-49ea-bf90-5a2f248fc92b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1a891c0-b177-4c3d-a0af-8842b85be7b9",
        "cursor": {
          "ref": "ff039035-2563-46ad-b44e-acd2bec363e6",
          "length": 244,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b8c1689a-0340-4db0-909d-71645bef8616"
        },
        "item": {
          "id": "c1a891c0-b177-4c3d-a0af-8842b85be7b9",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "eba1e984-9156-49ef-8a06-4b8ff4d5f8c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b603ea7e-d903-45fd-9bb2-c04a75f13c3c",
        "cursor": {
          "ref": "ecb7079a-6200-4fb7-a47b-98569b56451b",
          "length": 244,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "1021162f-3b19-4d9d-b679-576ebe72531a"
        },
        "item": {
          "id": "b603ea7e-d903-45fd-9bb2-c04a75f13c3c",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "614e210c-6566-40c1-83e9-ef7842db068f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d40ea308-7774-4fef-ac1b-676be0db6d26",
        "cursor": {
          "ref": "0950f5c3-21c4-43f0-bbb3-7a441b5835f6",
          "length": 244,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "b2dd868a-61e7-420f-be3f-625c7a73ba80"
        },
        "item": {
          "id": "d40ea308-7774-4fef-ac1b-676be0db6d26",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "fe083500-2956-4de2-a7fb-3c4b626ba2fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f241c209-25b1-45e9-92c5-f1a652089e61",
        "cursor": {
          "ref": "95b96131-1cd3-42c2-9cd9-15f34e865032",
          "length": 244,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "1b0b1f79-d150-4524-8aa3-d1f4fbb54ffa"
        },
        "item": {
          "id": "f241c209-25b1-45e9-92c5-f1a652089e61",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "a95c6116-6494-48c2-92fa-89b33ccefe85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "252c2d51-a211-408f-a5cf-29db95ac19eb",
        "cursor": {
          "ref": "ca20bc96-0ba0-4fd7-9c04-acb6c1582dc5",
          "length": 244,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "01d4dd12-93e8-4e1f-86d1-105c116201ce"
        },
        "item": {
          "id": "252c2d51-a211-408f-a5cf-29db95ac19eb",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "9f775d90-5e18-4051-aff0-b37b12d5b99b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1339a73-143d-4e56-8bad-ef518ba04da0",
        "cursor": {
          "ref": "f594d7cb-21a8-4124-ab3f-6060601cfe0b",
          "length": 244,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2d8a087f-d566-4de2-abd2-d9b6986cefc8"
        },
        "item": {
          "id": "a1339a73-143d-4e56-8bad-ef518ba04da0",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "fef7832c-d430-481e-9d73-4f7f505f79ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "168bd3a7-1641-4500-88ca-bbdf2e21ef17",
        "cursor": {
          "ref": "f1b83f9e-8360-4167-9082-2bec193cddf7",
          "length": 244,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "a6dbda8b-dac9-4ef2-82cd-c9e6e71d131e"
        },
        "item": {
          "id": "168bd3a7-1641-4500-88ca-bbdf2e21ef17",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "752d2491-54be-4d1f-83d3-5f5b0131b684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e62a0bb-35be-4ff6-8ecc-92894fa06dac",
        "cursor": {
          "ref": "1a921e8d-23a0-4ed0-9327-c04d967b6ac7",
          "length": 244,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "73be36b7-5e06-4f78-bac6-e6baf0cbfaa9"
        },
        "item": {
          "id": "1e62a0bb-35be-4ff6-8ecc-92894fa06dac",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "71541eb9-9915-41d9-b87d-ae851947c675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9fe8e9a-17b1-43c4-9031-617bc28996b9",
        "cursor": {
          "ref": "8745be54-3acf-4713-bc1c-efba96a57190",
          "length": 244,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "55f879cc-b2a5-4338-9056-534d4b4047d9"
        },
        "item": {
          "id": "a9fe8e9a-17b1-43c4-9031-617bc28996b9",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "b981f9ba-fa16-4fe2-bbce-56f7e920a789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6529c1ba-e216-479a-a45e-89ce6a746688",
        "cursor": {
          "ref": "345067f5-0ccc-4e06-ad12-702cecc1e7f2",
          "length": 244,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "340f2fc3-cd87-4e30-820f-81393645ba6b"
        },
        "item": {
          "id": "6529c1ba-e216-479a-a45e-89ce6a746688",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "7496842b-29aa-469b-bbaf-9804098328f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "481870d2-c927-4f97-b9e4-2243ac07ce42",
        "cursor": {
          "ref": "9c73bbd4-9fe9-471c-a013-609baeb51176",
          "length": 244,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "3ad53e7e-87fe-4127-affe-70fa048fd335"
        },
        "item": {
          "id": "481870d2-c927-4f97-b9e4-2243ac07ce42",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "0f55f6a1-3491-4c22-a4b2-6e94f21c1084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e222dbb-dea2-452f-881f-a2307b2f5dae",
        "cursor": {
          "ref": "75945db0-c062-4cc5-9a20-356cb22aeceb",
          "length": 244,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "67db2208-8bf0-432f-a175-724157875b93"
        },
        "item": {
          "id": "2e222dbb-dea2-452f-881f-a2307b2f5dae",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "ea44791b-be8a-4fbb-88a0-c0d63eb14aed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db6333bc-b529-4cfc-98f5-3597c4bb76b7",
        "cursor": {
          "ref": "2a00008a-53de-44c3-8fe7-843e472493cd",
          "length": 244,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "cb5e80ad-d79d-4a41-a773-a666c7076ccd"
        },
        "item": {
          "id": "db6333bc-b529-4cfc-98f5-3597c4bb76b7",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "c4b3d1c1-a07c-4940-90de-a6727f261508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cefd08e-9104-44ce-8513-85873f8f9210",
        "cursor": {
          "ref": "27fd6641-e5b5-4ed0-b7d3-4fe1cdccaa8d",
          "length": 244,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "64c9b1fc-519b-4942-8da6-47083ac2f0a8"
        },
        "item": {
          "id": "5cefd08e-9104-44ce-8513-85873f8f9210",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "6c1e4559-d328-466c-80e4-82dbb0926946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be256e0-1fae-4411-a7f2-65a3db6435a4",
        "cursor": {
          "ref": "716ffac6-0f69-4b2d-997a-0bd57925d1cb",
          "length": 244,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a7634223-8287-44fd-aae6-ebc3399fce76"
        },
        "item": {
          "id": "9be256e0-1fae-4411-a7f2-65a3db6435a4",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2d6b8860-99a8-4471-8066-6e6891e00b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84cdd256-8f0d-4edc-b4f3-568daa6fddef",
        "cursor": {
          "ref": "2786f8aa-f006-45e9-97fb-b7805ccb7b50",
          "length": 244,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9f2e9a99-9979-4c1b-a392-66e39604faa6"
        },
        "item": {
          "id": "84cdd256-8f0d-4edc-b4f3-568daa6fddef",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "71c48f23-641b-4d06-830d-0b4e22612973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1408fc4c-81f1-44c1-8c21-0ff0301d629a",
        "cursor": {
          "ref": "6523e0a7-0e8a-4bc0-965c-f00c975a38e6",
          "length": 244,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "75616afe-6ad1-471c-862c-8759dbbd20a0"
        },
        "item": {
          "id": "1408fc4c-81f1-44c1-8c21-0ff0301d629a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "a476a75b-6ee3-40de-bd0c-f60537a923da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f6e36ff-c83e-4bac-b6dd-589780ce6cfd",
        "cursor": {
          "ref": "694dde5c-6540-481c-9235-0e2dab4eac61",
          "length": 244,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "7715e4a3-5c2f-4815-88a5-2193622fc565"
        },
        "item": {
          "id": "9f6e36ff-c83e-4bac-b6dd-589780ce6cfd",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "3e968a75-9877-4577-90cf-29e834d80f12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3800794-f5c8-4d23-a2e4-f3c039d2117e",
        "cursor": {
          "ref": "fc860dd3-e0b3-4a44-a283-7fea8964109e",
          "length": 244,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ed6d077a-0c19-483e-b5ab-9892b4cc5608"
        },
        "item": {
          "id": "a3800794-f5c8-4d23-a2e4-f3c039d2117e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "5cccb649-24e0-4886-aaef-b2679f1ca023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c93b5816-4ca8-4066-9258-c8d6d6702425",
        "cursor": {
          "ref": "3064ccbe-37a0-4809-afec-77e8a442464e",
          "length": 244,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "688abd71-2909-4bb0-9e8e-743cc59c5f22"
        },
        "item": {
          "id": "c93b5816-4ca8-4066-9258-c8d6d6702425",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e9c1e212-4cc7-41f6-9b51-7906d1597371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01febfec-c86a-49a0-8aad-5584c62cfd06",
        "cursor": {
          "ref": "7fd9e880-e814-461e-91c1-c663f180e30f",
          "length": 244,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "8f366aee-5193-4243-affa-b1432f377c50"
        },
        "item": {
          "id": "01febfec-c86a-49a0-8aad-5584c62cfd06",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a4c391a8-2de5-4874-ac7e-216aafd5987f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f71b213d-d0bd-4631-975d-1a52de96eeed",
        "cursor": {
          "ref": "f589cb98-4ddd-42bc-a7b0-7e859c8d8b8c",
          "length": 244,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "485e73ba-fc57-43e2-9130-0d69a9f0ee06"
        },
        "item": {
          "id": "f71b213d-d0bd-4631-975d-1a52de96eeed",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ae18ced0-e33e-4141-bc21-9222909eaa12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd944df1-62d4-4456-9646-5808f9be4913",
        "cursor": {
          "ref": "320b6b5a-267b-4709-9eff-5b128e75c3cb",
          "length": 244,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "7a5ce2a1-b478-496e-bd2b-60ae1a974cad"
        },
        "item": {
          "id": "dd944df1-62d4-4456-9646-5808f9be4913",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "24dde8f0-ecbc-4287-9d0c-e8c8fc5464f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e4b430-ef93-498e-99ad-a3d93a3ff173",
        "cursor": {
          "ref": "135ea856-271c-4507-8241-ad77a8649473",
          "length": 244,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "76ed5da3-06bc-4bee-ae5d-1de0fcc9f639"
        },
        "item": {
          "id": "10e4b430-ef93-498e-99ad-a3d93a3ff173",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "d32ab3f5-b5e4-4c8c-9ae7-0b8fd5974412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9ad711f-309e-47a7-9c44-84c8d9b1ffb7",
        "cursor": {
          "ref": "cf04b3a9-ffbf-4fe6-8a44-e6741c7ff5ed",
          "length": 244,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "7b34cd80-3a59-48f7-a356-5a86fdc393ef"
        },
        "item": {
          "id": "f9ad711f-309e-47a7-9c44-84c8d9b1ffb7",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "b59471c8-c24f-4e1f-a991-992139846586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b2ec92-14e5-41eb-913f-a798b45d8eb0",
        "cursor": {
          "ref": "809d2cd1-1d19-40ac-9b03-1c1698f75417",
          "length": 244,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "b7ee2521-8769-468a-bb49-8d2898f284f3"
        },
        "item": {
          "id": "45b2ec92-14e5-41eb-913f-a798b45d8eb0",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "73f654c8-0478-4245-b5db-1b4d08f38014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11b64bfb-07d5-4b53-a2bb-b7445b0a0d77",
        "cursor": {
          "ref": "a270b7ea-9d71-4416-9fc0-73a106327e9b",
          "length": 244,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "368392dd-33de-43d0-a584-e8b735cfb7a5"
        },
        "item": {
          "id": "11b64bfb-07d5-4b53-a2bb-b7445b0a0d77",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "beb56b2d-fb3c-4b0b-ad34-bde424f229e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a9195a0-5e13-4458-8de3-2bbab0e5b2fb",
        "cursor": {
          "ref": "c5d08df4-23a9-4cff-87fa-a2e8423c6286",
          "length": 244,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "d783cc34-1816-4cb1-ba27-e51b3ee5b405"
        },
        "item": {
          "id": "5a9195a0-5e13-4458-8de3-2bbab0e5b2fb",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "dd10758d-780d-4447-8d20-d8257cc2ebac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6ad88d-d170-4ad1-aecb-e2e8b6545093",
        "cursor": {
          "ref": "03d3e0a5-4159-49ad-9e65-99118bb658ea",
          "length": 244,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "521a2a18-e8ef-46c2-8bad-197ac11dc5ee"
        },
        "item": {
          "id": "3d6ad88d-d170-4ad1-aecb-e2e8b6545093",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "ade60cf1-5871-4549-9e65-5aa24d5d7419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35e5e0c0-1dee-4ebf-8b31-2d531865f685",
        "cursor": {
          "ref": "18b6588f-1ef0-47d7-8b9e-280e1011517c",
          "length": 244,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "c5ca3a79-411d-474e-9435-d07c4b3a76ce"
        },
        "item": {
          "id": "35e5e0c0-1dee-4ebf-8b31-2d531865f685",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "464c104d-edbe-4072-b4af-ffb3f5516785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de3cea02-1e38-43ae-9201-02c736ad2a9b",
        "cursor": {
          "ref": "6d8debc1-928d-4c9f-8288-dd00a0eac276",
          "length": 244,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "acbcce04-501c-4787-8db7-aac926794de9"
        },
        "item": {
          "id": "de3cea02-1e38-43ae-9201-02c736ad2a9b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "82b7facd-1897-444f-b3af-8bd407f1a746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74609db4-6f67-47f7-8d8e-9da9cb90f37a",
        "cursor": {
          "ref": "00cd86ff-7745-43b3-af63-aa2a2cf94846",
          "length": 244,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "75a00e1a-883e-4878-a918-c6e469bd4644"
        },
        "item": {
          "id": "74609db4-6f67-47f7-8d8e-9da9cb90f37a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "60064d62-e5c5-4654-806f-ceb0ec7c20b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e917712-fd74-4da9-987d-5badfd4dfa3b",
        "cursor": {
          "ref": "741ff4c9-64fb-4aae-aff3-9e98d78488fa",
          "length": 244,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "07d3dadf-0500-4232-a9a7-41306e028b46"
        },
        "item": {
          "id": "2e917712-fd74-4da9-987d-5badfd4dfa3b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "9ad339dc-df19-4d60-9919-203a2cd1f5c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db592ec-08af-4901-8a57-414e308c621d",
        "cursor": {
          "ref": "e1e643d7-9cea-42a1-a9c0-ed4eb0fb84ca",
          "length": 244,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "ec253e9d-d36d-43fc-a4bf-35528fcf760c"
        },
        "item": {
          "id": "8db592ec-08af-4901-8a57-414e308c621d",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "50dd4560-3ad8-4047-962c-2f7b0d36ebb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cae0867-3d2e-4074-b94b-1d3c9f3faf61",
        "cursor": {
          "ref": "2462951f-a331-4e64-97b0-11fc8b220859",
          "length": 244,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "a6d390eb-d93c-4269-95f1-83161bdcdc80"
        },
        "item": {
          "id": "4cae0867-3d2e-4074-b94b-1d3c9f3faf61",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "6ef79538-631b-4cbd-8ec4-dd8db8e4228f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0cfb9d8-9e3d-4213-afb3-af227cf86e79",
        "cursor": {
          "ref": "9f25a43d-5c4a-4e46-a5c0-a77fd055ae0b",
          "length": 244,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7dd7f213-8cf5-47c9-bac0-122ead5b6e14"
        },
        "item": {
          "id": "e0cfb9d8-9e3d-4213-afb3-af227cf86e79",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "61df531f-443c-4cf7-955e-597d2ed50365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67942c05-181f-432b-a071-dd9bdda44312",
        "cursor": {
          "ref": "c3a93332-4c82-416d-8ef7-339b4bed60d1",
          "length": 244,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "7f759e61-1ae3-438a-bf4f-8452432f8df9"
        },
        "item": {
          "id": "67942c05-181f-432b-a071-dd9bdda44312",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "81598878-0ad5-45f5-8299-6d233696554e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fb6ad80-710e-4d99-a520-872bd1d81536",
        "cursor": {
          "ref": "0c128815-4f74-4cff-9f89-7947a103d10c",
          "length": 244,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "2f78fa0d-98e0-4d4f-9a0d-555b1a2fc085"
        },
        "item": {
          "id": "1fb6ad80-710e-4d99-a520-872bd1d81536",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "de83b36b-e341-4b63-844e-d18ab96d4ce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e132e84b-ff37-451b-911a-2d7669d45d3f",
        "cursor": {
          "ref": "571c9610-4ff9-4f42-b3d8-d3188861c7fb",
          "length": 244,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4bb42f47-4432-4105-85c6-631d2cce0cab"
        },
        "item": {
          "id": "e132e84b-ff37-451b-911a-2d7669d45d3f",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "33557e63-ad56-43d4-997b-c922d3f6d73c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26df49bb-8c55-4d63-b638-350354c3db79",
        "cursor": {
          "ref": "3652a426-0b38-4a2a-9650-02576e567510",
          "length": 244,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "71a77e4b-58d4-4475-857a-5be8881b2d8a"
        },
        "item": {
          "id": "26df49bb-8c55-4d63-b638-350354c3db79",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ba7aeff2-af15-4d58-8c77-5921239c4729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed70464d-b24b-43c8-a640-829adef629f9",
        "cursor": {
          "ref": "c4d86e4f-285c-4ddb-bf5f-94777975bf90",
          "length": 244,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "fe314f07-1415-4159-b082-072a82616b2b"
        },
        "item": {
          "id": "ed70464d-b24b-43c8-a640-829adef629f9",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "7b678762-c0da-4b33-a75c-0766d6ee8847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16bca1f0-4d84-4f6e-827f-3c0fd5c779a0",
        "cursor": {
          "ref": "d2170a43-ac3d-4352-b7f9-786882f0b0fa",
          "length": 244,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "feacd9d7-fe9d-4ad1-8f76-bbf88170d8f4"
        },
        "item": {
          "id": "16bca1f0-4d84-4f6e-827f-3c0fd5c779a0",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f262f7b5-c3c1-4ea3-825b-9ec72ddddda0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb588155-b152-4315-8fd7-dfa7e47ebea7",
        "cursor": {
          "ref": "436772e3-e3c1-4386-8617-5380330daf76",
          "length": 244,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "de4e8f80-7256-4201-bf29-7c04868f89a9"
        },
        "item": {
          "id": "bb588155-b152-4315-8fd7-dfa7e47ebea7",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "23a06b29-d2ea-46eb-8ef1-51de1977ab27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e87817-880a-41c2-a7bc-16559c4d8801",
        "cursor": {
          "ref": "65399ace-53ce-493d-9dcf-700018d5c0ba",
          "length": 244,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "dd59996b-c5fe-4b92-9870-34b917bb6d81"
        },
        "item": {
          "id": "e5e87817-880a-41c2-a7bc-16559c4d8801",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "df0424b2-e4e2-4010-8f85-ef4fb14fd14c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e35820e-96d6-4344-9a75-2251f0df23c6",
        "cursor": {
          "ref": "f88d42a1-65dd-40a6-b1e0-909899b3963a",
          "length": 244,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "2ff28310-e895-492d-be71-e2b0541b9291"
        },
        "item": {
          "id": "6e35820e-96d6-4344-9a75-2251f0df23c6",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "6770f923-b9fc-4336-b07e-8f217742d0f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d50cbda-934b-43b9-8ac9-35b6b47e60fe",
        "cursor": {
          "ref": "696741da-8990-4394-82f0-bc7de695d55f",
          "length": 244,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c9d03d40-ea61-4916-9f96-e4ccaae94cb1"
        },
        "item": {
          "id": "8d50cbda-934b-43b9-8ac9-35b6b47e60fe",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "a183146c-deb2-4dbd-8e54-efad44b2331d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b2d05fe-3b59-4b3f-be87-df9fa1cf7662",
        "cursor": {
          "ref": "d597926d-1b50-48ad-b728-1a900302184c",
          "length": 244,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "187f6359-cc18-40b5-b52c-5fb8c1b67c8b"
        },
        "item": {
          "id": "3b2d05fe-3b59-4b3f-be87-df9fa1cf7662",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c06eec15-11de-4f4c-8053-4781ac3505f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e6df0a-ac77-4c9a-a78b-691861efa53e",
        "cursor": {
          "ref": "6bd735ba-ffd5-4095-acf9-bdb95479fe57",
          "length": 244,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "1fbc747c-772b-4ec6-bfb0-bdae5a652de7"
        },
        "item": {
          "id": "e3e6df0a-ac77-4c9a-a78b-691861efa53e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "6784a469-03ad-4ff9-b561-827b25fe4329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c8dfe5-ceba-45ff-9d0f-a73a27bae01d",
        "cursor": {
          "ref": "7031fa9a-f704-490a-8332-48f3592b9c09",
          "length": 244,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "8d076e19-e6aa-435f-aa43-626a0978e1f4"
        },
        "item": {
          "id": "a5c8dfe5-ceba-45ff-9d0f-a73a27bae01d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "3498128e-3625-4e88-9bfb-8175118cabee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27531af3-7243-4b68-baac-3212446cc4fb",
        "cursor": {
          "ref": "de7d2d92-491d-4de1-ab8a-345618eb7b68",
          "length": 244,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "0a93b3e7-78c6-4828-b556-2b8da6761c98"
        },
        "item": {
          "id": "27531af3-7243-4b68-baac-3212446cc4fb",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "49700201-c657-4947-a30c-a121e742cee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bee6600c-8bbc-448c-9a52-922e36ccf1ee",
        "cursor": {
          "ref": "1f05d662-8391-4166-ba1f-81a5bf66b7d6",
          "length": 244,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "4fc1a45c-ccde-45ee-b123-2829df1c65a4"
        },
        "item": {
          "id": "bee6600c-8bbc-448c-9a52-922e36ccf1ee",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "4756736f-c378-4534-9e6b-c8e252a1df6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03aae272-7ba2-4071-97a1-5709c5cc69d5",
        "cursor": {
          "ref": "1b49eda1-801d-4577-97df-e44e5450b9aa",
          "length": 244,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "24b3154e-615a-4bd6-96f3-cfda43527050"
        },
        "item": {
          "id": "03aae272-7ba2-4071-97a1-5709c5cc69d5",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "cc223ec9-ee4b-48db-b98e-62689161e6bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec228c1-520d-499c-8d9a-5a6a088c8021",
        "cursor": {
          "ref": "6a8f3add-ed00-4aa7-9dad-7943333241b4",
          "length": 244,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "14d4570e-f9d4-4ea9-aad6-f8f573f0a62c"
        },
        "item": {
          "id": "4ec228c1-520d-499c-8d9a-5a6a088c8021",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "2bbefc3a-c25c-4b58-af54-15e8747702b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "611f103f-65f3-4bcf-9a40-42fca55a2c3d",
        "cursor": {
          "ref": "efd21dab-3f37-44de-afb6-ba7315f42545",
          "length": 244,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "d4021488-fda2-4d7f-b526-dc9ab9095460"
        },
        "item": {
          "id": "611f103f-65f3-4bcf-9a40-42fca55a2c3d",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "9c2675c7-3cb5-4cbd-84b9-a60d4b6d3b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5de75ca-ddec-4a89-a445-80fe0d7be1fe",
        "cursor": {
          "ref": "85608620-c1f0-423a-8851-b9698ed153b6",
          "length": 244,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f7f1a92f-9fb6-45cb-a30f-721cd6b5bb55"
        },
        "item": {
          "id": "c5de75ca-ddec-4a89-a445-80fe0d7be1fe",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "eac3b1dc-7fc3-42d0-a68b-2f062fb2f835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "253de08b-da6d-41f3-980a-9cee188f39aa",
        "cursor": {
          "ref": "b76fa6f1-0a73-4ff9-8dbe-f2e78dc15506",
          "length": 244,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "54187569-a977-47b1-8b02-553cb8da22c2"
        },
        "item": {
          "id": "253de08b-da6d-41f3-980a-9cee188f39aa",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "dcae204f-b4d1-4cd5-b10f-2595485ceef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e13de8-9ee9-4b5c-ac55-7f92af2199ad",
        "cursor": {
          "ref": "e8a9a8d3-52fd-4dda-a754-8a1311e8576b",
          "length": 244,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "0937b965-f8d2-482f-b502-6ef620199630"
        },
        "item": {
          "id": "33e13de8-9ee9-4b5c-ac55-7f92af2199ad",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "3b47a2cf-9572-4843-ac74-d95e06045958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb500b3-02b2-4201-8c3d-5e006cdbd784",
        "cursor": {
          "ref": "eb644158-3ae3-4221-b570-6a032b93502d",
          "length": 244,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a8f09ab2-4541-4529-82f6-f28d035e250f"
        },
        "item": {
          "id": "bdb500b3-02b2-4201-8c3d-5e006cdbd784",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "fb4883af-d429-4d19-9396-c8dba25302d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88604a68-2650-4cd3-ab76-3f0f178d225e",
        "cursor": {
          "ref": "6983530e-a1f7-4b68-b399-7b09439d46f8",
          "length": 244,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "4dd2267a-f912-4de4-bcd7-ad8e63955d23"
        },
        "item": {
          "id": "88604a68-2650-4cd3-ab76-3f0f178d225e",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "baa2e3db-fc66-48ab-a2b8-a9f3cc95a49c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a37631fb-749c-4d4e-94c2-f87758b9111d",
        "cursor": {
          "ref": "e13696f0-e980-4d1c-9b96-c6f3e55874b0",
          "length": 244,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d0cdc683-9af5-4792-90cb-ae0285b965ae"
        },
        "item": {
          "id": "a37631fb-749c-4d4e-94c2-f87758b9111d",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "2671cf6b-efbe-4ce7-b565-7bd2f753d5af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "575720d1-e122-4c6b-8081-4570bef4e89d",
        "cursor": {
          "ref": "49035163-57c0-4032-90ec-6ab668c7c844",
          "length": 244,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e89f8826-0e62-4746-be1c-bad11ea54a68"
        },
        "item": {
          "id": "575720d1-e122-4c6b-8081-4570bef4e89d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "39f12649-d30f-44c6-b9eb-15cd1c0b85aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5f48a01-e949-4fdf-87a0-83c1fafb93f0",
        "cursor": {
          "ref": "a0c8d5c4-f192-4b21-939d-36b6cf39bfa1",
          "length": 244,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d1756bc7-92ca-4299-ace7-3b9c352fdb3b"
        },
        "item": {
          "id": "b5f48a01-e949-4fdf-87a0-83c1fafb93f0",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "633b7c1c-4a64-4243-b307-c068b85aba6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ffe91b-415a-4c4f-8954-59bd8ecf1b51",
        "cursor": {
          "ref": "00e4a194-8ceb-405b-9fce-eea88e78a3d1",
          "length": 244,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "cbff8b71-24ff-42f4-b37b-426bd71d578f"
        },
        "item": {
          "id": "74ffe91b-415a-4c4f-8954-59bd8ecf1b51",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "17dde700-de28-44bc-bb75-9b4040e05a1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d9f49d-dbd8-4e7a-828e-2c8d4dc4bc52",
        "cursor": {
          "ref": "6982fc77-a166-4e4c-82f5-f6bb3ffc5b90",
          "length": 244,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "77b6ff26-d559-418f-95a4-7bcb7175a345"
        },
        "item": {
          "id": "f8d9f49d-dbd8-4e7a-828e-2c8d4dc4bc52",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "cdeacba1-fb9d-4350-85ec-8b4abbf68595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a47be4-9e63-4407-a774-1e54609545a6",
        "cursor": {
          "ref": "2377b1e1-1314-4316-bedd-475e76baf626",
          "length": 244,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b2fb2e95-e986-4f43-8a1e-82e638f77a8f"
        },
        "item": {
          "id": "89a47be4-9e63-4407-a774-1e54609545a6",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "1ece2221-93a2-4cc3-a4ff-d6d770413d06",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9162a34f-e2a9-4ed7-b3cf-b9fde84c00a7",
        "cursor": {
          "ref": "c4cd903b-0ae6-4974-a51e-c4c99dac1cb6",
          "length": 244,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "61270173-20e3-4424-919b-aea50713ebec"
        },
        "item": {
          "id": "9162a34f-e2a9-4ed7-b3cf-b9fde84c00a7",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "6956cd0b-49d2-4f93-a1f5-eb488c25a9dd",
          "status": "OK",
          "code": 200,
          "responseTime": 610,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce7998b2-6eb4-432e-a8ef-7a21c92bbd09",
        "cursor": {
          "ref": "8bfa19c8-4a18-4933-b51c-9d381e5b1c56",
          "length": 244,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "2314c4d0-306c-44d1-9b57-5c758b75de73"
        },
        "item": {
          "id": "ce7998b2-6eb4-432e-a8ef-7a21c92bbd09",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c87a6872-0e6e-4b38-9f3f-a99bb3e0c418",
          "status": "OK",
          "code": 200,
          "responseTime": 1621,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc6bf6cd-8d10-434a-81fc-1e58f0645977",
        "cursor": {
          "ref": "1f19c97d-eecf-4d0d-9890-b7df0a4e5ede",
          "length": 244,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "cda05bfa-dcc0-4a70-90ae-7f7aa9b8b0a0"
        },
        "item": {
          "id": "dc6bf6cd-8d10-434a-81fc-1e58f0645977",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f8b6adf9-1956-4721-9a01-721ce5e99abf",
          "status": "OK",
          "code": 200,
          "responseTime": 1550,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4809e9f4-1268-4675-9e24-6fd7b5e674e1",
        "cursor": {
          "ref": "d511ab71-39fe-41f9-9afb-9506a9a1d62d",
          "length": 244,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "47ee6dbd-1101-4911-a177-30c752777230"
        },
        "item": {
          "id": "4809e9f4-1268-4675-9e24-6fd7b5e674e1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f9a49b83-99d7-451b-a2d0-0ef66723c506",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4809e9f4-1268-4675-9e24-6fd7b5e674e1",
        "cursor": {
          "ref": "d511ab71-39fe-41f9-9afb-9506a9a1d62d",
          "length": 244,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "47ee6dbd-1101-4911-a177-30c752777230"
        },
        "item": {
          "id": "4809e9f4-1268-4675-9e24-6fd7b5e674e1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f9a49b83-99d7-451b-a2d0-0ef66723c506",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d65fa24-9b7f-4185-b0f5-4464ce4ac2d6",
        "cursor": {
          "ref": "1f990c87-f771-47b6-9705-d36a6a90638c",
          "length": 244,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "bf7099b7-6de8-4c44-9a17-267faa091ebb"
        },
        "item": {
          "id": "0d65fa24-9b7f-4185-b0f5-4464ce4ac2d6",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "89ddfd49-3e7a-4858-a916-ea03797c4ab5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29dd46c7-b644-48c0-87dd-7746eee8f16d",
        "cursor": {
          "ref": "e16a2b8c-f6fd-4950-bc3d-c351f99db95c",
          "length": 244,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "26693c5d-31bf-470b-bd7e-e512ef7b64df"
        },
        "item": {
          "id": "29dd46c7-b644-48c0-87dd-7746eee8f16d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "205259e0-f5c3-4309-8cd4-cb2e8794a281",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}