{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "eeeb7127-f0b3-4f91-a31b-420ce637eeeb",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ffb299a1-9c36-439c-83d6-33da76b589de",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "98df08b1-9437-44c0-8694-6dd9ceb165cb",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a9b345e3-ce36-4340-b176-eaaa39f5a83c"
                }
              }
            ]
          },
          {
            "id": "c0306377-03ae-48d5-b94d-30c9ba3b64ed",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "60c0fd37-3b13-4ca5-8006-60d5203423d0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5c1a1054-9fe4-4882-8501-cd70d6d09a56"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "00619e4d-c01f-4cc8-b4bb-becb810aff81",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e0d280a9-58c7-45f6-9590-49c575c0ca4b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cc186d00-a72e-4928-8eae-9a7a459b1b33",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "885d260d-9519-4cdf-ab4d-a21aba290c3e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bab825fe-f21a-4b1c-bfd4-66bcf2b95048"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5e135032-8373-4d43-bfc4-41631bfe4e6e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "89693a4d-f323-4b85-9845-3addb3ef0b18"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d4ee502f-5b6d-4f9c-a654-3b12c60a4a3d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ac12fcf8-0307-45e4-8731-d62ac82b91f3"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0a38da1d-17db-4137-9d93-e462c7351505",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "4b11971b-91e7-4b56-afed-2d5e9b9cdc43"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c923439a-f1c4-41ec-a1cd-12a7cef0b553",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f35f7366-1f71-48e5-94fe-21ce3b01f45b"
            }
          }
        ]
      },
      {
        "id": "c665fe3c-d838-4d31-ab46-a7e152a5e34b",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "3ae9e7d9-b041-4336-acb9-74c53b861de3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "04312b4e-9888-4a6b-a3f9-c5714c5dc665",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "74ec5c53-3c1a-41c1-a2a0-33ee782fef29",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a0a6d86-fa18-42b2-a5c8-a87ecc0a0b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d82fe6f0-d8c4-4dfd-823d-f474d20a6fe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f094c7c7-1748-498b-9f30-a3b0f6318744",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9e6dafc-bcf2-41c4-b397-6fa98218264b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "17e1fa2d-187d-4c67-b156-1f19c6ce5231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d24b9810-5a4e-4b84-ad32-9e4c9fe7d077",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e4012f2-2534-4059-a788-41c22338f4be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "761558bf-6332-4fec-abaf-9901598ea41d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a8ade20c-f743-49ff-a5ea-0a3d7eabbbd5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c7481722-ae62-476a-aa23-b825a4deee66",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f793a2-ef9d-4c9e-8802-6cf10bd07753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3a502579-0f06-4179-a2e1-77f262c823dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a4a58ca-df69-45e9-b272-3bd253d81a84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3455b12-4316-407a-9827-8b38b0a6a134"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8d726293-8500-4e25-a5ca-51650e02c15a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "be38199b-87ce-4b33-af0b-79f9ba476853",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8a302e9-8a6c-42ca-9d9d-938d82a9b93d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "23089816-ad73-462b-9b31-4f5fa9f2ccd1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5b11f81e-81b8-498b-aa30-e02bfd8ab491",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "1270e8b4-2dd8-4dea-a875-c861f1d563cb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2ce34493-12cc-4975-88a7-1d26f98ad5ba",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6b9579aa-6505-4b4f-9bbf-adb893cf0d4f"
            }
          }
        ]
      },
      {
        "id": "11f350f0-0701-4d95-9264-4baafd203f22",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "8271441a-5fe8-453a-8d58-f0bf556030a5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f2cd08d7-4079-4398-90dd-92821f8e4abe",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d55f51cb-5896-45ac-9d5b-623398cb92c4",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf3782b6-5c8a-49a9-97fe-3d637951e209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb8bb368-4159-488a-95fb-b200979a7a80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba5b2604-ecdb-42a1-a673-ea1ce09607ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2394e79c-7ea9-4db5-8223-b223f1173afe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10aea0e7-5b6d-464c-b439-7ddccd37bfd8",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6171dad-4a4c-4b4d-9935-d8006adf0e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4bcc08b-54f2-4ef7-81a9-3d2cc52d1671"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1d3e125-1715-4444-9bf2-c835b00806c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "352d47da-1c5a-4494-887c-db9608b0ffc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed6875d-90e8-407a-940b-2ad5e24a3f63",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c93f3d8e-41ef-4c9d-9285-606df8553cb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8fb0d11-b8d4-4421-99e7-761f4b07749e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "508bf749-f0f7-4648-924a-4008bdbbb861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6f57501-a4fe-4519-96d4-f3483dd02d33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc567f75-6f52-4ef7-bcd1-92e5e5457001",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a33965bf-8682-42fe-b9fb-8e3020967689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2316b4e0-996f-488a-9477-5915ee990f2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bf8f9ba-5d52-47e8-ba9f-e6c9a5244a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9060d039-ac8f-4f3a-8d69-3f337684fc45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca88b85f-22ab-40e1-8844-732e579f0e1e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae653a34-5f45-4716-a5f7-24dfa8813405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61379142-2bb5-47ac-bc0b-535139358cd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a02f037-97a3-4c41-96c1-23f77c50fa86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "892676d8-8c44-44c6-9223-05300601a7e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "886a162f-c77d-4ddd-abe6-bf1ec6a79528",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3303106-3d06-487d-ba35-d64855dcb097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c15d22b-9daa-4213-8eb7-ba474e8f113a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d4aca43-52a5-4bfe-a799-83407ebbfea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3a490fc-b05a-45b4-8360-77819d7b933b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "996d367b-d6c9-435a-bf98-bf4bc6113348",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b61ac839-7275-44d7-a313-45020b0cc34c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d3032e8-8d62-4529-80e9-54b3041afaac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3244ddbb-cf2a-4615-8d7c-55b66894226a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5076bc7d-4411-4a09-b1c0-73e7ab4ebafd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e3f250-3679-45ef-b948-0812c0e79cbf",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00808681-5c5d-4903-be63-2fc847896ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72bc52d6-54c3-4255-ba64-424d5bd458ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5d11dfb-a0ce-4734-ab5c-818cc769e5be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5351f4f-c207-4ea1-8549-fbb7fcf4014a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f16a2738-4849-4505-b5c8-f46f3e5ff19b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74abeded-8091-4e48-bf6c-aaaf143222c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44406667-8cfa-45a5-8f9d-0563159097d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eda21c5a-9f46-4392-b531-ca34c50ef64a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "628dfbed-d4f2-4797-9879-8d2a3af02b2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f22ea1-931e-4ed4-ac3b-128e61870397",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f74e819-2590-4be9-9e2d-5b7c08372112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63e00b2f-4c8e-4449-82a8-c05b7d082128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95918759-ea0c-430e-9a19-a4c7da43ec1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8045a417-54b6-4b8d-948c-f5b17edf49f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a02cf17f-786d-4242-9b2a-0f0100e9b728",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8610839f-2d26-49c7-867c-464d10c563af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5e3b029-862a-4c40-ab02-8df380f599a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b018043-4871-42c5-a216-cc5e522a74a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9332dd4f-525a-4937-aebd-ca1aeaaccb96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b89fa450-8c4e-4549-9580-434f3b387595",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e1f4b73-90de-4ca5-9925-04d005c8e556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d67a2f88-ea0c-4736-bac9-1d6b363932b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b49691-88fd-41e0-bb74-99ec50086193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "499e7fe8-7cd1-4959-87d5-67d8e23792c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f00283f-8b3e-4e96-b836-c1ccb644f131",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c29b72e-8203-4eeb-a954-04822bcbeee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99c50b24-50d4-459e-91a3-de392e282393"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b6d6bc-8d28-49ae-93f3-cca48c129895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "10b82f13-7de5-460c-8529-fff7d8c0ac54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aaa579a-a43e-4794-915c-9a81837101ae",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aef6d962-b964-4e9b-964a-44dba818e9ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1ee7b2e-0da3-42d5-86c2-3cab34c1d304"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d1ecfe0-cf29-4d3c-ab6a-26bfd62b10bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bbccab6a-3bbf-406a-b954-0c9b2b26ecdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "012e58b9-c52d-4a0a-8a44-e96d6d8869e5",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b2f5973-dd81-4dbb-8062-37c334213ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76d661f1-9022-47c0-93a7-b5b1f2d8cae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee4e9b5-fe5b-46a4-930f-4460048b43fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2df7ffa-80b0-4fa6-b7f4-c679eb7c59df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60a3d45b-a39d-4548-a7c9-bb87f846f156",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baea6e75-8f23-41e0-b6e8-e5b27b611c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5804d20b-5ec4-4a12-9a3b-9c8081ccad3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef9443f-08c5-4988-b640-30aae656dbe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f11b7e4f-51f5-405a-9499-632730ca723c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "788e3aab-1085-49f8-8d8c-611b2e0b26ed",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19085f05-988d-4544-a9c6-9097287b3b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b03a45c-acec-4d70-83e0-c73e3cfbb4ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de7e3a9-9996-48b9-affe-edb0ee374ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60a98bab-2849-412d-8fee-f8ccb2308b37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ddd9f87-8d07-4436-943a-77b62c0e27d4",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b11a29-d000-4f00-b970-6b798c3174b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd92ab62-85e9-43c0-8fc5-b2c717fd5a2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2861a156-0e3b-460e-83d0-40d253f17fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba32483d-fc48-4890-8af5-f93ba92bd071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8c2da08-bdef-4bd7-a206-9cdfbb2d970b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bbf8175-a104-4137-aef3-14cf913414dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "190b1f96-fe54-40bc-a9d8-03375a222913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b078fb7-a864-471c-a2dd-4fb38d5605b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2156be01-70bd-4694-885e-d940e6d8b7ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ec2470-ad7b-4d82-8cec-03bb92340605",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d61fc5-f0fc-4fbc-8b3b-0bfa15c4ce6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8a51d76-93ad-43c6-b647-81212fa758b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb9220f-d867-42fb-aa42-fcfe4c5cae8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff223117-216b-4da3-9772-98b2dce0eebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "389eb403-bab7-4136-9eb4-0bf29d979109",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12537492-4fd9-4621-8759-73250d0fe4f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d5d0465-00e7-4504-9046-e72f114754c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3917e4f5-75ab-45cd-940b-ceb857db8e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1256430-23b0-4886-92f4-afb44d8c84bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e4387e6-7536-4f35-865c-ff4069023657",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e55a4891-a8e1-4f99-9d69-8f5a67d4bfb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf1d92e3-7d1d-49d8-bab8-9b3bd9458a95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "786d18ea-a322-4e74-b0dc-bae2b1960063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5678323d-4f7b-4b1e-87e2-e98de758b801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b09ad0bd-42f7-412a-87f5-11c48c8e252f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab78ff4a-e76a-4630-82a9-e4e3d1d5349e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd420031-bed3-48ee-8807-44bb558da272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68bdca0a-5e68-42bc-a7ef-61d433747c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ccc99d62-584d-4590-b51e-6c8719f5228e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d17cbda-74f0-4d6f-87e3-3bd025869b7a",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b593831-f022-4d67-aad2-b3eef3d6cc79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "675c64a6-5c65-4642-a0e1-14a2ce6f7a6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "031e292b-5438-45eb-bb08-90c7da4bfb1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "88b5d2bb-1184-489b-b09b-82b470ad9515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e962179-a1cd-447e-a1c9-f9b9d8e68654",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf7e6f4-43aa-4d23-b7b8-5e9f13bc71c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e97174bd-cc7d-44a4-85b8-7824c54ad24a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6677f2d2-46a3-45f6-bfe0-4453924a4ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3298bc15-7e10-4bfd-ad16-8864b170095f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eea6a029-fba6-42fd-bd8a-562e7264b9e0",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbe59a12-79ae-480a-a7c1-4478bd42149f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5595238-9dc3-4775-8ae3-a1a19403032c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f29c6fbb-a264-4297-9b2e-094a71518b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "654c0968-1b69-43fa-ac44-ee5e23184941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b8c1de5-cbdb-4842-bb96-1a9196268585",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "146f62ac-6611-482e-afb1-c293ac8414bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa402f57-ddd1-4df7-bdde-0bda44546c26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ecd103-0be7-408a-90fa-59cf659b2e87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3102f768-9d96-4ca1-b8e2-f82318e2c17e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a866b75-ca1e-475c-aebb-fe2ecef46025",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa4d7bbc-8255-410e-9e1d-69be9ea49ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7ef81b7-b0fe-4f52-ac64-1c9f1a0e4c3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a415393-4c7c-4e84-9988-5bc461e7f098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "697d4483-9a2c-4e0d-8fa6-0e67f40f3a9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfce1eb7-5530-4f2b-95b6-f44ed9ea4a39",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8fda56d-3fc6-4c5e-87d1-f69d29887b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbb7b961-d734-46d6-9371-46176ea9e809"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f5b03f-9471-4f80-91a0-36e98125410b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dac1c691-b1b8-4ba8-80e3-c26c2a64f5e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "072be22c-ae48-48b3-bcd6-443da20e027a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7cb792f-4a3a-4ba6-b0bc-afda66be405c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "160dcb34-cd7a-4925-8588-ebe85d866bc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96fb317b-db5d-47a4-bbc4-68859dd95ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "b121b1c3-8da8-42b5-985e-98a348d9e602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30907374-ddc4-454d-b093-61ddea845f69",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a7c8062-6b15-4882-ad1d-c80d12dc9bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14c64c59-bdfe-467d-b77a-3d4cf560b763"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43f0f63d-9298-4981-998e-9a00e051deb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "607b0fb7-9ebe-4274-9c19-60f33004322c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55efe55f-5240-4e18-8065-e516b8743b7e",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "553030e6-3dd4-493a-92bf-62390ab33329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1e74b3f-f451-4aa8-82b9-030cde4eeb5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1205441-4440-4550-b4ae-0acab54765c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a112c343-463b-44aa-b2db-1707d6b66e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f30a78-a7d1-4323-acd6-882f70abbfb4",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a91386-b7b5-449a-a268-c6883d09b3fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "890da9f5-9775-4935-b517-053fad3fe639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f5e27f2-0c67-48cd-b15f-283f146165c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "047a5836-ab07-479b-ae9a-c1bcb44a1c89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcfc4deb-5574-4ef2-aab3-da144b8ffc1d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a36748c-ba9c-461f-adc5-e06ff7eb4296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c3535c1-fc52-42c2-9463-c1133631bd16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a6c831c-166a-443b-b4b2-043d003335da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "963b345f-82c6-45ba-87de-591cf690c68d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a7b9009-d819-4a41-bce7-8e0a21fed6a1",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fdc0f9e-46ba-4a73-9523-f8ebe179d166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aba2aae-7871-45b7-acd5-64c47af97906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daee5fc6-9a89-41df-8c27-dc95328a0dd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "1ff6bf4b-6149-4454-b6f9-edc048fe2934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb10c1a9-4eb1-4007-8319-a54edadda96c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a85f74b5-f965-401e-bc3e-293c27e607d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6753d284-e8af-4d32-8735-096830a854ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c85503-2687-407d-a20e-532b19825fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cd7cf176-4bd0-48c2-8887-a1dc947c8e77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba91bdc-f78f-454b-849b-9e90ea21457a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b37ca67-8f14-4e39-92e7-fbea19cecc5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24bb46a2-72be-4dd1-8a12-9194e0ffd9ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2eade04-39f2-4bf2-a477-26d1f7c47267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b695308-664b-4c52-bd02-fc35b56a8a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5bb9873-f4ef-477d-8015-31a34bab1346",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b242073f-a761-4e1d-924b-a7a96d77f748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceaf1893-33ba-4fb2-8ab0-4d0786726dc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6db86f14-7fc0-4df6-9a26-482ee97820bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c075cf5e-1e43-4deb-a03b-7b5a22c54b6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d608792-ca9f-440d-9b49-43517b04b9df",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61bc8bd9-472c-4dd9-bd51-906f0da154ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1dc3a14-12e8-4325-bab1-52a99f7b424e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f2f3be-91c5-4b1c-b08e-40c1059ef327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0639fa86-ec75-42f6-9451-e2bf93da0552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80c9939b-e3ce-4af1-b428-0395b69e622b",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "719ede35-a169-472d-9403-914e639bffe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adf5ae48-79f0-445e-9510-5a87b52e0345"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a048efbd-1e6d-45db-b516-fff05252fa59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1afe6cfe-d5b0-446b-ba8d-38872b461464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eea49fda-95f6-4a5a-b5c4-4cdb709d8aa1",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00fe2622-b0dc-4325-a52b-055cc66e9a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "807e65ca-6d87-40ac-b7c1-9452130c061f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a573715-8770-48d2-84eb-54fd4fc0465a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e2d9f3b-9dac-4c84-8dc6-f4d833c762bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a8eff7d-50f9-419a-b290-3dd551a0bc13",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1430a019-5a99-4fae-8944-56bf1760e32e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b2fd367-f507-488d-b0e6-ff9faceaad51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d374b0be-106c-46a3-98db-ed0aacb2fa53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "7482adc0-25f2-4b1b-a6f2-f3cedb882032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e946239-d0fe-4cb8-8856-3350ef67711c",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6334ebf-8309-4c28-a487-8ad8bdc9c1db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab58cdaa-27be-4dde-a0cc-7ea838d31d0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e87a4ad9-6856-4345-8c0d-a831a7ca8222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "27940163-97a2-4fc7-b151-6ae1f6af0d67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "681ff8c3-c7dc-4e84-900f-73ddf4f70d31",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e21eb974-cad9-4f70-afce-87dfc38c9b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e6ebade-303f-42ab-9858-c3a555985d4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "560918c5-a567-4b06-8482-863295e342c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e78de34a-cd81-44d6-b1ba-226cd8f3618d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0ffd84c-cca2-4525-8199-fdabb36ed098",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bdad402-a007-4c75-9d3c-ab948a2633e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f14a358-4584-4c8a-baa0-8df0c2198cba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da2a82d7-e37f-46c0-bf08-8e7ebcafc558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "58a4a940-bc0d-40d7-bd6d-a05272ed2fa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "393e8e8b-8505-4c1b-8bc2-86afc43589da",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e1f7fc9-ca12-4dd2-9f3c-bf2736c92a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c50ec0b-934a-4fde-abd9-ab945fb75215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eccf7bba-5145-4540-8610-249736f4f473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "230d5f83-6833-464c-86e9-3c17f01f76a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef817520-7f31-4a20-a77f-6fa04a5c917a",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12d97cab-0980-456a-9527-fac9e486eb08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a44e377-5166-4c64-8432-5b93256e41ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbc16580-a78a-4df0-9662-d60d38d2223b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0df123c5-c39c-4707-81af-d926f98c0ca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e31d20b6-6741-4700-b2a5-ff405f6c3dc5",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d87731bf-600a-4144-afed-00b0ad6ead1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90b1d1a5-7a26-4ef7-b1d7-8f25d6326968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c184909-961e-4633-82b3-e648f0b0e581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3098438f-b3c3-41c2-a460-a2f3b0f37cd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6274a147-c21e-4014-a304-3aa50d17f071",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33004272-cd2c-4d98-a637-617cd2ea9cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c2f20a1-fc46-4cb5-8e25-abbde8a4b190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4427618-90ca-4e3c-b07c-faf4f83401c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb6bc8d2-cfd7-417c-83b2-313f7834f50f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "308c624c-0ad4-497a-a5ab-4f75371f94d5",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c965f99d-a9c1-4793-af37-e93d98ada3f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4f14579-3938-4993-b5d1-aaaf0c3f2cc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e33ca29-7de4-4f0c-b74e-7de15778e71c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f0fedab0-9b6a-4416-af9e-b72ab2308af1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b860a7-63b8-499d-a488-316c098636be",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda09a1c-ade5-49a4-94b8-e2f133ca6f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93609ba4-6fb0-457b-b9fd-8b4b0fb48979"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a0398e2-2749-4f6d-8334-873c74b870b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "f91c90c6-15a2-4406-98a3-3debd686e1dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "188db2d1-9527-42f0-81d3-929da70a2497",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beb4cfce-8fbc-4d1e-9ebd-a69e45421839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "167179b1-85b8-43c3-b81b-6cedc3d576ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "694b2b98-52e4-4d53-889e-1fbb63245a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "50c3df7e-6d9a-4e22-bf74-5c9886cb79ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aa9d165-7822-4da2-a284-35e137ad9b14",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c66dc7-4b85-40fa-89ac-3d12d30f244b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2317429f-7c6e-4697-957c-c7085a51f06a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5302368b-a01b-424a-b9bc-bdd6254833a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e7c4200-39ef-4abd-8b3e-f5835691ce6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4c0da51-11ed-4fb0-a137-063aa274512a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1d79219-a458-490c-bbb2-29d1ad674849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35a1527f-ddc3-4fb3-8989-d16204021336"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25c332aa-3a7c-49d7-ad58-b965b15779f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "512b829a-371e-497c-9173-e798f911f5b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72eb63da-b224-4c0d-85bd-f001c3b27b96",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "139e76f0-94c5-45fd-b728-2e2b9d97612c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42bd7e3a-876c-4085-80d8-64615f19ce2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d581c5b9-054a-4444-a75b-2b66bb6488bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a3576d8-b4a6-4606-a229-4fdd6ba09ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec5479f-53c9-4b92-8937-d137c001be76",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74040fa4-32dd-49bc-87d1-51b47bb89fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4afd5cf0-fc4e-460b-b5f8-f03d88d4d7f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aac482b7-3f63-44a3-a836-0956d72a790c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "df2c9648-32e3-4b32-bd19-979803886794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69c6a86d-f042-48f4-addd-a159917a070c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77676fd2-baa0-40fd-8da9-c882e837469b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0e86c82-edf0-4883-ad5c-efae555b6942"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "007e2507-5f3a-4374-9b43-f0cdcefd8da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6fd96a31-251b-4ff6-8356-8432d904c7e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "883b0f32-1df9-4772-876e-dbf3fc12dcb4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd0dd0b8-27b3-40b3-be85-54298f05e0e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30bb3f1d-2bab-4a08-a475-f367d2373c9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a869b732-2559-49fe-b362-3ff90fae852f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "af8f737b-72fa-49b6-ad98-eccaf44b91db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3d1f98a-4839-4523-8811-eab0a66c2458",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b59b0e8-c558-461b-8fb2-05ee6e98a194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a03b488-238e-4081-ae6e-b25f7a68a981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1bc7522-0a65-47f7-aeb8-6ca0d4b11663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b8614e7-c584-4855-a4f9-f3d61fc5d64e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86313d6e-eac3-4e7c-9358-849015f516db",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ec8db0-eaa9-4c38-8a28-0f78635123a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "480ac709-c133-4fe3-84f3-6a9bc137bc0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb15bc40-296d-447d-b6c9-18664a9eabd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb5e62dc-9d40-4073-8d25-6142d11331b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32cefea9-2bcc-48c5-af5a-8d42fc775945",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72abfd67-ba4c-4df8-9326-1c0b05017bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26f60e31-0496-4555-9b92-a97dfe9fa664"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dfaf9a5-d943-479d-ac05-583e6f165f7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b24ac65a-31ab-4c2b-bc9e-92e9c5c221c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2819717-ec3c-43b5-9ad9-abbf9f1d1b9d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "822ff503-9d19-461d-9c51-1b2460d71079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff5b4060-d858-4589-a1f3-e49fa3c97623"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eb6457a-9de2-4fe5-8e93-2932dfb15eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c19bacf-7a65-412b-ae20-291f578fbec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca20a8b-66ad-4e03-b63c-4b3d10d888fc",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05c87e5c-6855-450d-8a0c-eb02dac85368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4390902-7f0a-4aad-9e8e-8a434bee535c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab4f205c-11a4-4da1-b26f-b9348b060724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3b9b79b-6b84-414b-ad94-ed3340f1ed52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c02770af-1cb2-4440-ba91-a6cec462ad33",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a60fd67-8357-4010-8d0b-14dd45829aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "349a9986-341d-4bdb-817d-cdaa7e79f95f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da42ba54-4843-4d5c-88b1-3a4dadc15f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf32381a-78cf-490f-a5cf-e6383f8c5c93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b251eea-00a7-4bb5-b828-09f1a91307af",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b2e431f-1d8d-4cdf-a591-664e927c9580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50f21bb6-9cff-4cc5-8277-b4c364dc6518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d36cae-179e-48d1-88ec-e1443cd1005e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4bbbffe-7c54-41c0-8bd8-24658ecc6e8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bc81ec9-7495-492a-b938-533c8c565536",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65e58ac0-9ced-456f-bab0-c6696030beae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db0dafc6-01da-4589-81f3-8b9ac163d9ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3af2376-3935-4c84-8d2e-12d6ce56f584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "72573fdc-f899-4177-887d-b97b0f9e3420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d880d6-a18a-4742-977b-546b4267ea03",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b085301-fa5d-482b-b025-2bfc359d1b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f94a1708-b764-418d-ae77-734872641424"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e54e7e0b-bc49-429c-a19e-30b4122e787a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a0ecece2-8ee9-45b5-bed0-9a2239046251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45fda5b4-56a1-43ef-8806-ecfdd22b4a53",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "903b81bd-55b9-4ed1-9266-ba8cd5058f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd6f42c6-2632-4f93-b0e4-440e0e309b67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc2e966-6ac3-499c-91b5-b1ffd5e2a106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7620e10d-6f55-43f8-91ed-fa4143cdae29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e9da10f-1b4d-47f8-9212-f9bc5ca508fa",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b555631-5478-461e-b435-60f60d07d8c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47815055-6fbf-47cb-bed4-93b6455a9998"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "022c2499-42d3-4e11-adff-06dbcf393036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "94e832c7-5a78-4d32-8a11-2a044785fca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "997e1234-541f-4b94-a5dc-6b45c21fe5a4",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a4f5fa6-1654-4faf-8b8b-f3e8540cb0c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9a474f9-045b-48f7-90d7-23a11fee595f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95871c98-c955-427f-b298-b9d909f05424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "132b7f6c-2f9f-454a-8a49-f2fc275e57ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01dbf880-8b0d-4124-b405-e7ea0ebff13c",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18c0f7c9-fa3c-4cb2-b8ee-ca381815c947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac63ee35-12ef-4a81-8289-0c7acece9780"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e70455a-3d91-43db-983e-4307bda3d522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8cbd63e-9a5d-482c-b715-72e7e8f25742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bec9db74-9cf4-4def-9074-c708b6207d30",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6cb3e82-d2e1-45db-a6ca-a05a71df749a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdf3b9a9-eff7-458a-b127-85cae4069f96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71ed704e-3d71-4b76-9f39-cfb7992bcc51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2f611fe-9d6c-4b68-a538-c1c570b4d924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f4f1d22-1f89-4a71-90be-b3d6c7df7876",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b9f9e18-51c4-4083-bb27-6e073d09a71d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4040a714-7410-4fd6-ac7a-2776683c55e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ec3619-ec75-4974-b696-eb7204e4534a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a64e7257-6388-43ee-b3aa-cd309670dd23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5ae8540-b4cb-45e3-8e85-790182fc82e0",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a51c9195-51ba-4fda-bd76-7605998086e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89322554-a7a0-40c4-b2d7-84868bd95b09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f45b546-1939-454e-bec2-21c65a299d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cb11b2d9-3d9d-4238-9f5f-f707ca1ddb52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6bd7733-55d9-44c4-8656-d2995acbfd44",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b29077a8-12b5-4096-9b00-ef243a74a9ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4082ee9-4d1e-4a72-8e1a-6b2a422e2500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c30c5f94-a91e-410e-9458-ae115cb06405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fba08786-e6f0-436f-b5dc-27faa72d2def"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bc86b5b-7133-4fb0-8cad-684c5871186b",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a318377-5310-49d2-a881-1fefb57156f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7169089a-5c16-41a7-84e2-3d3eefb4647e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec77e299-9102-4a87-a45f-9dce3e8e367b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8aea7a5-2687-4d78-8afd-e6bdb6670b98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb7d6210-7a29-4bc2-a133-538d180f2db1",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66175833-4e40-4933-af8a-03e5450954c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "657181c0-ee3b-4c00-8334-7dc9df0b5523"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de3ac856-6a29-4344-a7ce-21ea2114b4d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c8bdf6a-255d-4a56-ac41-2f483ef922ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d86fb24-e9c7-41d0-b2ee-917b4644e54b",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a9d6487-b9cc-468b-9d9b-843da08e1568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f42993ce-f2e3-4f98-adea-18e70192b7b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b708613-b7cd-4f3c-a042-f6fd32d04e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb13ca57-c75f-43d7-9752-701798da69a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4912f5b-92b2-47ff-ae16-ec1728f3b46a",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1666de-8d98-4b8f-8d4a-d9fe98d665c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01a05bda-0b31-408b-9991-a1b66a3af5c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e79cfc8-908e-4bbe-858f-19229a4f995e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7a9d95e-e8ca-43d5-bc1b-c5e2217f4be3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d279cc7-4d9b-4f70-9456-1a433696e878",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee186f1d-67ea-43ae-90c7-d69e23151eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57cda41e-8ade-42c6-8972-63890eb6fc25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cce3059-3f6d-4603-9a44-d12497922828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "849cc776-c1f2-4318-a111-539f7ba35a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f16f42f6-030a-44f0-860f-e309a4d31b72",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc12a46-385b-4206-9e1c-3757f0b607e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d58c5a99-bc30-4fd1-8f51-54e50f399606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52ab0e0c-86b7-40fe-bb3c-94dd360f7856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c37923a-03f5-4b92-8ba1-b9d12ecdeead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f1611ed-a1a2-42c8-9b0c-a118324aeddd",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f269e6-f6e2-4b33-b71f-699efa5deb74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dddfef7c-e583-43ef-ab00-b7c697e00688"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a232415c-ab88-4561-815f-9802a50cc197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cd06919-c2a8-4184-b57d-aa8f3e2e0195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b6244cf-c700-4483-9fe8-975b69e40c2f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcd78b9b-5f4a-4149-961f-bafc0dd4ed86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49778a8f-c559-48e2-a25c-5ec999c66eaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f65aad-03e4-4505-ad0f-46081fabb124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "97edb9d1-a2ad-4fca-b52e-4b3b7d303492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619e1d0c-f2a8-4a81-a4ce-9d0b907b57ea",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd37d90e-94c3-4fc1-bf63-75f90126088f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32fcbc2b-5539-4fb5-9f72-3b6a38a1792e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c44a65c-b23d-4ec5-a6c4-be52b334e0f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f566784-07b5-4715-b6ea-3ddf6537087f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7e2c251-9c56-4d97-8370-06688d39c5dd",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aab3c98e-15ad-4413-bd74-6fb3647e76e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2032c7d8-197c-4dd3-986b-56389e40a9a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97881ac0-7aac-443e-bb3c-6bad91775ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3e6c3426-ed27-4b4a-9db3-1d0d0d8ec7e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc361813-6dd8-4bed-a046-6867cc8a1bae",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "551976f4-86aa-497e-9a43-febe043ae1fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a097b04-33f7-4dcc-a510-b4d27abc1285"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a059e2-611f-411f-9243-d3b2cb5a94c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "55ebf1af-21da-4363-aba3-6cff522af52f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b052b68-1b13-4c4a-858a-f3df39d41a67",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d7d76c4-1ab6-4aab-97b9-22904a93f159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0abc0ab4-d832-45eb-8dc4-1e4b2e3cf15d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c3e8567-c24a-4008-b24d-12f7a536b4d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ad60a71-a827-45c2-8061-f9915d445cdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa67d7a5-bc29-4dc2-bc0d-5f3f99ca58da",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "838d8299-a656-4460-acb6-ca289799fde8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffb0d02e-e5ad-49bd-af7d-ab699577c326"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2db8824-e988-44e8-8b26-17f0529e57bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "527df401-13ff-4da7-807f-5602f317c50e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "159afe4c-049c-4525-8c72-e262c6688f43",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3642b9b-2d35-4a1b-aef3-89b3f6df4f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ed5245e-9d9f-4818-a359-fbf359780346"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20dbe177-0d6e-468d-a151-5e3a2bddce1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "be4a1868-73ca-4969-baa2-d11d84dbc22d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee7c61c5-37dd-4eab-ae07-70fbacb16979",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf8df643-2cf5-4350-9485-b07164ed06b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0da53da-68ab-4910-b556-81b5bf3ecca9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02e03af7-3186-4d15-9583-c88ead189b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c70c5282-331c-4034-ae8c-344e59eaaab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c2ec59-3f2e-4241-99e4-1c49fe2a3f3e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "102c0c01-7b3c-48ed-af6c-db6142299e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8baeb62-311a-4564-8d29-d9f5e3ce25a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee1d9e95-8e42-48ad-a3e3-e15d8ecf60d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "739082e3-ff35-449d-b4d1-9a918d5b9d26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c4525a3-3e81-42c2-ad05-97cd381a62fc",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f794042-04bf-487d-9059-b332350ccf67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "993cb270-4d19-40a8-9a5f-c7f0ecc9dc6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "692a871d-ce01-451c-bad4-2d8835d3c0b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb1aa342-75fa-41bd-8aab-7600abc91fc1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2f3d14a6-12d7-48b5-9170-4891a5092171",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b144755a-d4d8-4469-9fb9-4dffef59834b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "900aea00-9e37-40be-acd5-ded740d77524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aa69181e-d956-4a87-99b9-4ac44513c69c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "828bd87e-2ab5-45f1-926b-ddbc80682c44",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "caa1a8ed-520b-4e1b-98cf-d1ba202f6691"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "849b847a-62bf-4240-bcee-0b5ba0017532",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d2f528e-f018-41d1-8543-9c17bfc2efaa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "27389dd9-e1db-41bb-ad55-f3c614a2dd20",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5921a1f3-d2e9-409e-98e5-fde481cd3713"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6ba1fd70-4866-4361-bc9c-5b2136ebbd21",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "84b57981-0b89-44c2-9b69-a92301df46fe"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f63b49c4-1893-4217-99de-7344f9683307",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e5c94bb0-731c-4d9a-bbb8-e3d6ccb526eb"
                }
              }
            ]
          },
          {
            "id": "72a0c64f-ee10-44a0-9b3e-ebd71de12c57",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b260973e-9f03-47a4-96f5-9fda5eaf86f2",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "6956780b-8627-4ff7-82fa-94214492fa7f",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d82b1c1c-96b6-4eeb-ab8c-2fea26c20ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "cc419ab4-b442-4b34-9418-7851fc973c89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb84ce6-4e66-4004-b37b-a7d384d72b64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eabc2c3-dd20-47f5-b3db-aaf072982b74"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ab3f072a-8252-4706-b2b8-627b6e48834a",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8628d48b-d460-43f7-a152-4b244ef238d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f0ecddff-e1a8-4f6d-b935-98dc249a3924"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "378a8403-cfeb-4056-b7c3-41d9cd2b0b93",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4e6d5335-568d-4689-a7b3-27102ca76e20"
                    }
                  }
                ]
              },
              {
                "id": "a073e670-8077-4dbc-98ec-0cf0559060b6",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6050acdf-4156-4146-a363-9130a07722a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0e3a2897-19a7-49fb-83f4-1af3afa71722"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5af04fa1-466c-4bbb-890f-ceb837173d28",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e032709c-bea6-40c4-a21c-fa3864ebbec8"
                    }
                  }
                ]
              },
              {
                "id": "7d6adc98-4dc4-4db6-9e7f-b1b6cb09e7b9",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "21f3fc9b-246c-4d94-bf49-3be97d0a3f7f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "34a07b6b-4579-464d-ab7d-f038ada1dd3e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df865787-4ab9-4e5d-b0bb-b2b9881bb1de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "636c8f1a-a755-445e-a48d-a4c708687c48"
                    }
                  }
                ]
              },
              {
                "id": "ef9a1cbf-c4b6-436d-9d52-8def42b4bdae",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "87cbfb92-429a-480e-8ca1-d6c9009d61ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "90955597-783e-42a6-987a-f29d8ade6a68"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "00dec8cb-2ba7-4d23-a0e2-19b2712e097b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "997c06eb-4837-4440-8292-35487be17502"
                    }
                  }
                ]
              },
              {
                "id": "25cce799-1df0-4f42-b886-11f4912e2786",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff229991-92ac-4c74-b44f-26f7a9b027c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "92c034f2-961c-4cc9-963f-026f6d62fdfd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "812748a4-eebd-461d-81e7-f704c7b3405b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "951fd221-ce45-4589-914a-92b5db2b8062"
                    }
                  }
                ]
              },
              {
                "id": "b8afd081-6c66-4a81-9421-d8976fcd31b0",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "687c2938-5197-44f6-a26a-da62a8e10b4a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "84c84407-96cf-4084-b201-119270eee2b0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a90bf6c-addf-463f-9e01-a2c2b2eb1305",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "81acdb21-02c1-49be-85be-0fc37f53d6f3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a796a522-9e03-4e2a-b87b-cf92b9f01412",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ce1e53e4-42f2-4417-9a46-0656e2f08463"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "17a7c51e-6aac-43ca-852a-4a3647706d61",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "288abdaa-572b-4dd6-9ae2-f097d5ea820e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2b940cc6-09cc-4922-a6ea-41de579b8963",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "dc8e3970-7098-457f-b250-880e08f01150"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1faba56c-8c1f-47c7-a326-a08aef6339b5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a3ad5d0a-7b6e-46b3-93e4-a67d02e5524c"
            }
          }
        ]
      },
      {
        "id": "5b7b075c-0321-4ce1-a0eb-23fbbe8981b7",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "2a46e561-df24-435f-8bcd-3cce43df07af",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6a5d775e-b765-49cc-8d52-001811f2ac9d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "042f44b7-900d-4f14-91e9-5ad92c6d4adb",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f97e676-a24c-462b-a61a-0f41db49e804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98aeacde-4d10-44da-8571-14210a257b59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a28e535f-bc71-4274-b779-119ec128279a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f114337a-9679-46b2-8011-62ec1fc0b185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d68a273d-57f9-4be9-ae05-6960d2b705ab",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "903eb416-d9b9-43a0-84f2-b0f1914a7f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f79eb19e-fb95-4577-83b5-2ccfcfcde5a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f7d381-39dd-4b32-98f2-1212330a90b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d7a1654-2948-4056-8c52-10068e14d319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24bc777f-4cc6-4b16-9411-7789175576f7",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2036c56-64a2-4b8a-b250-058e492cfa90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b4c3c61-9bea-4d9a-b367-f2afab25fc47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e364c06a-6f37-42e3-a367-66483e8f07aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "08eb3a75-05e6-4164-b087-bda7b6c94b4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41cb9d26-ad9d-4639-939c-8f195726301f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c65ab183-e4e7-4e00-bcad-f110ff3eaff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec0a80f9-b06e-4593-8c68-d0a17cbd249e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5093c870-f826-4ff6-bdac-04e19ad97e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e2c0f29-ecd5-4e67-b099-5a59a62091a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1556e6a-ef7a-4119-8303-d45b4beb7efa",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea3dc7c-9a1e-46d9-8646-e09936e1e63b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddf8c229-c0f0-40aa-9b93-7dd1fea0669f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bcaa13c-760f-4412-918b-cd3220f32eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a56c690-2307-4d58-a907-e72d690c6a9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dea272a-3acb-4a3f-b357-24d3f0264546",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb89fa5d-62c0-40d5-83ad-f6be620d3e7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "046c64a0-cc0b-46db-a186-42083eb284b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1965e62-cab7-48d4-ba28-dd8735814cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a83397fd-6eb3-49f9-87f9-2a4e4cfca4bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6654c2f1-0afc-4d60-b67a-7871fa0cceb7",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e647735-56b5-4171-8a64-ddfe66317c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e812838c-8605-4e1f-a831-94df22398691"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc33f8d9-6b1a-4eff-a867-0f47ef6f78cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "810e622e-16d3-4540-8008-bc521b71844e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00f6737d-64ac-471e-9beb-1ee9fc3fc12d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a7145a-d0a5-474d-bbbe-a7a435fa2835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdaa3474-7e2a-4357-bfae-b64c0d590356"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dccb4c2d-d755-4915-b94c-748b3b6ab19c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e65a1de-0c67-41ec-a199-f3fd13f66f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab617602-7380-4196-be06-db42ae143b7c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95074636-c370-4717-b8db-8afa6361c93f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "724b6be7-53e2-4dd2-abdd-b36b58a149d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db8bafb0-944e-46bd-b5f5-fecabcfeae7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a2caa79-78ea-4e81-acfe-ef06579b2ccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2407778e-772b-4a1b-a39c-f2eb450157c0",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "459c07bd-6b72-4287-8466-6a5852600be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e8f1627-a2db-457a-8a27-22867008aec3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6fc8425-6f63-4d96-a932-30d4a2651474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7496fb4b-b52e-4f2a-8789-8440c34a4cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf4d041-c841-44b7-8f5a-2792ebea0d43",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "021617c4-d9a0-4d50-808a-b7f0219b9864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c725f37-7682-436e-a977-614734de6152"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18dc1f27-b349-444d-ba25-bad525131588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1a13176d-a1fd-4887-b74d-2046047d22b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "591b2c0d-dc81-4cc3-ae7a-77b2fd9271c5",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e16837-ec2c-4356-8f44-00dd73ca3db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8f59dfd-d941-47cc-a8b2-314f6ffb132c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fa83ad3-ae13-447c-87a7-74b741c6629c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bc38a814-cab5-48e5-b9dd-0a40e9c8a3b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e36e4ee-c805-454e-96fe-44992af047d3",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e2f9f1a-391b-4bb5-b965-7812bfabc1f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db8edb69-8a64-4add-b26e-0722dc527f08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d22869a8-c06f-4297-9535-74647ef13fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "914a120b-824b-4138-8540-b9f7dbc64f44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dff9a216-f6c6-4268-9946-3d585492ea8d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e159863-1aa6-4a3a-8cc6-fe71a1d3c27d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfb9158e-128b-402e-bd11-64e1be1731c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "259ba37c-edaa-4b1f-8981-6289c00ad2fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c251e03-deda-4b27-ad34-6b3969848730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2253f470-45a2-4529-8b5b-50cb5ca2765a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a021bb-7dd6-4a69-9609-d2ac942798d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3994f9de-c4df-4a7d-b1f2-775ed102a2cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0a58b5e-ac80-491c-a7f6-94f677f97747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f1d47bc-e2e4-471d-b560-849c3feb9672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c75e934-499a-44f4-95bb-71da8c681945",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6a075b5-b1a8-4211-94c9-4a0408ddb266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b29cc7ea-f7b1-4ea1-af32-d5afbd88a4aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dc7b901-d9be-4641-934f-4678b615b83e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "147decb8-1312-4ec4-ba98-caf40638a17d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d2155f-3a3b-48c8-9be3-4bc7d4cf58a5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "941940fd-1ed1-4388-8dbf-3aa714203b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75ac4449-4888-4c0d-8e1e-a733a4b27869"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd2e78f-a026-4e53-b127-bc89edbb1fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "15569a29-10c8-49cf-bf6f-a45b60157afa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7018d485-d14a-475c-97f2-2d4eba277b12",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5efa8f62-a0e3-4f0a-8d1e-91161b2b7eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24c1f539-419b-469f-b0fe-9357d2e80532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b7599ba-3d16-430f-8071-1832a42e82d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8d8882e-ec6b-4f58-ae34-783e18b79055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b27c54e-a8d4-45bf-b8fc-b82bb3c0d2fa",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9febd10-0f38-4c7a-821c-81a2a5f8c876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbfcfa8d-b7ba-41f7-a3f1-839c4774a06a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b754494c-7ff4-424e-a811-a5abddbf2834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e58d00d9-dc71-40df-bcf9-9f03c895164b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bdbd61e-afb4-4857-afab-2126747feb98",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2574be9-300b-4131-b5ea-f24170b93075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8117c66-68fc-4fbb-be6b-ff2ab0afc11b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a954997d-4a27-4e24-bda0-5f55ff2fd879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0275202-974e-4a5f-bbba-a12a9b0642fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c21ec6f1-50ec-43f7-9d6a-72b211ddbdcd",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be9b03d-a19b-4918-bda0-20c488069054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d03f972-876c-4a11-a117-1e7ed9b5a467"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c18b5c1d-a47e-403f-a20f-10e739a3f8e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e33c1ec0-cc4e-43b0-bec6-20568937a7dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc7e8b9c-0014-48ab-a7f8-b0f8f06221b9",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba558062-8e91-4893-8db3-89a24f89c4b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2faa8dfb-59f7-4404-a3c3-13882058abe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d63f4ab-3535-4e44-bec0-efb80c7f8e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba9d535b-1679-4e67-b7df-7a6e0424104a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7747321a-44f1-4200-a75e-eb951aa30cc6",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea6d1cc-7c1f-44fa-a676-2f7451cabb26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b6150e0-e468-42bc-89f9-b72c7a1b0bcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4928deeb-3325-4b79-97d1-39cf1e4829ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "211445b0-83d7-4ac1-9085-274e639633bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da81acea-4eb0-445f-8415-6e6bf38da6e9",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1deb1069-f02f-4709-b767-10f1368347e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d27c7e72-f109-4918-a6d2-70a4ee851aee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c01fae-e2b1-4b8f-bf1a-829fdc356e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c86ecf1f-6d62-4d44-b593-7fbc43c13b31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af5cdd89-24e2-480e-bc84-bc18ff7afb22",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4c92ec3-e5dc-4f14-ad95-40a05362e20b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8181b022-0eef-4874-9b94-4b73204882e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9fc34f8-5cdc-4d4c-a3a5-79e91cb33b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f718a23-959f-403c-8172-ef8560115b25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19558c88-5a13-4d5a-9aeb-e7c95ea5568f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c05b4c5-406a-4e73-a008-671b881a18c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "303d82d2-0ba3-4655-a13d-7871bbebca9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a70ab059-a157-4544-a698-29375dce1ffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ba333ca-d092-4cc1-8e4e-2a40c7dffef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b806d627-90c4-4fcf-9b43-93e27d174927",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "916aff0a-48c5-4b4b-ac01-205c46d0a750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dc2f787-cfa3-45fd-93e1-1c1fe97992fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58a7331d-5307-4c33-9d38-856a7fe9b7f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57e7a4a5-0439-4df5-81ad-9064274f725e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c68363fe-2742-472a-aeba-6e809ae9bbdb",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "160f5634-55d9-4930-9db2-f37b35afe4bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dc574a4-a9ca-48fb-849d-c90707a825d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f0a130-52fa-426a-9820-97756bca5f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "afb9e996-9da4-4818-9708-7d94f3369af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f54beefc-c181-494d-9757-cc39b3686925",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "694e4a62-2867-4c8b-a5cc-32dfbe05862f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9d6eaeb-b7b7-44ce-8563-36c44d238d41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f844291-68f7-46cb-9e54-dba553a7d64b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad6a11e3-c918-4830-938f-e200bcf65d58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b620e76-b188-4c6f-b60f-539cd8b54f56",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afd2e21d-0445-4201-bac0-bc1c8ff5c2d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bedd810-ae1d-46da-80aa-42b4bcaedff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eec723d-b314-4bbf-8723-bbabc0a46ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "469a64fc-834f-4519-9ef4-45a43e897e1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36ca3f7e-5860-4248-b46b-41718b4d6bef",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f5b207e-e74e-444a-aa9f-3bcb0bd3854c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1462d32a-e580-42a4-a50a-93eb92f2fbc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d17b036e-a3cf-468a-a3b7-321be80b7217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64e74735-dcb6-480a-842f-9e92eb93143a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c989e437-d1e7-4224-b04f-cb941e47da3f",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a64e3a2d-bc0f-4533-8e90-fdb61768710a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "643725b0-6836-47d4-818e-0cd5a9e7eaf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "132c6bf2-e733-4835-b677-1f7b1174e669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c094c847-8037-4f5f-b783-e88111002b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6331c574-78f7-4396-a1ed-61c47bf706f9",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97de86c1-0e10-450e-824e-21b35177a206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4e9d5d3-2c2a-4e7d-b3fc-8d2c7bd8de10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6962814b-d584-438a-a720-fc7db9413974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a4fdb47-fc26-4f5d-be04-8b242bda5d54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b03ddf6b-d318-4aa4-bf60-4f310991c796",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58aa1aec-59c1-42a2-b07c-4bd1704472b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f4163b5-6048-4b35-8f1f-4a563edf5f51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "757cf693-d53c-4415-a2f2-9d533f369416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8771d527-25b6-4fb9-a797-a52fd90b67b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61eca6ef-1af1-4d2e-bdeb-b0e4e33644b9",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4272460-d4a9-4c6e-87a6-b182ca54640e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a512298d-3af7-42c6-b6e0-27665c4c19cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e24203e1-7201-41ab-9bf3-e4e5567da318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90ae7d61-918b-47e5-8f2c-a9d45e7115a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be610f0f-f615-471d-a87b-66049ba4cdbb",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4335367c-d404-4422-930e-709e83ef4fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46eef6c1-0ff1-4cd4-97a0-0d25e72a8765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be177bc-aa0d-47ed-ad09-b7e56df12f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "283c7bc7-6b9b-42f5-a8e7-66aa213753f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "916babf8-4944-4549-acc1-d90a3fdac8e8",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51076bba-13fb-4f04-906e-dc97d282e02b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b5a0f1b-5c21-45fe-8859-d416d479ce95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01eccec0-ab45-413f-9a03-918504b7dbf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a5b6c6b-5fd2-49ec-b5ef-981a52ed2d34"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "41127a12-3a9f-4d27-a60f-9659e1d5a928",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e8e96b52-0c03-41c9-a9b0-65e5cbfa2b40",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ae3921-20d8-4a40-b93d-4d3d6cb07de1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6fbcecdb-8c69-4c29-bf2e-b2a062b2ec71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b42b276-67b6-40f3-9027-9f54ac13e2c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c2bde458-17ab-41b3-972e-2399be245d3e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a189af41-67bc-4f6e-a800-c6edbc1a505a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cec20f86-e8af-46ca-b301-0d21c0d229c7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a04e2b46-3ecb-4fc3-ba8d-98be9169f6b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "821426ee-3ea0-4916-8a2b-b668c7279026"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9f5c5d87-68a1-4377-914f-1dd1b1702928",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "96cee699-6d8b-4382-91e9-1991e49d541e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0f862fb6-7384-4fcd-a156-b0582fbc4d72",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a07c4588-099f-4325-b096-e57fba0eef62"
            }
          }
        ]
      },
      {
        "id": "fda056d8-c53c-475a-aef1-498258d3b6f0",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "ae065e01-3454-49c3-a741-899445a6869a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fd7ab12a-beb0-4aa0-bbd4-890cdaca3d92",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0c16d556-8828-4ce3-9ce3-0a72793d97c7",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5357a7cc-a014-4e10-b7ac-9a138c6ab511",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b16febc-30fd-48a6-b0b2-bb1913c3b3d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bfa058a-6c50-450d-b789-4f599c2514b6",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc4efecb-aa03-4d05-8f52-9b4405ec3f53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9638ee84-0c20-49fd-a6a1-aa36a0ac57cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe3829e-4d9a-4699-a6f2-2a06015d9055",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be4047a1-3d8e-4dee-aa53-89fa6ea9fda8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c27c2b0f-e2b8-4b1d-8943-6883720de8ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4739009d-190d-451e-9ff0-19b1a708c972",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f13eb7a-e8b1-4b80-8ba6-8af931432aa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d98a727-590f-46d8-9938-38847c6b0114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4abe792-c693-44c0-9ab2-5bdc767c84c0",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43734ffb-c858-4ad1-9c7c-b9305675285a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f3db3f6-de2a-4ce2-98a9-4100731bf2e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6996930c-337c-4466-a0e8-0c473a578ae4",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d08f47-124c-414b-b51c-8808afbbc089",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2693a4cd-20fb-4289-95c5-5d5e010c75b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b691f364-ce0a-4c0e-8c4d-198f45cd5d14",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc2d5e5-378c-4f14-9ade-6ee2321d171e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "810db57b-0cae-4e71-8c15-5e25307fc801"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67d35f30-f21e-4292-bf25-587284358b5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "231777d9-7754-47bc-a5a1-2bc8f6fd6f71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "409f20cc-694c-463b-a6fe-8ba530401d73",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d39d644-f1b7-48c2-bbbe-3c2cdfe96713",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d45b8928-a5a6-476e-a142-ddce633a0470"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ffdd864-3a79-43be-9bc9-98e362c68147",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ce447f4-6542-4a57-8041-84907df6c689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c73c245-5261-4eac-9405-f5cbc447fb90",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a01bfd4f-be5c-41e8-a71e-e488c783af04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "276a9ade-cf3d-49fa-a0a9-161d7e9d34e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "198646eb-a888-4ccb-8427-d8c7c2c80357",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d85646a-882e-44b3-9b9c-83cba7583263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66d6e8bb-ad28-43a3-a8f8-32b6aeda364e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f35ad544-e993-46f1-b2af-02e2acfd5744",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a1ea32d-ee7e-41e3-8b18-f3384919c485"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c83deb61-7f87-4864-8e17-6e3249ff6adc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0739e978-5b10-4a49-b803-5e2fd3f8eb0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b74456e-9206-4583-9745-63b3006eb27f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f56aab93-dcec-43fd-ac5f-9099044cf2ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d1e5e8e-be4b-4fae-b512-c234c996e185"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e94e9d43-49a0-4c57-a225-d0f30ddee5e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22a6acc6-df7c-4a03-b8e4-3b745721175f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9556872-1fc0-4d1d-9d5f-95bef08bcd45",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7229fd8a-e113-48bb-8745-4d66cc22deb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04a495ae-eab2-42a7-a99b-48c495d88d2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c49cee3-2b93-4783-adfd-5cff693ea410",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8345a72-eb6a-41a7-8b5d-83e461a4801d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "800c9dc9-f91b-4e0f-8fc7-fceb82545a2d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7acc01fa-7d55-4eae-abff-4ed5a66b8228",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cbfffa2-e55d-4f72-8f40-6147f6262f7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89d43294-fd63-4a1b-96b8-8768434830ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df6782f5-3a15-419b-bbb0-82c67ecbdf35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d8f512f-4c0c-4df2-a014-aca6e922ed54",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6522de81-841a-464b-8017-15ff93ff0d20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0996bb00-0970-4c55-85c2-acb0793eb94c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3da82c85-193f-497c-a097-af28b7efde72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4358fdd2-7903-44e1-b555-68c650f1a99a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eb4d6e3-0e62-4504-bd17-142d275c135d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "177ded9a-c484-4621-9858-a439682c1a04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a5c31f2-4bab-4429-a174-1717a20bb153"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5389c46a-6e29-4f7f-9aea-405399322e88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af6c50c5-1f45-4481-89d6-4b6b529861fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dea260b0-86ba-407a-bdc4-c4ddde7f4e8b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36b0c0a8-479a-434f-a80e-b4f1f20ffb95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db1fe764-7e1b-4b68-ac1a-914a5bf92d5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cecef58e-81c3-4370-addb-91a841e666a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e68994f0-8a9c-4ebd-b091-61e8c2a4417a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b6b142-c8a3-4a5a-af92-ceae499fc07c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "740900c6-aab5-4082-8bc5-d5c9ec2b21b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac0c98d9-70b6-42b3-a17a-e3560cac772c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "783a3898-b1cf-46bc-bcf1-7c32fa9c244f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f396801-544d-4f71-be65-c6b4af48c161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b7eb8e5-0b7d-46b8-b4a3-43b551062428",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "800b34c4-22f9-4052-87a2-3a028609b601",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da46c17c-6c94-4058-ba38-73e58a073000"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acfc6dbc-a444-439a-9cd3-dc071520048f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "945cbbea-de5d-42be-91b6-a4f4fea904bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44edcf7d-9398-45d4-9631-b8facff67396",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e854ed9-06ca-4265-aa21-66afee41649b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9828dbb-1910-47f5-b44d-801a88d72570"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "702f90fd-b07e-4c07-89fa-64afaaf4111c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "595e306c-6198-4ac8-97fe-a12bfd5cccd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aacd4ddd-05ac-44c2-8c3c-8e4604dd5a54",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b58e2756-5602-4067-85c7-cfc372ddd7ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b0cf181-9b68-4b22-a2ed-a5cbb14106fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2a1277b-435b-4743-be1c-f66c1e72c30d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe9b44f2-23be-4cfc-a6af-f5dfee47fdbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "091b73e7-473d-4789-8834-03721119075b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a22fe33-9583-41e4-995a-c23f3fe02a83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2767cb77-1c57-423c-a56f-32f07da6a0df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e8ce399-f89e-478d-b77b-778bd98d9f77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7867bfbe-5ed2-4297-9c8b-6b145b24db48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "256ac716-c282-4e25-aa25-29ba6aeef50b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d82c2948-133f-4c94-97eb-86692f864671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "111ee41c-a432-4f00-bad6-75d9f79badaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "658f95c9-5e4c-4546-895d-47aa109f12fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84259a1d-cf5d-4619-a570-3dbc2340f0b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc545d49-a60d-4495-8e6b-c84f419b5aa9",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1f970c5-1317-4779-96e6-2d98a0827568",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48163ffb-e897-4e5b-b35b-1fdcc9d11ca2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1349c80-7740-4973-aa7f-2af7c0606e09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "302ad4ff-2d8c-47c6-8487-0030bee59cdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2818e67c-a1cb-4bde-b926-58889fbdce00",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40f40953-b649-4b81-8479-cd7aa1c4b910",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47224665-68b0-444c-8ff3-17d2943f685d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b0d4286-c2e8-4f77-bb43-4ac70464ca2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dea19387-88b8-4f5e-afd3-e3e9326cc9fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0aa34ca-f059-43e5-b216-ab889ec10071",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf3cb6ca-f12b-4f7e-9eec-3c8ee9544af2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b310f19-ece6-44b1-b30f-3937fcb5a556"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e75976ba-d62b-47fe-926a-d4bb51da9031",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01b6b184-e491-49d3-b046-a7d492b26981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a432272-7f9b-4d94-8d12-1afc7c03f40c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac3fb882-96fd-4a89-a8de-bbbeda29eae5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2dd13e9a-0d5a-475a-a532-d75d4e824f36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c8405af-e306-489a-a4ac-57af22536ab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2f058c4-7d9c-402a-9e01-59731a801766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f50cfe23-14b1-4a4b-af39-5c605b97387c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dbc9042-2d97-4cc7-b481-8a48d5b06772",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa0dfc9d-5df5-4899-8160-1ac93a28d6f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7308406-70f1-4342-a2f1-cc5835c35dd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f099f36-5968-41d6-be47-d12608814eaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "695ec7de-2ed6-447a-aefe-db5255a8feb8",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a90b3b28-7f44-4e85-a52c-8779bc572253",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f7fb793-22d9-4ddf-adff-79f6dc538d14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af359677-55f1-4359-bd7b-7cc9925408fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63ffb7ce-8415-44d3-924c-15298b40f3a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a32a5169-c9e0-46f5-97ba-4610129430c4",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e6cd8c6-256e-41f8-b7a6-83f40403629e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88fd3ffc-ee60-4e7e-a00e-becdf63b76b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca6673c-d18f-4a1f-8c02-2d3fc03f0ecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f57fab20-c856-4482-9495-79a7ee90d82f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae9689f-5c85-4747-8b7b-f59f95d13510",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37f1eb84-9d6d-4dde-b2e3-2b9ed507bd4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3c50bc2-14bb-47ba-9014-842dd85dbdd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ff5549-d052-4bae-8715-1f328abfd06a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e3cddc9-3c9d-4eb1-8187-79597da2d0c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b109a0f-ab40-4b56-8ab1-1b629077385a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e42b69ac-2395-4ecf-94ca-886dadec2d6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00163bad-a0d2-4129-a8fb-e131d141b932"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71836dc3-898f-448d-9121-0e523c6917ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da994205-7f44-48d4-b1b4-1338ece767ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "457482b0-7288-44d7-a3d6-1c68ae6b468d",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b6a044e-5821-4cf5-a918-5524e7e54778",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5da3d6b-69a3-4812-845f-2c4a48773579"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a4c51c8-4b18-4f70-b2c8-c861aa03ec7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efe56e73-9ace-43ed-8ddf-18e974c62677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63bc1773-7a39-46b4-8976-210cafd43b34",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b375afc0-8b34-4789-bc5e-ffeb0974bc8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a310068-e755-4949-9457-e8e620ecf96a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "035c01c3-b682-4bba-a76d-34985554df9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b257217-229f-4e43-826e-82d26471cada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8219ef02-3867-4ab4-9417-a8bac1407c55",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7b1b3d4-a1ef-449b-a60a-78ee956d4d4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59a40851-3cc3-4aa4-8811-c7f37770b582"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "741faa53-fa27-422c-b7d7-ab31fdcacbce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ed610f9-d544-4519-8841-bbea3e6e116b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19412c5e-cca0-493e-89fe-8bb647b8e00b",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceb28948-28f2-45d4-88c0-60131e8c0f60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64540966-b506-4435-b60c-9b94f70c3fb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6aef2f6-b5df-4e9f-bc23-c499f84cb570",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "059a63fd-bf53-44ba-9adf-c3120e9728e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdf99087-3561-4de7-a715-16238543b375",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "824676e1-3d90-4d45-86db-25878f52e95a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7c68657-4db8-4693-8b63-9f6cad0831aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd224005-1c0d-4c94-80e1-6cf7b82a6c1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b391ac17-378d-411a-8439-18ce37119790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f42c393-5b5b-445f-bc21-31e436df651e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2015df9d-b925-4f12-a506-926b550b015c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47058beb-5c36-41ce-8d7a-6578c59133c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37bf2c21-02ad-4e6b-956c-ff12e1cae1a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cd9b9e6-0d6c-4e5a-917d-1b902875d39c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea83224-51e7-45a6-a43f-f88cca0bf60c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8b316d6-23e5-4955-b9d1-1eddcc829eeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d78d701e-9672-4945-9a0c-1b3b28ea97d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65197cf5-9e23-4fd5-9cbb-bcab59bad72a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0a2dd25-ddbe-49ba-ad82-c21dea3c8554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2304b99b-3a3a-435c-8728-813656fbeb07",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09bff634-8066-49ca-8002-4b39680f26d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2de82907-ca51-45c8-a988-c978846ad2e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed33e50-4f8d-49b3-a3a3-042352b309ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c230e7c6-28ca-44fc-8352-af7f351f0d60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee67d499-2651-407b-a6ba-a005ab907e87",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5873b87b-887f-40aa-a9a4-6fb6d31db01e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e7f34f0-6b59-4f23-b0a2-63b7f2e72b2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2496cb96-7774-4ebb-852e-d89929f4cae1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d23b11b-73be-4ede-a5dc-2f7184aafa93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb474e23-afb8-45d5-9e25-ea214310ee2a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86eb980b-a7d1-40c1-aac4-889ad6eba89e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da17ed35-84c2-4f51-b34b-9f7f19286670"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b71a70d-580b-41e4-9c68-40a32d533823",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9cdce53-8e66-485c-8ef4-b0ce5bfebffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8232b825-2ec5-406d-a198-b017ee2abf0f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a452e3d-2fd3-45be-8f74-8b5800bef501",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d31d0c69-9392-4802-a69c-8b3fefd45f1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cafaab43-5857-4739-adde-70f3d4f51383",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fe053d3-de16-4734-8654-69a7c8f83e39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97052391-198c-46e9-bb56-792692fb20ca",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80550585-3d04-49ad-bf8d-ba2a09aaf9e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b8980a0-0338-4123-a77d-739bac74c0ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6541063b-1d8c-49b4-85de-11c370f02078",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08a6d542-2dc1-4bc9-8df6-98742da40dc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f89bd39-be1d-4736-846d-b13eacdf02c0",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "265d240d-0ea5-4683-8c1f-4c91507dce10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "666ef7b3-c107-4fff-8bfe-0b55e10f9beb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27c4e447-5556-4d17-876e-2d5529b7d5fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c84d9f2-170c-4fa7-ad54-f142e6d109fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d51e9c-a06f-4ca0-aa98-c8c41cf14fb4",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "184dc517-8f68-45fa-93b1-1003d7a75453",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97af8c63-df3c-4a41-9d3a-c67652c913ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5681f92e-49df-4715-b0be-e0c678be5c40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60df7fb4-4f94-4c4f-b1b4-6c56a239de9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff357f81-5d28-4b4b-844a-f33e126f632e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df706494-fa7b-4632-844a-01c8cb598b38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "624d2819-c948-43bd-a573-9809d81d30b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4fe3f99-625e-4f97-930c-5e551a35593f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45e735d6-1c06-43f4-ba09-56c69ecefdd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2671d68-b3ee-4dfa-86cf-fba29f2e4a33",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "270762af-92be-4129-803f-69a9a149c2d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "866396e1-d4ed-41c2-912e-b098f4cc2816"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da6b2096-0c08-43b7-a235-10dbbee42d5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "067926e7-26e8-4b54-b374-e11a4137917e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad0ce066-836d-4ebf-9001-91eb42254b8b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b938435-9fed-468d-bb4c-2c35c481f4fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aae3dccd-8bf3-4c30-b279-304bce1a7c6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db58805-8566-48bd-ac5c-704172016fa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04a36895-edf1-4ba0-8e6f-2b0b41f4a103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2119924b-a3ed-4bfc-b436-379b3a31eb6a",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e76f5933-c810-426b-8f22-8e144310a44b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3881da6-0a1e-415a-88fc-984cf6b12eee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca0cd422-c5f9-409a-8cf9-654f0bb0fa0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa617f5a-419f-481d-a380-9e61e6613ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39e54286-f025-4cc7-8267-358a006c7838",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "173b22d1-b249-484d-afa9-f36387218282",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c24a179e-cf00-40c8-a066-f7e55a8f194e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "943b6697-e1a3-4edc-a405-42a5e218d32b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f751072b-1046-433a-a227-2345d10f1006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33c985a-0578-45fa-9a9a-47bcd76f9449",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2346a90-484a-4e0f-8cbb-a16dbcadd953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90b54c7c-502f-4ded-9300-df1a35bc2106"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b0be40-b4b2-4959-b022-6d6e60ffe5d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f24609f5-f90e-4c81-a37d-67850f1341db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e55ae23-cc7e-451e-ac32-a69ee840488a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef4b0ad0-5ada-4f95-a36e-cfa44f72b8e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a56fde0b-b478-4943-91b0-0bd885976677"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b6d7aa-f6b2-41ee-8a54-15fd04e0603e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4f8ecf8-ebeb-4e03-858b-d2867a719ca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "197a9a60-7f7e-420d-973d-bf236fb6f48b",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de0d0bf9-35bd-4bca-81d8-4ff098659683",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d006cc82-f34d-4070-9cab-3bc4be2807fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e80bb01-d9db-4dd5-b75c-70d124e17078",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dd24dbe-acec-44d6-a83f-292a4a057a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52ea301d-a923-4a96-94d5-6222f1b4ff4c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d5d58eb-cd3a-4511-a4c4-71fc7a42b86b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88e541cb-9455-4c2e-a063-325363ad2391"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ccf5ae7-ab43-4283-96ae-186d742de528",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e52a252-7cc5-4ff2-918c-b4296d6080e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a401a7c-7c59-47b0-8b21-b40607776df4",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfe9f4ba-c445-4913-815f-24409f3c2d6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c544f4e-de2c-4098-8f81-f6404c32cb34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f88cc5b3-2bfc-4aca-9284-628e4188d1eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05892c36-8d79-4d8e-b22b-ae888fadf07d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ddd58db-d159-44c4-a1bf-2583b73db43f",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1c77d84-d910-4827-88fc-a09112529c39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76f62d57-390f-4d27-9e3c-14e500eeaec2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e0d3fdd-5c60-444c-9927-57d88b99afa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcf34c31-5208-4ae5-a8ee-4188ecfd7335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e41d4d-4753-4ec8-9acc-91c68fadbd2c",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e477d74d-c974-4889-8dad-d044b61f2802",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3543ef7-0ace-43c6-b4a5-bed4cab90298"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed9b20ef-d23c-4e57-b78b-065b7047c7a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f71e0920-1804-4e16-8745-a76e6bf497fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88c03b4f-267d-4d03-aa25-8c4880cd672a",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d559e60b-dd43-48ba-9a0f-271fd00b145c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69e62e4f-7a90-45e7-94f1-300089304136"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14332336-1fe8-4644-a0c9-4ed7b968e742",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e18c66a6-73ca-4cae-be4c-4990056f2f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3c3abb0-2b57-43db-b5d0-4dff14a81acf",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56dabf99-9d77-4436-b777-88b76f5c1a7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21c469f0-693d-41fb-9056-3f6ff7670101"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "738d44ff-d549-4f72-bd55-c94d1e05f680",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83ffb030-fb40-47ec-9af5-13dc081f73f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1227d127-7e52-4217-8f36-cdf388bd74e3",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a7cc53-08ce-40dc-a140-1ede6fb515e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56926ab2-994e-4295-8f10-238276934d9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "901332e7-d3d1-4518-9d66-088a06720926",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09916b25-fa31-4672-a237-0c9b4f0dce4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d56f395-52dd-403a-b821-58c422d06664",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8af5a35-163a-4cfa-b64b-649b5b70e61b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a9218d8-2960-41de-98eb-93b4f0dec69b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7255fc88-a065-4b0b-a620-e4e959e0f9ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72ed2768-f24d-4278-828d-6c1011271222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f06a004-408c-4d9f-80c6-446f30f0dd46",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb860ac-b1a3-4004-b074-6bd04f7bd5e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1a08b94-251b-4ff6-b209-0a33606a9919"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d7e5f9a-fe74-45c4-a779-98553ddb784b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8dea229-5edb-4008-a6d8-b42996953c71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "454dfbc2-18ce-4460-80ba-0d3160f93652",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b6edaaf-9c99-49b3-b8cd-3f8d074ddc07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a23c941a-fea7-4539-a23e-dc04fc4cb051"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d6b619-78ca-4d4e-8eb7-41234a0f7e8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0895ef4-d656-44b2-97dd-ba15def4cf1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c318f79c-fb84-4291-bbd6-d5563652cdf7",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcb2bd72-54eb-440b-b861-ad5608ea5706",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a0da4f8-857a-46e4-b3a2-457c771425e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f84c8cdd-0ffb-49a6-9e70-4916ca4f81a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26a6b65f-5cfb-4e7f-937a-0bca9122f877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0fda5e0-4f86-4207-bdb3-792f1675dacc",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "783d78ed-3564-4498-84b2-612cc145b9a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79373662-d883-43e7-9919-6b47659aee66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e7e2428-22db-4ba8-8976-3192fb2b6f0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eac4d71f-667f-49cb-a1a9-91ccd67e1694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "261c874b-ee72-4ffa-8d1f-8c92fc093791",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "735f444a-7003-4ac7-8997-15328466b0b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9b825af-64f6-4e85-a039-da5008b1d4d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da40c943-61fc-46d5-a5c9-196ed02aad94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "112eac11-6f91-4a0c-ad70-d399e94271cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "858f5d5d-ee38-43ea-ad00-aa09e31e2f01",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60550a5b-f5f6-4fea-bb31-0d0bf38f9f55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8029df69-68f2-4c0e-b93e-feb5f39097e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02b3316b-d82b-4dfb-addf-55f430fb72c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b72946b-ba59-424d-9f29-a8cfe2feee0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e72e6ccf-5b13-44ed-9671-1bd4684f99c2",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0027a70-5846-4af4-beba-9b73152982b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a027d5f-1a65-44d9-b8ba-b1d7502fd8a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "802e665b-7881-42b8-963c-65929e411b91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86db68d2-f853-40c8-8783-a21f9783d061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3f81a09-b1ea-4604-80bf-6e3791aa0431",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5faff3b-f407-41bd-9066-1348894d455e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd35518e-301e-4bb9-b8f5-6e2194e2ffae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12bc2c94-a6f3-45f2-9f49-64f073ef981d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4fdcd0c-1f7a-49c7-816e-f7ef51b02b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c7f68e0-5ce1-4a78-98fa-786caa3ab374",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d0a0a0-a872-4e13-9adc-7f76645a3512",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48190988-a7de-488e-bbbb-fcb6170351ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6baeb881-b730-458e-b07d-a0f2fff6f453",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cde2fc04-1eff-47f2-b150-1a03da924a05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8364c69b-994d-4293-98a0-96260105c501",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fc61b2f-b5c4-4bd7-9c02-cb6c2751bcf0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7609fc2-6b16-4385-ad46-35c9f3917ad6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7882029e-6305-42c8-84b0-8ed29945b1a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01d95989-3d6c-40e8-9677-73507d45e4f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6058d47-7ac4-46f1-a82f-080d24d41511",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d05c057-728a-4172-a4a8-6c5da446bd05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28096f2d-6d18-4c51-b200-6b238b4ae24d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7759e14-42ac-4d66-a3ae-b4ac9f59b2bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee9183c7-b009-4909-98f7-814d9af5a59d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5c8af8f-3742-4286-96c2-598bcf7c9ded",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ec12d0-99ec-487b-8e66-38ed83feed2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44a52ccd-69ab-4593-a5e6-89164ac0f459"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b8dd209-27b8-4f3a-8d54-6617cef34d64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a32b1741-fd08-4f03-895d-4bb1d2d1fc41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9aa70e2-8f23-4a67-81fd-7baee9f31cfd",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a71c68-aa49-4884-a5c1-69dda8ab7240",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ae3568a-9d81-4459-829d-bb833050a087"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ac2571-bb09-4ac4-be92-59dac39b2d78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba9b7a6f-6703-4f27-8a91-935c750c05da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f69b6d9-81c0-468d-bc06-cfcd5fd5feb6",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a241e835-d7be-446e-a2fa-fa8fe385d710",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4264668d-cae2-4729-9ef4-9f7979d972e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7245922f-7dc1-4fa6-b449-211ca3c90ef2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80705ef9-f00a-4d6e-9dd7-8dbe8e9efc88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d5c6656-a011-48e2-a54c-42d281ed7c9c",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f9ae662-8a4e-4280-9a77-5a29b4ca9e72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba19144a-31dd-45c3-b66a-919397e38368"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c509ffd6-cde4-4028-9ad7-da2f7d4f91e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ca7d582-b4e7-49e6-a6c6-c1cca8493c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da450883-700a-48fe-a243-9e1578032a24",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4460673-7b04-425a-841e-268c61d037c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7dbf1fe7-8749-46af-bafb-9803b5095d0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06daeb30-dec3-4fd8-8457-89470d1d3913",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efb0e34f-a54b-47d8-89fc-a51b3d57d4d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25fd2451-e599-467d-b775-ec355b2b8267",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71625416-971a-4474-b3b1-3785cca13917",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b88cc7c-452d-4b9d-8ea0-5e83bd9a9bdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27098d49-f32c-49dd-91e2-a4f5eae91722",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bd914c8-198a-4585-8efb-83f6360fab9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd4da72c-de7d-4dc2-862c-dea69184de15",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de6ec447-b794-4226-b0b8-5f1da21affa8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32a96dde-ca34-4a00-8bfb-ab9736cc2f96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3eb7c8f-cd74-4db5-8d5a-ac16cac912c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6be09e8-1429-49d7-b1b7-218c1bdfeaa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da0cca34-cdd1-4f18-a9dc-66aa7895e94c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d178f9ec-11f2-45c9-b95d-b64791548c92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f3ee5c4-bf87-4a8d-a9b7-814bf12bba99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f607fac-0fbb-4016-a047-56abc32ec5a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "241f81c2-e35e-4fb0-81c4-441a5b1267ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffbe9e07-eb98-42d3-ab41-a96eaf6a1e29",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce43bbd2-c40d-417e-8125-fb1a65e63562",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cab828f-aac7-4a79-8f63-4081825db8ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6454274e-7b02-43a0-a922-5c629cdc0fc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f03f0cd-7ea8-4ae9-94a7-a80c62971b45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1879fe06-2bbd-4347-825e-0cc04ea3fb1e",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4890cf8d-8e02-4a63-8521-f8493512ee54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a7da777-0e8d-41ed-b7dd-a13d9dc0984e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac683c9-52d1-4a5e-8ab2-a6f9c1eba495",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a890cf21-0608-43c4-a6ae-8f082477289f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e9ead5-a0a3-4d64-8bdb-aa09c72b4d9c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab08619-9dc1-432e-8eb5-31a21b50487d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ff3182a-f94f-4da0-bfea-69a11dcddcf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e8aa679-033b-46c7-a6c2-a007395bf267",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fca22bc-be55-4e47-9638-a4731bfc685b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7200c659-51a9-40eb-bd76-4d96bf897411",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d7beb72-d41c-41e8-a200-e850ea30afb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "751c9547-a5f9-4c07-a30f-a4df96c1eec4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e704173b-8df9-4d21-bd6d-c084f11f150a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35f88a24-2c03-46b2-8a84-6ac157c7d84a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "293c3539-640e-4fa5-bae6-1a9d2cdc7ffa",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8a9fd72-34da-419c-be38-c25644a31fb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bad0deb3-3f87-4278-a751-9a9b21341505"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08d3519c-9f1f-4eac-b731-84b67cfeba8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edd4548e-eb68-4fa6-9272-6dea675289aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2734f5f4-9745-426d-917d-b6e162a0e850",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "451e1c8d-9d68-4b51-9de6-618fb7de16b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58377502-c9f0-4180-b211-adf4e834784d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19445595-7b54-4ef6-87d1-d3e8a7f9557e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24f86568-e55c-4262-867f-476c5903f791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14bead2f-ce43-4594-a00f-295700e6f7f9",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61bc76d2-73e7-40cd-a072-10ef8220beb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af701cee-526d-4b93-904a-b835deea682c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5334afd6-80d9-4652-af9d-1e755c1d3e30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "322ddced-4329-4477-b28d-75022738f909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef38214e-3fbd-410e-bae6-bd11948ae040",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "030eb06b-7f26-4476-890a-c3b78301766a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11ea8895-89f7-4530-9864-820c97b57fe4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15117183-4ed2-4e66-b407-8f7b17910104",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7a3450c-4346-4bf5-9b7e-9088642b6d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4089e13-67ad-4559-a6a2-cbbc1c916182",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc875e8-0bdc-4b9f-888e-30c839505ca1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0f67be8-775e-4e28-b3aa-0563c393fd3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b605b7-895b-468b-b424-a6ed6b990aa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7d422e9-ddfa-4894-9358-57ecf2c57bd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dcf9f45-2fd2-41e3-b9f0-5c39a7aa9891",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b20172ef-fc33-4267-bdf5-0d725890a052",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e3dc703-e374-4284-8fa5-c6d650143eee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30ab114b-db7a-46cf-99bd-7d3b25f22741",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab616ba7-6450-4c87-8a0a-41cfdaf092c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a764a76-d45a-4351-974b-d4f7215acaa6",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5912aa4c-a38d-45d6-9b16-35199a1e3e1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "736f651d-51d6-436c-b0ca-067a4725a9cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "234031f6-d2f9-44ae-a7b1-9bd40e43e527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28d6f5b6-06d5-4445-885e-202412ff6d73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e6fc3b9-8c18-4437-a8cd-e9d37afb82a8",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bc98453-15d6-4d12-901c-179eb47bf956",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee98d3b3-26e3-4362-9e05-82d05d2e3720"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d82d21d1-bad1-4799-90c1-d6fe00c15958",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "166830dc-b735-4d87-8d99-09688fe42381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0823bba-2ba9-425b-95fd-0dc341dfffa4",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e80e0d4-ccb4-408c-b191-706499ef8f3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45f4d799-6ef3-450c-b0f0-0ca6fff91372"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba884e5-0bd5-4eca-b954-5e59a48ea83a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42b2419c-26f9-402e-a5c5-c0c1be7ad873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc784d1-1585-4982-95af-28dfa4e91d77",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eae1347c-2128-470e-a3bd-7289623783ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41ed6d0d-1f6f-41fb-b6b5-1abde388dcfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc64642-b9a7-486b-a565-57595c4470c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b74f31d1-681c-4f17-93a8-95aa52423176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cdef00e-f937-4444-a753-4fa2109eccbc",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fcd9546-5638-4119-b59e-f9d9f47de674",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa903f67-a356-470f-8339-f50909ba18ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "054386f4-1baa-45e6-a8e4-ad44085d561a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a88ce8f5-a4bd-4d1a-821d-9a817628d9a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "966ba0af-3426-49a5-bfe3-47c03a4cc242",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ef952a9-792a-4203-a412-47a4a539d0b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99fc9fd1-4d14-4f4e-b74d-ccb0f0d15c88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4475ec93-3354-4067-b926-6a541dec5ef5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d20b770-b5f5-41b0-8b77-285634bcfff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20eada35-aec4-4021-bb40-2296d1015108",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c4b9d76-eb67-46cf-bd2f-c67715069d35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d5bdac0-c498-419b-b9d2-d86e2858725c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3686fe97-a0bf-47bd-b35c-7a5c305fae0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "892095e9-3806-4e74-958f-daa4b208775f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "08818b94-0763-4ca8-af76-fdaf3ab632b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "119b2af1-e2ed-40d4-a737-ecd64e7cbdd4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "034e7cec-2855-452c-aa58-c03aee89f37f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6a24f834-3756-4554-ab2c-d630ed750750"
                    }
                  }
                ]
              },
              {
                "id": "2d0e6d1a-acc9-4df3-bbd1-50f208b1d4d7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "25dabc68-aa3c-4e13-ae91-04f99f864834",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbb8b3c7-7f09-40f6-acde-f1b75c9e8558",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "bd524111-a2be-483c-af63-395bf21b700d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1bb820b-def9-4792-ace3-2a46c8096919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c069b1cd-b756-4e82-9255-05f29092a0ab"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "51f0e492-1ed4-4d95-b96f-a41c5ffd328d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "595e8a99-491a-456f-9815-9c3e4da2a7fb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a4b5e33-00bf-4a1e-80d6-2b7f5c69da75",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "380e813f-21cf-4e7d-a07b-4105dfbd501c"
                    }
                  }
                ]
              },
              {
                "id": "b834c15f-ecd5-4069-8c68-0e6fae0c0d54",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "0f1c8d45-e5ca-4a60-a4c4-140ab4c5f6ce",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4d0b34c-3c5f-4773-89cc-5ce5a1ef2e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "65c7b209-4afc-4559-9ded-26b82eaaf6f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe5c6e28-66a0-410c-ab77-aec7daca27c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f81863ec-c6fe-4238-a8cb-2bc172fda603"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3e438b05-e4e5-42fc-b28a-b70f6e5148db",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3aba8983-887e-4b9e-8e58-80f80d8a9027",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "68bf6d3c-d4af-4078-bbe9-6bfa0112f9b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "03327b52-2b37-4674-9af9-c69d4f2505a8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7958ca1b-9eca-4304-a52d-1ab4d11c6244",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "623f2c5f-1492-4a64-b332-046d6b629e4e"
                    }
                  }
                ]
              },
              {
                "id": "3c7cb30b-b689-485d-8d6d-4a7a16da593d",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "44e4c740-1ce7-46a5-a2c6-e8275ad900d0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a462220f-f6d8-4cc9-a094-2f81b0cc9f4e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "12169497-abfa-43d0-b46a-8a1463bdef9a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "68bce786-5def-433c-b266-c796efda15a1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "19c17571-d98a-488e-829e-0438e8ee6b4f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "98c1c2e6-a5f0-4bb3-bf67-ac78dda990e0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4f7b9b96-9eb5-4356-8141-a3fbd670235f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d8ffcc87-e74c-43d5-be82-e25d1b6f95e1"
            }
          }
        ]
      },
      {
        "id": "b3907c22-200f-42c9-ac54-f0e26f457c28",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "d5f2f1b0-e260-4aca-9e5f-4ebc1e48797a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c88b141d-d2af-4c13-a159-be0750992198",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "42694fe8-7c45-497b-8d96-cd2f6bdab2c1",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e8d6821-23f5-43f9-8322-55cc8e92eb0e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "379dc08c-74c2-40d5-b9e1-3701b07b158a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d14ad7b9-0c89-4685-b9ec-6e5c1dff8ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d196f35e-238c-44b4-9b1e-f151705857b5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "579a1b1e-9fc1-4463-b7b0-795de8b2dc06",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db8159ca-5a70-4d62-9ad8-23a64d34836e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e2cdaec0-39b4-48ee-8ce4-f65a08f395ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "153e222a-ee46-4032-b923-d728bf839010"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "af99cc55-6f68-4e63-8fed-610d0bbf79cd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3de9301d-3f74-402d-ad24-18ef2c3712a4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cb5f8acf-882a-4111-a3aa-281a33439415",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0e45595e-3061-4980-8ea9-25212a998187"
            }
          }
        ]
      },
      {
        "id": "66323a00-48ef-4ac1-9d0b-301e3d2ca2ba",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ae6aadd6-1eca-4aae-b6d5-2a758f3cbc5e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "df22523d-e562-4ea1-8f36-31890edc924b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b705a077-6e3c-4ee1-af51-c19bbd82ee21",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d66e8b54-6e78-493f-8223-6be5e2d8fcdb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d7ee528-04e2-4592-9e0f-58a0cea5da15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8656a14-0f76-418b-992a-e3e0c1804a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bb6d9cf9-89d9-485f-bc0f-dba74590f11c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f6d66acf-ee27-49de-b830-c46bc30513cd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5a50aac-6600-4aad-aaee-7c5c2238aa16"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "69d57e2b-4e16-4573-8c03-feaa7f1fdf03",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b3961ab1-17f4-431a-b786-bb7f944e11af"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "49e7e2d3-dc01-42ac-af71-0c7177098ee4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "180b3b5c-9278-4f51-b367-ec1a7c8b9cc5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "18a65a6d-1d8f-4cf6-a8bd-90557f931553",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7f2db7cb-896b-43f1-a796-6d76fa92b932"
            }
          }
        ]
      },
      {
        "id": "1f38518a-4f58-4324-8204-1b448a4aa5f1",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "097de04a-c0ae-4a23-8379-8ae747a22382",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dd307a29-52c9-49ef-b226-8161a1104db6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "601fcdb4-3149-402d-b9dc-da11ce6da10a",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e860258-e9af-406d-8cb8-c63e1a7ccd7e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef0e80bc-0479-444a-bd80-ff5d6d5bd685"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47faed40-fed7-400c-a8fc-b046e3282aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "64224a5b-adde-4eee-a8b5-e7f0371ade04"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "54bcbc89-f622-4eaf-aae1-9799026333df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a342ab7-c4fd-4008-95b8-9b5719477ea4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "336c52a7-8915-478f-a9b3-6df46c26401f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aeb68d25-79c5-4159-b4ba-51dd8a8aac5f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4fc15091-6040-41a5-b097-eede49807261",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f042f119-dfc6-414d-95fa-3bc3a3d6524a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "375c9890-b842-40d9-9627-08c86317ea0e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9f08a534-2ab0-422e-85ac-7947db450024"
            }
          }
        ]
      },
      {
        "id": "51930b7e-ef96-416b-a5a6-f62aede70f25",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a0c2f87e-1821-4abb-91c4-50fd9c75a292",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4ba69b8c-4730-47ab-9153-08371b368d76",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "4299ccdb-3a65-41e8-8c35-9a5185a5a282",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "68431267-602b-4a45-ab7b-d0850ed4e8d3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3dc73620-48d6-4183-954c-9f4c5dd92800",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 125.81349206349206,
      "responseMin": 10,
      "responseMax": 12652,
      "responseSd": 848.1459242757596,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1717547838724,
      "completed": 1717547878714
    },
    "executions": [
      {
        "id": "ffb299a1-9c36-439c-83d6-33da76b589de",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e8667cd7-03cd-4b12-a2af-00f346b16bf5",
          "httpRequestId": "3733077d-c4d1-40b2-a990-c4789aa861dd"
        },
        "item": {
          "id": "ffb299a1-9c36-439c-83d6-33da76b589de",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "e874562a-6fc5-46b3-ac37-cba9a785e791",
          "status": "OK",
          "code": 200,
          "responseTime": 53,
          "responseSize": 0
        }
      },
      {
        "id": "c0306377-03ae-48d5-b94d-30c9ba3b64ed",
        "cursor": {
          "ref": "f960b3f7-a984-4568-940c-7d9380dbafe6",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "595cc790-62c6-4bec-987c-4c87aed84066"
        },
        "item": {
          "id": "c0306377-03ae-48d5-b94d-30c9ba3b64ed",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "45b99f1d-053e-4df2-84ae-aed2da8cf254",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "cc186d00-a72e-4928-8eae-9a7a459b1b33",
        "cursor": {
          "ref": "8d63e87e-d2c2-43b0-b854-8091d3a5ad96",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "abe77ced-d1dc-4b26-b9e2-43d0dab58578"
        },
        "item": {
          "id": "cc186d00-a72e-4928-8eae-9a7a459b1b33",
          "name": "did_json"
        },
        "response": {
          "id": "59513b90-c1a5-45e7-8cd1-144031f79a14",
          "status": "OK",
          "code": 200,
          "responseTime": 354,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ec5c53-3c1a-41c1-a2a0-33ee782fef29",
        "cursor": {
          "ref": "98769c2b-2917-49ba-8770-ac39c96e402e",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0e4de0be-b5c5-4b33-9b1b-22fd62e90050"
        },
        "item": {
          "id": "74ec5c53-3c1a-41c1-a2a0-33ee782fef29",
          "name": "did:invalid"
        },
        "response": {
          "id": "bae4cd62-6851-4cc4-8cc6-6c7e18cb25b2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 307,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ec5c53-3c1a-41c1-a2a0-33ee782fef29",
        "cursor": {
          "ref": "98769c2b-2917-49ba-8770-ac39c96e402e",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0e4de0be-b5c5-4b33-9b1b-22fd62e90050"
        },
        "item": {
          "id": "74ec5c53-3c1a-41c1-a2a0-33ee782fef29",
          "name": "did:invalid"
        },
        "response": {
          "id": "bae4cd62-6851-4cc4-8cc6-6c7e18cb25b2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 307,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f094c7c7-1748-498b-9f30-a3b0f6318744",
        "cursor": {
          "ref": "bbce3cd6-e0d4-42e7-895e-2dcfaa406022",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "46dc01bc-4b61-496c-bcfb-738f93c92f73"
        },
        "item": {
          "id": "f094c7c7-1748-498b-9f30-a3b0f6318744",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "cfaa222f-ac4a-401b-991c-9cdb5a453d3c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 34,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d24b9810-5a4e-4b84-ad32-9e4c9fe7d077",
        "cursor": {
          "ref": "72b605e7-110f-41d3-b93f-28a3493e62cd",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "17311922-8e2b-479b-9049-0f50c2bc8fae"
        },
        "item": {
          "id": "d24b9810-5a4e-4b84-ad32-9e4c9fe7d077",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "edfbee91-89de-4db7-aaea-a80c558f6962",
          "status": "Not Found",
          "code": 404,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7481722-ae62-476a-aa23-b825a4deee66",
        "cursor": {
          "ref": "50038e55-015e-4698-b639-bdc5a35fa497",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "5ba1ba76-8b8b-4700-9cb2-8f80c854c18a"
        },
        "item": {
          "id": "c7481722-ae62-476a-aa23-b825a4deee66",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "2b7c1986-9b35-43b5-9b86-8c53f85bc39a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be38199b-87ce-4b33-af0b-79f9ba476853",
        "cursor": {
          "ref": "d7be5b3b-5152-4e94-8951-a4b4d98523d2",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "0e45ead9-7275-4f7f-9536-58864ca76647"
        },
        "item": {
          "id": "be38199b-87ce-4b33-af0b-79f9ba476853",
          "name": "identifiers"
        },
        "response": {
          "id": "afe341c6-119f-41ba-95fa-27714a41db32",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d55f51cb-5896-45ac-9d5b-623398cb92c4",
        "cursor": {
          "ref": "21350853-ece1-4815-b02c-ad5a2ce668c1",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "e5734c5f-4e64-4a94-8d55-8b8bdb3a3fbd"
        },
        "item": {
          "id": "d55f51cb-5896-45ac-9d5b-623398cb92c4",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "6d28d511-76e0-44b7-a183-b8596bef9237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10aea0e7-5b6d-464c-b439-7ddccd37bfd8",
        "cursor": {
          "ref": "679cfe9d-7d52-4d17-8b62-8512cc7da751",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "95a9125a-9370-4cd8-a1d8-47ad58ac3024"
        },
        "item": {
          "id": "10aea0e7-5b6d-464c-b439-7ddccd37bfd8",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "0967928c-5c44-4c7d-b9a7-9623771e3bfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed6875d-90e8-407a-940b-2ad5e24a3f63",
        "cursor": {
          "ref": "dbf0157b-903f-4080-b858-f82437cddf39",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "54c870ca-11b0-4dc7-b0fd-5016ca4c1c04"
        },
        "item": {
          "id": "eed6875d-90e8-407a-940b-2ad5e24a3f63",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "0508cc4f-c4f2-4a00-97c3-6e48c84b64d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc567f75-6f52-4ef7-bcd1-92e5e5457001",
        "cursor": {
          "ref": "615f699e-53cb-403c-9e5a-307ee3245b85",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "8b1430d7-8ecd-468c-ae8f-e61ff4cb81c4"
        },
        "item": {
          "id": "cc567f75-6f52-4ef7-bcd1-92e5e5457001",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "79151bc7-f044-48e7-b5f0-e1b1ff9b1996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca88b85f-22ab-40e1-8844-732e579f0e1e",
        "cursor": {
          "ref": "38426619-b3c4-4b17-ac98-2afd61cc7429",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "8d6c8732-237c-4617-a9a3-7762c2b36d67"
        },
        "item": {
          "id": "ca88b85f-22ab-40e1-8844-732e579f0e1e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "e06263fb-42fd-4b29-8323-a65da8375fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "886a162f-c77d-4ddd-abe6-bf1ec6a79528",
        "cursor": {
          "ref": "674499c4-0fea-4110-a0d3-a04b94be68b1",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "f2cf986c-f2f7-4ced-a1cb-842c63efd4cd"
        },
        "item": {
          "id": "886a162f-c77d-4ddd-abe6-bf1ec6a79528",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "33784521-05b8-4c48-8633-e4e825086eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "996d367b-d6c9-435a-bf98-bf4bc6113348",
        "cursor": {
          "ref": "9bcfc5ab-b011-49d0-acaf-f5275cb24d90",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "379daaf3-ee0e-4115-9000-bf5f7e82327c"
        },
        "item": {
          "id": "996d367b-d6c9-435a-bf98-bf4bc6113348",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e6b897ad-889c-4239-8f7a-cf04f3a3d0de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e3f250-3679-45ef-b948-0812c0e79cbf",
        "cursor": {
          "ref": "aff9523e-e81c-4234-9189-504060d3f25b",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "fd7cf146-941c-4c31-9a51-2970d49009cf"
        },
        "item": {
          "id": "57e3f250-3679-45ef-b948-0812c0e79cbf",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "f7243a57-d529-4edf-a011-d35f3abfc430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f16a2738-4849-4505-b5c8-f46f3e5ff19b",
        "cursor": {
          "ref": "90cf3841-ebc6-4dfb-a266-a8dc91455431",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "630e9886-eddd-4f1f-80e6-e3df21562ed5"
        },
        "item": {
          "id": "f16a2738-4849-4505-b5c8-f46f3e5ff19b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "36ea19eb-c17f-4335-9d4b-6f18879c1a3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f22ea1-931e-4ed4-ac3b-128e61870397",
        "cursor": {
          "ref": "a281b56f-3263-4653-ac9b-e055175996d1",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f1c54b41-54e7-4bf0-a041-9ed629b5a2d2"
        },
        "item": {
          "id": "23f22ea1-931e-4ed4-ac3b-128e61870397",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "469d2deb-7cc2-43c9-bed9-26535bbbad89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a02cf17f-786d-4242-9b2a-0f0100e9b728",
        "cursor": {
          "ref": "69e9c829-8388-4b2d-96c0-a7978c56fcbd",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3216e18f-cf71-4066-a26c-9fa6b72b62af"
        },
        "item": {
          "id": "a02cf17f-786d-4242-9b2a-0f0100e9b728",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ec13ff9c-2241-4b5e-b823-834d4e12242a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b89fa450-8c4e-4549-9580-434f3b387595",
        "cursor": {
          "ref": "18215ef2-a03a-44bc-a845-645398198966",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "719e63c0-7626-489b-8f67-65d8ea0053a6"
        },
        "item": {
          "id": "b89fa450-8c4e-4549-9580-434f3b387595",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "5a6b23ce-7e9d-4ca0-94a6-5f70571f3043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f00283f-8b3e-4e96-b836-c1ccb644f131",
        "cursor": {
          "ref": "7842e8b3-aab3-4535-b64e-e968d54f85c6",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "32dc9201-b376-448c-a41f-af7332f43239"
        },
        "item": {
          "id": "5f00283f-8b3e-4e96-b836-c1ccb644f131",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "25175311-4e31-478e-8c42-8faed0fb813c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aaa579a-a43e-4794-915c-9a81837101ae",
        "cursor": {
          "ref": "871ad121-4069-4e33-b71b-9cbdd40caa98",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "2d572995-4442-481d-92e8-c37f4c4ef162"
        },
        "item": {
          "id": "0aaa579a-a43e-4794-915c-9a81837101ae",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "9623564e-2d6f-47cc-a12e-ffaaeb4a860b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "012e58b9-c52d-4a0a-8a44-e96d6d8869e5",
        "cursor": {
          "ref": "93419ae7-b907-43fa-b697-7823e4bca311",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "0eb29719-096b-4f11-9390-574bafc093ba"
        },
        "item": {
          "id": "012e58b9-c52d-4a0a-8a44-e96d6d8869e5",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "4d604f86-308b-4dca-b4f8-9ac935cbda27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a3d45b-a39d-4548-a7c9-bb87f846f156",
        "cursor": {
          "ref": "bf3f7fa5-2583-4954-a682-ecd74cecf635",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "eb015b89-1e42-46eb-8180-93952fc74861"
        },
        "item": {
          "id": "60a3d45b-a39d-4548-a7c9-bb87f846f156",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "df217243-4190-40c1-9d97-2fba2c35ce29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "788e3aab-1085-49f8-8d8c-611b2e0b26ed",
        "cursor": {
          "ref": "47e5bd63-9391-4d4f-b2b1-ce7db946c5bd",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f26f6ce2-5715-433a-95ff-b8cfdb4204fa"
        },
        "item": {
          "id": "788e3aab-1085-49f8-8d8c-611b2e0b26ed",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "013c66fb-cabc-4c6a-841c-5763c9c99469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ddd9f87-8d07-4436-943a-77b62c0e27d4",
        "cursor": {
          "ref": "50fb4357-a001-48cc-9947-8f17f579b19c",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "ab9c13c7-65b6-4046-980d-e4a70173e163"
        },
        "item": {
          "id": "2ddd9f87-8d07-4436-943a-77b62c0e27d4",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "a9362165-4b62-4fe1-a58d-6964f4448bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c2da08-bdef-4bd7-a206-9cdfbb2d970b",
        "cursor": {
          "ref": "6d59ff0d-79fe-4c13-a2ec-f28c5e4be032",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "51b04a70-31aa-4bcd-ae3a-82ce1f53dfcc"
        },
        "item": {
          "id": "d8c2da08-bdef-4bd7-a206-9cdfbb2d970b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "f4ca19dc-4555-462c-bf7f-6dd1361aaf78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ec2470-ad7b-4d82-8cec-03bb92340605",
        "cursor": {
          "ref": "c21b1744-797a-4612-9a0c-4900db69d22f",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "477b7e23-a876-4c36-84c3-43bf8c087a84"
        },
        "item": {
          "id": "d7ec2470-ad7b-4d82-8cec-03bb92340605",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "0e94b430-bff8-47e4-98b0-f5e7205a2cf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "389eb403-bab7-4136-9eb4-0bf29d979109",
        "cursor": {
          "ref": "0cb610d9-c698-45e2-b67a-803ec0d0a022",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "8c1b2b5e-bc8b-448a-9e75-bb83bfab65f8"
        },
        "item": {
          "id": "389eb403-bab7-4136-9eb4-0bf29d979109",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "4e2961d9-61c3-4e74-a8df-1faa5769f94b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e4387e6-7536-4f35-865c-ff4069023657",
        "cursor": {
          "ref": "1c9894d3-683a-4528-bd20-6621b635e1cf",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5bdfc3e5-4bbf-412d-9411-f58163776e9f"
        },
        "item": {
          "id": "9e4387e6-7536-4f35-865c-ff4069023657",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f04835cd-8a58-49f9-91de-2d68b39f63a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b09ad0bd-42f7-412a-87f5-11c48c8e252f",
        "cursor": {
          "ref": "df9fb546-8795-424c-97e8-6eb3207c52bc",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "dbd4df83-8e80-4a58-bca4-50e3fd29645e"
        },
        "item": {
          "id": "b09ad0bd-42f7-412a-87f5-11c48c8e252f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "5d2a49a7-1f80-44b9-98ae-6f2db2469086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d17cbda-74f0-4d6f-87e3-3bd025869b7a",
        "cursor": {
          "ref": "c0a1d1bc-ed80-43f3-839e-05d84d36d890",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "0a71fd5c-7db0-4820-b335-fd348832a4ca"
        },
        "item": {
          "id": "9d17cbda-74f0-4d6f-87e3-3bd025869b7a",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "a15f3261-491b-4f11-9975-48766dd0ca08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e962179-a1cd-447e-a1c9-f9b9d8e68654",
        "cursor": {
          "ref": "9b0839b4-abcd-4251-8cab-d53ed876024e",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f3eb4da6-9c03-4c0c-a8ef-ece4696efe2d"
        },
        "item": {
          "id": "5e962179-a1cd-447e-a1c9-f9b9d8e68654",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "332652cb-93ed-420a-b621-264a9b730c3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea6a029-fba6-42fd-bd8a-562e7264b9e0",
        "cursor": {
          "ref": "5b8414b0-925d-4ad8-bb96-fe1b5cb01814",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4df8f17e-0520-4d0d-a6a5-11c0e5a39017"
        },
        "item": {
          "id": "eea6a029-fba6-42fd-bd8a-562e7264b9e0",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "8c030572-4a2c-4b25-9d6c-68bd68f50c06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b8c1de5-cbdb-4842-bb96-1a9196268585",
        "cursor": {
          "ref": "b7e6f288-130f-466d-ab56-ce49ce054e8e",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "1dc2ff8a-e182-4b45-8345-897fe7235f62"
        },
        "item": {
          "id": "1b8c1de5-cbdb-4842-bb96-1a9196268585",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "99f98b50-1da3-48f6-9e21-27a66b9a4ac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a866b75-ca1e-475c-aebb-fe2ecef46025",
        "cursor": {
          "ref": "0a74bab8-080b-468b-adee-cdb4d80f0f54",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "7cfd54da-f8ef-4f51-8c9d-1b604b032846"
        },
        "item": {
          "id": "6a866b75-ca1e-475c-aebb-fe2ecef46025",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "3325701b-3a40-47d7-8c23-b25b7246759f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfce1eb7-5530-4f2b-95b6-f44ed9ea4a39",
        "cursor": {
          "ref": "d4e22f94-b30c-4207-a506-7b4d277a9ec7",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "4e934d1e-e341-47c3-bddf-4d650addfa58"
        },
        "item": {
          "id": "bfce1eb7-5530-4f2b-95b6-f44ed9ea4a39",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "048f99fd-9739-4217-ace8-ecdcfd4f5787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "072be22c-ae48-48b3-bcd6-443da20e027a",
        "cursor": {
          "ref": "910ec2d6-1c5a-4f5c-931f-280187115756",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "3f79b9a3-3d12-4cd6-8807-212fba960d9d"
        },
        "item": {
          "id": "072be22c-ae48-48b3-bcd6-443da20e027a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "2ab03931-26d6-4323-9ac4-c53bbd6247ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30907374-ddc4-454d-b093-61ddea845f69",
        "cursor": {
          "ref": "362b0485-3d70-4305-bdc8-be5d414e5ca5",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c2333739-5c86-408f-88da-8ce2bcb53342"
        },
        "item": {
          "id": "30907374-ddc4-454d-b093-61ddea845f69",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "bde72733-b269-4dea-a3ed-3086f744b435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55efe55f-5240-4e18-8065-e516b8743b7e",
        "cursor": {
          "ref": "a7d54f99-c768-4382-8677-7037f1cffbed",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "1938dafa-2f80-46b5-97cf-16b1ce37579b"
        },
        "item": {
          "id": "55efe55f-5240-4e18-8065-e516b8743b7e",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "5a70e8db-dbb6-410d-8497-68b983bdfce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f30a78-a7d1-4323-acd6-882f70abbfb4",
        "cursor": {
          "ref": "b12291e9-9c0d-47c5-9873-6f1248c60a79",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "38bc6bd9-c9bc-437a-8046-e95f9ff8f774"
        },
        "item": {
          "id": "62f30a78-a7d1-4323-acd6-882f70abbfb4",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "5234b96e-67f6-48e1-a3fe-16949eff005c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcfc4deb-5574-4ef2-aab3-da144b8ffc1d",
        "cursor": {
          "ref": "9ae38395-ed98-4015-b414-b2da2369cab5",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "2b460d91-818c-40aa-aeb3-5eb7924d5d65"
        },
        "item": {
          "id": "fcfc4deb-5574-4ef2-aab3-da144b8ffc1d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "5ebd98bf-eccb-43f7-a5b1-14c105a395fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a7b9009-d819-4a41-bce7-8e0a21fed6a1",
        "cursor": {
          "ref": "aa69b902-b9c8-4455-80ce-0782ec968512",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b8a5a7f0-e0bc-4037-a37b-a68e0d6a2097"
        },
        "item": {
          "id": "1a7b9009-d819-4a41-bce7-8e0a21fed6a1",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b08983c6-9b4f-4c03-8535-65a632847b09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb10c1a9-4eb1-4007-8319-a54edadda96c",
        "cursor": {
          "ref": "c73dcdc5-76e5-48ce-b7b9-4170e7e5fd3d",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "a64fad8c-83fb-4881-8b79-b145247c61ac"
        },
        "item": {
          "id": "bb10c1a9-4eb1-4007-8319-a54edadda96c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "4a2c182a-ed07-454b-afce-88e88f9e9c16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba91bdc-f78f-454b-849b-9e90ea21457a",
        "cursor": {
          "ref": "90939fbb-2fbf-44b7-ac12-994c9af156f7",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "02059bbd-4ac2-4985-ba62-3ae04023faf4"
        },
        "item": {
          "id": "cba91bdc-f78f-454b-849b-9e90ea21457a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "04fc6867-fcf2-4e82-a2ca-3e399211dc32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5bb9873-f4ef-477d-8015-31a34bab1346",
        "cursor": {
          "ref": "95aa58c4-1bea-4133-9449-89164a30430f",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "449f4da4-46fb-4506-8dd8-dd13f7d5c818"
        },
        "item": {
          "id": "d5bb9873-f4ef-477d-8015-31a34bab1346",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "572b891e-79fc-4e5a-9699-7df98608b53a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d608792-ca9f-440d-9b49-43517b04b9df",
        "cursor": {
          "ref": "3c27dff7-94aa-4071-963c-84ed3434d259",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "7aea2a15-f064-46c4-a797-b847b8b7bda4"
        },
        "item": {
          "id": "2d608792-ca9f-440d-9b49-43517b04b9df",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "491bf944-8c6e-40c9-8995-687fb5f50e95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80c9939b-e3ce-4af1-b428-0395b69e622b",
        "cursor": {
          "ref": "93d1a39f-8268-4e98-a161-7c55a3ea5227",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "dce589d5-b25b-45d3-a9af-fabababadc3d"
        },
        "item": {
          "id": "80c9939b-e3ce-4af1-b428-0395b69e622b",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "0e65abe8-2500-4fff-9f6b-663ec50da117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea49fda-95f6-4a5a-b5c4-4cdb709d8aa1",
        "cursor": {
          "ref": "8309e207-06e2-4a46-9c88-536807e45e30",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "63f4b779-0ba6-4ddb-997a-2ec7d9c52934"
        },
        "item": {
          "id": "eea49fda-95f6-4a5a-b5c4-4cdb709d8aa1",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "618bf3e6-ea41-41c4-909f-bbfe49e56bb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a8eff7d-50f9-419a-b290-3dd551a0bc13",
        "cursor": {
          "ref": "575ebc94-632f-4dac-98ce-a9d3d16cee6e",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "489a566d-d5d6-4e7e-a61a-2db929124583"
        },
        "item": {
          "id": "7a8eff7d-50f9-419a-b290-3dd551a0bc13",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "31893c27-aa6d-4dc4-b6a8-545a90b7c5b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e946239-d0fe-4cb8-8856-3350ef67711c",
        "cursor": {
          "ref": "d0972b5e-b308-4c85-b8c2-d98c1430a42d",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "877bac4a-6dd2-40e3-a098-f57b7bbfa5b5"
        },
        "item": {
          "id": "2e946239-d0fe-4cb8-8856-3350ef67711c",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "74e51e01-a8aa-4e34-92cc-8427ac5586c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "681ff8c3-c7dc-4e84-900f-73ddf4f70d31",
        "cursor": {
          "ref": "65f32c57-61a0-4b32-a77f-2b965522ebdc",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "96e5ea81-db4a-419e-bd01-beaf6a136188"
        },
        "item": {
          "id": "681ff8c3-c7dc-4e84-900f-73ddf4f70d31",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e57b0582-6086-433f-b81d-ffd511fcc94e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ffd84c-cca2-4525-8199-fdabb36ed098",
        "cursor": {
          "ref": "7cb725a4-a69d-4fbf-bd58-040a929f9d7b",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "672b2496-1584-4df6-b383-6c675d254761"
        },
        "item": {
          "id": "c0ffd84c-cca2-4525-8199-fdabb36ed098",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "22bdbe37-c0cb-48dc-9091-9e8ba73e99d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "393e8e8b-8505-4c1b-8bc2-86afc43589da",
        "cursor": {
          "ref": "c513671f-3ae9-40a1-ae11-f4449c4c9927",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "32a90d48-5c04-4c2b-ba9e-c6b3aa93a52d"
        },
        "item": {
          "id": "393e8e8b-8505-4c1b-8bc2-86afc43589da",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "f245cf92-6ddf-424d-aa0f-c1accdcf5cfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef817520-7f31-4a20-a77f-6fa04a5c917a",
        "cursor": {
          "ref": "21579a79-c2d1-473b-84e4-c3d8c9ebf7e5",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "04b4dfda-3aaa-4020-956a-66669b4961be"
        },
        "item": {
          "id": "ef817520-7f31-4a20-a77f-6fa04a5c917a",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "511cd23e-ed06-4dcc-a8bd-9028ae5c7c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e31d20b6-6741-4700-b2a5-ff405f6c3dc5",
        "cursor": {
          "ref": "5278b5a7-3ed7-46e4-a3e7-ec725351a2be",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "42f9c5e5-f054-4b89-a983-fa78d0a13f81"
        },
        "item": {
          "id": "e31d20b6-6741-4700-b2a5-ff405f6c3dc5",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "e7d89060-2ad0-44e8-ba20-b3962c77efc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6274a147-c21e-4014-a304-3aa50d17f071",
        "cursor": {
          "ref": "a0367714-b16d-448b-a09a-3bc76de1e40d",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "fd1c0ee2-a5de-419e-8627-55b48cdb0773"
        },
        "item": {
          "id": "6274a147-c21e-4014-a304-3aa50d17f071",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "76f321ed-4ea4-479f-9480-5464955e3165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "308c624c-0ad4-497a-a5ab-4f75371f94d5",
        "cursor": {
          "ref": "f84536b7-4198-4b80-9d5b-f134be5a694f",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b1f78285-9fce-4c84-b5b4-bcff47dc5f18"
        },
        "item": {
          "id": "308c624c-0ad4-497a-a5ab-4f75371f94d5",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "a925f6c1-aa3e-4d7f-9f54-929f2de474d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b860a7-63b8-499d-a488-316c098636be",
        "cursor": {
          "ref": "9dd5fdc8-5fdf-4779-8cbf-a5aacb812cf4",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "cb25afac-5d7f-4d13-aa0a-e971f1292d54"
        },
        "item": {
          "id": "c7b860a7-63b8-499d-a488-316c098636be",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "ba52fc74-caef-4ae7-964d-f1181ccec66b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "188db2d1-9527-42f0-81d3-929da70a2497",
        "cursor": {
          "ref": "09614069-febe-44cf-9962-417b4995b2e0",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "04b43cb8-c087-4a1e-a1ea-acb5ff06166e"
        },
        "item": {
          "id": "188db2d1-9527-42f0-81d3-929da70a2497",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "46806ccf-1a73-4e83-8f04-6c3fc0da3586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aa9d165-7822-4da2-a284-35e137ad9b14",
        "cursor": {
          "ref": "035a45f6-8b8d-4028-aeaa-9f8d23b6b879",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "9f479840-3b7e-4de2-b991-54b5447718b9"
        },
        "item": {
          "id": "7aa9d165-7822-4da2-a284-35e137ad9b14",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "6ba51bb4-7ae5-4efa-b01e-19c3a7732c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4c0da51-11ed-4fb0-a137-063aa274512a",
        "cursor": {
          "ref": "6bccadeb-2bfb-4602-9082-8672c64f9ced",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "a89091e1-e7f7-47f2-b160-1d0b3d30ec8f"
        },
        "item": {
          "id": "d4c0da51-11ed-4fb0-a137-063aa274512a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "8ed70db0-da38-4ef0-83b2-fad3f782896f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72eb63da-b224-4c0d-85bd-f001c3b27b96",
        "cursor": {
          "ref": "82c7ffbe-f4b2-4352-a5bc-76bbfa5fdd7f",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "805331fa-b92f-4913-b64d-5641b434d47f"
        },
        "item": {
          "id": "72eb63da-b224-4c0d-85bd-f001c3b27b96",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "28cc3ab5-aad8-467f-9078-5741030e6304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec5479f-53c9-4b92-8937-d137c001be76",
        "cursor": {
          "ref": "94cdb318-1d95-44a4-8592-208fc1e850a1",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "2def28e0-21b0-4f07-8ff2-8627baf61310"
        },
        "item": {
          "id": "dec5479f-53c9-4b92-8937-d137c001be76",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "feb0da97-2e60-4825-8a7f-b132177abf45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c6a86d-f042-48f4-addd-a159917a070c",
        "cursor": {
          "ref": "6f843f9c-21e4-4a7b-acf9-6cc10874406b",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "55254ee8-c1ee-4965-964d-b34420b175bc"
        },
        "item": {
          "id": "69c6a86d-f042-48f4-addd-a159917a070c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "cf969f74-19f6-4891-8a86-3f643432cad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "883b0f32-1df9-4772-876e-dbf3fc12dcb4",
        "cursor": {
          "ref": "283ac31d-2e65-4ec3-a2fe-b0f2ea640e1f",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "83623cc3-6b73-422c-bd83-a3b6fee13aa7"
        },
        "item": {
          "id": "883b0f32-1df9-4772-876e-dbf3fc12dcb4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "2489f8ad-436b-4229-9bd8-f59bc7e4ca2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3d1f98a-4839-4523-8811-eab0a66c2458",
        "cursor": {
          "ref": "e30510bb-15d0-4823-8cd7-fc1fc642f9a6",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "b248f77e-ed43-411d-9555-edcc40a3c9bc"
        },
        "item": {
          "id": "f3d1f98a-4839-4523-8811-eab0a66c2458",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "32e16ede-2595-4b2d-af6c-38ce64cfcf58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86313d6e-eac3-4e7c-9358-849015f516db",
        "cursor": {
          "ref": "ad0dd21b-af58-4f44-a3d4-4f1f6184da5b",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "22c2a4cb-2258-46a3-ab21-29fc958469bf"
        },
        "item": {
          "id": "86313d6e-eac3-4e7c-9358-849015f516db",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "50cb2520-2be9-43ac-b1d1-6e464d81017d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32cefea9-2bcc-48c5-af5a-8d42fc775945",
        "cursor": {
          "ref": "227eab26-ae9f-4ef0-8646-89dbba10bc26",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "e00a4014-11c5-4a86-beb7-6cf41b0c2bcd"
        },
        "item": {
          "id": "32cefea9-2bcc-48c5-af5a-8d42fc775945",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "9ebb0854-d84d-4dee-89bc-e24fd8d0aca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2819717-ec3c-43b5-9ad9-abbf9f1d1b9d",
        "cursor": {
          "ref": "2e782ee1-de53-4a79-90bd-eb3e84512883",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "4151364c-3287-4bb7-8940-8d0b653d26a7"
        },
        "item": {
          "id": "f2819717-ec3c-43b5-9ad9-abbf9f1d1b9d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f1137641-d97a-4700-b5ab-f57c9b5e671a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca20a8b-66ad-4e03-b63c-4b3d10d888fc",
        "cursor": {
          "ref": "26eb4bd0-ff4a-4caa-898e-e3d166c5faa8",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "fffe0efb-8cef-414b-89f9-11788a8a0255"
        },
        "item": {
          "id": "5ca20a8b-66ad-4e03-b63c-4b3d10d888fc",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c13771b1-9435-4173-ad84-2704843ec89f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c02770af-1cb2-4440-ba91-a6cec462ad33",
        "cursor": {
          "ref": "f5e5da56-f8cb-44bb-8af8-e8d4d6b2131a",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a6be4649-96c0-4ee6-a092-c38c9d28901b"
        },
        "item": {
          "id": "c02770af-1cb2-4440-ba91-a6cec462ad33",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "8d449361-5bcb-47f3-80d1-ffa1ed3d42af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b251eea-00a7-4bb5-b828-09f1a91307af",
        "cursor": {
          "ref": "061ac1e8-ce24-4fae-8197-7ea672d0ceef",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e6d629a9-c137-4a72-9416-f20771d5dee1"
        },
        "item": {
          "id": "0b251eea-00a7-4bb5-b828-09f1a91307af",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "c5ae7b57-185b-4a48-afd9-4867e639e9e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc81ec9-7495-492a-b938-533c8c565536",
        "cursor": {
          "ref": "ac4ae0b3-497e-4be5-8433-9a9026a251f7",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "93365477-5851-4df8-b437-09a72a1fef13"
        },
        "item": {
          "id": "9bc81ec9-7495-492a-b938-533c8c565536",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a6011572-33e2-4115-9b28-6cd3dcea732d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d880d6-a18a-4742-977b-546b4267ea03",
        "cursor": {
          "ref": "ef297aff-a9c8-4d8a-b72c-211d93b9cfc4",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "204e7647-cb68-4c2e-a898-3cc0edb08330"
        },
        "item": {
          "id": "29d880d6-a18a-4742-977b-546b4267ea03",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "0e0b6adb-1842-4936-9aea-328366854e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45fda5b4-56a1-43ef-8806-ecfdd22b4a53",
        "cursor": {
          "ref": "d86f6f60-8809-4c73-a32d-cf99236142cb",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "64be9671-c7c6-4e5a-b4c7-36af3dc8c112"
        },
        "item": {
          "id": "45fda5b4-56a1-43ef-8806-ecfdd22b4a53",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "15796f2c-4c47-4b65-98cb-fba06c6d0eed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e9da10f-1b4d-47f8-9212-f9bc5ca508fa",
        "cursor": {
          "ref": "dd8b2e7e-8625-461b-ae0a-b017db19ded6",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "6a96bb49-046e-455e-8f48-ac85178237e6"
        },
        "item": {
          "id": "0e9da10f-1b4d-47f8-9212-f9bc5ca508fa",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d365bbd2-e6ec-4f64-87e1-200ed905cdc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "997e1234-541f-4b94-a5dc-6b45c21fe5a4",
        "cursor": {
          "ref": "119bfa0c-9fb5-4c09-be0f-313fbf1c0792",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "6c54d9e9-8960-475f-a632-8015182f3efd"
        },
        "item": {
          "id": "997e1234-541f-4b94-a5dc-6b45c21fe5a4",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e22bfdb3-7fee-4a5d-a8df-1b736c91cfdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01dbf880-8b0d-4124-b405-e7ea0ebff13c",
        "cursor": {
          "ref": "a4ed2d61-7b29-41a5-bde7-93f37d6b194e",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f6369223-ee00-4bc3-bbbf-fe95550d5fb8"
        },
        "item": {
          "id": "01dbf880-8b0d-4124-b405-e7ea0ebff13c",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e757ce18-d38a-4c03-abe6-d839dec7a0f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bec9db74-9cf4-4def-9074-c708b6207d30",
        "cursor": {
          "ref": "b4d4b07b-0313-4bd4-b8ec-a5ae280c1bdc",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "04e608bd-1063-4ed7-805b-4c60b2b4099a"
        },
        "item": {
          "id": "bec9db74-9cf4-4def-9074-c708b6207d30",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d8944f85-853d-4031-8619-cdbdd71d4f3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f4f1d22-1f89-4a71-90be-b3d6c7df7876",
        "cursor": {
          "ref": "0693a915-5b68-4638-bbe9-aba368a0ca3a",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "daa73aff-c63a-4644-9386-40438cd302ff"
        },
        "item": {
          "id": "3f4f1d22-1f89-4a71-90be-b3d6c7df7876",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "f59b719b-4205-4cce-b1f9-9b5839ded57d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5ae8540-b4cb-45e3-8e85-790182fc82e0",
        "cursor": {
          "ref": "7a12fbce-cb2d-47e6-88fc-7605e0080f11",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "b50eb0fa-b1a3-4482-8e0b-0f656271db2b"
        },
        "item": {
          "id": "c5ae8540-b4cb-45e3-8e85-790182fc82e0",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "25abc978-91ab-4354-b458-de6e533400c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6bd7733-55d9-44c4-8656-d2995acbfd44",
        "cursor": {
          "ref": "359eee7e-3758-449c-9339-b187532075b2",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "5292e4a2-10f2-458b-bd83-ed09f4a13efc"
        },
        "item": {
          "id": "a6bd7733-55d9-44c4-8656-d2995acbfd44",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "5c863fa8-7917-48dd-b94e-7b6353046cf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc86b5b-7133-4fb0-8cad-684c5871186b",
        "cursor": {
          "ref": "4e6dc0c1-f0a6-4190-88c4-e6114524a384",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "34ebad50-9994-470c-b816-5bfb153ad7bb"
        },
        "item": {
          "id": "6bc86b5b-7133-4fb0-8cad-684c5871186b",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "3e9ca976-03e9-4230-b089-32c4c750b6e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb7d6210-7a29-4bc2-a133-538d180f2db1",
        "cursor": {
          "ref": "b6f4dad6-0279-4d0b-bb4c-d75c95ee5b68",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f6aa8285-b417-4e51-b025-842bdf7a7666"
        },
        "item": {
          "id": "bb7d6210-7a29-4bc2-a133-538d180f2db1",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "3b11d397-3407-4cc5-a0da-e56b307797d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d86fb24-e9c7-41d0-b2ee-917b4644e54b",
        "cursor": {
          "ref": "b877d952-cadb-4d70-817a-dbd7b987f1fd",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "38f2fffb-fa41-45f3-a400-3df8c2f18170"
        },
        "item": {
          "id": "1d86fb24-e9c7-41d0-b2ee-917b4644e54b",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "2fd087d7-8c88-42c7-9db4-482ad1333f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4912f5b-92b2-47ff-ae16-ec1728f3b46a",
        "cursor": {
          "ref": "e1c72ee9-8682-4bd2-a52e-419e853fd092",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "2b3308d5-dfb3-44e1-bca6-eda9c8909a2f"
        },
        "item": {
          "id": "c4912f5b-92b2-47ff-ae16-ec1728f3b46a",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "0df4bdb2-aba2-4091-a5bb-a69014f2525e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d279cc7-4d9b-4f70-9456-1a433696e878",
        "cursor": {
          "ref": "69b7951e-fdcc-4520-b5f5-f6111e091170",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "74130d5a-453c-4d94-926a-2cd73ff4192e"
        },
        "item": {
          "id": "7d279cc7-4d9b-4f70-9456-1a433696e878",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "59d9c2b4-b869-4448-bd0b-62f473a9ed5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f16f42f6-030a-44f0-860f-e309a4d31b72",
        "cursor": {
          "ref": "0cfc315c-4a4e-4827-b183-ed018185ce20",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "6bec124e-d180-40b3-bb93-a394bebab135"
        },
        "item": {
          "id": "f16f42f6-030a-44f0-860f-e309a4d31b72",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "acd4d479-346e-49ee-9a9a-32b53b36b39b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f1611ed-a1a2-42c8-9b0c-a118324aeddd",
        "cursor": {
          "ref": "7b64903a-3454-47f0-84e7-88210c9116b1",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "6462ac3e-b432-4f98-a507-12f6f6ba3151"
        },
        "item": {
          "id": "3f1611ed-a1a2-42c8-9b0c-a118324aeddd",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "3805518f-b838-471e-bebb-551ead23958c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b6244cf-c700-4483-9fe8-975b69e40c2f",
        "cursor": {
          "ref": "78133712-a4c0-4a1b-bd78-6de13795e0c6",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "723aa30d-068c-4ea9-9404-3dfcefa25d7e"
        },
        "item": {
          "id": "8b6244cf-c700-4483-9fe8-975b69e40c2f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "2baf4e67-2da7-43f4-8b7d-572bb97c0cd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619e1d0c-f2a8-4a81-a4ce-9d0b907b57ea",
        "cursor": {
          "ref": "7ff03bb8-1ac8-4113-bdc3-0ef80be0fc41",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "17689cb0-d70b-4486-8eb2-4ae0cfcf6c1d"
        },
        "item": {
          "id": "619e1d0c-f2a8-4a81-a4ce-9d0b907b57ea",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "8b2d6d0e-d942-4a08-a556-221a7edfeaea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7e2c251-9c56-4d97-8370-06688d39c5dd",
        "cursor": {
          "ref": "f5053ae6-a5e9-4151-a123-e99b3ac602b3",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "45b0513f-6333-48bf-8f93-64677ef41f9d"
        },
        "item": {
          "id": "f7e2c251-9c56-4d97-8370-06688d39c5dd",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "0b104d8c-6210-4c04-a0e8-0c7f837d4d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc361813-6dd8-4bed-a046-6867cc8a1bae",
        "cursor": {
          "ref": "39939afc-abe2-40f0-aac0-e1b0b699576a",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "c0fb9346-4b8d-4541-8628-c0c06803dadb"
        },
        "item": {
          "id": "bc361813-6dd8-4bed-a046-6867cc8a1bae",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "5ac67b5a-9972-446a-828f-454809a3da92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b052b68-1b13-4c4a-858a-f3df39d41a67",
        "cursor": {
          "ref": "298ecdcb-fb01-4cd5-8221-36049f29e1f6",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a7e78045-fddc-4850-b09c-a259922c1762"
        },
        "item": {
          "id": "5b052b68-1b13-4c4a-858a-f3df39d41a67",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "94cdb7c3-b10f-4568-b440-11b4b53349ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa67d7a5-bc29-4dc2-bc0d-5f3f99ca58da",
        "cursor": {
          "ref": "91e4a1e2-859f-49f2-90a3-bb96108bbae8",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "be85a5b7-c343-443d-aa62-542f82d277f7"
        },
        "item": {
          "id": "aa67d7a5-bc29-4dc2-bc0d-5f3f99ca58da",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c947aa78-6b8f-4916-98e4-2be352ad343e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "159afe4c-049c-4525-8c72-e262c6688f43",
        "cursor": {
          "ref": "5396c005-211a-4dd9-a8d3-b2bd5e5a2c6c",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "3c76f3b6-2bdd-45d7-8298-8c7378b3a60f"
        },
        "item": {
          "id": "159afe4c-049c-4525-8c72-e262c6688f43",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "b973d383-e675-4641-adc3-bd2b53852494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7c61c5-37dd-4eab-ae07-70fbacb16979",
        "cursor": {
          "ref": "1639e3b5-815d-4558-9d05-93c06a21af91",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "6c8dd59a-92b9-409c-b37f-5cb890960a1c"
        },
        "item": {
          "id": "ee7c61c5-37dd-4eab-ae07-70fbacb16979",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "3bf8de43-f236-4e76-b14a-cfc63d860e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c2ec59-3f2e-4241-99e4-1c49fe2a3f3e",
        "cursor": {
          "ref": "eb24350d-fee1-4bc1-b852-6d4ffaea4d63",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "4f63d350-2fa5-46f4-9ce0-44a3317642f2"
        },
        "item": {
          "id": "d2c2ec59-3f2e-4241-99e4-1c49fe2a3f3e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "85e86ca8-49bf-487f-98ff-d5fbc84e73fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c4525a3-3e81-42c2-ad05-97cd381a62fc",
        "cursor": {
          "ref": "89c35363-a06f-439e-9a87-4e029d7e12ac",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "b2209321-667f-4cba-ac52-e2579867b66f"
        },
        "item": {
          "id": "3c4525a3-3e81-42c2-ad05-97cd381a62fc",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "632f45a5-b29d-488f-821c-412890662428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b144755a-d4d8-4469-9fb9-4dffef59834b",
        "cursor": {
          "ref": "bdb55057-51e1-4603-b65e-600f2364a883",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "bc11c434-83ae-476d-89e9-06e7eb1aa022"
        },
        "item": {
          "id": "b144755a-d4d8-4469-9fb9-4dffef59834b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "44c9a7b7-9eee-4190-b1e3-1286f33e04a4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6956780b-8627-4ff7-82fa-94214492fa7f",
        "cursor": {
          "ref": "d34e8a7c-bc65-43a2-82ab-1ed6da32f3f0",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "0c4ba5e2-0c14-4306-b2f9-dffa393b37a5"
        },
        "item": {
          "id": "6956780b-8627-4ff7-82fa-94214492fa7f",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "55e646c8-b2f3-45a1-b063-f737f74944c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "ab3f072a-8252-4706-b2b8-627b6e48834a",
        "cursor": {
          "ref": "30f013be-35b4-4efb-a757-09648e8d468f",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "50e261cf-1d58-48e8-b8ae-3a68e6fbd870"
        },
        "item": {
          "id": "ab3f072a-8252-4706-b2b8-627b6e48834a",
          "name": "credentials_issue"
        },
        "response": {
          "id": "9d46ea5f-b4ee-4b8d-a8a6-0d3f9ceea09b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "a073e670-8077-4dbc-98ec-0cf0559060b6",
        "cursor": {
          "ref": "e74fcc26-fa5d-4eef-b629-7aed8f15b157",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "efdd60c3-e61f-41e2-828f-28a237c32ba3"
        },
        "item": {
          "id": "a073e670-8077-4dbc-98ec-0cf0559060b6",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "b0e408bb-71b2-4360-bc12-f2390c9b4a0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "7d6adc98-4dc4-4db6-9e7f-b1b6cb09e7b9",
        "cursor": {
          "ref": "210499a4-33e1-4c58-8f67-bda738c86ade",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ff84b1e6-9b48-4f26-8f6f-d46daeb91db8"
        },
        "item": {
          "id": "7d6adc98-4dc4-4db6-9e7f-b1b6cb09e7b9",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "53476d2e-c5e7-4e3d-8703-72268d2be977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "ef9a1cbf-c4b6-436d-9d52-8def42b4bdae",
        "cursor": {
          "ref": "82f1105a-a510-456c-9bf2-0a45d342b416",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c79291ce-d852-409c-971c-264e35e0b064"
        },
        "item": {
          "id": "ef9a1cbf-c4b6-436d-9d52-8def42b4bdae",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "8d04e58f-f933-466c-83a1-fc50aab55341",
          "status": "Created",
          "code": 201,
          "responseTime": 12652,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "25cce799-1df0-4f42-b886-11f4912e2786",
        "cursor": {
          "ref": "e4ffd188-7fb5-42f0-b077-bf9fefa7d0b2",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a59c2847-6069-48e3-859a-3f0e9cab3afd"
        },
        "item": {
          "id": "25cce799-1df0-4f42-b886-11f4912e2786",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "0f593300-691c-4c3a-8324-8d2c90ac1602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "b8afd081-6c66-4a81-9421-d8976fcd31b0",
        "cursor": {
          "ref": "2987ae4b-f20b-4766-82b5-a54ff2c9e771",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "e74bdb41-0246-48e8-a5af-8905a7302f2a"
        },
        "item": {
          "id": "b8afd081-6c66-4a81-9421-d8976fcd31b0",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "6cb4b1e2-99a4-4a2a-b033-422619405c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "042f44b7-900d-4f14-91e9-5ad92c6d4adb",
        "cursor": {
          "ref": "18241285-9e14-48d2-b0fa-fe42c90274b3",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "fed9b6a4-7a26-43ef-ab1c-0525004db691"
        },
        "item": {
          "id": "042f44b7-900d-4f14-91e9-5ad92c6d4adb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f88f2b48-1aa2-4748-a30c-d2ad01bfe171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d68a273d-57f9-4be9-ae05-6960d2b705ab",
        "cursor": {
          "ref": "0e6e43fa-396a-4c36-90e0-0e7eaf2c7bb0",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "78843806-6747-4e7b-afef-51c48add5c8c"
        },
        "item": {
          "id": "d68a273d-57f9-4be9-ae05-6960d2b705ab",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6967463c-189a-41e4-acad-95b42053bcab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24bc777f-4cc6-4b16-9411-7789175576f7",
        "cursor": {
          "ref": "2bb7c7a6-7051-405b-b2a4-6ecfd55f76f2",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "1c5f3b0d-14db-4bee-a88c-fd785b348fb0"
        },
        "item": {
          "id": "24bc777f-4cc6-4b16-9411-7789175576f7",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "fbcacb34-80a7-4c6b-b3cf-b4b6e3b6b893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41cb9d26-ad9d-4639-939c-8f195726301f",
        "cursor": {
          "ref": "da7fd683-7c51-4a68-b53d-a30e6540ec9b",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "07f79e2a-5ef9-48fd-b732-421baa425fee"
        },
        "item": {
          "id": "41cb9d26-ad9d-4639-939c-8f195726301f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8932995e-fa52-4bc5-91d0-323cb54a5687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1556e6a-ef7a-4119-8303-d45b4beb7efa",
        "cursor": {
          "ref": "0bf3ae7d-413d-4dc0-9136-5629fda8ce43",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "9c28a681-0981-46ad-a5a1-9c3553554bab"
        },
        "item": {
          "id": "a1556e6a-ef7a-4119-8303-d45b4beb7efa",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8bad4f82-f7d0-4548-83d1-5e9249f71a9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dea272a-3acb-4a3f-b357-24d3f0264546",
        "cursor": {
          "ref": "787de40c-6499-4f43-b0ec-1d231c2e9953",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "4780a6be-ec73-4612-ae15-763e741cc9ff"
        },
        "item": {
          "id": "5dea272a-3acb-4a3f-b357-24d3f0264546",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3954fed2-7e51-438c-9a7c-60d3a74608ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6654c2f1-0afc-4d60-b67a-7871fa0cceb7",
        "cursor": {
          "ref": "57cda503-a624-4e7a-a4b0-374a333c33b7",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "4dd1bf19-f29f-492c-b6da-3c7cf68930a0"
        },
        "item": {
          "id": "6654c2f1-0afc-4d60-b67a-7871fa0cceb7",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "01e62dd3-6c29-434e-9305-7e82a2ec478e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00f6737d-64ac-471e-9beb-1ee9fc3fc12d",
        "cursor": {
          "ref": "a7cf8fe7-50bc-4074-9fcf-fac77cb627d2",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "db04daff-0fb9-46c1-aa0e-67e063f2b10a"
        },
        "item": {
          "id": "00f6737d-64ac-471e-9beb-1ee9fc3fc12d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e6d77027-c574-4993-a5a1-e3071255e2f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab617602-7380-4196-be06-db42ae143b7c",
        "cursor": {
          "ref": "420a4342-1903-4c30-a159-5e91d15a6224",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ada8c7e3-bd2b-4831-8303-29fc5688c8cc"
        },
        "item": {
          "id": "ab617602-7380-4196-be06-db42ae143b7c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "69494c1c-3c05-42cf-9a69-da06bf7e0878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2407778e-772b-4a1b-a39c-f2eb450157c0",
        "cursor": {
          "ref": "d852ccf2-6191-436e-bf04-16223166bda9",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "431c4517-462a-4053-9ce4-51e82746ad45"
        },
        "item": {
          "id": "2407778e-772b-4a1b-a39c-f2eb450157c0",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2a9f951c-c89f-406a-a328-8a3797e0fc0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf4d041-c841-44b7-8f5a-2792ebea0d43",
        "cursor": {
          "ref": "693efd2f-43e0-4a99-aa52-74c7168bb692",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "dc09754b-6ccc-4d2e-aac8-fbb7b701b7ed"
        },
        "item": {
          "id": "6cf4d041-c841-44b7-8f5a-2792ebea0d43",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "45bf9eed-b183-4e0e-bb38-efb0b4df82b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "591b2c0d-dc81-4cc3-ae7a-77b2fd9271c5",
        "cursor": {
          "ref": "a40f2aeb-ee43-4477-9cbc-1f8d825681ce",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "368c937c-a3c3-4ab2-a12c-cfc91ec3d49e"
        },
        "item": {
          "id": "591b2c0d-dc81-4cc3-ae7a-77b2fd9271c5",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "49b60f08-e9cf-43e2-9e60-033d6230edbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e36e4ee-c805-454e-96fe-44992af047d3",
        "cursor": {
          "ref": "77792ecc-4390-49b8-a407-ca9a661ac259",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "1a18c574-7b99-47ee-a97a-43b596235676"
        },
        "item": {
          "id": "6e36e4ee-c805-454e-96fe-44992af047d3",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "df560679-41f0-47fe-bcdc-71e9b4d1e718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff9a216-f6c6-4268-9946-3d585492ea8d",
        "cursor": {
          "ref": "b7f5849a-75c6-4f34-bc43-b3087f0a8449",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "3de7ff36-1620-4ee8-96ef-53aacdec2d50"
        },
        "item": {
          "id": "dff9a216-f6c6-4268-9946-3d585492ea8d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ca276f33-2616-457b-950a-a1b2e0c353fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2253f470-45a2-4529-8b5b-50cb5ca2765a",
        "cursor": {
          "ref": "2a897d1a-8585-4057-8e91-8d9fc436e020",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "9262b76f-edbc-4a37-afb2-5ac295d9a513"
        },
        "item": {
          "id": "2253f470-45a2-4529-8b5b-50cb5ca2765a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "545fbc9c-c6d1-4c2d-9acd-385157b48724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c75e934-499a-44f4-95bb-71da8c681945",
        "cursor": {
          "ref": "8950c5eb-d6bc-4d60-9f06-0362cc026f85",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "dff402c5-aa17-4af2-9906-dc9cecadd572"
        },
        "item": {
          "id": "4c75e934-499a-44f4-95bb-71da8c681945",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6888dbc4-cc5f-44ae-8835-85e8adc26fa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d2155f-3a3b-48c8-9be3-4bc7d4cf58a5",
        "cursor": {
          "ref": "ad1f933b-88fc-43cd-a1a9-e988214b0ad2",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "d4de2b90-6000-4195-b105-8a7321402828"
        },
        "item": {
          "id": "15d2155f-3a3b-48c8-9be3-4bc7d4cf58a5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3088e73c-0ec8-41c8-a412-fe9f7c8fd89c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 41,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "7018d485-d14a-475c-97f2-2d4eba277b12",
        "cursor": {
          "ref": "32116aa3-6848-49fd-92a7-d3d697507a1d",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "91b35a27-cb51-4494-9207-0e61b0e2b168"
        },
        "item": {
          "id": "7018d485-d14a-475c-97f2-2d4eba277b12",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b67f5405-21fc-4c9e-9ea4-da372a842121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b27c54e-a8d4-45bf-b8fc-b82bb3c0d2fa",
        "cursor": {
          "ref": "87f27e7a-517b-496d-8b9a-84f2ff0f8296",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0d96e2e6-cb20-4a74-aa8b-9aa8b520a082"
        },
        "item": {
          "id": "0b27c54e-a8d4-45bf-b8fc-b82bb3c0d2fa",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "913e468b-f0b6-41ed-b04b-2386d32d5e5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bdbd61e-afb4-4857-afab-2126747feb98",
        "cursor": {
          "ref": "3192c708-0dfd-4d5d-92a7-15c398cda157",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "18fbe1e9-e65f-4fb2-89c1-5312f3c82fe7"
        },
        "item": {
          "id": "7bdbd61e-afb4-4857-afab-2126747feb98",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "cae5155f-97ac-42fe-86b4-69350e671bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c21ec6f1-50ec-43f7-9d6a-72b211ddbdcd",
        "cursor": {
          "ref": "9bbc2ab5-8fee-46e2-8528-637401ac3d43",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "61137a40-0e23-475c-8235-b384387c5397"
        },
        "item": {
          "id": "c21ec6f1-50ec-43f7-9d6a-72b211ddbdcd",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e9b03c53-355b-4343-acb4-f6ef65ff9c3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc7e8b9c-0014-48ab-a7f8-b0f8f06221b9",
        "cursor": {
          "ref": "4be4c937-22db-441d-880f-149e3f53278b",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c14a7360-2f25-4aa2-869f-e5980590209a"
        },
        "item": {
          "id": "cc7e8b9c-0014-48ab-a7f8-b0f8f06221b9",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e354ccbf-cd7e-4047-bd81-065a9ea50a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7747321a-44f1-4200-a75e-eb951aa30cc6",
        "cursor": {
          "ref": "d717b662-3738-4bfc-892f-c43b518a06cf",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "1c0572ab-71a9-4568-b9ac-532457949a73"
        },
        "item": {
          "id": "7747321a-44f1-4200-a75e-eb951aa30cc6",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "51c213c2-05dd-46f4-a54f-a6317575b8e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da81acea-4eb0-445f-8415-6e6bf38da6e9",
        "cursor": {
          "ref": "9c9fa158-0cb3-40c4-b384-7a35fee07e36",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "39d2618c-5082-4ca2-a440-7b73fcbc3e09"
        },
        "item": {
          "id": "da81acea-4eb0-445f-8415-6e6bf38da6e9",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ea030f65-7c1d-4412-a150-b528151b16eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af5cdd89-24e2-480e-bc84-bc18ff7afb22",
        "cursor": {
          "ref": "b93662a5-e6cb-48ce-99b3-f409bb87a0ad",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "cbd5b992-1b6e-4032-a8f0-5e456805ff2f"
        },
        "item": {
          "id": "af5cdd89-24e2-480e-bc84-bc18ff7afb22",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1fdc2463-b52a-46c5-962a-1e85429b86cd",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 54,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "19558c88-5a13-4d5a-9aeb-e7c95ea5568f",
        "cursor": {
          "ref": "076e53a9-132e-4a65-a568-188ffa6e5e67",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "0122f467-385c-4acb-b0fb-84b3c34406e5"
        },
        "item": {
          "id": "19558c88-5a13-4d5a-9aeb-e7c95ea5568f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c30f3393-e0f3-464c-b4ba-aa8ed1ca6592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b806d627-90c4-4fcf-9b43-93e27d174927",
        "cursor": {
          "ref": "8982abf9-23a8-4039-9d91-1add1738a08d",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "149b3021-32c1-4670-8d9a-a1f46c609c03"
        },
        "item": {
          "id": "b806d627-90c4-4fcf-9b43-93e27d174927",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8e2c14d7-4a34-4f6b-94ac-6ded5b10f991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c68363fe-2742-472a-aeba-6e809ae9bbdb",
        "cursor": {
          "ref": "6bcc4231-806b-4486-9f10-5c668de65e82",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "f3530830-c821-4737-9a20-5775cb2a0135"
        },
        "item": {
          "id": "c68363fe-2742-472a-aeba-6e809ae9bbdb",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4b89faf1-3fbc-423e-beca-7b23d152c86c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f54beefc-c181-494d-9757-cc39b3686925",
        "cursor": {
          "ref": "fc7daa3d-e1d0-4899-bf93-8a1b3b69bef1",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "73cf5c21-9684-49f9-9cc8-a43ab1ff37bf"
        },
        "item": {
          "id": "f54beefc-c181-494d-9757-cc39b3686925",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "bc924b93-982b-48fa-aa14-b23b5ca3f030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b620e76-b188-4c6f-b60f-539cd8b54f56",
        "cursor": {
          "ref": "875ba17b-1fab-47c7-91a2-c6de73d54eb3",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "d042130c-706c-47a7-a39f-0a849502af3e"
        },
        "item": {
          "id": "6b620e76-b188-4c6f-b60f-539cd8b54f56",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "df075d4a-d220-459c-9744-2409a3e7c7e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36ca3f7e-5860-4248-b46b-41718b4d6bef",
        "cursor": {
          "ref": "08a21e66-03cc-440f-9309-bf9a850ed7c0",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "338b7b46-00ab-4119-bea9-776235734e81"
        },
        "item": {
          "id": "36ca3f7e-5860-4248-b46b-41718b4d6bef",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ce90b5b1-cd9e-4911-912b-613b1726d2b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c989e437-d1e7-4224-b04f-cb941e47da3f",
        "cursor": {
          "ref": "819c5bd9-1add-4d79-8c3f-49339140fc42",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "661becb7-e5a8-4357-b522-a63e6eeb2c8b"
        },
        "item": {
          "id": "c989e437-d1e7-4224-b04f-cb941e47da3f",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "ad5ef69d-469a-4903-8bac-ef1dcbbe3c66",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 40,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "6331c574-78f7-4396-a1ed-61c47bf706f9",
        "cursor": {
          "ref": "4f124417-06f8-44fb-9a0f-af2a6a132cad",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "b907c040-0854-49b1-ada8-a8089c86e15e"
        },
        "item": {
          "id": "6331c574-78f7-4396-a1ed-61c47bf706f9",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "7123f0eb-60cf-4619-ab86-eaad55b9676a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "b03ddf6b-d318-4aa4-bf60-4f310991c796",
        "cursor": {
          "ref": "288e4711-a236-4ba4-a8d4-4e045473908e",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "b855b14b-1c48-4736-a5b3-266698803ace"
        },
        "item": {
          "id": "b03ddf6b-d318-4aa4-bf60-4f310991c796",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "6a07bf40-4d84-44fe-8969-bbd48f1b4654",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "61eca6ef-1af1-4d2e-bdeb-b0e4e33644b9",
        "cursor": {
          "ref": "c4ddcf5c-7942-4183-8726-0394f6d9e510",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "f88ccb14-b44b-4255-90a2-2540ed3ddd9b"
        },
        "item": {
          "id": "61eca6ef-1af1-4d2e-bdeb-b0e4e33644b9",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "9517f687-47f8-47d1-9f81-733d7a89bce4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 48,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "be610f0f-f615-471d-a87b-66049ba4cdbb",
        "cursor": {
          "ref": "826108b5-c013-43fa-98ca-5046143c9456",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ff16f41f-8661-4621-8ddd-81f945714d06"
        },
        "item": {
          "id": "be610f0f-f615-471d-a87b-66049ba4cdbb",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "cad59d5a-c54e-4e5c-9abc-4f25b63c5de1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 57,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "916babf8-4944-4549-acc1-d90a3fdac8e8",
        "cursor": {
          "ref": "161a21e0-398a-4b32-9d50-95952d74c302",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a2bfc94d-4299-45a8-b562-9f761f2f813d"
        },
        "item": {
          "id": "916babf8-4944-4549-acc1-d90a3fdac8e8",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "e5c8a396-ba1d-4a7f-85fd-deceab28e44c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 51,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "e8e96b52-0c03-41c9-a9b0-65e5cbfa2b40",
        "cursor": {
          "ref": "4ccf56ec-0e50-4977-b9c5-d487fdbeaab6",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "06988c3b-b0b0-4940-b900-5b166066f8f2"
        },
        "item": {
          "id": "e8e96b52-0c03-41c9-a9b0-65e5cbfa2b40",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6ca10417-6184-416a-a1a0-2eb2555de451",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c16d556-8828-4ce3-9ce3-0a72793d97c7",
        "cursor": {
          "ref": "05a1e090-e4d6-4ac3-91d7-37a902207b9a",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "1d5860fd-b6be-474f-ac4d-693920cb8470"
        },
        "item": {
          "id": "0c16d556-8828-4ce3-9ce3-0a72793d97c7",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ef175afd-f1eb-481e-9281-2fbe05c88587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bfa058a-6c50-450d-b789-4f599c2514b6",
        "cursor": {
          "ref": "18a96093-e350-43f5-aab7-ab2160b807d2",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "20683ee6-455c-4129-9142-72ca2eab185e"
        },
        "item": {
          "id": "2bfa058a-6c50-450d-b789-4f599c2514b6",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "d52a890d-3fae-4dbc-b852-395011850ea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe3829e-4d9a-4699-a6f2-2a06015d9055",
        "cursor": {
          "ref": "c7388b9d-c801-4c41-8bcb-7dbc82afa7ab",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "9c9b802d-6077-4608-9f18-60fe9e7e3655"
        },
        "item": {
          "id": "7fe3829e-4d9a-4699-a6f2-2a06015d9055",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "7381ff1a-b4d6-45fe-a915-6912d12c7650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4739009d-190d-451e-9ff0-19b1a708c972",
        "cursor": {
          "ref": "d15c7eb6-fd8a-4721-a184-5e2a380b40d5",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "072f8cbf-793c-462b-9690-847b1e546fa3"
        },
        "item": {
          "id": "4739009d-190d-451e-9ff0-19b1a708c972",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d73ce5c5-b9c5-44e9-99cc-5de3bb0c316f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4abe792-c693-44c0-9ab2-5bdc767c84c0",
        "cursor": {
          "ref": "d5985017-df26-4f57-9946-24bd8ce7f57f",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "7e4d3486-2e2a-4b17-a8b0-de288068fe68"
        },
        "item": {
          "id": "e4abe792-c693-44c0-9ab2-5bdc767c84c0",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "5cdf10a1-ee92-464e-9b9b-91550ae1f33e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6996930c-337c-4466-a0e8-0c473a578ae4",
        "cursor": {
          "ref": "32ef1016-6f21-4796-838c-add4b72863ba",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e5a150ac-7d44-430e-b7a1-fe327815bf0b"
        },
        "item": {
          "id": "6996930c-337c-4466-a0e8-0c473a578ae4",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "10c53425-af6d-4703-8fc0-f1030fe17495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b691f364-ce0a-4c0e-8c4d-198f45cd5d14",
        "cursor": {
          "ref": "b0f1435c-baac-41b1-bae4-dda893b42c46",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "69a694a3-9367-4c76-999b-120b48a98097"
        },
        "item": {
          "id": "b691f364-ce0a-4c0e-8c4d-198f45cd5d14",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "782145b8-9db6-47f0-930e-f40a469d86da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "409f20cc-694c-463b-a6fe-8ba530401d73",
        "cursor": {
          "ref": "ace21031-83f3-416f-a031-f83883868140",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "624ee2d7-4b66-46ed-808f-b9f50a83577f"
        },
        "item": {
          "id": "409f20cc-694c-463b-a6fe-8ba530401d73",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "cd679b5d-1433-44c0-a3c4-5065e9c9883b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c73c245-5261-4eac-9405-f5cbc447fb90",
        "cursor": {
          "ref": "74223bac-7fc9-401c-a382-0edbedbddff6",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "01bfbff7-7aa8-4807-ab8e-5f911c475b69"
        },
        "item": {
          "id": "0c73c245-5261-4eac-9405-f5cbc447fb90",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ab0bfe25-d5c7-4d1d-87ab-46cf0aab5705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66d6e8bb-ad28-43a3-a8f8-32b6aeda364e",
        "cursor": {
          "ref": "52e11a84-a3a9-41a8-8bd9-7423669870fc",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "9a399af7-9533-47a8-9d51-79bf23a19a75"
        },
        "item": {
          "id": "66d6e8bb-ad28-43a3-a8f8-32b6aeda364e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "82634119-e2ad-4e2d-a67d-9e3a6160a602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b74456e-9206-4583-9745-63b3006eb27f",
        "cursor": {
          "ref": "d02ea938-d266-43cf-aeef-f5e09efc87b3",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "11323bc8-17ec-4bee-ab85-b78294236dcc"
        },
        "item": {
          "id": "0b74456e-9206-4583-9745-63b3006eb27f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "fbfe95d6-69dc-4ca0-a1b1-acf2ff3a8c9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9556872-1fc0-4d1d-9d5f-95bef08bcd45",
        "cursor": {
          "ref": "a821e80c-9d36-4fd5-88ed-1a5fa049c173",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "f4baf129-9479-4c9c-adfe-66030ed02502"
        },
        "item": {
          "id": "a9556872-1fc0-4d1d-9d5f-95bef08bcd45",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d145ee5c-d3eb-40b6-bf0f-5b066342e688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "800c9dc9-f91b-4e0f-8fc7-fceb82545a2d",
        "cursor": {
          "ref": "0797418c-e44a-43ff-93e1-d2be1e503362",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "bf3d8d28-a062-4165-a266-bf0250997b55"
        },
        "item": {
          "id": "800c9dc9-f91b-4e0f-8fc7-fceb82545a2d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "82ffadec-4252-46d9-9b16-ab271da9cb0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d8f512f-4c0c-4df2-a014-aca6e922ed54",
        "cursor": {
          "ref": "e9335c6b-68ae-4878-883f-8a5b9af7b56c",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "0975534a-2bde-477a-b2a8-a090e23b18ce"
        },
        "item": {
          "id": "1d8f512f-4c0c-4df2-a014-aca6e922ed54",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "363d4b7a-ec8c-49d7-a983-1f941c8ffab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb4d6e3-0e62-4504-bd17-142d275c135d",
        "cursor": {
          "ref": "27b0deb3-58ea-41b0-9255-a97ee2bf16a5",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "6da680b4-56f9-486a-9859-ee90ea085f7f"
        },
        "item": {
          "id": "8eb4d6e3-0e62-4504-bd17-142d275c135d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "694b256b-ce30-4dd4-8d8c-01dd8ab0b48e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dea260b0-86ba-407a-bdc4-c4ddde7f4e8b",
        "cursor": {
          "ref": "8971f4aa-44c6-46ab-a47c-7bd9d1b44004",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "7fe8c044-a2cb-4d27-91d3-bbb9db5fa087"
        },
        "item": {
          "id": "dea260b0-86ba-407a-bdc4-c4ddde7f4e8b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "55c550d7-ae71-483c-863c-fe134c107134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b6b142-c8a3-4a5a-af92-ceae499fc07c",
        "cursor": {
          "ref": "0651de5b-c895-4fdc-9d3a-420b4008012a",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "02d88e7c-3588-47cb-933f-d9f8e33b6ce9"
        },
        "item": {
          "id": "f6b6b142-c8a3-4a5a-af92-ceae499fc07c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9f9518fb-f8c8-4fbe-bdd7-f2499c8beed5",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "8b7eb8e5-0b7d-46b8-b4a3-43b551062428",
        "cursor": {
          "ref": "0aaab69e-a9af-4c04-80eb-dabf74675bd3",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "9b1c5eef-0fcc-46f6-95c4-ec7942c6ea8e"
        },
        "item": {
          "id": "8b7eb8e5-0b7d-46b8-b4a3-43b551062428",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "c1ef078e-2219-476c-9c99-96aa1dd92fa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44edcf7d-9398-45d4-9631-b8facff67396",
        "cursor": {
          "ref": "5b81080c-59f0-4129-8904-4c3048a59d25",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e3231640-8403-44eb-b743-586f3cc3463e"
        },
        "item": {
          "id": "44edcf7d-9398-45d4-9631-b8facff67396",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "db59756b-5880-4c16-97ba-1ceabd9cdacf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aacd4ddd-05ac-44c2-8c3c-8e4604dd5a54",
        "cursor": {
          "ref": "25dc1731-796b-4de6-8608-50bd12f012f9",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "0149e052-c861-4f97-b1f5-8ea71aa3c98d"
        },
        "item": {
          "id": "aacd4ddd-05ac-44c2-8c3c-8e4604dd5a54",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "22e357ff-4a89-402a-b544-320af562b76c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "091b73e7-473d-4789-8834-03721119075b",
        "cursor": {
          "ref": "316232c5-a6ec-4a35-9884-f4028229696d",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "374ddc48-7cdf-4474-bc11-538e92da0a78"
        },
        "item": {
          "id": "091b73e7-473d-4789-8834-03721119075b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "f486184f-d7a3-40df-ab88-fb82d3f8755f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "256ac716-c282-4e25-aa25-29ba6aeef50b",
        "cursor": {
          "ref": "2bfc4c3d-f940-4e5c-a394-583feaa00b5a",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "cbdca86b-d407-424a-9798-81ff7c83883b"
        },
        "item": {
          "id": "256ac716-c282-4e25-aa25-29ba6aeef50b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "f58d136f-7e86-4d1f-84c6-6f045314498d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc545d49-a60d-4495-8e6b-c84f419b5aa9",
        "cursor": {
          "ref": "b9e31d65-25c1-42d7-9e07-c8ae0efb61fb",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "032015c7-9ce8-4fad-9141-5f5f0a2cd8c6"
        },
        "item": {
          "id": "fc545d49-a60d-4495-8e6b-c84f419b5aa9",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "61f39c5c-3440-4ba4-82d5-5849797c56ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2818e67c-a1cb-4bde-b926-58889fbdce00",
        "cursor": {
          "ref": "e10bc11e-d035-4952-83a5-4b3331d78e2a",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "8524ae56-b84a-433c-a7c1-94d4c3da3394"
        },
        "item": {
          "id": "2818e67c-a1cb-4bde-b926-58889fbdce00",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "af209d1d-8f6c-4379-bdc2-a94b58d59d83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0aa34ca-f059-43e5-b216-ab889ec10071",
        "cursor": {
          "ref": "0f49718a-66c1-4814-b2fa-c529291beb5c",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "bbf2ceda-9bc6-45d7-96c3-5abdc97457f2"
        },
        "item": {
          "id": "b0aa34ca-f059-43e5-b216-ab889ec10071",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "bd89eb17-ccfc-4036-9fac-6eb498ab28db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a432272-7f9b-4d94-8d12-1afc7c03f40c",
        "cursor": {
          "ref": "02de5d08-4002-40d1-99ac-c9e08b5fabf2",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "1d6c8f42-c3b5-491c-807f-5a2bca925f77"
        },
        "item": {
          "id": "4a432272-7f9b-4d94-8d12-1afc7c03f40c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "40727cbb-d425-4053-b980-6a5802d3b75f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f50cfe23-14b1-4a4b-af39-5c605b97387c",
        "cursor": {
          "ref": "73dbcf2e-5e79-4dad-a13b-d67bb89502d0",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ad923b1d-1713-485a-9f3b-670678d1862e"
        },
        "item": {
          "id": "f50cfe23-14b1-4a4b-af39-5c605b97387c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "2fc69c1a-b06c-4a03-821c-c8f05f28081a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "695ec7de-2ed6-447a-aefe-db5255a8feb8",
        "cursor": {
          "ref": "e812bcec-eb94-4408-9870-0bee0fc3e6d3",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b3e3f820-bc04-4d3a-96aa-0caf431d5b04"
        },
        "item": {
          "id": "695ec7de-2ed6-447a-aefe-db5255a8feb8",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "1ebc9929-6b54-4f43-848e-59d0a465991f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a32a5169-c9e0-46f5-97ba-4610129430c4",
        "cursor": {
          "ref": "9586fdf3-094e-4c3b-b38f-cf9ae6698da0",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "cab9dc25-e6a7-4d15-82bf-6f23d6fd5bf5"
        },
        "item": {
          "id": "a32a5169-c9e0-46f5-97ba-4610129430c4",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "efe1f6bc-3f60-4561-b34e-935f837ad5c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae9689f-5c85-4747-8b7b-f59f95d13510",
        "cursor": {
          "ref": "af8d2de7-3a39-46e1-8dcc-461c2dcada87",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c772ef7a-d5c9-4a5a-8fab-89344e8444d5"
        },
        "item": {
          "id": "6ae9689f-5c85-4747-8b7b-f59f95d13510",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "86f7cdd5-4fae-43cc-8f85-34d35e418ecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b109a0f-ab40-4b56-8ab1-1b629077385a",
        "cursor": {
          "ref": "ce79d718-a770-4e57-b89f-89304323c3aa",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "64c4abac-acf4-4680-b623-7da0ec671d5e"
        },
        "item": {
          "id": "7b109a0f-ab40-4b56-8ab1-1b629077385a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "da014db6-e4a4-4d16-910b-5a2768a9b500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "457482b0-7288-44d7-a3d6-1c68ae6b468d",
        "cursor": {
          "ref": "035d95b5-f49e-4884-a212-29f544fdf0af",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "67f98ab9-3095-4c78-9063-ac8f173d3b59"
        },
        "item": {
          "id": "457482b0-7288-44d7-a3d6-1c68ae6b468d",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "9859e764-ce56-4043-929b-aa0695f9ebe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63bc1773-7a39-46b4-8976-210cafd43b34",
        "cursor": {
          "ref": "b76d2750-47db-4656-86c3-b8e085aba28c",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "7964d6d6-500b-4167-8be0-4cf6d280970e"
        },
        "item": {
          "id": "63bc1773-7a39-46b4-8976-210cafd43b34",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "2b017f55-e3a2-4ee2-ba35-a605797c0c3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8219ef02-3867-4ab4-9417-a8bac1407c55",
        "cursor": {
          "ref": "2f4eeee8-0893-4bda-9b3a-b5718a409a79",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "52c3e852-6224-4c3e-b872-f2a245215413"
        },
        "item": {
          "id": "8219ef02-3867-4ab4-9417-a8bac1407c55",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7c9f0961-d648-46e5-8ebf-af3c7cdb2196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19412c5e-cca0-493e-89fe-8bb647b8e00b",
        "cursor": {
          "ref": "314939f9-dba3-442f-800a-4c22a0bd47d8",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "d5e125a5-a829-46b3-bdae-794b286cf24f"
        },
        "item": {
          "id": "19412c5e-cca0-493e-89fe-8bb647b8e00b",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "5847de4e-3828-4f06-83c4-aee9f4735247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdf99087-3561-4de7-a715-16238543b375",
        "cursor": {
          "ref": "4364868e-32ed-4fc8-a0d2-a98f74070d5c",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "7d656d92-3692-4603-aba2-b754df5ad0cf"
        },
        "item": {
          "id": "fdf99087-3561-4de7-a715-16238543b375",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c6d8e613-a271-429f-b18f-b6712fe31937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f42c393-5b5b-445f-bc21-31e436df651e",
        "cursor": {
          "ref": "3236e7f0-f5cf-4705-a7e8-0abe1d789c7b",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d032c18d-602f-496e-a909-854a882c8606"
        },
        "item": {
          "id": "0f42c393-5b5b-445f-bc21-31e436df651e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "082ebfba-2a44-4586-bb7f-1031f9eda794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea83224-51e7-45a6-a43f-f88cca0bf60c",
        "cursor": {
          "ref": "e14fd761-2b41-465e-b496-327ab9bef492",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "8b488b4a-4ed1-4976-bb6a-78af67c3a58d"
        },
        "item": {
          "id": "8ea83224-51e7-45a6-a43f-f88cca0bf60c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "2d2bfe1d-bf01-4da4-81cb-9972ad5a8db9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2304b99b-3a3a-435c-8728-813656fbeb07",
        "cursor": {
          "ref": "becccc71-e8b4-46d3-bbaf-576475c8b033",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "387158a6-190c-4f41-ad75-f51807025593"
        },
        "item": {
          "id": "2304b99b-3a3a-435c-8728-813656fbeb07",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "dfb0bd59-0eef-4c8b-b6cb-ca46efd583b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee67d499-2651-407b-a6ba-a005ab907e87",
        "cursor": {
          "ref": "4f251c07-590d-45bc-bc1c-da3f3c01fdbd",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "52844422-118a-4bd9-98fc-ab38824292ce"
        },
        "item": {
          "id": "ee67d499-2651-407b-a6ba-a005ab907e87",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "240855d2-b0aa-45c0-97ed-f8ed25e66c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb474e23-afb8-45d5-9e25-ea214310ee2a",
        "cursor": {
          "ref": "9dcc95dd-7b2f-40be-8728-d6cd65950b62",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "6d079042-c0ee-4382-876f-42f91d8609a7"
        },
        "item": {
          "id": "bb474e23-afb8-45d5-9e25-ea214310ee2a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "33633733-dc03-45d3-86c9-fdd26df6c6de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8232b825-2ec5-406d-a198-b017ee2abf0f",
        "cursor": {
          "ref": "dd3b292e-57e5-4664-a536-8b2bcd2fed5a",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e92cee75-0247-4bce-988f-ffbe3b13bfdb"
        },
        "item": {
          "id": "8232b825-2ec5-406d-a198-b017ee2abf0f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "bcd47aeb-05f2-45e2-821a-69eaa9ec1965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97052391-198c-46e9-bb56-792692fb20ca",
        "cursor": {
          "ref": "b9d01e7d-7393-4539-aeed-4c6b6d11e620",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a65019ef-4567-4a6d-b2ad-5ce096b2f52f"
        },
        "item": {
          "id": "97052391-198c-46e9-bb56-792692fb20ca",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "2e11e975-2f7f-41b4-bb27-a108c227b011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f89bd39-be1d-4736-846d-b13eacdf02c0",
        "cursor": {
          "ref": "091f2853-4f18-4ec1-bbc7-ded37450a9ad",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "c566e397-927b-4d98-b721-0aff79dc9034"
        },
        "item": {
          "id": "3f89bd39-be1d-4736-846d-b13eacdf02c0",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "05a1260e-4ed5-43e5-81d8-d7bf92b2674c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 175,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d51e9c-a06f-4ca0-aa98-c8c41cf14fb4",
        "cursor": {
          "ref": "a93a8341-c1f1-4869-bd34-7b62ad049fd0",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "0b6d4d8f-03cd-4561-b8e4-9270e3a5c0fd"
        },
        "item": {
          "id": "43d51e9c-a06f-4ca0-aa98-c8c41cf14fb4",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "13880eb1-1cc1-4992-b7d0-4f2b46485f3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 144,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff357f81-5d28-4b4b-844a-f33e126f632e",
        "cursor": {
          "ref": "f9733afa-453d-485e-8869-2d605fb62517",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "9bced87e-6acf-4356-85d6-fed170faa16c"
        },
        "item": {
          "id": "ff357f81-5d28-4b4b-844a-f33e126f632e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "87000c2b-aed2-4d64-981a-727435baf2a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2671d68-b3ee-4dfa-86cf-fba29f2e4a33",
        "cursor": {
          "ref": "489d9264-e70c-4bfb-a4d9-7e45760a56f7",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "ca64fb3a-e30e-4954-9c0c-e75685d8a565"
        },
        "item": {
          "id": "f2671d68-b3ee-4dfa-86cf-fba29f2e4a33",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "1f8546e3-55d0-4f8c-9284-0bf635f47f61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad0ce066-836d-4ebf-9001-91eb42254b8b",
        "cursor": {
          "ref": "c62bba68-a6e7-4f6b-866b-74a6245396a5",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e7eef9a8-15da-4e8a-9c85-857f8cece847"
        },
        "item": {
          "id": "ad0ce066-836d-4ebf-9001-91eb42254b8b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "fb6fbff3-d2bc-4a81-a20d-a4ce00be6d62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2119924b-a3ed-4bfc-b436-379b3a31eb6a",
        "cursor": {
          "ref": "7ef430d0-67be-49bc-9db6-09c7011a12d7",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a60d2f20-765a-4cb4-a71b-1353aeb44b98"
        },
        "item": {
          "id": "2119924b-a3ed-4bfc-b436-379b3a31eb6a",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "bdd1ab85-83c5-4bef-a31a-f1b327cd1506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39e54286-f025-4cc7-8267-358a006c7838",
        "cursor": {
          "ref": "6cd09e53-e5f2-45da-aae2-b7add15b269d",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f1187fb7-becf-4279-bb78-6a714d0305ae"
        },
        "item": {
          "id": "39e54286-f025-4cc7-8267-358a006c7838",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "28988e4f-eca4-4db9-a26d-0bfa9e86be6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33c985a-0578-45fa-9a9a-47bcd76f9449",
        "cursor": {
          "ref": "39db796a-e2f5-40c7-bdb5-f2ec49f84a36",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "494e1d99-2a3e-439f-a547-196dbf8f3e77"
        },
        "item": {
          "id": "b33c985a-0578-45fa-9a9a-47bcd76f9449",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a9f91c63-c08f-476f-95af-9ba0e3af1dff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e55ae23-cc7e-451e-ac32-a69ee840488a",
        "cursor": {
          "ref": "1bdaf1a1-5489-4f5f-b18d-ad8892387772",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c64e80aa-161b-4dc2-aa93-3561f3cbe466"
        },
        "item": {
          "id": "2e55ae23-cc7e-451e-ac32-a69ee840488a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "46e98cd0-7069-45a8-b0d0-c2f6fd529e08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "197a9a60-7f7e-420d-973d-bf236fb6f48b",
        "cursor": {
          "ref": "f09997b0-8f7f-45bd-8323-43fb8e92d1b5",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "9220dca2-8417-4917-848f-d8a97067146e"
        },
        "item": {
          "id": "197a9a60-7f7e-420d-973d-bf236fb6f48b",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e8ae742f-ab22-444d-afff-64d255695986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52ea301d-a923-4a96-94d5-6222f1b4ff4c",
        "cursor": {
          "ref": "d82581dc-5efe-4dbc-829e-69facddbaeda",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f0d24675-6eb7-4f7c-b659-020bf135da5a"
        },
        "item": {
          "id": "52ea301d-a923-4a96-94d5-6222f1b4ff4c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "765fef88-5332-4d05-9475-a8625eb203e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a401a7c-7c59-47b0-8b21-b40607776df4",
        "cursor": {
          "ref": "0ab56870-6cf8-4a7e-8fbc-cc51b871b04d",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "5b281397-1f8f-471f-9dd9-5d814af4c583"
        },
        "item": {
          "id": "0a401a7c-7c59-47b0-8b21-b40607776df4",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b3c16c0f-05ea-4945-b2c6-93879a3cbd27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ddd58db-d159-44c4-a1bf-2583b73db43f",
        "cursor": {
          "ref": "187a954b-dcc5-4160-bfe2-9feb4bafa4c7",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "397c7785-29ed-4a12-857f-1f0cbe5c3514"
        },
        "item": {
          "id": "8ddd58db-d159-44c4-a1bf-2583b73db43f",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "74e4da93-386e-4cac-8871-7ea7e9a719e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e41d4d-4753-4ec8-9acc-91c68fadbd2c",
        "cursor": {
          "ref": "4cb9a16e-7ece-4f83-9775-e38c660b16e9",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f6bb404e-4e13-4272-873b-4d39ef7c37a5"
        },
        "item": {
          "id": "a9e41d4d-4753-4ec8-9acc-91c68fadbd2c",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "aabd6b83-7f34-4360-b877-40de5f953c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88c03b4f-267d-4d03-aa25-8c4880cd672a",
        "cursor": {
          "ref": "5a29c19f-b6b4-4fed-8ed2-59b572ba0a78",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "4da25eba-c2e4-4066-b7a7-df35544e871c"
        },
        "item": {
          "id": "88c03b4f-267d-4d03-aa25-8c4880cd672a",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "06f41e67-4401-4e18-9e2d-96ad0ffe1234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c3abb0-2b57-43db-b5d0-4dff14a81acf",
        "cursor": {
          "ref": "05820ace-fdee-4be8-a58a-79b9e1e6b810",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "8cc8eaa9-8e4e-4b24-97f9-91913dae6578"
        },
        "item": {
          "id": "d3c3abb0-2b57-43db-b5d0-4dff14a81acf",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "02e47cd2-d32a-4cc9-8354-9acf896058f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1227d127-7e52-4217-8f36-cdf388bd74e3",
        "cursor": {
          "ref": "dfdefb91-cb99-4d5f-a38d-05d6eb187ba7",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "0630a647-213e-4fa6-a00b-8b4516e6d32b"
        },
        "item": {
          "id": "1227d127-7e52-4217-8f36-cdf388bd74e3",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "65bcdad0-c3e8-4d24-bcde-10468c5b6e49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d56f395-52dd-403a-b821-58c422d06664",
        "cursor": {
          "ref": "0e3c2aba-ed80-494b-8fcf-d0410bcb436a",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "92523cc8-12dd-4a4f-bd4b-dfae30591dcb"
        },
        "item": {
          "id": "5d56f395-52dd-403a-b821-58c422d06664",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "6b4c78ce-ac7e-49e4-87bf-edbd12499068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f06a004-408c-4d9f-80c6-446f30f0dd46",
        "cursor": {
          "ref": "4108690a-a174-4651-9587-55aa4729c1e7",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "7755af05-7ff4-480a-9b27-93f8516499ee"
        },
        "item": {
          "id": "0f06a004-408c-4d9f-80c6-446f30f0dd46",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "259d49cb-5111-454e-aa4a-3928c7fed68a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "454dfbc2-18ce-4460-80ba-0d3160f93652",
        "cursor": {
          "ref": "af5697e4-cfdc-4243-b74f-dde37ffc33ad",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "04a4d9df-9edd-4cbc-bfa7-5e99c4f7aba8"
        },
        "item": {
          "id": "454dfbc2-18ce-4460-80ba-0d3160f93652",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "041218d9-cc4f-43cb-827c-363cae4d3484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c318f79c-fb84-4291-bbd6-d5563652cdf7",
        "cursor": {
          "ref": "5f5dd9ec-c111-4116-9752-d0f67e9895af",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b406b2a9-4284-42fc-b7ed-8dfbdafd1920"
        },
        "item": {
          "id": "c318f79c-fb84-4291-bbd6-d5563652cdf7",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "28ff9254-cfe3-47a7-b051-b0388fdf23ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0fda5e0-4f86-4207-bdb3-792f1675dacc",
        "cursor": {
          "ref": "cd1b28ab-3f25-4c48-ab11-fd805c074e23",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "7098d722-4b11-4030-baa3-1d1948f08f12"
        },
        "item": {
          "id": "e0fda5e0-4f86-4207-bdb3-792f1675dacc",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "485e4e49-f45f-4e0c-906f-47daa8c1ec71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "261c874b-ee72-4ffa-8d1f-8c92fc093791",
        "cursor": {
          "ref": "97a523c6-b12d-4d5d-adaa-9d2c2284d6cd",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b281af9d-4e25-4b84-a8aa-f78c39533e14"
        },
        "item": {
          "id": "261c874b-ee72-4ffa-8d1f-8c92fc093791",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "4a267576-fe9b-4de8-ac20-344b32a061ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "858f5d5d-ee38-43ea-ad00-aa09e31e2f01",
        "cursor": {
          "ref": "9fe076d6-d460-4be5-bb2e-dd2f42e312d4",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "54ac8cca-3db8-4ca7-ae4f-f1496e19d098"
        },
        "item": {
          "id": "858f5d5d-ee38-43ea-ad00-aa09e31e2f01",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "d442540e-f92b-4a8c-b44b-75083fd4c8c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e72e6ccf-5b13-44ed-9671-1bd4684f99c2",
        "cursor": {
          "ref": "14561647-45d4-47e7-9ad9-7d97f28597ca",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "efb4c748-2fb5-4121-abec-fcec7f99dd17"
        },
        "item": {
          "id": "e72e6ccf-5b13-44ed-9671-1bd4684f99c2",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "355f1ca4-8de9-4c9d-9bbb-f746ce2c5c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3f81a09-b1ea-4604-80bf-6e3791aa0431",
        "cursor": {
          "ref": "25fbf955-83f4-40b3-bfb6-18e04efd4657",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "9ec9afbd-a5f4-459a-acc8-2a376e9fb389"
        },
        "item": {
          "id": "e3f81a09-b1ea-4604-80bf-6e3791aa0431",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "4c11b95f-5d28-4c1e-9311-4bafc8f77ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c7f68e0-5ce1-4a78-98fa-786caa3ab374",
        "cursor": {
          "ref": "91732dc4-eb11-4172-83e7-1c957f61083d",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "fd37c8bd-3141-413d-b306-38e6d1673971"
        },
        "item": {
          "id": "3c7f68e0-5ce1-4a78-98fa-786caa3ab374",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e627afe6-fae5-4e26-9f54-78e431b1e28a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8364c69b-994d-4293-98a0-96260105c501",
        "cursor": {
          "ref": "c30a1e06-2bc8-48aa-b1c4-8aa71941e386",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "28b2f636-f343-4b45-806e-c5a8a853cb65"
        },
        "item": {
          "id": "8364c69b-994d-4293-98a0-96260105c501",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "20021087-5983-4505-998c-e538cc8a0ba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6058d47-7ac4-46f1-a82f-080d24d41511",
        "cursor": {
          "ref": "4c9426aa-01fa-41cd-83b9-ca204ba958ae",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "33aba29d-5a6c-452d-a163-7b3a809b067b"
        },
        "item": {
          "id": "b6058d47-7ac4-46f1-a82f-080d24d41511",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7f5d81c4-c792-4b4d-9d06-18a162fc67b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5c8af8f-3742-4286-96c2-598bcf7c9ded",
        "cursor": {
          "ref": "9a4dfdd4-6ed9-4d56-b4a5-091941177f41",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "12934a27-f1ba-4638-8fa4-7287d7973b3b"
        },
        "item": {
          "id": "e5c8af8f-3742-4286-96c2-598bcf7c9ded",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "973a8145-1d34-4c97-b858-5965dfc56388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9aa70e2-8f23-4a67-81fd-7baee9f31cfd",
        "cursor": {
          "ref": "092adba7-ef09-4da7-8dbf-34c9d310056d",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "9d2a1e57-ee71-4816-a3a0-22bc34e3b4a5"
        },
        "item": {
          "id": "e9aa70e2-8f23-4a67-81fd-7baee9f31cfd",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "34452c70-d459-4623-8d51-a73dc318a9e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f69b6d9-81c0-468d-bc06-cfcd5fd5feb6",
        "cursor": {
          "ref": "ee609c5b-331e-430f-a7a8-b69be5719c6c",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "324aecd9-feeb-4dfa-b276-ef50c2e09598"
        },
        "item": {
          "id": "7f69b6d9-81c0-468d-bc06-cfcd5fd5feb6",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "223549cd-d86b-4467-b370-a4004bca6ee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d5c6656-a011-48e2-a54c-42d281ed7c9c",
        "cursor": {
          "ref": "26ae39c7-e789-4e4c-a42a-37aa5eb7ed7b",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "ff2bb671-83ef-4b0c-acdd-5d9e8a8ce7bf"
        },
        "item": {
          "id": "4d5c6656-a011-48e2-a54c-42d281ed7c9c",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "06dc60c2-3b6f-4939-8ab3-f3283816bc29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da450883-700a-48fe-a243-9e1578032a24",
        "cursor": {
          "ref": "87fa88b7-5333-42bc-bad8-eea73b185444",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "b6478c67-aec1-4311-b37e-96648d239114"
        },
        "item": {
          "id": "da450883-700a-48fe-a243-9e1578032a24",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "7fd22a93-870e-4230-955f-9603d1dc4af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25fd2451-e599-467d-b775-ec355b2b8267",
        "cursor": {
          "ref": "9a3248d2-ad44-4724-9c8f-60fb18ad365e",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d6c615c0-f355-47eb-82ec-393328a0ea65"
        },
        "item": {
          "id": "25fd2451-e599-467d-b775-ec355b2b8267",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "96aaed69-ea4a-4c7e-ae2a-c05b6acb1d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd4da72c-de7d-4dc2-862c-dea69184de15",
        "cursor": {
          "ref": "ab1da1d9-7a1d-4fea-a396-267053f48f75",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "5942edfb-ab23-417a-8837-e6da33457f26"
        },
        "item": {
          "id": "fd4da72c-de7d-4dc2-862c-dea69184de15",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "f2e600bd-3809-46d1-89f2-dd9c65cbdf00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da0cca34-cdd1-4f18-a9dc-66aa7895e94c",
        "cursor": {
          "ref": "73889fad-a76b-4220-bc10-4bf02febaf4c",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "d478946d-0841-42b4-8911-cbe8a872d381"
        },
        "item": {
          "id": "da0cca34-cdd1-4f18-a9dc-66aa7895e94c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "3176cdbc-8f31-40ca-b82e-7689126685ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffbe9e07-eb98-42d3-ab41-a96eaf6a1e29",
        "cursor": {
          "ref": "c88722bf-9375-4a77-829d-427eb572b0e5",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "1702bebb-ce98-47ca-94ab-aa68089fbfb3"
        },
        "item": {
          "id": "ffbe9e07-eb98-42d3-ab41-a96eaf6a1e29",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "97ddc77b-8997-45dd-8023-a81086a428d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1879fe06-2bbd-4347-825e-0cc04ea3fb1e",
        "cursor": {
          "ref": "9827a524-5bb7-4ddd-b322-050bb7651aad",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d2f2b7d1-1959-43f1-a73b-b0cdae819aa7"
        },
        "item": {
          "id": "1879fe06-2bbd-4347-825e-0cc04ea3fb1e",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "e93e99e4-764d-484b-beed-947eb423f361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e9ead5-a0a3-4d64-8bdb-aa09c72b4d9c",
        "cursor": {
          "ref": "c3c182a2-584a-4998-9ed6-462a9fa00380",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "5678462f-64ef-4da6-b88e-fe0aece69cc6"
        },
        "item": {
          "id": "80e9ead5-a0a3-4d64-8bdb-aa09c72b4d9c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "8a3dc7c0-3b17-4b7b-a507-99bc5f687a53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7200c659-51a9-40eb-bd76-4d96bf897411",
        "cursor": {
          "ref": "cdc09f84-d600-4afc-a07a-bd1082fbdea1",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "c80ea199-6f57-42ba-94ae-6a3c16f4353f"
        },
        "item": {
          "id": "7200c659-51a9-40eb-bd76-4d96bf897411",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "83593a33-d1e1-4d13-92dd-3e741d2b9346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "293c3539-640e-4fa5-bae6-1a9d2cdc7ffa",
        "cursor": {
          "ref": "9b854127-1516-4356-8351-c1b6b1054902",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "e5a108f8-684d-43c7-9057-dac49569d123"
        },
        "item": {
          "id": "293c3539-640e-4fa5-bae6-1a9d2cdc7ffa",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "681a880e-79f7-47a3-a04c-d3e2da44f6ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2734f5f4-9745-426d-917d-b6e162a0e850",
        "cursor": {
          "ref": "05026322-7b05-4969-acd0-a5b5ddb1b803",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "0b1dc01d-1a95-4833-af9b-d6b7a19dedc3"
        },
        "item": {
          "id": "2734f5f4-9745-426d-917d-b6e162a0e850",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "49733e51-19d3-45ed-bac4-9e98d0e20fb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14bead2f-ce43-4594-a00f-295700e6f7f9",
        "cursor": {
          "ref": "bed58989-ab5e-4bc3-aeb4-b485ca10c653",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "3dcd9376-130b-4e4e-bac3-0d333a257dcd"
        },
        "item": {
          "id": "14bead2f-ce43-4594-a00f-295700e6f7f9",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e7e422f0-6f90-4f4a-bb6d-33fc31a6c94f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef38214e-3fbd-410e-bae6-bd11948ae040",
        "cursor": {
          "ref": "cbb6a67d-6e24-4c6f-bf9a-5e3f3fc8f7cf",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e110154b-786b-4f46-aca6-b87944b5cc18"
        },
        "item": {
          "id": "ef38214e-3fbd-410e-bae6-bd11948ae040",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b01537bd-03f7-422a-b0da-9ee2f83157e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4089e13-67ad-4559-a6a2-cbbc1c916182",
        "cursor": {
          "ref": "37113412-253a-4678-be9a-e7857209ec84",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "7194bc1a-3f16-4266-b002-91d9518ac684"
        },
        "item": {
          "id": "b4089e13-67ad-4559-a6a2-cbbc1c916182",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "3017e5ed-8f04-4ab2-b62a-911f5b1f466e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dcf9f45-2fd2-41e3-b9f0-5c39a7aa9891",
        "cursor": {
          "ref": "89657480-27da-4d82-8fe6-f3d1f978cc4f",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "61509a3a-796d-4d98-bb32-cde3b57b4082"
        },
        "item": {
          "id": "1dcf9f45-2fd2-41e3-b9f0-5c39a7aa9891",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "1c1a2f55-d15d-4fee-a141-328c5f54c2d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a764a76-d45a-4351-974b-d4f7215acaa6",
        "cursor": {
          "ref": "8a1f3d74-8c37-4940-b515-0374a312ad97",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "09b64e16-7394-488b-bdd3-099029939de2"
        },
        "item": {
          "id": "5a764a76-d45a-4351-974b-d4f7215acaa6",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "b98e30f5-91d5-4bbd-8fef-b34053b046ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e6fc3b9-8c18-4437-a8cd-e9d37afb82a8",
        "cursor": {
          "ref": "6bd1bd30-e1ec-43fc-bc20-d7edb62c8dfb",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "fc3ed2c4-e9a2-4710-a229-ae96c13d4b11"
        },
        "item": {
          "id": "7e6fc3b9-8c18-4437-a8cd-e9d37afb82a8",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ffc3afd4-d4ea-420c-b117-9b20304a0e69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0823bba-2ba9-425b-95fd-0dc341dfffa4",
        "cursor": {
          "ref": "f62e2219-e325-4d1b-b3af-1e1f119b940f",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "50132b07-e691-47a2-9021-9370496ecca3"
        },
        "item": {
          "id": "b0823bba-2ba9-425b-95fd-0dc341dfffa4",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b4df37e3-310a-4425-970f-b694091e2b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc784d1-1585-4982-95af-28dfa4e91d77",
        "cursor": {
          "ref": "5468dd78-5fbf-4b54-b468-08bf7ef8a27e",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "ee95abe3-c861-41ca-8f8d-8315dc4b1f0f"
        },
        "item": {
          "id": "8cc784d1-1585-4982-95af-28dfa4e91d77",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ee505cd3-20fa-4714-a31b-d65d5d1d190d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cdef00e-f937-4444-a753-4fa2109eccbc",
        "cursor": {
          "ref": "43af0805-6090-42d3-bcf0-830acb63a372",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a6842f52-708c-4de1-b903-e85022b403ed"
        },
        "item": {
          "id": "4cdef00e-f937-4444-a753-4fa2109eccbc",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "60618056-fd6a-42e7-892e-541c2c4e786d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "966ba0af-3426-49a5-bfe3-47c03a4cc242",
        "cursor": {
          "ref": "7e33833f-1175-4fc9-bdc9-949511bb0b91",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "12916c76-d732-483f-8a2e-4e6df37a1712"
        },
        "item": {
          "id": "966ba0af-3426-49a5-bfe3-47c03a4cc242",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "dd5c53aa-b43d-4cad-8bf5-c3d292b2ad2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20eada35-aec4-4021-bb40-2296d1015108",
        "cursor": {
          "ref": "3d897767-19a9-4d14-a9f2-0a0ad9ad7aad",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "dedd074c-4c40-4614-aa88-aa1cba28ae6c"
        },
        "item": {
          "id": "20eada35-aec4-4021-bb40-2296d1015108",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "bd7d5c4d-e226-4d0a-95a3-1ce4b7510789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25dabc68-aa3c-4e13-ae91-04f99f864834",
        "cursor": {
          "ref": "91cc06dc-d813-474a-9ca2-5596873c7011",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "0bf71a8f-7846-456f-8a08-a01695740c23"
        },
        "item": {
          "id": "25dabc68-aa3c-4e13-ae91-04f99f864834",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "3459db2b-5424-47c1-8a85-aea3c3f17b3b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f1c8d45-e5ca-4a60-a4c4-140ab4c5f6ce",
        "cursor": {
          "ref": "88e2af8c-9cc6-4464-9f54-84a2d2335ccb",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "df0d5b74-22b6-42f0-a565-902ce8a1c6e6"
        },
        "item": {
          "id": "0f1c8d45-e5ca-4a60-a4c4-140ab4c5f6ce",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "31cf07a2-81a7-42b9-b114-7f8c39d3617f",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aba8983-887e-4b9e-8e58-80f80d8a9027",
        "cursor": {
          "ref": "95efc1ec-4005-48f8-9566-98b10774d453",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4d91b667-4bbd-4e6b-a1dd-0418b845f9ae"
        },
        "item": {
          "id": "3aba8983-887e-4b9e-8e58-80f80d8a9027",
          "name": "credentials_verify"
        },
        "response": {
          "id": "5ee34771-c23a-4c35-b975-f08cbc5f5119",
          "status": "OK",
          "code": 200,
          "responseTime": 3165,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c7cb30b-b689-485d-8d6d-4a7a16da593d",
        "cursor": {
          "ref": "63855e7c-2072-4b74-89e5-45c21383e752",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e113c0ab-5631-4287-bc8a-ec840673cecc"
        },
        "item": {
          "id": "3c7cb30b-b689-485d-8d6d-4a7a16da593d",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "73fe2795-46d4-408f-9c3b-a38467a78c4c",
          "status": "OK",
          "code": 200,
          "responseTime": 2528,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "42694fe8-7c45-497b-8d96-cd2f6bdab2c1",
        "cursor": {
          "ref": "fdf87cbc-d86e-4ba9-8e75-c56c141a52e9",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6d11eeaf-dd2b-4d00-a261-87b5542edd51"
        },
        "item": {
          "id": "42694fe8-7c45-497b-8d96-cd2f6bdab2c1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a890de1a-5a06-4af4-8935-3932a5a04536",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42694fe8-7c45-497b-8d96-cd2f6bdab2c1",
        "cursor": {
          "ref": "fdf87cbc-d86e-4ba9-8e75-c56c141a52e9",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6d11eeaf-dd2b-4d00-a261-87b5542edd51"
        },
        "item": {
          "id": "42694fe8-7c45-497b-8d96-cd2f6bdab2c1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a890de1a-5a06-4af4-8935-3932a5a04536",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b705a077-6e3c-4ee1-af51-c19bbd82ee21",
        "cursor": {
          "ref": "54e1add6-b3e4-404b-9b80-f36b11bf88da",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "d93bb00c-c2c2-4473-b26f-c7e4ce29d7bf"
        },
        "item": {
          "id": "b705a077-6e3c-4ee1-af51-c19bbd82ee21",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "49bd70af-f8cd-490b-84b1-103e2ea94119",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "601fcdb4-3149-402d-b9dc-da11ce6da10a",
        "cursor": {
          "ref": "31675c7c-8b05-4b89-8718-be39d4aaf8ed",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "1e01cfa7-4ea1-4b04-9e6f-5dbce438be2f"
        },
        "item": {
          "id": "601fcdb4-3149-402d-b9dc-da11ce6da10a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "9971094a-4841-4ac6-b3dd-503bb89792da",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}