{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "ee2caccb-c765-4204-9147-c60f255ca025",
        "name": "Clear Cache",
        "item": [
          {
            "id": "7d60fd6b-a61f-41f0-8237-474b1bc5264c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "147b8125-8621-468a-9671-99436aad378e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c2482140-de87-4ad0-850f-d4d78de754b1"
                }
              }
            ]
          },
          {
            "id": "00221f50-b182-445b-a7f4-c795834a17e0",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8e887fdc-7b4a-4290-86e4-351e36fb502d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8d5260c0-db9a-493b-b551-0c4353206e0f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a974fd36-e365-42ba-8c61-3a1d3c71f2ad",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "0e57e4f7-cd5e-4cc2-ac14-b8e8a25db8f5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ab9ccfe6-5550-4600-8163-637008a582e9",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e2bad961-5926-42f7-871d-89ec29b9eb5e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "907faa04-efde-4756-90ae-34b38d52c83f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b889ad6f-d8af-4369-bc3b-35e4a7e9934c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c445f22a-8335-443c-be67-663826f60265"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9b5be311-552b-4510-b2b6-eb5bc00b35fd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "df4fd5c5-ff78-4b6f-826f-0365e8e005fe"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "211f2037-1b76-4bfd-ab2c-f30d9ad553a8",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c1f0bed1-fb58-42d3-bdb2-e4e9d08815f5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ac6b80b4-a647-43b7-a0ae-00eaff9f926b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f5704384-954c-4291-a9c1-dcf42434d017"
            }
          }
        ]
      },
      {
        "id": "3a9c042d-bad1-4481-84f7-5c454cdcf22c",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "158b421b-22c8-4acb-a0b5-e42ddda36330",
            "name": "Negative Testing",
            "item": [
              {
                "id": "76d48714-a824-4462-8f70-d9ecb2558ad8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5768924a-4b19-40b7-af89-32117b3a577b",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "069ec7e6-0e67-41da-8959-311e345d456b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "09415308-9989-48bc-9464-970e17fb7f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac45946-53b1-46f5-a96c-1b3608365ccd",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "884a61e3-f521-4ca0-8214-793907ad2541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "968e62ab-ccdb-4fd4-9e25-22d8833dcc7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fef9a9d4-2da3-408d-9443-6e85880b1606",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ad1a9d-8e5c-4606-bdf6-9470b75835fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a773e50a-5188-4373-85cc-811d29722bfa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e0624cc7-e84e-42c9-9c23-49c6b6b2c81f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "257efa6b-03ab-437c-88ac-3fbcb0e0c1ec",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54915efb-56e6-48ee-8624-4278a7a0f60c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c2ef55c-6199-4642-809c-2ed17780a527"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d00cacf-d0f4-4c5a-8341-305e94bb0f94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9704f314-8ad0-4bbd-a254-af3d60d1b5f0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "12d33018-6be1-47a8-aa4f-f36b911f6a3c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7865e8bc-a9a4-4ac7-8c9b-6eec4936e193",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cbb3e514-d2e0-4698-937c-9ceac1e3715b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "973e793e-dcd4-40b8-a97b-2f99fc6fb896"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d773d376-63bf-43d9-8feb-e01196870450",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "848c4997-4649-42ef-b75b-dec0d459b5b1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4d00ad05-1b8b-461d-98e6-a4df7ca356ab",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "14b30f92-4356-420d-8964-cc7d7991aea3"
            }
          }
        ]
      },
      {
        "id": "030218d8-6998-4392-b03c-621d692e860e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "96563cea-80ac-4bc3-916a-eeea9ebe3057",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2b7345ea-43af-4237-96f6-0a9cf97ee9e7",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "be654f20-44ff-4088-a5f0-db0fce89c14a",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f661d39-eed7-47c0-b6d5-9be8bc4bd4ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7ea57cf-37f4-46cd-9a4c-1ccd49b05be3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aab4f1c4-c687-47df-9e55-1ca66eb18c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93087f83-59fe-47db-a2d9-0c3fb9c2846e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d075ab67-6b2b-44ca-b3b9-611319d52980",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "011ffe83-fd2d-4fea-8b91-70320f61b0c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "734cb1d8-90a6-428c-9cf0-d303c47d692f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe46a7ef-6b27-4c9c-aee1-a8c9fa99100c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "89490060-b862-4a1a-a580-ac5fa68baae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c3090e4-9402-4c2b-be60-004c148d93bd",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a244fe-01ae-4e11-9f86-2160faeff017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae5dbef0-abf0-4680-8bb1-74dc1bf34d6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "006a8da3-b2b2-4b42-ba75-992fffb76583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da8c7fba-34f7-48ca-aba9-91e60274f8c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e2b8bae-53e2-4400-a0c4-42cc48ac6d27",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91669c76-8311-4a14-9a79-a936a7a4d12a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fb9099e-2e17-48d9-ada6-a1323da03ae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b414ece-e769-4656-b314-a7cf3050d971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e2666b8-a092-47fd-a07a-63151915afb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81143e02-9f43-4428-8f8e-902577e5a352",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73a60cdf-c35d-4f43-bc27-68da3c7820e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ecaafff-7206-4491-9a64-04d3534947c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af9143f-671a-445e-bb4b-78a57fea341a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd55d60d-0e2e-405f-8d0e-6b6ca1f6328a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "464d4b85-0d1b-4698-970c-e24c279ff064",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98020ed8-3835-4f1d-8bc0-ead4f46b89ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df46a94b-3ded-458c-9589-1bdf5fd49460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7faf45a-2875-481b-8ca0-eedfea01d4c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c90313db-fe90-4881-838e-3483a94333e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "092348d0-383f-4896-9894-cda1e1f5d0e5",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6624927c-e340-4d90-bb5e-b454ca15a67b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e49ae56b-d925-427d-a649-38cb43f005e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a929b72-9aff-48fe-9e2e-80b8cf1f458b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c59e652a-f574-47e5-a393-801094a1124d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77e31680-1170-4fd5-bb6a-a32a8daeb69f",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca7c2ba-5db7-40ba-b1d8-a8e1551c0d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2533a762-3cde-409b-92bf-00336a756196"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30c94899-cead-41e8-a2c0-ea3debb30668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "297b7619-fe3f-4fa8-b846-01a3b566f1e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5078568f-2338-41ba-843e-f0e5ad034928",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4d0899f-7799-416f-95c3-29e2aec31fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1642afa0-9e3c-4e37-96ef-83e9599ad0ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "510bba75-f555-4819-a2b0-1f9c4592cfd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4c2f450-1d21-4eba-bebf-e4349ec17e03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcd865cc-f816-4e5d-96b5-66f2bae4aa36",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eee9330-f63f-42d5-b536-88ca1656a02a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d3f08f6-669c-4e2c-b85b-a0384cd79dde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3585c287-84c6-486b-884a-e0d97e932a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e0a7ff0-39cf-4965-b0d5-c8c10937cd5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a18bec94-564d-4c04-b8fc-56d14e84c94a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f7aebe4-f62e-4a6a-a9eb-d13232f63d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bffa1b59-c653-4385-b169-d3f2e77ba3a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a8008e9-06b2-442e-b8a2-ad597feb0665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a9fee7b6-086a-4889-8893-a8fa04c11e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d2754e9-f0e1-4d66-8b13-13e7973db676",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea28d243-6951-46b5-848a-5af9bccf5622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "401179c1-1dc4-430b-a066-748e8f479965"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "759133de-2c7c-4def-ac62-840df833dfcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84cdd675-7945-49e6-b328-c721f2c8a06d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e314eb6c-1f89-48f8-a925-b52ed42733f7",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdccbc23-4a71-47c9-bd27-430cdf94fefd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67d231e8-703d-494f-8f3d-038f0358a322"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6211c21d-7389-4d9a-b66a-074796bfda0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7fa4bab6-9794-4023-851d-cf0a23de6e1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2f0e01d-58ae-4af0-8887-5f888d6d24a6",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e494a1-14c3-432b-9a2f-6e8a1a084ac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "489239c4-3e09-46ba-8b25-748a76dd67eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a900aa-9def-4976-839c-8e05a6e3c499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9256e573-b4b2-43d8-a18d-d10b3b1681e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd087a2b-d14e-489b-b9d1-bb09baa902b6",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d052648-417a-4dc9-9657-e00da9303869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56b5409c-3d37-4161-bb0b-0daedcd34f96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66cba648-1026-4b61-83c4-e80dfd4f0982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a8a6907-2fd8-4ca4-8ce4-1ba75452d3bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1993fbc-e3d4-478a-8a0d-13a0c6245914",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56d09cea-34a6-406d-8aa7-610de833991c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "754347f4-94f1-46dc-b55d-e4ab3a48b95d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b71504-7ebf-4847-9b6f-5c368dbccbb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c2186044-e8b9-4c35-97ee-6f93506d3629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1f64993-1cec-4c4f-ab2e-593cb47e5e24",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6a3f3a3-86b4-4afa-8070-7acb67237454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "484e422e-18b8-422a-8c65-6e1653fa6e4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc99e43-955a-4d39-9a99-7dbe51d6071d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b93c0882-5624-4ab6-94ef-3df7fd2959c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b4e3b3e-2719-4b05-b078-b97861a60c14",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1f2908d-390f-4a13-bf6b-8186b473a94b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46a7a35e-45d9-4e77-843b-6b05f39ccdd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b12d84-37cc-42a6-be21-54ecdec1b835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "047aedf2-50f0-44f3-9079-d69ba163dfaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f8bfb13-982b-4ce9-8dfe-8712e977ac75",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c04cd186-7881-4a3b-935d-db7e12a27384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ae9dc50-fff5-48c2-9a85-68fcbe97912d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de210c5-b328-463c-b563-6aa469e8cbf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3b87642-e983-4730-8573-514a0420ff2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec3ec6b-9390-4430-99e7-cfb5ac6ccd06",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35be7d03-b7d9-4672-b2cd-3e57d6aa6d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9e9f98f-0f79-48ed-a76b-f545798991a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bcb1b6b-d539-4a4c-9dba-39003fa10c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a56b4e11-ec66-4f14-b54e-24309ea6e853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04dec5fd-754d-4d27-89b1-125994532486",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e5f7a80-bb07-4502-a360-f0b7a4fd82f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b402dff-88b1-4172-9d46-dfa84dd5ba09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f15a9a32-c31d-442a-8bbc-377398bab9fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc717f90-71bd-44fb-9291-f635dff31470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f35a6e0b-3e06-4951-b641-91f2f62f5cba",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f21ae915-9828-4e87-b57e-865f2aa69a67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18c11cfc-db75-4ed6-9048-e8f7e5dea983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06f14b32-2d71-4d2c-9625-e460810595ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e76b6825-2e7d-4608-919d-4d0a45471e37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5edbaa36-646e-4696-8fb9-5ed71649dd9a",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cd6dde7-3a90-4570-89df-be6b42d3b2ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fed09e2-47d8-4a99-b562-bc1c4b2a713d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15d108b1-3cff-4594-b628-643e47058422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9fad6694-5573-47ff-a93c-15f8d37ed3ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0991f3a5-ffbb-4cb1-b540-f21d7eb2464a",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41f33edf-91d5-4acd-bd9b-7d4f6eecb723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84d0c43f-61da-4619-9c37-d290a10285a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b96714a-a37b-4b02-b1b9-cb7dc8b41ebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a570665f-294e-4057-a990-5a73fd3ed04d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e26828c8-31b9-4b29-b460-efb1e2fa68ab",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09707e7b-82ab-4454-ba3c-a6fdc2884cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "623a68f3-95b4-4437-8991-aca89ca57181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3901c25f-4f46-4762-826e-68cbeb550eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "52e669ed-bb6e-424d-ae42-f7bafd48e4e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a10cfd8b-71e7-43ab-bda6-65da58ce335a",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd824bb8-4ebc-4532-8f05-f98c2c09a7dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe710fe6-7eeb-4546-8251-c1f51d14ea11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc2a9b36-7bcd-4084-a9f7-5d6a056fd83f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "32d59b36-96a1-41d3-a1b8-5e8da570acef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23a0e106-d063-4245-be3c-849b0d3830cf",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f5cc0ae-95ad-4c37-942b-e2723c800c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59f13906-eaec-4094-abb1-e8c3c928737f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54404b84-dc12-43dd-8e58-33b5a64e4ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f492bce-0322-45fb-a414-cc3ce565a33f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae453e35-ff8d-4a1a-bf6e-a9d5818d2199",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47b8047d-88e5-47c0-ac2e-6d92568b9353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96445695-774e-4856-b827-3cb8a3845531"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8099e855-0103-497c-b390-a6ea0e88c94c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6131526-d0fa-47a5-8cc2-8e30ff21d687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c88d635-46c4-4045-a5c3-43ffb3036f40",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e792ba6-c86a-407c-8d75-baf9d80d7d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b73b42d9-9b10-4653-b31d-defdf82eb09f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43e128f8-de6f-48ea-816e-59a8597fd0cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "03ea6e1b-e114-428e-aa74-0fe24c3aa9a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afda6769-bdbb-4a50-80ba-730723ff606e",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db0ec3d-fe19-43bc-a25d-6fc8a5ba0ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72f1977d-9bd1-41be-a050-6e7318b7f071"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de62bab-93bf-4496-8473-da3294330a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffb5833c-be11-495b-bc71-2b4f8c6e522c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf27c16f-d76d-4e7a-aedf-6ffc33bdc030",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24d6226b-ded5-4e2c-8650-d60f3a2c86fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a363c434-dedb-4ac8-a79e-1d0d734a9632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79ff91aa-f85c-4f8b-9b53-b89a8a417837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2307e257-ddcc-491e-b9d3-637b66b102c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ae9445c-5c59-4ad9-985e-52a8501eca15",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e16e82-f312-40d7-8a79-6a5a1b079487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d6f3e1e-855e-4b6a-9d3e-4856bcfa3c81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36d0ac97-f192-4030-9000-1f5721962eb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "06de8514-eb5b-44d0-af00-3e489c16d39a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e04f3451-a254-44b5-a06b-ff173955a6ae",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a59b9e-0924-42c6-8375-9f4c2473745c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "576edc1b-b64e-462b-9f7f-1ac10f9733ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a902de73-8c70-48e6-a193-1bcfeebd38ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "61fd980f-b2d5-44a3-a604-364abbdc43cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bba7437-5352-472e-8a2e-34ef54aa3041",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "081bfe53-6bd3-4d09-a512-2bee37e99782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8354e1be-1cfc-4d7c-b8ad-965fd8e64b36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30516f0b-121c-4ceb-bb1f-438868da95ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc6ea62e-99e4-4ba0-bc2a-450299118ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b853bea-e654-416b-97ad-f924c16781f4",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4381d001-8931-46f6-ac93-507e3f009989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9109b71e-aa4b-4c5f-bfb5-28a105982ded"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c8d0acb-dc06-4499-aa4c-443e16d8903c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "4f554bc6-1266-42f2-8df5-167d0bb4ad21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c6f3b13-bd37-485d-a133-2b25393283b9",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf6ea9d6-4419-471d-b554-919915771cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "746aa7f8-dae5-4d39-8904-2f714d1aea1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71773174-6132-4791-b10e-1b06c38d5056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4e50f35c-3e70-476f-ad23-95a5d459d6dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d9ec17-6a22-44af-b411-a778b33aa650",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46ac4349-cc2b-4392-a076-00ce6fc13be4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10de5e7d-6c6f-49a3-aed4-77e9fe6a870d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed595a7d-d7c7-4d9c-9551-6a4bdd25eb48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "79d7f5c8-c619-41dd-975a-e8495fa30706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb0277e-c1a1-4950-9600-2212dd9eacab",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bcd59c3-0bee-4467-a7b3-17cc1ecf2f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd5094e2-c255-4afd-a8eb-c064e097ec28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3664db6-7aea-456c-8145-a5603ea4507b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "db160a4a-8288-44bb-870e-a20deb2fd8cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "690bd60b-8d8b-455c-8d9e-99eccfbb823a",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e40dffa1-139d-4ee6-9a1a-0204dd505ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ca85021-33fa-44e0-947f-28bbd0915e05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "771fb482-ce2e-45ac-8387-be04e719e04f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a95623b3-ceb7-4f89-b0c2-fc030a98aa66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee37b2f4-1ef0-43a1-a591-b2e1be778181",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f433fde-0956-4ae6-be5f-01e7c2570529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa567cbf-c0ab-45e1-ab40-5be9f836df3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d13c318c-673a-461c-aa86-9974521cc441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b338fef-26d0-44e1-b032-1b065d5713f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78a15120-6696-4902-952e-622cea3b2bf4",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a03e19f4-ead4-4e11-a765-99f2e7710b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a520305-95bd-4f1c-b953-014bc653bb4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84a9f8b3-db13-41b6-865e-dba58dc9bec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a054cabe-6b1c-4dfb-b587-ae6387f01bde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22319894-20a7-4dbe-8813-31dd07595f9b",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbe7ae4e-eb36-4cdc-bf76-21e79d157ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f57a905-5655-4ed8-8fe8-0b07319e1518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0812d17c-e0a4-4378-94a8-623e6a953fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "efb7a50d-3343-4977-8873-8369876ce588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2712624-4bcf-49fc-a0c2-e3debd23dadb",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "768cbbdc-6fcc-4081-b76b-6d79e384a4c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1aa298d-7524-481b-9c17-468d8110a1ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c522bf3-a9ad-4729-82e3-bd57225c59a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "afd1eff8-4865-4a99-a075-22e549266e99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45e9da57-a74e-4df8-9d07-ddaf5bba60e1",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb619f40-88ca-4e65-9b75-bf023556bcfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9dd0208-03c8-4eb2-ba66-d0e79443a1b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88811e5d-9f7e-4df3-b0a2-ff6aa4a1cc13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "24004620-68f4-4931-b672-1a60f32f2d73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "accd3a21-7f7c-4267-98e2-246b455cbf38",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d40e790-0399-4ea3-9104-4bc2a42a1630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc2d53d0-4cd1-42ce-ba31-b492829b23f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "033536bd-0b2c-40a1-9598-84bc861aa7dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a678a23d-79a2-4ef5-b471-979f2bfc1665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f7660e0-2b91-4a12-a772-a409490a64e5",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faca20ae-3cd3-41f7-b273-45ebde29ceb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b82b1a8d-dd88-4fa4-86b2-4765bb1251c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b15e8c32-2b3f-489b-b26d-caea32aee7c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cd5a26d-32b4-462b-bb71-fed11e5d2322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dfc10c4-8b29-4064-bf18-00c5b73cb290",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "262aace9-7a6a-483f-9fa6-62e6926dcbee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74bc39fb-4ffe-4fba-b0cd-72d4bb522b34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "252349df-0add-47a9-a464-cbcb02707b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "282c36af-28ff-4191-99a4-9005813b539b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16a0987f-df19-49c1-be73-1c5c54981842",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e87a644-2590-47b0-8773-e7caf7f47823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22b051b1-a6ba-430f-b403-98d24c57744f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f56e371-3874-4442-a819-3c5c29c52d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1cd4a527-c4c2-481f-b62e-45306acfd602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6868bdde-5c1e-4195-984a-3abf17597395",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60edc923-2c91-4f23-8008-24b21780332e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "447188c1-8e0d-4870-818a-1b9bf8974ec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b6283f6-7b7b-4a95-88a7-b7f1e1dbbc70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "60250c23-9888-48a8-9b9a-42ea12c8a664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6893c201-5c0c-40f3-b3d4-30f138ede448",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "934ecc91-6371-4bf7-b8b5-1de36d47e802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af746a95-d7df-413c-8607-1c2c31499440"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d11b75-d91c-4e38-b269-4b8a88665347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "56281308-9d1f-49e4-b843-f6c08636850c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a31fdc7c-f25d-4649-8347-33614cdec70d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b551632-f620-4932-af1e-c4503bee2b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9c544a7-9b8a-43fc-9f2c-ef858c083e91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c92a09d-52fa-43cc-9c6c-bf9daa9b0ab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "001b88fc-883c-4b5d-a5f9-c961b698bc4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39d3c0fd-5934-4aaa-bc93-db51cd1a6b2b",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e98f2f-616a-4bc8-8acb-ed1af086b937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "254e394b-8f32-47a6-8960-584f2ab8a8bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53db669d-7621-4dde-ad79-0c3fdbe1a6ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa66b85b-a9da-4583-b27f-e063920036c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc0e56d-31b4-49b6-8ada-2bc271040a22",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e7a8f5-1446-4802-aee2-c83b17d1ba59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9abb7da5-dfa3-4ed3-84a6-892d27222d51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa32c78e-53ee-4db9-bf1f-a39a8eb0b77a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "91e866fa-e77b-4c98-9cf1-a8284b7b8c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64d4ada3-8e42-41b4-8df8-ae04c896b884",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afd4a876-33f7-479a-ab27-dff2e0b775d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ea1e072-6da6-4845-916c-836f829c0a85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1189aaed-93fa-49a3-8348-f2fae2403d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd4434ad-e6be-4c4e-bc4d-5326b7938e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e06723f-b721-4d42-a6d2-3c2ad42c8119",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "909847e8-61fa-4a53-89d3-b9c20b29adc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75bb40ed-c192-42f4-b044-daf0c5567fa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07318874-b78a-470a-bc73-e476fa8f2396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b96f363c-f345-4b16-a723-a8818773203c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cda04141-ad23-4eb9-b357-5bc2a3271c4d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b9337b1-74b0-4819-928f-abe0be057fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a8887a7-b700-439c-90bd-f9eb5a739bd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eee71fad-9a56-4e80-9d9c-b3fcfa6600d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "fde307c6-b0fc-44e9-adfd-03de902200ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14a94003-7a8f-406c-8e47-7737cecdf832",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "365385dd-365a-47c6-9501-657ec622d743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee569731-3613-45cb-b84d-716e001218de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f24e5d-5d14-41aa-826b-aaa7766a8f02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "92fbb6f1-3aa2-42c0-bd38-2b5440dcc507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c480cd3-bcf1-4c5f-bb75-084f3ce07548",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56aa19f4-da28-4da3-9043-70fc95c19d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1f45921-1e01-4ac5-8634-9c7319482ae1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f3b27ef-b4bd-4fd6-bda2-fffdedc1ab13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f571f364-4eaa-4d27-9a0d-55c5ffec4c17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fe5a6b4-a4a0-4d25-9b40-2c0e38bb7313",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c2e1bc-88b4-4f7c-b246-ce94b2f0b7c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c415618-bac5-406b-81ef-5e96c9abe6d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf0c85c-628b-4de8-b2a9-41d3a6ebec77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8fa278a-1d90-42b5-b2aa-36ddaf5b2302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6a7dcbe-9c1f-4fc3-ad65-406a1d026613",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf68668-20d0-4139-8627-16fbe4532dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "386488f2-efb1-46da-b45d-9d231193008d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb0a5863-5624-4df6-bc93-6f2d3152fb95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "683ad122-be1d-4585-bf5f-40ee69fab2db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a0972e5-2bdf-42a8-80d5-8eefd178c02b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc5f529-8439-4ca6-a7fa-7dbb2e695043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d380a3c-ad66-45b6-bae8-a1093ba6816e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29533194-e8f8-4dfc-ab7c-b3478b1eb4d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b44b31b-fd8d-475a-b6e6-f8b3b6577abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc9170f5-2d95-450e-b362-6bff662a0aec",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebefa449-94d3-4256-abfa-7af77e1e6e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41db0e58-9b59-402e-a5c4-8a06e81ff82d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b704fd60-c6b6-4dab-af03-8599f5637970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "30890f0f-fb09-46e2-adca-d4dcdadbf357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "676d045b-37ae-446b-b2ae-62ce7ef9a8c1",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "438fbd41-2d45-4425-a3d4-c7a9a00aa9ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb172f27-d3ab-4c46-807a-b16ea89ebaa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4da7796-8f17-4700-b449-cae6952406dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "df65d821-8da5-4fe0-836b-4c1152e0ce98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06910a46-bb52-4fcd-910d-341c3a01d2bf",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7a507cc-ec54-43a0-a30b-dce6a406f056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c549f2e-44f1-4049-9c34-a45b622eb2f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b77944aa-7f94-4d44-8f7f-39e9d55a5cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcf587d2-ba83-4c2d-82d4-08ba1c459509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "823d2ff0-eaab-47d4-bb5c-a9bbe1b1ed19",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28737c28-c557-4029-982b-f15fddc92f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30ee1332-ebd7-4c1f-a7b0-5e23b16ca6b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e677fc5f-82c0-4c4c-ac92-78096836ca5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eec7e794-45be-45b0-84a6-fa8c47fa97c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56955658-a20f-4ecc-b0e9-19306bfc0275",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "971f6266-a4b3-453f-8f8c-9dbb0cc565ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6d26493-06bb-40c6-89af-71760762723d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d995bc60-db9d-407f-be27-f7e8504fc5de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f598a13-8e3f-4eb1-9aae-0b146030f6f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14e10ed8-598e-4069-9e5c-3efde2ce6cc5",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8bae074-7e41-4433-a8a9-97c4d46b33e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd427821-a114-48c8-9b0a-75ad11f637ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfc5cd55-5979-4214-bb35-2987791ec803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b85880e2-cbad-4d2b-88ed-897cbde7c92d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8416d98-90c1-4f48-9b3c-d68108061a97",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "591c811a-65b7-4298-887f-1eae870c010b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5048e64c-6ac3-4bab-86ea-cf64bfd5d53e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d32ff3a-be06-414d-bc26-fec172c0dd46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee3c02c1-8358-4bb8-a6a3-6ad561530f22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14c0e423-ee08-46ab-bc47-3f1baabb723d",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ae454b-21bb-4fc8-a98f-9d2fbc086b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89ebdadc-613b-43f9-9d63-aebf7f85a191"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9d5bf8b-f77b-4e1a-9510-aac86fbc5890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f3fe13d-da51-4658-95aa-eba1ccc6428e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f209cca-20a7-4902-8cfb-75bb18868414",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf317218-5238-4f30-805c-cc354aa957e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3060330-ee06-463f-b40d-b69348877e76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1697313-64e1-4916-918b-4e60f3666864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c91c71e-a665-4e5f-80cf-8d7dd66ffe6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a148bb6e-f3a9-4bf4-95d1-3dc8237bbe05",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b851fdae-9b7e-4e73-b0bb-364b472e57b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff7bbf8c-5d23-4866-bf8d-a78dd850af44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7d62184-b636-4c74-827e-99c7a082ea4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e15f2213-01e5-48ee-b6ae-d94aba479509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc26371-a96f-4ef5-992b-46f253a06284",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ae8427-11b2-4313-be41-598ca3abfc1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "900bbf03-4d31-4d46-9e67-133bfcbb01f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f5191f8-c78f-4310-a0f2-6fc8f1ef9874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab95e355-20e2-450b-9554-6f128e7d9fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8df37c40-1e58-4759-b5e5-eaaa8ab9d569",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7248f636-9c1f-4e81-84f0-c1e3d9f4acfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8025e6f1-fdad-43f9-a479-e24fa74c888c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9ff1b6d-9b71-4ace-8cdb-72d74c5a213e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9cea368e-512c-4301-9af6-db4f9c769fc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b50a44eb-45ff-4d2a-909c-c8f02dc01ab8",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "790404a7-43a7-49ad-b282-f6800e523c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c83af73-9908-4f01-a576-255e9edf023d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "857bd7ff-90c7-4015-906c-614b44c54ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6bc12232-6dbd-46ec-aa94-2df30ff554c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f2111de-bd25-41c0-84d1-1f5fe4ebd8f7",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d8432a-e300-4666-8e89-34f164f0d0e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79304003-c449-4228-a1e3-cf6c86e338e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b92256-7cbd-4e8b-96a2-bd7cb28099e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3ece742-baa4-4928-acab-ffdbb8accfff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a97387-297e-4e70-97e2-7a4f49a04225",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6fffff8-49c6-4383-b546-86d303fc2b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05945b4f-e62b-4753-9628-a064387c8609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "359d5b39-8cf9-4720-b010-e738e63bc8c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbda1523-62de-449a-968c-52abc1d2e6de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb9a509e-183d-486f-80cd-05f0873e27a7",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "699e62db-0aea-47a4-903b-a7efaf81fb15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce3c5cfe-ca63-4150-a57e-af8628886f1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a457d5e1-5d05-464b-a77f-a353b5a6042c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "69824f3a-63fc-4793-85c2-0a721e5238ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76147091-552d-40ac-91c2-7c744fa94fa1",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e07402c-c69c-4834-83ca-aa42946c0baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92f2fcc5-ed17-4fbf-a9a1-a71f0b23f761"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1614bd4f-9216-47ba-8695-3e2695a2e9c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd8ee9b5-633c-4569-b631-8e3cc1c67029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6747b934-9fa1-4b01-bb1a-f96474ebbdf5",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc1c8b36-36ca-40f5-b13f-431f86d88555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d48314e-f981-4ebc-b9ac-5f86b61e6033"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abf4a2bc-d1b0-4825-9109-6acd138627fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4060360-b979-4ecb-9b62-50913d33c45b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f6b2f8-714c-4211-872f-82ef3b3803d0",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "287da530-4cc9-418a-8ce8-f297e70f4c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "548a461e-30da-456b-a34b-ff88ee9d2182"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3fbc0fc-962e-4231-9733-13381a6a4c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d7b3da23-dd73-4479-8bdf-7b7a5e2bb5ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6aa2c62-97b3-4a87-a3bf-6814fbb5f3d9",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7126abc-a36d-4e9a-aec0-800d8e1068d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c464df39-7d16-4904-bb4b-8809056c8679"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cba0b1ab-10a6-42a6-967f-427b351d493a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c984677-7ecb-457a-b377-d95a23242523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9550b46b-8ae9-4349-8f27-585028fd7312",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba0eb5f-ec7c-4aa5-9e6c-479427357b99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38a39dbd-e52f-49a0-b179-33a706607960"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e4758b-749e-472c-9033-e54167fc72fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6ca47ae-6a62-44e4-b747-e6d52b519237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85f55e41-df71-43b1-930e-ae56423e2d44",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b20aa9b-8497-4648-b5f4-081f30bb3287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f6c944d-eeb2-4f64-8507-d3ae0e77a368"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f1969c9-6c8a-4c92-8c3d-3e4f16462d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e854f760-75b9-4963-9f9f-93dde97011f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89968691-62b9-4721-8f62-66fb7d09deb8",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2115add-02c9-400c-8bc6-6b2618b490b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc48bde4-e7a9-4fd8-bce3-72ae3b4f64d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f28278d8-58cf-4073-963f-9af42f5da644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "248a85e6-6b64-4b8c-8721-2edb5a17c5ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "531b4027-57cd-4ca0-8753-b68d13b5cc08",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1ebdbf1-1b6e-435c-abfd-044d676768ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b95144be-20b5-4fd9-8690-49cb9c3d2441"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c07e37f7-99bc-43d4-b413-3828305b0ce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "be28dc99-e693-459b-99c9-3ec90e1a5afd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a061da72-382c-4b86-b17c-b801a3890f46",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ab56ada-4e03-4d89-8131-613c24e25c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec9522af-0c93-4490-9602-75e8407ae79f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3070ccb3-4b67-45c4-94a8-1e7a3e9fc760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea0a8863-888a-4db5-80bb-7bca40dd7b99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7806fe9f-19d5-467f-8006-d8bd0f3085a4",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea024c9-0a93-42fa-9df8-16aa642a0b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c090675e-b01a-4d83-847d-286be775edfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aa0fdcc-f281-4ac5-984d-6ac2489696f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e308100c-9974-4a7e-ab88-ca9a06b4f57f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "917e1b99-a625-4534-a6ee-fbb5524c5a46",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29def0be-aac5-4af8-b3a5-08e72d8a3430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9788a5c-a1c6-4d84-97fd-af80063641e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af42403f-22db-459e-b040-f32314af6914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6aaedcd4-d325-4f08-9596-ea9426d1ffa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d86d280-2ae4-4b8e-a25a-64c127f193c0",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6db65242-60e0-4752-aeb9-14affc0cea3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df949701-793f-4532-96a4-8f839f126a36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e38957-5206-4d4d-8f91-eefb3f5c617f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8716fd45-b286-4fd1-821d-5869af45eb90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6bad422-5805-4696-9b52-cb10dddf3322",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e2b4a0c-7749-4916-aa66-a1a64026000b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1190aee5-0200-4fea-9067-12971620ca85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a732fa-5796-4490-84ff-9823276f716d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c068455-5cbf-41fc-93a6-a923dbbc649b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfe61bea-b9f5-461c-b4e5-052592548d95",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6161ccbd-2ea1-4154-91e6-842503ec7e98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e03e358d-d488-4934-ac28-f15b49f0efd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad58e2a0-697b-4451-a2e4-9ad0e11c59e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "673fab84-cda1-4bcd-a5cf-64977838fdfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81207b04-d899-48b8-88d8-75607e2a8f52",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9874a0c0-79f0-4acd-b332-0640a2ff8a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9af54d7c-97d4-4369-acaa-32b5f1c8bf36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3108da1e-72fe-43ee-9108-fed5e47991f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "73df6e1e-7138-406a-930c-7d795e04c0fe"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "028379af-775d-4cb3-8854-7b4f5bbd445b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "361b4310-15d1-4234-b044-bac0d264d6f5",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe96490d-9ee6-4acb-821b-3f3694b5197c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ca3ff2af-2635-450f-897e-e135439fa6f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37df1069-ce23-4327-956b-f10e364fcae9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa11017a-3d19-468a-b04f-f28dcafb4c6f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "65363cd7-65ec-44b2-bc26-990ba6cacffc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0cf72b9e-661e-41a6-bdd4-7c8122288ab0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dcc8a20e-0564-4ca1-a2c9-f5bb14f972ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "252cb5d7-1698-4dd8-b91a-787ea5d751a4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "49286126-d883-4de5-bf45-474d2b35113c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "71ce35a5-1a28-488f-bddc-6bcb6cb890a1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bcb1518a-d70d-43d2-94de-4fc8faaf08f1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "255029ef-219f-4396-b34a-5a84e6bab2e9"
                }
              }
            ]
          },
          {
            "id": "99b286d3-7535-4d95-93bf-4fb7eac5c89e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ad6eda16-2729-4c91-ab3f-846c3f449f86",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "1365a086-efa8-4147-b621-b5697f8f1aa1",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43fa1898-5e9f-4659-8727-c74884fd7d5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "71647ea0-896d-4113-a70f-338256da52ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24b21306-e66c-4323-8e05-d6ae7580d37f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb75785e-ea91-481e-9e84-2cec69e90110"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ce7f068d-73ce-4a85-bbc3-e2e3485a0b6f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4269ee9f-0bb5-4967-8f2e-4d55aea51b8c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0814f7d2-9b85-47dc-9bf7-68f6eee09afd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "17a2cdf5-a903-48af-9163-c101fb9bf7ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "14037e67-944c-4f14-9ff6-69192444a01e"
                    }
                  }
                ]
              },
              {
                "id": "975159c0-d285-448f-842f-046248df349a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f22c581a-f4f9-4aad-8de8-a60101eeb1ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d6488186-53d0-4264-99fb-5d1d1f2765e5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "11794a2f-589a-4dff-bdc3-67cc466a9d46",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ad5a935d-1995-485e-997f-9750c6d1c749"
                    }
                  }
                ]
              },
              {
                "id": "44bce997-46a8-4e93-b07a-275b3edff96f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e7c1f53-a2e4-42fb-8cae-763598dea052",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b7cfef9e-9c66-4614-bdb0-72a95cdb7fda"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e12c0ef1-58ab-49d4-9f88-f1bdace5c3a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1f601f21-2f8f-4908-92b7-57ef412f1486"
                    }
                  }
                ]
              },
              {
                "id": "e5dfca78-bc7e-4d0a-9a7e-817b8e21c352",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8efbe3eb-d382-45f0-a1f1-3156df9505e9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c4c06d83-a20b-4c8c-a3e3-55b6d3bf065d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "00d99282-f2e6-45d4-8219-7272f960e2f6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c5ec82b5-191a-4559-946d-3abf1251b422"
                    }
                  }
                ]
              },
              {
                "id": "4530c9a8-9d48-4a35-a086-f3f2222accab",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e82167c8-da0f-486b-95b6-579c10961ffb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dc22582a-271a-49c7-9210-0e5e0abad424"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "65073403-9543-45d1-bbbb-f1f3c65bf51d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "25851eab-81a6-4af4-88b8-b2c7f89f22b1"
                    }
                  }
                ]
              },
              {
                "id": "0313b5bb-8958-498b-8ead-1c9d3d526ef9",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "54344b7c-18d6-4c76-831e-a42964b685be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dde27ea5-418d-4d75-9034-43dc80a7151b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ec72dbac-93d3-4f85-be27-20ca3b42bea1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f1cd5947-e4fb-48c0-8fbb-92fa80789495"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6526175a-2824-45d8-be34-8e28d9bbdbd7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0826b444-16dc-41b4-bb33-4f6d33a9f639"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3680b43b-5219-43a7-abf4-65aac0e3b7a7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d61de0d3-8ea3-43e1-b916-f2b38bd401a4"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0066f123-888d-4808-8c7a-a554ac983fb7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "989e39f6-425d-4c19-a884-381d261d1106"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9f600c47-d7ae-4587-977a-eea6800dc2c7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "168a4184-e03d-4dfd-af2b-cd27ed107720"
            }
          }
        ]
      },
      {
        "id": "7e997704-5fde-4a96-b157-f8604d53bd83",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "05f9b3e2-d1c9-44a4-9f8e-741d12fd4e63",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d76e180f-8156-4b91-a34f-715ce8951c18",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "43c0ad6a-3652-4418-9553-7d7fdd143910",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "858fd727-4588-465a-9c87-b2359b0b13fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd0dc3df-414b-4764-920f-e6032e734234"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e69f1f14-9e54-4419-8a23-3b3d3c4b8bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a64557d-8ccf-4af8-9ad9-77a245908667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20442d51-18c5-409b-8388-ba31d8cdfbd2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fecfae9-c49c-4869-9bd9-41a4ca927def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3749b87-4dec-4927-ad68-b5d99436ebb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f8b209c-7e13-484f-b342-327d9ef5a094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ac46d8c-70f7-4e04-871b-89c9758c3640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "029d2123-3c3a-4e51-83be-be5d95a89e95",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "663b900b-f504-411f-8418-68123f3adfdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5de71b1d-727c-4726-96ef-40696c78a66a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4feab40b-7466-4d1f-8fc5-1d6014fef762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c3e68d8-0d4e-4489-a40a-858c92f14351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcf84677-4bd1-4c53-9fd3-705adfd13372",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b861347-d5e5-45e3-8496-f0fb8850d99b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f4bc4c4-e27f-4e16-b95c-b116b08d065c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "907a3f22-3022-416c-aad5-e6ad1fc7955f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d65a3e4-a1b2-4c5f-a6ad-0e0feced4c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef013647-e2c8-4a22-8c97-169eca5bf091",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5beaa67-fd52-4bfc-aaf9-629497f22e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6969af6-db05-4f35-9116-0c48da0c7c78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc274e8-ee6c-4f55-aa62-edf17c227ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "38cd430f-b4eb-42d6-a678-f905d3f18668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18478bd2-666c-42f4-bb3f-48adecfb7e60",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91864ca4-a5ea-443d-939e-8c2e8e9815ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3f3bf33-ae77-46aa-b74f-eaa0b89b2b83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54468d06-1be3-4c0a-8801-0b8044577195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8528d07b-7261-4f89-b89e-fc46adab5615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92826cfc-a34b-40d9-a03a-725b67a85cf2",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d614af0-bd64-4ef0-bf2c-6bc08fdb35ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1867eeea-ad46-4a17-adef-90a74856198c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f03365ad-d554-4b39-aa72-796d39740375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b524179a-f0cf-48e1-a527-78492bd313bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d55215ba-d7f7-496f-83a1-a1cfa10330b7",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "393f9726-4973-46d7-a430-918e7bda0621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09e8de03-37a1-438b-a130-28dc3c93d0db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35b55308-fd1a-4f9a-af5d-705a9c9f045e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e284aba1-652a-493c-9911-583c1283b0f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49864da9-4d79-4376-869f-3ce943380fe2",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5438856-968e-4ce8-9231-5e641daeeaaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "870bcafa-df33-44fd-bf7e-c5a90c05a185"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edfa829d-d4e8-42bb-b7b3-a99c0fbf43aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "74c4890a-b21f-4088-9bbc-54e4dd079239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc2dcaf-eaea-4044-8212-63eea245edab",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e7d8933-e10f-495b-b4fe-e5e262b459c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "952454b6-4804-4e0e-9106-be8e8ca03832"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66dc8569-8862-4f0b-943e-b1aa986d9b6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5baf7705-378f-4eeb-b49b-2faa981e06f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "620bfb17-28e6-440b-a529-3d41e0e607c9",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c09514-a333-4164-a225-29c65797f722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09f75075-d75e-40fb-b165-2e35b5f7b453"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "129c258e-3764-490c-977c-ab12af580cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "53a141cd-c8e5-4fb3-a645-d6b2da450a59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5d782f2-5a7b-4d06-aa09-4e56c90976df",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69916da4-03b4-4950-b11e-a073cd9a80ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1793bc33-e274-4045-9c31-7a5c70ca363d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8b5f55d-9c6e-4cee-be5f-4291aa0a4d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8f307b8f-81f0-424a-b29b-ad5f960c79b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcfe898f-5d9a-4bc0-809a-25e7a233e70d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27648c8f-0643-4eb5-99c9-ea76c45a37b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0ce28d6-b2f5-49cd-97eb-97c035c359fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "700ceb84-6ea9-41bf-8a6a-9b85b4988c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "efa6a783-88aa-4964-8500-8d96149f4385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce092d55-42b6-4b36-a614-95cf901b7bd8",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "727a27ac-cf20-49a3-8ab5-a37436a722bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c75325e-592f-4810-8a35-b993850e6ee1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5941990a-445c-4a05-a27f-f15e6091e1a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "629ac28a-4a02-4ad8-8f5e-f912becf4d1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39ad0c35-e88e-42f5-9331-816859a725f2",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c5e5f2-b461-4762-bc6b-fc1a77f05469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5994c49c-4d9f-4634-a816-eebc326d53c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc3be80c-501e-4b41-976b-128c544c4b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "08b98384-515e-4bd3-9664-ec0b8a9316c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e33a37-87aa-4330-9822-ee17d0d2893d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33dfefb5-0e7e-46fe-ab97-1426d0bdca88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeaafc65-1f8f-4378-a2a1-bdca2501a43d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa2221ff-bde4-40bf-bc55-6cba1fd498f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5c07c09-c0a0-4b07-9436-c1f8f59dcc31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d32fa057-84b9-4c8b-9e26-e9a3b20592b4",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a2dcfce-4e7b-4dc2-bcbc-ed85ea1ddfd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b2896b4-ef7c-4ce6-af45-0ba00668ace8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad17855-284a-400d-8192-3458b4cc5e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae5d876f-2c38-4c0a-92dd-799087ddd089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4adfb0d-19dc-4708-b19e-71926a271d63",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "117daca7-5a50-451e-95d1-aafe51f40c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "682a7530-ce6d-4c47-b4a0-754376ab71e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fd0e35d-d1a6-43d7-bade-56a76bde0984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ba19af1-8ee7-4126-90fd-bd07700ed2c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f22691a2-31c4-4d22-85c5-43626ff74109",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae0f11e1-c1bf-40c2-b057-959a0881454a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bd9d36d-6645-47ee-9897-a2bb28ea606e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd70124e-bb03-4965-a7ff-90016667ac67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f82d89f-cf4e-4092-85a2-9990d3f58627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce6df66-3824-4299-8a7e-4d59b695efad",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf807fe-fbe1-4d07-95c6-9b8e7912c88b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9e76bb8-c5bf-4d3d-aa90-970f21ba49e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ffb2ac-887c-4582-ba60-554108ff73c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e19b2d59-1854-4a76-97ad-46f8e7e1360a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c51de7b-5231-498c-a867-17358f86ae50",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd7956e-a9d0-46dc-bb08-7ec799a4cf6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5e34d72-7fe1-4279-ac4f-6df286b1f33f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "860d6b4b-ad7e-4a7a-826e-158800c40ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72fadb35-5940-4aca-931a-5cb4fb162475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfcb2bab-892c-40b3-ace3-6e5359490676",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee0a8e43-9086-4bd6-9a26-cd36879c745e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3f3a149-1c4e-4e19-b968-3410d20fbc62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef987a70-31a8-4f4b-9035-2d429d3c0012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c162fa47-86f9-4d07-8b67-90f1194348fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ffe5ff-8e6d-4237-8849-39ddc838181f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fd7e7ab-8407-4ad6-80e4-b3b7c110ed4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64a0e084-071a-4227-9a52-a1212b4063f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeac9213-825e-4cfa-b6db-e5470db9ed3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e37e306-0c86-4b10-964b-24ebe1d3cdc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72862721-eb41-4c6d-9525-83cba9eb2101",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b52864c4-c403-4bf0-ad70-8bacee5ad264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "389d24c5-7bf9-45b0-9683-941878deb151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be4f066c-b2fb-4a21-bc96-d97fdf8be852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67e361b5-f357-45f7-81a0-c1374b8bebeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56dfe11e-ff37-4ea1-87de-32a1c9ba9dbb",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c316ba64-f604-48af-b3ef-115f874fb28a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eef6e8b4-4e38-442b-a673-e3733df03609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f19a36-5f62-469b-a5b0-84337352bcff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5560fcec-86c8-490e-80f4-67511d052487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a9d1415-fec4-4d2d-abb4-195168120b5b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "569264f3-e4e0-44b8-a4d8-88b201eedb5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfc3bce3-3797-4715-9110-385c9f683c66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5920bf7d-64a9-44d1-ad55-af1dcfe33df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be90514f-573b-414a-a4d7-b65dfa83a056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c6ada8-0417-49e8-93dd-c803251cef26",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e9292c-b591-4c98-a47a-fd90b9ec3d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d47c94df-5a0f-4c1a-9ddf-4ac8e132fdd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bd109a4-2bcb-4f14-b434-a5177a43126b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54cc367d-a84e-4cb5-b68d-5c9edd2934ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0460a325-6fdb-4f02-8ed3-0b61756c4889",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc3fa04-bc5a-4be5-8566-99629c18ed36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee4f470d-f1af-4534-8a02-64c6919ec33b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18d0743f-106c-40f7-ac31-2c8f79a4887d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c6873ee-6cde-4c57-9e7b-5493a34edcd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "338a5ea6-5805-40ff-a3d7-3b5aea4abf56",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2466af6-b476-4a47-bebe-764b35dddd20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "575b5c5b-29d4-4339-ac43-13dad1d33a6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf77c167-1471-4959-b596-7d2b2f08add3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c5d8dbe-d69b-4f24-9eb2-0465f2139939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "152205d5-1b21-4711-ad81-359bd06d23a9",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b73cc322-97e3-478c-bdd8-28f2cb2aab4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43203447-6eb8-4c52-841e-3467114e990d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f96f66-ef29-4542-a780-6447fe73ec36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6802f08-3549-4500-b9d2-b7d849e38961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d391593-5d3e-48ca-a5e3-4959c95a9531",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1abf84a5-478c-444b-a14d-4c4e7e0edeae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ff7776b-ba29-42a1-9cc3-a959db8c482e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dbc260e-3ab2-469e-95e0-38d7174cbab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eef4d996-3a64-4116-97f6-c7bc3e71b3d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb48802-7212-4bc4-afb4-e59d5fa37c82",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d59812-2f19-488e-b588-ba3ff2439fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb34f267-1ee3-4908-bd6e-d7b4051c50fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48c0b6d4-7dc2-4c44-807c-7eccc83cab61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7cb4696-19f1-4f04-8647-4ae638b22adc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3a5a613d-c854-4345-94a4-1e3861226034",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "07bbfd98-9782-42f4-8f03-d40caf8da2d1",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e49d813e-700b-40e2-ae93-90e61d20dc4b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "64f5bb69-9312-4bd6-b62a-43fdfb0f783b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "366b9a6f-0e76-4ace-9a64-fd6893999f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6436608d-d2a3-48b6-b5ba-5c5041e27df7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed17fb00-6f0b-4dc4-a238-616277426f4c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c23e6ae-018d-40f0-aa6d-4c1fa978d47b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9bacb76a-a4eb-4f6f-87bd-df96de516eb3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "22901350-7411-4133-9ba7-3e5c990f9512"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "edf07792-68cf-42f9-af47-650468c4dc6e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "aaa44209-a1e3-4559-b0e2-7e899c1c81fe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "92efdb85-46ed-4399-bb77-25b60acf2cc5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8a90937a-008a-4305-87e9-e543f24c6c25"
            }
          }
        ]
      },
      {
        "id": "c3d074e5-f24b-4384-a1de-89abce59f3f4",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "d5553fe4-40b1-43b4-bd89-ec1249dae76f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "95dd4776-5752-4778-ac59-74c6def5e89e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d80fee0b-b1a4-4a4d-be2c-5ebb4e46f2ff",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf5d939-d3e1-4f34-9b8c-352594d33779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1eda8f3-10eb-4ccb-b103-3b68c8e0eaf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eceadef-924b-4567-8573-6548765c30e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a46eb0a6-0170-4fcb-b2ae-2ed59a343033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dde2f34-6872-46da-ae6b-19716eedb63c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f30c53-74f3-4629-a15e-bfaebe33d7ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40ce9901-25bb-4160-914b-ce9a4856b084"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25641b0a-ef6f-4e29-8cc4-dc2a383d91f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6edc2960-04ff-4e22-b02a-7f573ac934ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55af9ede-196b-42f3-be8e-38b0abde4f6e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc7d687e-2b7b-4ccd-a658-178449e7b35a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b0c10b2-3ba0-4f69-9a6e-610711dc994b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23ba7cc9-5701-4e39-8689-072e926fcf8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ce48f3e-e21d-4006-8978-4a8bb4b97854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8547f9de-94f7-438c-ad5c-9b55b5b95fb1",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cff86a6-b737-4990-97d3-8cc36d4e4040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "194d4c00-f879-4a6b-81e3-d308ff968538"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b760b10-6168-407f-b0df-d161243e4a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0593e6a5-d974-403d-bca8-5d9c52275691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c32a19c4-8023-4a86-8000-70b22383f0d0",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b07f0dbd-e18c-4f4d-8bef-d55665751cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc281050-be93-4a87-b01a-4d53d888e97d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d8024a1-e0ed-40a2-b718-217fa96ffb6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a4349ca-f0b3-453a-a5aa-03198e4cdb4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fec8e9f8-ec72-482f-91d1-7e0ec64077eb",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e47fa4c6-f2ab-45ef-9714-50b4028c9ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be8a16f4-2a00-4abc-9575-105dce022195"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe73104-2436-4867-a841-959ffef45677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "06d47023-1a6f-41cd-82d1-d251c2d39816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba0d2f4-f806-47d3-8f45-d3cf1089f1b5",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43bf2d05-95e4-4dec-b7f2-349be9dd0c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3bced52-af6b-47dd-a23d-2073e469f806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f05a6e8-0330-41f2-81ab-c8f13cd73dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b737651-6016-4fa7-a661-0459c7977653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8bedbe5-9eb1-4464-8669-3e6e99a7fdcf",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a556e83a-cf40-42b2-8773-aa6becc790e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdb6d62c-d2d6-49f8-83d6-8a85211e25ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86c863ba-568e-4b02-85d3-55b2f78e5c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4162b3fb-d340-48dd-bd3f-699f993bd0a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27bcd5e1-9a72-4a30-ae26-839d7206a2c6",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f018888f-414c-4e95-a71c-b80c84a4f321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2d4bd03-85b8-431c-9ee5-84f1d969c98f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27bf7da4-dabc-46e1-b74c-3cf31263f41c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9ab7aa7-f69e-451f-b1fb-637043341421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "175c125d-d4bf-4249-bd37-c31e9393d1c3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c9c9cc-5ed5-43ed-ad0c-20a20e09b99d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b89b9e28-a5a9-4071-aeba-c0dc9df8d89c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db4bbcc-934d-4828-bfc8-bb74cb807d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "546b5935-90df-442c-804c-904e12cec2ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3968a10b-676d-419d-8d71-562c91bf9e6d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d81b56a-3c70-48b5-a954-22e2b5395338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78a924e7-2550-4bb1-b5fe-47fe427962c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d988b58-3f6e-4dad-a426-9428bc2583ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "20c910d4-19c4-42f1-92bc-45faf80ce722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebd67421-902f-4efa-9ebd-4bcb8f705de0",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "069958a2-52b7-4ba1-8b21-80219585dcfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d8bcbc1-e975-493b-bc03-7b9642b7c4ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0223ef9-853f-4ac9-9b84-13e98f7511ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2c4faa8a-9e09-4407-a4e0-b1ec3911e564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ef36192-ff39-4028-a5b8-eaa2c0f02693",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b791881b-c14c-4c4e-9f68-f6b4bab02161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8d27142-5b37-46a0-bbcd-9b418b549c2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebf559de-6469-43cd-bdcc-3b2b154ab15c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "20d81602-c267-421f-842c-d01de3456698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a7b7748-98ff-440d-af8e-e77175022ba8",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f3e0d53-6e50-43d5-a83b-9303b9fee35d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37211b5f-aebe-490e-baf7-b96d6cc3c2e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c63cd7db-fb1c-4a71-9d66-f2747b3acb6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2c03363-ba94-4cab-aef7-1e4c73fe6de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa4f747-2b57-4e62-9ae9-b2dc5e4a95ce",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25bf9157-210a-49ca-bc80-b62043dfde2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fec207e1-e253-4a35-962c-247604da151d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa7dd39f-07f0-4777-879e-a9e732a03fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "814c5fd0-67b0-4707-89fc-d9ef17b7e58c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c25642-1e2f-483c-9e2c-b00fff72ddf4",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a45600dc-7754-46b7-8007-db774c24363d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ece49360-0844-4125-adb5-505707a5437b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cba3b9b-4212-4073-903e-171d3833f07e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "21fd5795-c313-42a3-bd1f-95794e27a6f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "458084ca-2e73-4306-a107-7e7b839f8230",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11971ef1-17fa-4f52-be99-532332bfde4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3da91cc2-98b5-4be2-8c80-9c2e7feec1e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05cefa64-6600-498d-a421-5069e95583c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc83199b-c940-45ff-869a-fefa76d28cd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a28a1d2f-d3c9-4fde-bdc9-f10f7e733fed",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee4ed651-28b9-44cf-872e-51bc1ed549be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0aa6341-d754-4dc8-9c41-cf1c9dbc2070"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a777a500-72bd-4b8c-8e7f-93e6ccac1ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "340ec687-fbc2-4081-a9d6-736ad8e4989f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52eadc40-0835-4958-be5d-b1a6ddeb7424",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66dcd2d5-e043-4fb5-b38a-d438d6854530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ad2b0d1-059d-4d38-af75-8f7581a35e0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec4cbc96-87c5-426a-b4da-910fe0a9a437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25454110-33f0-4805-8114-ec1f005cbec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "682b7c34-73b1-45d7-b45e-0572f903956e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d73cf91-9291-4348-b8f2-486cbac2e49a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be007b0e-e113-4f02-99b1-4d1b42a85938"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f0267a4-f691-4412-b443-ab35cc4097f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43047f0b-74b6-4c7b-87ae-c2781abfba0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9151bcf-0e9f-48c9-9c89-10eac22c5bfe",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a5b16d-d008-4ddb-a7d9-c0178d1ca412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89b56138-4938-4377-b6ef-641b212e7799"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "511a885e-1779-4746-8c12-bc8a0f5cea28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02f34308-adba-41bf-88e2-ae7081a78c3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccf4a9f2-93e4-4964-b89b-3aed47533aa1",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5729826f-207f-4a91-b376-cb41662b0599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "459685fb-c60c-4021-a189-ce3345695ea1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b1e324f-8919-4a6e-99fa-3296567c5d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ef8d190-807c-4835-8c28-8a7dc29e5b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fda290a8-15c6-4c9b-9bd3-db05d0dcd568",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f56aeab-cf36-4af5-af7a-e0845c2808a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c4a5ce6-9b3f-4919-9b15-a9e961e4a114"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bdd9981-83f8-4bf7-965b-7abc6c5e00ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14bd4c13-c424-46f7-96f9-aef330d512a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "928b403b-ac77-4283-afc6-20d2060e6962",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39e66892-3acc-4692-9cab-c8650cadfbc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32ad5fa4-3aba-48af-951e-f35ac0cf62ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "258101a3-55df-45fa-9d91-7fbd99ef072a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57f57da6-f4f2-44be-985e-38dd636cdc77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4c98e83-67e3-480f-8bd9-dae9837babd0",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73aac722-f289-46c6-b6d5-ff61c48445b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef5b8b70-7979-4836-b02c-9239c7e289b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "560884cd-20e5-4be7-b944-0aaa2b2e861e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a128ab2b-78d7-466c-a32a-d75aedb6f67b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc810eb3-ce64-4ffe-941c-64b159f93fbc",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3899d0bd-5325-469e-ad49-0208238ca260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e260081-4681-4201-b2c8-624786647122"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b4d787f-13b0-4f33-b326-23646c57f4d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d99ef60c-e2c7-4bd5-8550-4f7461f53a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3a00e6f-00f2-40ca-ac3e-7cec218348b1",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dce05f7a-5c08-49d6-8d2e-69ee5cf652d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "595dd28a-39b0-4b7c-8bc5-21e288d8bff3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfa9bf3f-f5e9-4912-89e0-d429f6ca1370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8bd83d7-4dbf-4a7e-9080-ed84f8b82d22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a483bff1-7ef9-4930-9416-03c141e72f21",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ba6fb7a-1664-4446-b6c1-97618d3ed4c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b965319-00ca-4dfd-b42f-f7d3e19bd8f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa792411-c60c-4979-bdd1-ea9b51a86f86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9acee4e-6c03-4a20-b63c-5256b70bcc02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e9cd7db-93e6-4453-8dea-1d1b2e5ea696",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4417ac37-69cd-45e5-a23a-9074784efbb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d93c8060-e8d0-4398-8564-127b327cad2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a02ded2-10dc-48ab-a38f-53af6cc47aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "efbd8d26-1e2e-4601-b234-d0245512b87b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "129bad34-c92b-4b70-b293-ee4f7157bdd7",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "581239c5-3d97-4631-9d88-f1eb1c190e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6e4cad7-e2c7-46f2-9b4e-51d601f861d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43e4ca28-c6d5-4d76-a5de-d4a13743c043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e239e65d-e1b6-4a43-b1c6-75fe2141cb2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1d6013c-9d35-47eb-9769-0ef68a0f4b7b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49b01d20-429a-47b1-9b59-1592bd7a1608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adc4df9d-8d2b-44d6-92ee-22482091ae55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2aa6027-4c0f-457c-bf63-27c77ea7f424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cb8d75f-5a8d-44cc-9975-448da2da4e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a5e9d48-0032-4799-ab25-f6e4599d698b",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcfb520f-68fc-4ba4-bf2b-89f420be3991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44a045d0-2981-4133-88bc-b2aa0d16404a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f79d960-4932-4648-a422-a743217a3021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97affe56-2d56-425a-9989-5392a7b56e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a41b920-e7f8-42e5-98cc-c009e375c002",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27396429-2136-4f27-9b19-a1598be26c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c54cd565-118f-403a-8917-bcef1824d640"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd77a396-b014-4774-9ae6-dfa9977f1987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2376aedf-2ec2-4f61-a5eb-d17f85b05184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f05e83-faf6-4562-bca5-b192c0ac2625",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59dd6e24-d1e4-47f1-8ed1-986fc970a7c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d1a509d-0310-49a6-8dd7-79c495838703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "024d45bc-0632-46f0-bb90-de76e8d09bd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd836e67-9e84-422b-9a7d-c300a56621c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deaa7d44-d1d3-425a-b5e5-e68546e606e8",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0451179f-2ced-4d89-a8be-e23fa6312869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b96c1081-6694-4168-9699-0ecaa06af0a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9166b584-f8fc-4601-851c-1e367612c86a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d919444-03f1-4e87-b54e-9b95842e218e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1894a263-1ad3-4bcc-83e1-bd961c557e85",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "201233b6-9bec-4b1d-a420-cd81857a16b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca5d37f0-ff27-4239-ab07-2d678337941e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1062c4c-e924-4cd3-8118-24c4d4fd98ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d273f71-1a6c-4c71-a358-8e91737d3843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d9eb6ed-2f59-4b58-9164-c10b80c2870e",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a579171b-a2d7-4043-8ab7-43c86635bdf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61304333-b12d-43ca-95a6-270dab792710"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e86f9452-409c-4dc5-b0ad-d8502f5f53c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1798572-799a-426f-963d-10850b7a7b83"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "94228498-8c9a-44ab-acb5-9aa4679cdf4f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8f840bf2-1590-4014-b7b2-8f588e02b4bc",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "332a9f57-87f1-4bb7-b391-71637a8db955",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9eb95585-5db5-4dbe-99ae-70f49fce9cf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96ca53f6-c1f6-479c-9e5f-1ed85f76bca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f61209dc-52d8-4e6d-a0ac-8e332b93fca9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b26de207-615b-4a9e-a4c8-14ba11a7a233",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "601366ac-cac5-4c30-97b6-c5ca02dca7a4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c65873b-12cd-4c13-8a62-968ba0eff0dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0468eaf7-721b-4123-a1eb-596adca47677"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7ace741d-75fd-4af2-a4d7-9508e36def37",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ef05964c-be5e-4c54-9db6-3e8f474e3f72"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2fd97803-7026-412a-9980-7dfb857f5800",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "11d5380e-34b5-4dad-9e88-2ab9361af192"
            }
          }
        ]
      },
      {
        "id": "f7d3b459-66d8-472e-b06e-4a99ad202997",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "adcb4966-18a3-4cde-a522-c3ee02c0438d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2e4875a9-4822-4063-9703-e281b69974cf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "731edcdf-d46c-4081-850c-b7cbf0f999fa",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0329ed38-4acd-4ad5-b165-30cad3f966d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9083c470-ba02-47ce-8519-334878a77edd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d784863-f5a3-4b9e-bbf1-f502cf8fecd5",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2119f892-fc76-4861-824e-8b5824ccbe06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6860eda8-4aa7-4314-a5f3-1b3a1befb162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f626ff75-1d8b-4016-a1d7-1efbdc990dbe",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d54b899-702f-42c6-ac01-26753dadcbab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a93370a-bf5f-4ff5-a7c4-a869bc6fc86f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "463da946-76f6-42c5-8fa5-eefc2d2c71b3",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b765086e-63bb-4c2b-aeab-4c3b0664ad87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "632cc475-e10b-436d-a1c4-513a5d7e5b0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce238c2-b84a-40ff-a836-344105653314",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a8ffdc4-71a2-44ca-b41f-43e64dac263e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08fb9519-677d-4ae0-85f4-c5bac8e27740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def8185f-aae6-4956-a0ee-634e45b967d9",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a24a4b-50b3-4dc7-9f48-dc69131b8aaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69997b2a-eaa3-4479-b541-5293f281c8ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85b9b82f-808d-4fec-b0e5-3d1dcf4578fc",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acfcf027-ae95-4eca-80a9-8d379a893d16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef1c98bc-91a5-4328-82f3-305c683bc344"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d5f506-e371-467e-bc8d-8103d5ca6c56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25a1ff29-412f-49ae-9b0c-47b39ecac74c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5df51dfd-5d94-405c-b22b-ee9943ad95b4",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "526456fa-29fe-49e3-bfbe-9305fe7a4d64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13cccb15-c2da-4f1d-9df3-61263ccdf48c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b98f4960-6f43-4080-b7e4-fb9bbc7842ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21fedc99-c34e-4aa9-bd12-f423322e60d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81cae2e1-863c-4509-ad0b-ee709d5567a4",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "206ab2dd-359e-4564-ab6c-5d5e38552623",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1aeac90-8c05-43e0-9a9c-812326861f64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e3558d3-227e-4ce4-a3c1-2df19094856b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df4f90fc-6395-4270-a863-1334ccfa7fac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2984345-cec4-492c-9c42-3056629411c4",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c16753c-7592-4b96-8ae0-06bdd3fca0c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4eff518-57c6-404c-8429-0bcb26003eb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "494e4ef7-3d18-4ef7-81e3-d594a1b838af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0d69b24-b6eb-4e0d-ac3b-c1e7db0d33c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53d373d9-9615-4e02-a33d-c291e27afcad",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a05a735e-ec22-4d9a-8fcf-8ad7e84d9332",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9b58b43-ea37-47ca-a9d6-3f9b88b53de7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5519be20-9e1a-485d-8afc-a45b28d9e2de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ed30955-48ae-4cef-b24b-94f73e7bd9f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aeb6551-b629-4e00-a4dd-a65354161580",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb777225-7031-4be8-9e9b-6d7edc9b05c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0813c6ff-5d78-4de4-8b76-7cf0c6ce5c52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a330e8e0-4188-4ec4-a3dd-0f2e3aecdb5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "735fa847-0440-4aef-93bb-7e9b5bcaa06f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "237a96f3-3506-4d35-95d1-c877082d89fc",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81ceda6b-4752-413b-831a-c0099e9b7fb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5f3583e-8ef9-4b1e-938a-ee217cd39a5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4644f4d-0cba-4ab8-8840-45ecc247c68b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "797f2278-d6b4-41ea-b1d3-e87d3a6e34d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bb42d94-f025-4008-944b-d44c42471b40",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a3e06d-f6cb-4212-a5a7-349292956f97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01df7edb-1bf5-4e19-8284-28a79a79fdce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "484c3a29-bb63-4e42-b0bd-fd17e23c0325",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a61aaf2c-497d-4b82-a947-d502793ed953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41b65505-6986-40d1-8b2e-2badc465cc08",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd5cff0-54b1-4c8c-9427-578069dfde5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2503235-ba6b-4e93-bf98-fafae38d87a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f7cfc49-635e-4b15-a481-6e4e214ae81f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "311d0351-0558-477a-88f4-b7bc37cc71d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1d49290-fbe7-4420-afe6-91b21e4db9d9",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f7cf1a4-22f9-4220-9351-a85fc22f6d00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ae3b813-0b6f-4231-8c7f-9d76eea28545"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b9cb31-f36b-4e4c-87c6-b797c1be335a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "447b6984-9346-4369-ba21-7fb47e5a55b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfe7df01-b2d0-48e7-aeb4-7df3371f3e55",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bd85763-55ec-4987-9474-dc911aba9664",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "803898dc-0742-4236-8bbf-218dfb033aad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05bedf7a-7193-49c7-9dde-3bc7e766bf77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "088e1ab0-9798-4d76-986d-73da3e5a0c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49ab0d7a-a4a0-4fb1-b9c0-b16bb46d2eee",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d33248bd-f29c-457a-a562-0fba34802ddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07fdf892-294b-4bc5-a008-071df8819122"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97878a50-29ca-4761-b0a4-082fd4a44385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de464afe-8923-4408-8ed1-84ca594d7890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d83f37-a3bc-421b-af97-231798089b89",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4212f7ea-0cd9-4649-aa83-36f9fdce8fbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a966857-37fd-4343-a245-9de7730f2fd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25403a67-3d89-478e-92ff-2acbb7f9837d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8d768c4-9520-4661-ab3a-20900dc84f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ee7b20-82a4-4cec-9c27-7fdf97b6ef9d",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8093a9d-7aea-41ae-8481-2726ab56a5e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc95e723-e459-4942-86e9-8f67249fc219"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a046b6-e076-4da8-97ea-10ebf9bf2c9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3538d322-a359-475e-ae83-7b31111ae9cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2801c5e-f33e-4246-aa96-92bed446c509",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65f66035-fc00-482c-9d85-e2d34b4fcc5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "968ee493-41c6-4feb-bd39-529cbaa546a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f42545-f940-4135-9cfb-d1baf2be5583",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "270c2c4d-c97a-4071-9973-06d7549e674a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e72f0b11-8ecf-4681-aefa-4379e5fd3e88",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0fc02cd-ca81-4ca0-92df-c944fdb758c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3e42e8e-4fbe-44ca-af8b-37c7a1a2ceab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b96bc65c-79b5-4c6e-b134-f1847abe6deb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aaa5d83-4c4c-477d-9a01-e22e4f9a748a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41bce5d3-672b-4f50-8eaa-3fae85483bf2",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f77804a-f833-461d-98f1-9d455686692b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10e79335-dab6-494f-9e6a-52edfa7c4938"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2771248-e46c-401e-972e-1e814989b873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8489b48-542f-416e-8676-4087a1262c66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe4f8c79-c9cf-411b-a287-baf80333075c",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b4997e-6b08-49a8-aad7-dfd4928b452f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1771619c-44cc-493f-867e-f2f17cc7c586"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd72de6-94f6-46d7-b844-69dc6cae2553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bef2db1f-eaf0-4723-90ad-076df6ae239a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4698b3b8-640b-42cc-abeb-8d72361fc086",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b50bb8ec-3d80-4098-a14d-368bf0131c03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a9e9345-5027-453f-9c69-f2c4451f9afb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3524140f-c987-4b6c-ab34-d2eeaa829d74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b61ef60d-0e7b-45d6-b94f-412d41d8b0e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37a28326-674a-48d7-8ba5-395ae02415ed",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "126de9ac-101c-4994-a5ee-ff602ee5ced5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b393c26a-1b4e-488c-9e63-18109fcbc527"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22548f6a-4151-404c-968a-d28bc5acf036",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dab26d3-6ddc-4305-b2fd-f7569299c91e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66eb3f06-023d-4602-8735-1782fa01eed7",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be875a0f-f264-47e5-a8ff-aceccf3073fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b79f6c7-94e2-47ce-b960-54223bec068b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f42d01e5-27c2-4cf1-8dd7-fe00283a8692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec5a7a76-215a-4ff0-8a0c-25d2a40ad9f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "995a0b12-50fb-4bba-8a30-9c913e0a2412",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8323938a-571e-4698-8c6b-8a6279e45e9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7167118f-48bf-4a7b-9922-e2063c2e44a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "012db07c-56cd-4412-80bb-c5f5b44b095d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55257bf6-0cba-4311-9bdc-2e73e9113bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bde27a3-f3c6-4821-98a8-e609f199d5c6",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dcd2337-5919-42d1-8c4b-b6a4c22eeaf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45b5e858-3a27-4995-b676-dce6badeff1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f94740f-435a-489e-84d2-e95f4367d406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c98f4da-3693-4260-b470-810895a40873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f49b32c4-c075-4bc0-9fe2-a9cd51a427c2",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42bf2f85-a835-4278-97bd-863ab9429ac4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d6fedef-5df7-43cd-9ab7-58efe5ea3054"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e684f7d-495a-4474-aa99-50753cca031a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7732ef41-d955-4813-9532-83cb3cced632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2054898-ed52-48ec-bce6-924143689abf",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8806892-2e94-4827-bc3b-6e08fb1dc6a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35a62a7c-9420-4b07-9b18-9666c6e88710"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a85e82a4-ac73-4615-bf80-71e5c8729345",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18325d91-0adf-4def-92e0-d124f45a5f1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c7bc579-c4b4-48cc-b5f1-96bd89a752bd",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40c30c2e-b5e4-43c4-b144-a7a94491c5c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f2b91e7-a96d-4291-8652-7cc2823b0270"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9bd2731-1c44-409c-9e94-505fa511eee4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "218ffdb3-e0bf-49c6-9f40-6225a8dfacba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff749903-34be-4e92-8a49-c50f54c3ea15",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcf4dfe6-5e39-4b90-bcf7-f94def07a71f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "817e0e90-b73c-49ca-be4f-557a8fe0520a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e34227-9052-45e1-a03a-603ceed6cac8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e3599b5-a272-4502-ad9b-9643bb66a2aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8a01db9-0868-46e3-b309-a597c61eb649",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c833ace-7daa-4ae6-9177-020505b7d47b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b311dfa5-519d-4e43-82b9-dbd908de4e2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "338c2e2d-846b-40d7-a9bd-c1d1b94de3fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a39f6a88-1330-4ef3-828e-72fe61d15a23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb5b883-e265-4eab-bb4e-c3714ab65042",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3400a0e-9819-4f22-a7cc-43fad8bbffde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e0fc946-060a-43df-b80b-95a6fff3d047"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a3ebc8-1434-4ae1-a3ca-b4fc20f90c83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c1e98a0-e551-4a9c-97e3-433ad57a570b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34ae8818-c822-45a3-99ee-5a4e96301106",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f986ba38-9ff4-416f-b8f7-71d279ae4885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71c130c6-4ca8-4832-ae1c-9fccbd46a8f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d84e5a4-a7a9-499f-811b-0bb11b9b4264",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d717ca0d-d95a-4143-ad31-e68cabd60143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02d7eccb-f5be-4922-8d79-52e8d06cb1e9",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7a63de8-0340-45ff-ac34-e9217240c745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e217bdd7-34a6-4991-af87-dc046f6d4b95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ceb584c-e6f9-43f8-bbe6-18c1a782fbf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57c1ad9f-1954-4faa-9bf5-29ccb2d8cd91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c04c3104-911f-4b42-9775-a76457d6f38f",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f60f46-3226-459c-9172-456514094327",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eddec821-9eae-4508-a4a8-4320b63d7093"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83be1faf-329e-4485-a50c-17974a70ba19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ae90e34-920b-4041-8051-007b4cda1b8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcb2949b-e252-4314-bbd9-df8696bb4eba",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab4f4fb0-c28a-4f1b-8fa3-3bbfc4b22dff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7c07826-54e2-460a-8b33-4cccb2c69f88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e20560-dc50-49e0-9403-4ffd96684191",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0475b186-b73f-4c61-b8b0-90b339ce2dd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2172c88-6cba-4ac3-a6f2-ed63bd1f66c5",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa2c778-0e69-43af-addb-2f06137ffa06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b844361-7078-4574-aa5a-083b6c9234c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bafe3c7c-d8d9-48e8-88a4-4bf2342b7c27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e92c4b9-1f27-414e-86b7-93429bef58f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6938b9e6-5fbc-445a-be21-e79c0c90d690",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a0a37f6-824b-40e7-b626-45249bc4b144",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f86e71b-904a-4984-81f6-542b37b10ed3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85024eb7-9c33-481e-ac1a-147dd8fdd336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31ba751d-d581-452d-bc95-9ddcf7f149ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7188b277-964c-4d03-b6cb-4c3a90bf68cf",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3756cb0e-0aaf-45a0-8db3-fbb2311b11a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d60d59fb-52b1-4211-955d-913005a9c5d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f7b2e11-ffef-4d55-9f45-0c0337175a22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69532db0-ca12-48a1-830c-f453dfb8bdb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0c8e926-78fc-41f6-8026-d6621bec6427",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7fe9e90-d233-400f-a0a4-94f091f71390",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a025d0fb-8996-4266-b6aa-85b98c705c1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "992f849a-e941-41ed-b7bf-764185e10211",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34cc9647-174f-48a2-8c9e-4260483a0e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23281338-71cd-4761-8b06-01613c2c8c15",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5769174a-b07d-43c3-ae2b-2fd4473ddacd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9580b9ba-c12e-428b-a2c1-9e1b3469cf95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7cea7f4-8038-4ab8-98df-c6a1ea1e1f79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e934958-faa5-4d1a-b479-fe944928674a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aba76cee-c102-43c5-956d-4bafe9be8d1e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9455dbb6-a5b7-43bf-82dd-dc4e15e1a937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c34b2323-caa6-4b2c-bc4b-23b9558b80a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa03078-a42f-4d37-bff0-ba6c00f17bcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "407840c4-bcd3-4c7b-84ff-58afd9dbb929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30b9e109-3d98-42bd-9a10-15c0bfe6cb3f",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39c86cbc-3931-45d0-b617-00b5d924b271",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3748081-3fb5-4320-ba23-ee225143549e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "529a6243-5f1d-49b6-95be-9ad53a1e87dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8db8c717-f094-4bbb-ad26-7f60e5576d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20b11e98-7f6c-49f9-8a4e-94746e623a70",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f318aa8a-67b8-4c0b-be6a-29e5a5f6f94f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0848e41-d242-43c5-a4f4-f48a69daf67e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a25675a8-bbca-4aef-854c-d0d3c0054c9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d7b05f8-1737-445a-9c98-414514f5e79a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11615f1a-78eb-4ea0-a39e-a9bdc45deac8",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7b8eb0c-82ed-42d4-93a8-471f4c55f707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9357c7cc-3164-458a-9da6-d86134b406c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea6a501-e906-4c9a-9e93-3308eb7f9641",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf1a79f4-ed3d-4a72-b1f6-262927f89a94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b8cf080-0736-4398-97dd-c11246505821",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "965d72a0-fd2d-479b-8d62-8a91df1a896b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccb7adc4-1f0f-4049-9791-7653cddb6f3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afbb1061-d275-49dd-9124-3dd2652d54ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7483eca8-4382-43d9-b7c0-d5c8d8abc0fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03428069-ded8-4a61-9da4-b37469d85c99",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24a6ad71-f37d-49cf-9a72-aa6582c3802f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bbfef7e-1e10-4a2b-96df-b9128b761085"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "694264c4-710a-43cb-a770-f0737ff6fdd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf31cae5-cb6a-4bb0-a265-3c2fbdaa4a9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f53902a2-61c1-4518-b58b-6f56384dcaba",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f78e62b-6dae-4684-8e01-f662c21feff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ff595eb-dd1b-4159-80a1-1678fc324269"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24a93e64-3276-46ac-9bcf-6a0bf262cc5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a2848be-8e07-4b08-9057-c1a0014ac5ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3445194c-71ae-4af4-ac30-a785e9bbdb68",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "662de21b-2e48-44ca-a4ef-7b11c0383b24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c277cdd6-7386-48c8-9a10-154ec1cd6739"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cff0c229-f9a0-4858-853c-da6808f73735",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82382c34-0948-4949-96d1-8e5f603d1492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0317339-6f44-44ca-b73d-3869956a4888",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "203fe0e3-8b29-438c-a1a6-13253988a0cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e473c152-bab3-487b-b1be-d22fd28f4b5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52fce23a-ecdd-4257-b83d-dd6b5450a081",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8dca332-4f83-4304-8191-5e84aca1bff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d79a16-f333-42ae-986b-52918bcc27fb",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0206c903-8822-4f86-9722-4a9becc7afc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa2b25a6-8f34-4e30-aa90-10171739b565"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa28112-f748-468e-bdf0-74117539e14f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f078ed8-4d2c-4fb7-80f4-800911596672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12b70a72-efc3-44fc-a856-8ea649dbc6f6",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dd36598-37e3-409f-80cd-9fd25d1ef58b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18f48804-424f-4c1c-ba44-b860eede6645"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb77860-89cb-4e3a-99da-31aaac0ae8a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a6164e4-c257-4ba4-a6c1-43ebd9472607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3b87b8e-56cf-4734-b014-bdd01dab498c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd97bebb-8931-4125-a0a8-1c9f794e3452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25bf2254-ec84-46df-85d9-5952c61d75f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b654e3a-f2de-462b-8031-6e9f5a6acebd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "262726df-cfd8-4e42-8a01-562b3f022413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b31cedd-e2d9-4a73-8d2d-4dee65f1b1d7",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57501c6d-fe18-4565-b470-d93b0647720b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e82441c-52aa-429b-8964-c5f7587eddd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d1b08cf-30a2-47d9-8405-e9663a958feb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "947873f0-66d3-4493-b5a6-b51973f31b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0461b9a3-269c-4c98-8292-47898387f1f8",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5165863-f29f-47e2-8e30-6379db102c30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b54c628e-3f77-4bf4-82f7-63852e65404e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab2bc04e-b6c6-406b-ba24-fe77fc01c9fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89f7ff6d-4dd1-4a2f-bb99-620c734c2f03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f98d1ee-a587-4d2d-9dfc-47d846c0a4a2",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b26ef630-a4be-4861-a2ba-252b6cb544ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0c9ffea-666c-4dcd-a758-f78b2efc82a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a0df767-f60d-4ef5-b808-b7574f6e3c3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f18cfd6a-6c04-47bc-bd11-4eccedac4020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d026697-a501-4e08-a076-8f5da8398521",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0412d392-cb2f-4517-a9ff-af5501cfabbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6db59f5-e5d8-4acf-b8cd-a3cdd746d872"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b73a0c9-8574-4ed9-a4dd-907927246448",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56a35954-b5d5-4852-a0f4-de9563d1cbc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e14a7e7c-2877-44ff-b74e-8931c7bfd82c",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0531fad9-58fa-4d40-a8c0-af5284bfcf64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd6d7509-29cc-4c57-8a21-ad5611589aa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8549d10e-709a-4d1a-9502-d6bd1fa63718",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90c24389-4b96-4583-9bc8-677dca330406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8b342e6-69ef-4814-88be-e907ef87895f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d14bfd25-ff30-4ca3-8505-ace34eb672a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6696e9ab-b9cc-4610-b722-0acbbe7b6d3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be80731f-7fd6-40b1-98e7-b365f43814ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64be7c78-7c7b-4e24-a0a8-bd10bc413027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d5c975-e7b6-45af-af67-d93c647b75be",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcfe2a7e-5c52-4a56-9576-f0a5d58a653b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53759024-9b44-40e1-9c9b-0ceadf1dcbd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e18d5c56-c3e9-4a6c-bea8-640cd2611b68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff9afec1-6f46-43c4-95fd-79013d617e1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f73a5d79-0aa1-4ed7-97cb-c03e62e10dc8",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fafa669f-55a8-4429-b55f-0bf9105f98ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3213b2be-d4f5-47d6-a754-0479092ccb83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c3ff57f-e6d4-44c8-8c8e-7d750d48f72c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29eca705-4fea-4fc9-87ee-f893a0ab0bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb4d85d3-e9bd-495d-aa3f-aafed165f923",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "998f8b01-8d53-4ca5-8283-89c9597c290e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9b9aa5a-6552-4332-9d76-1488ff7bc54a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdbd96fa-c7f6-4511-a9ca-933a00d63154",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c7e31bd-43bc-4ced-8f62-583d4074bac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18568804-007e-48f4-9eca-fb746dff68bb",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ceaa9c3-3570-4241-a5eb-f6cedb7a1878",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e36778f7-4203-4e10-8938-50fa7674d972"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df19479-0448-47f1-a1e8-a716fdec3752",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c689eab-25bf-4151-a21c-5e863c44c454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eead170-c819-42f0-bfd7-a9850e7c5eb5",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fadaa143-20e9-4687-959f-4e5de0155a96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af9aaf89-c6a7-4dc9-b2cb-b05695e93b42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e67c05eb-f3ef-4abc-8977-fd847d9817f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d16e070-46bd-4f65-9a9b-1baea382d872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40020b3a-28f7-4808-b141-4c5dc32a3e55",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f4cd690-cab4-49a3-b3a7-dd4f563c6fb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af25573a-2a1c-45b3-ae1e-1044a6b6887d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7b33b0e-e75b-490a-82c9-7126382f6d56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4305f769-ec80-4068-98c1-7379465a8000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a55f591-2337-4529-834e-9a40dcfe8ae0",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d00a1d9c-9756-434b-9f84-573bd4dab249",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b51119c7-f14a-4846-bf36-4ab784b2b637"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22194c20-f2ce-46f4-9b79-6dfaf612eb78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7e112ae-6438-48da-b3d8-87dfcec8324c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d331750-3a5a-41aa-968d-0a9f95f50749",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7e669b8-7acf-482a-b905-017015a9de38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3762bffc-e7e3-4e65-86e6-c37bf82f2d63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3071ecc-f532-4300-815b-dd6712e83979",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b80c97d4-8e5d-4ed7-89ce-fc08a6caa09a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "128728d5-38de-46eb-a16a-1458c53827a9",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb2718f5-22be-40b0-a24c-a10a556c52a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95dcf653-2560-4925-a460-dcf052c41cfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab6378e0-f1f4-40d8-ae24-aba3dc79319c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3a67c37-3a8a-4f77-be2f-4f7f7211e9c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "970571df-c620-4cfd-a180-797051ea0bcd",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef100fcd-47e2-414e-8337-3cf326708520",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8094676c-954c-44f6-9b3c-a3383d417fc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b8fb0a-f419-4935-8745-b7fa7b1ba9f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2cf6b27-0ab7-4bec-9588-b04831e9408a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "018fc975-5670-4fa3-81c5-ff58db122394",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3896da9d-ff56-438f-b3be-0b928e5dc8d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68f0251f-cf9a-4850-9bf2-bd13d0e46b12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31c723a8-bcc6-4da8-9721-c137a6c0da70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9442834-c7de-4bdc-a329-501fc989b432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d289a340-0858-43cc-8193-b8d9f41f902c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "059e3f47-b119-4440-9f73-ec4ced0578ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffc29e24-2416-41d5-9889-9b017e865f34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a12a99-8525-4c72-9daf-fcfecfe2b8ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f83cc143-7522-4fcd-af75-7230b9c870dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "385b816a-6907-4044-89dc-81ad397e10a3",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d83a74a-c66a-4c8e-88ee-9c2728ff1b8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "085ecd15-c1cc-420d-baf5-3bf552235e64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab09ab6d-a3cd-4954-8c7e-bcc5f2f475b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9c72aee-456b-411e-81ef-e3d845213145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "664924eb-30be-4c5b-9fe6-6ee013a1dabd",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6248277-dd63-48bc-a961-c53fed02b859",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b2f8f7a-e8ad-4d2e-875f-3f1332bd700f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77fa5b3a-cc88-4d31-97d2-9bfc90447183",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8e08991-f408-431a-bfa2-7b818e3a71c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efdcf865-28b6-48eb-9114-4ee67ea123b7",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03cba987-4fa0-484a-9dbc-625cac1b25c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ac447bd-dd47-46d9-a994-6e12e2ebd0a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2072e1be-0497-4630-9292-4834803f7e78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cae914d-0227-41de-9adb-d9f372313bbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc8f38e7-d649-42cc-8ab9-11cc3db9d11f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91374239-83c4-47cd-b569-9ec27b7371b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb7fa61d-2f93-4352-b16b-c945464c804f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59592c74-0c1f-4423-8725-58feaff583a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c07fb1ef-e3a0-4ea5-a832-6d93670dc11e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c4f6ae6-4165-4088-a3ef-d96f355d9ee8",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36b35a06-21fc-48dc-a23f-c0eab03ba5f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c93bc60-e7fb-4278-9369-f5147364fdec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e440bc8e-19e9-4269-8aa4-5d63a3b95941",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3362272c-2687-426e-9fab-2011766d8d11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03617108-5b50-4b95-8907-23004a358d78",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa1b39cd-0a09-4225-b817-ca215eba4b43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58a94fb0-1d84-48d4-a8a8-976e96d3f298"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b59fb62b-3f64-4d45-8765-99e6959e970a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b9ab0b7-3b2d-4007-89a4-e81f36c04130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2d275d5-6ef0-429d-8d8b-9e34c9bfbfe0",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfa90cec-224c-44c6-ac17-0af8d30b4e08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d09ba241-130e-4806-ace8-f15c2b8a9d65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73042c35-8e4b-438b-bf58-7b6fa87d3886",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3148f15a-d75a-483e-8679-b82fe5d477d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5509102c-db06-4583-8118-95380f9228f5",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b7b8a80-7628-472b-b1d9-60a7a182a9c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bff9559-8fd3-4874-a5a7-2017aaa11699"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf9be4a0-790a-4b5f-9e77-5e240f7bbf7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32cfd898-9dd5-4f8e-a2d4-2e5b28057613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd3ad08c-3cab-4e80-8c5f-a55319ea5f39",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "132f996e-3cec-4f8d-ae33-d05798ea770b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e21eee22-de21-486e-8f0a-1556fac1dc5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "021e3e27-8d8f-4c91-8f9b-c7be5e8713c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcf27e83-0bad-4678-aca8-0805bf31a2e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "834e3e19-73a1-4a75-8a2f-a16e55cefad5",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e9e486-ce40-4091-8877-75019defdbd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a52d0b2c-e9fb-42fc-a178-1af8939b79cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb29ff9-06f7-4d52-ae69-8902eff98cc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbe96b9d-0d23-4675-9125-015a3ff4aa9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "409d8328-ff03-438c-8bc2-81cbe9e7c24e",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d766b07-a498-4307-a21e-6fcff776ff8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b10e14e-3c62-4a87-b338-d73e7036dbf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e6297f-1b1a-4beb-b0b1-df8065d845b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0ee8221-6750-4c99-beb5-ccee46786034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb994ac-5af8-4515-91c8-4af338fb642f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e59983d3-be34-4cb4-9c01-671f905d55ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c157af61-c5a7-409d-b0bf-9546bf56fea1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b00f3e9-6c8b-4d4b-8644-3d78d54aa741",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53d324dc-893e-4e08-935a-612ba70fa5f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7f12ee4-e938-41a9-b14b-18c987dbc178",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc75203d-66dc-4623-aa3e-5d9bf17ecae2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1775239-9f51-4c4c-8fa6-e6875470a596"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8137a9ed-c0c3-4405-8559-24a8ae23fa9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a15bbfd-618f-47ea-af19-2f56926495cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09180b42-9778-4f38-93a9-9bf0edf7f3b2",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75fa330b-20e1-475e-96a6-f1693e7f6ed4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d259e1b3-9623-43af-b5dc-11d54c191707"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3cb203c-f672-441f-ae57-1e2f4f50b1a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6413275f-3928-4e61-b837-ad2b309f7583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "930a41c7-aec8-4a15-b7a4-3a55261bddb3",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15d9c5bc-cb30-404c-9d4f-a4b4201fee44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89605560-0bf1-4bd6-a9d1-6d593d4cfdd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b7688eb-49f3-44f6-8c1a-2bc66f08637b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c59b52f-d1d9-4a65-8ca2-7ccf93da61fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9082b8e0-e3c1-4bd5-a6a8-41be48ed0e77",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2af5e92-2f2f-4193-bbff-32e3c5b67c05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bb8ed8b-ec1c-45e7-8374-108553899610"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1349a75-8a66-461d-bd17-8f9c2f6ad2fb",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a79c4b71-3c9d-4078-8f00-e3198ed3a4a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "341d4844-0fa6-445f-8710-d6b642e332e0",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6177808-df4c-4876-a373-05b9b7fd77bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e326c49-c4c4-4dc5-801b-a117c7b1e6e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a6cf3c-a08d-48e8-b9a5-36ff4427be26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "351c4a39-815c-4997-9127-33ea234f0d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afbedc7a-5b00-4ec6-a14e-d97dc0f629ab",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b232c8-fb9b-483c-927f-93c966bb44b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a972ec68-2e13-4ce5-ac29-33bac1b1ea71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c983269d-513a-45c1-b268-b5e06694b660",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d998d27-7c16-4520-b1f5-61f05083c2bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b88d384d-f51a-45ca-a338-a94c9ea9bee3",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eff68d60-6cbd-48a8-a40b-285d92ae601a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bc8373f-54ec-43c1-a67c-a0b5b1f3a6e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0a0ad65-f58f-4f47-b5ea-bfe08f86b69f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "785d302d-da29-48b9-894e-59222a3d2629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e8ed6f3-bcd7-4e55-af38-947b2a86329b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f180b4f-e3ca-494c-b7cc-02f2d782f73f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c833e040-148d-45e1-8595-c3c568a18fbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f53b5596-d006-49ac-a180-5ff20dcd1de0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e46408df-107b-4690-b766-8c41f52ba30c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d0ca1cc-e398-476b-96a1-03faf87e1da9",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf4cc56c-e1c8-4f20-b3dd-320fd3fdb6ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af371003-3da6-4b13-9de3-2c7cf85e4d8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e897822a-0847-4036-b1ee-9e7efdba1bae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db2f7d65-79b5-4166-82c3-655c71bb4afc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e8bb47-ee3d-46b3-b155-f7d8fbe71e57",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ab215ed-b15a-4812-90f4-3ca54357a771",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b26241b4-45e5-4632-97ee-f48c45b4e898"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "695272d1-6839-4905-b0d1-19591c4c79c6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fbb6086-399e-4023-85b8-cc6f61960b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f81679b1-2f03-40a5-998c-d22592363dd8",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d919e3-bca4-495b-a155-e799626d7aaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85caceab-3ed7-4856-898e-13ea68a1a703"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d2812d0-b69e-4c92-b3db-5cd5a86e93e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbdaba6b-0e5d-4d3a-8566-7b5953550078"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ba3111a1-1c5d-4368-8d01-04b637e718f5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "68867371-669a-4005-8154-4fb9664d2ffd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "14a06cc5-f5e6-499b-8de1-63753dd6833d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "97ce10bb-1cd3-4594-8d13-d13ba865d08b"
                    }
                  }
                ]
              },
              {
                "id": "6da02374-8bf6-496f-834c-2d59e25b96e2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "89fd7579-22c4-401d-9902-f1844492124d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b701a4c1-dba1-4d96-b177-d1c79240ff91",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "53ee0350-9ecc-4e03-9393-733ed3ef1876"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88368f15-8497-419b-acec-5b273b4d907d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "08b98ac6-db36-4242-87a7-b392c6cd023f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "550c1f47-2caa-4a31-8856-d15fc898c752",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b516b33-72bd-4c67-8ce4-d01a8565ed30"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e589a925-4af0-4de0-a91d-469dd60c6c8d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5e373b03-5629-4c19-8552-914598e1be78"
                    }
                  }
                ]
              },
              {
                "id": "f3329b98-f7fe-4f3a-95c3-6bee2ea2a77e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "19acbbca-da78-45be-9f3e-fd8b0c2dda0c",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f7b5e13-9adc-4f30-a359-d3e3cd380a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "8ac649b6-f9e4-49a5-91f2-932caf794322"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "619a2e5f-868d-4f9b-9ddb-6fdc64db76c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5969868-927f-4a37-8d14-b7a5e7d811ee"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4c01e75c-a91f-41fe-baab-134fe29f88e9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "feef694f-78e4-487b-a4c8-8f8c03937ee3",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fec835a6-b5d4-4b3d-8539-1b41ad18fdc2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d467f6d4-43f0-4904-b9d6-3c9fab9e38d5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5a6440e-e50e-4098-9740-9ce748b68ebe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "215863d1-fe42-4bb8-b77c-1c5f775ebc81"
                    }
                  }
                ]
              },
              {
                "id": "16dc8a70-4f7f-4a2c-a549-0ffdab8ef677",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "90e75f4c-5f65-433c-80f6-929f44bf6606",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "874c174e-2ea5-4bf1-b506-7d5ad0ba3a3f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "888f3c18-5d5e-45c2-adb6-460583dfc04a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e4a34aa-dccd-432d-9df5-a04ac023780c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0bc6e007-39b2-4f7f-9b62-239117efefed",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "331016bb-e217-4b56-82f3-a48174f12992"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "183c43b3-fd25-4b1d-86cd-90fe49baa165",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6bbbf165-ed03-4b04-aee7-bd32fba9c622"
            }
          }
        ]
      },
      {
        "id": "68cb5abd-cabd-4130-bd81-fab5cb5c3449",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "72bb897a-ce18-4c3e-9077-effc44d4ecad",
            "name": "Negative Testing",
            "item": [
              {
                "id": "25db0010-f97e-45d2-8ba5-473294e7f57b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3859ecff-c7f1-434f-9286-74027b4e8a92",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f2b38cc-07be-4443-bd4f-67fcc0391f52",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b4cf8de5-720a-4664-8bb9-3b780f40a0ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a3c017b-2942-4d49-94c8-bcfec7bcfd0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8e385b20-dcbc-4088-9e14-baca91e418b2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f5288182-fc60-4d46-996d-8ed1ccda2865",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "744b5b53-8eb9-46b2-823f-3877c3b1726a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c79e8963-c0a5-4fec-b3b4-d0c7be1c1345",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2443b4a5-70a7-4992-93a4-92281f1f130f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9048515e-8c57-4993-99e5-773e5696c8e1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a4b856b0-881d-439b-aee0-1c3d830bf427"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7a0d466f-26d5-4c1a-86d1-e43a2d199552",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "03f44a43-775d-4483-8cbd-eabaa4ca3128"
            }
          }
        ]
      },
      {
        "id": "90d6120b-80b0-4bb5-a85a-0d0b1a95f891",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "58600e93-4e2c-44f3-93e4-0f674812c2b8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "21a43e3b-5562-46eb-bbb1-aa4dc22296eb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5c08bf75-cd6b-432b-81ce-a9b16a019b2b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77cb5adb-e1a2-47be-8d69-2b975cc4cde4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fcc30f0b-bb45-42cb-9197-bf0c472b4d80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e3ff44c-fcc0-43cd-83b6-8f8227ab849b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2493813e-36d7-437e-a264-bf61a0570d97"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "005fd31c-3ca0-4c2d-9139-39feb66d0a52",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "99c484c7-9219-4e3b-ac84-cf6926c8d089"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eeda5dd8-5470-4747-913a-cea1c0dec2b6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e21eb6c-b8c2-4f6a-8c32-3f3844c45573"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1c64787a-d485-4ce1-828b-a52f1b828b45",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d684948d-6619-4f70-b220-2f1b61e95359"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f235ba84-7126-4b5c-bc35-e5097c8e22ec",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "67b55d2b-da49-46f8-af02-5225cebb169f"
            }
          }
        ]
      },
      {
        "id": "aadff136-0811-4bd6-a081-63f38fa59894",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "8db17206-e957-456d-8266-e3701f06421a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6c32bedd-81e9-40b0-aed0-26c34b8464e4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e6159f9c-13e0-4ab1-ae99-c7234111bd0d",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9738bb9-eabf-409b-a87f-f0ec0589ed79",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "faf1ba19-837c-4393-bd07-81daacd57153"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10d932c7-7671-4f89-8415-1b2fc323bebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fd81d4fc-221c-4b16-bd7b-fbeca2b4d895"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "789ba7ec-3e4d-45db-90ad-c44ff768bd71",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "418043ed-6e7c-47ab-ab39-b9f0bdcdee6e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e18d325-987c-4f04-acd5-f63dbbc3cf67",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "728810e7-58a6-4892-b4c6-3cf25b676d75"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cdfd4901-d330-4117-9446-556643a6c22e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "67d64e41-812f-45ef-b8f5-0e803363f615"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3a7ee42c-8c54-4323-88dc-bad46c0ddc72",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ffeae366-991f-40e5-ab1e-ba4059af8ac7"
            }
          }
        ]
      },
      {
        "id": "0b3ee34e-0c67-4365-adc1-fbd42b6c7ea6",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "04629153-538d-483a-9b12-cb85fab60717",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e241b756-79f7-4eb4-bddf-26021b833cc6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d119d633-adda-4e58-ba6c-39ac8b531faa",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c57be0cb-87e4-4c78-bba8-53c946399c13",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "36b810ae-ea01-45ba-8e40-c7450ed4e638",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 6.614035087719298,
      "responseMin": 2,
      "responseMax": 431,
      "responseSd": 28.211329306892367,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1707525167221,
      "completed": 1707525177898
    },
    "executions": [
      {
        "id": "7d60fd6b-a61f-41f0-8237-474b1bc5264c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "81d98674-7e27-4482-974a-06325267116f",
          "httpRequestId": "584d06aa-cfbd-4615-84bd-a3921befb0f8"
        },
        "item": {
          "id": "7d60fd6b-a61f-41f0-8237-474b1bc5264c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "1bb52137-d04a-4223-bbd4-855912ce1fe8",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 0
        }
      },
      {
        "id": "00221f50-b182-445b-a7f4-c795834a17e0",
        "cursor": {
          "ref": "7574cb87-5122-4257-85d5-3e8e57f6700d",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c2d9993f-2aec-41c1-8e02-7db3bb666b15"
        },
        "item": {
          "id": "00221f50-b182-445b-a7f4-c795834a17e0",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "9b2b0f70-38aa-46da-a82c-0768c21b24bf",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "ab9ccfe6-5550-4600-8163-637008a582e9",
        "cursor": {
          "ref": "056d2662-3623-4713-8f44-94e5ac4ef148",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e40a5297-43a6-4337-a821-678226a0a738"
        },
        "item": {
          "id": "ab9ccfe6-5550-4600-8163-637008a582e9",
          "name": "did_json"
        },
        "response": {
          "id": "f6f73f6a-3499-4f15-bff7-d81a96e03797",
          "status": "OK",
          "code": 200,
          "responseTime": 31,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5768924a-4b19-40b7-af89-32117b3a577b",
        "cursor": {
          "ref": "15a00dee-9dd2-43e8-ab9f-6e994ef55aac",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "38ba4162-a910-455e-9770-44e4ddc22a44"
        },
        "item": {
          "id": "5768924a-4b19-40b7-af89-32117b3a577b",
          "name": "did:invalid"
        },
        "response": {
          "id": "30243414-3a9f-4bf9-af42-33ea1d4a12da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5768924a-4b19-40b7-af89-32117b3a577b",
        "cursor": {
          "ref": "15a00dee-9dd2-43e8-ab9f-6e994ef55aac",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "38ba4162-a910-455e-9770-44e4ddc22a44"
        },
        "item": {
          "id": "5768924a-4b19-40b7-af89-32117b3a577b",
          "name": "did:invalid"
        },
        "response": {
          "id": "30243414-3a9f-4bf9-af42-33ea1d4a12da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac45946-53b1-46f5-a96c-1b3608365ccd",
        "cursor": {
          "ref": "c81fb1f6-5b5f-41b9-b5cf-7b5c68460669",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ebfe68e0-c8c8-41d8-bd5a-924ce886b7e1"
        },
        "item": {
          "id": "3ac45946-53b1-46f5-a96c-1b3608365ccd",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "623523dc-b1a1-40b8-b893-35a416a8386f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 50,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fef9a9d4-2da3-408d-9443-6e85880b1606",
        "cursor": {
          "ref": "93947d88-9d2e-49ba-b948-40b88ea82e85",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0433d450-18a7-4c1e-86dc-81b2fd14ddc9"
        },
        "item": {
          "id": "fef9a9d4-2da3-408d-9443-6e85880b1606",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "6e193868-6bcb-4362-9516-0d026b4721fd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "257efa6b-03ab-437c-88ac-3fbcb0e0c1ec",
        "cursor": {
          "ref": "634ffc4f-5a64-48d3-a7e6-88c0bda7f0a2",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "8f7ae970-10ec-4a40-9a9e-d51e16dd4835"
        },
        "item": {
          "id": "257efa6b-03ab-437c-88ac-3fbcb0e0c1ec",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "23af06fc-1b6d-4b8e-8310-8edf328bb748",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7865e8bc-a9a4-4ac7-8c9b-6eec4936e193",
        "cursor": {
          "ref": "0e05edc2-2cac-40c9-b5c0-e1828199ae26",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "bda8a2af-f5f0-4118-a731-5bda90ce49c9"
        },
        "item": {
          "id": "7865e8bc-a9a4-4ac7-8c9b-6eec4936e193",
          "name": "identifiers"
        },
        "response": {
          "id": "73751fda-b882-4c07-8a09-7e93bdaff29e",
          "status": "OK",
          "code": 200,
          "responseTime": 199,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be654f20-44ff-4088-a5f0-db0fce89c14a",
        "cursor": {
          "ref": "1d7b028f-7af0-47ee-a784-a86d75d5fa27",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "0607e4d8-76f5-4736-9835-f4694445256b"
        },
        "item": {
          "id": "be654f20-44ff-4088-a5f0-db0fce89c14a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3291dd49-07ef-4af7-93f3-c3017d63e9dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d075ab67-6b2b-44ca-b3b9-611319d52980",
        "cursor": {
          "ref": "43cce55a-4c0d-42f1-8376-560eb1b2cc63",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "04f4081f-8af0-4729-ac8f-eabd01c85d4c"
        },
        "item": {
          "id": "d075ab67-6b2b-44ca-b3b9-611319d52980",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "8135c11b-7f32-4720-a3d5-ffec70611c0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c3090e4-9402-4c2b-be60-004c148d93bd",
        "cursor": {
          "ref": "5105e66b-a7ec-45cd-8937-5e48df5ee02c",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a47a0e23-7d2e-4a34-b2f9-25872a39f99f"
        },
        "item": {
          "id": "2c3090e4-9402-4c2b-be60-004c148d93bd",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "3384895c-76fd-4b03-8a59-b614b2820ca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e2b8bae-53e2-4400-a0c4-42cc48ac6d27",
        "cursor": {
          "ref": "9324d1a1-e1a7-4963-9027-8eae8011c0f3",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "6e67c140-e1fd-4143-a069-5feb5e1b95bc"
        },
        "item": {
          "id": "7e2b8bae-53e2-4400-a0c4-42cc48ac6d27",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "e2b1298b-7b8c-4151-b4dd-01b3be1e49a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81143e02-9f43-4428-8f8e-902577e5a352",
        "cursor": {
          "ref": "6e83ca50-34ae-4a93-9866-2fdd4f9aa5ce",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2642eb91-7a15-40e6-a026-c590c40cc0a6"
        },
        "item": {
          "id": "81143e02-9f43-4428-8f8e-902577e5a352",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "9d72febb-8882-4f5a-983a-4d5ef4471417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "464d4b85-0d1b-4698-970c-e24c279ff064",
        "cursor": {
          "ref": "7e5abd8d-3ea3-413c-acd2-a0699f2ccbba",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "56922b62-cfa2-4742-b110-955597f94770"
        },
        "item": {
          "id": "464d4b85-0d1b-4698-970c-e24c279ff064",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a2fe1ba9-4ca1-4155-b909-f77c3d515174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "092348d0-383f-4896-9894-cda1e1f5d0e5",
        "cursor": {
          "ref": "174ca6bd-804d-4b9c-885d-c6dc3561cbcb",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "1a4f15fb-6a5d-42f2-afec-6cc3a1e53c3d"
        },
        "item": {
          "id": "092348d0-383f-4896-9894-cda1e1f5d0e5",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "a383639c-dfdb-47aa-a9af-e2d77d3c2152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77e31680-1170-4fd5-bb6a-a32a8daeb69f",
        "cursor": {
          "ref": "ef042356-daf7-4df8-86e9-fe9cda044afa",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "6b2050f0-456e-451c-b465-bb1036fe6139"
        },
        "item": {
          "id": "77e31680-1170-4fd5-bb6a-a32a8daeb69f",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "f86c92a7-0c41-4fac-81b7-a0905320053b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5078568f-2338-41ba-843e-f0e5ad034928",
        "cursor": {
          "ref": "5727976c-401c-4654-8f9e-481af59481f2",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a150ed4a-bf9c-44ab-9f6f-e99107a29161"
        },
        "item": {
          "id": "5078568f-2338-41ba-843e-f0e5ad034928",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "88a0af3a-a53d-4a5d-a9a1-724f0db1b61d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcd865cc-f816-4e5d-96b5-66f2bae4aa36",
        "cursor": {
          "ref": "c78bc301-fed6-4116-b1d7-ce2f145e0953",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "438d66b0-a7d3-4191-8529-8e89787fff05"
        },
        "item": {
          "id": "dcd865cc-f816-4e5d-96b5-66f2bae4aa36",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ce333c79-c612-4498-85f9-9115de1be124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a18bec94-564d-4c04-b8fc-56d14e84c94a",
        "cursor": {
          "ref": "d9fbbbef-d3b2-4d99-990b-3dfd61bbd918",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "99d40e2d-34dc-4ff3-a024-96247f4f4101"
        },
        "item": {
          "id": "a18bec94-564d-4c04-b8fc-56d14e84c94a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "efb193de-f40b-4469-ac3b-80bdea85d1de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d2754e9-f0e1-4d66-8b13-13e7973db676",
        "cursor": {
          "ref": "b8ac762d-fce6-4276-99bb-59d2abbb2696",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "ac21be55-dc9b-4130-8d94-6d86b5b5c1b0"
        },
        "item": {
          "id": "7d2754e9-f0e1-4d66-8b13-13e7973db676",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e2c33a72-33e8-47af-8573-af9ad4179bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e314eb6c-1f89-48f8-a925-b52ed42733f7",
        "cursor": {
          "ref": "af277089-d61d-4d52-b104-6cbba9f6ba66",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c7b72809-673a-450c-9d41-b220128a4dcc"
        },
        "item": {
          "id": "e314eb6c-1f89-48f8-a925-b52ed42733f7",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "fd4ab615-61e6-4f60-bfc0-093aa070eb48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2f0e01d-58ae-4af0-8887-5f888d6d24a6",
        "cursor": {
          "ref": "8c7ae662-2267-4c29-b3f2-9ddac4f5c2fd",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "2f69b5dc-a20c-4c16-a0c5-5f4aa14e0fc7"
        },
        "item": {
          "id": "d2f0e01d-58ae-4af0-8887-5f888d6d24a6",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "4029b0cb-4dd4-442e-be2d-16d8b92a6804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd087a2b-d14e-489b-b9d1-bb09baa902b6",
        "cursor": {
          "ref": "0d8ac6ad-23e4-4249-89de-d431c4802b27",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "709f1a09-7214-4390-8d1b-b1cf3d420111"
        },
        "item": {
          "id": "fd087a2b-d14e-489b-b9d1-bb09baa902b6",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "023dc7da-96c1-4117-a01e-591f3d5cc93a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1993fbc-e3d4-478a-8a0d-13a0c6245914",
        "cursor": {
          "ref": "68a8eb53-d74c-4cae-902e-876200c3648a",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "9b026903-a8ca-4d05-8207-c5decd4fd084"
        },
        "item": {
          "id": "f1993fbc-e3d4-478a-8a0d-13a0c6245914",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "506160f3-bc38-4601-9096-7c42939ddd42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f64993-1cec-4c4f-ab2e-593cb47e5e24",
        "cursor": {
          "ref": "df125f8b-9d1f-4117-ba6e-cb6e3fb12e99",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "06c0c434-69ae-4078-815e-2463a6efd853"
        },
        "item": {
          "id": "d1f64993-1cec-4c4f-ab2e-593cb47e5e24",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "330feb66-7fc4-4fe5-a159-d9da3f8a06b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b4e3b3e-2719-4b05-b078-b97861a60c14",
        "cursor": {
          "ref": "7ce6b4d2-374d-47db-a8e5-b7ceb6454c02",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "58175fa0-5576-47b8-9052-4379b31aa910"
        },
        "item": {
          "id": "2b4e3b3e-2719-4b05-b078-b97861a60c14",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "e63d80c5-458c-4188-bf92-d30e02f1f19d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f8bfb13-982b-4ce9-8dfe-8712e977ac75",
        "cursor": {
          "ref": "66be4a41-5b70-4ca7-8620-640ab776114f",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "f388f22f-e29a-4a3c-ac51-f1fb275f8d80"
        },
        "item": {
          "id": "9f8bfb13-982b-4ce9-8dfe-8712e977ac75",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "7a31d44c-98af-4088-a8d9-44dcad6c95eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec3ec6b-9390-4430-99e7-cfb5ac6ccd06",
        "cursor": {
          "ref": "8a4d932e-1fcd-4630-a501-93daa36cab07",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "600879f7-08c2-4d74-922a-ca64007cbdd1"
        },
        "item": {
          "id": "4ec3ec6b-9390-4430-99e7-cfb5ac6ccd06",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "0ab40a52-fbc9-4bc0-a79c-fcaa18ca34c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04dec5fd-754d-4d27-89b1-125994532486",
        "cursor": {
          "ref": "c0068c37-2499-4bd1-9fba-d988999f2833",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "3cc1b710-d255-4491-a392-1b8d174e08bb"
        },
        "item": {
          "id": "04dec5fd-754d-4d27-89b1-125994532486",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "afd86be7-1cc7-4594-b1eb-ae0ece459557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f35a6e0b-3e06-4951-b641-91f2f62f5cba",
        "cursor": {
          "ref": "cacc1682-50f1-4d29-a7b2-b3fb8967a121",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "689a178c-7457-4649-a719-cbd64aab1494"
        },
        "item": {
          "id": "f35a6e0b-3e06-4951-b641-91f2f62f5cba",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "fc7d0792-7035-458b-8269-f132d35bd852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5edbaa36-646e-4696-8fb9-5ed71649dd9a",
        "cursor": {
          "ref": "a23e9726-caa2-4c80-b6a1-c9d87212e636",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e566643c-d592-4f05-9f98-16aade8af2b0"
        },
        "item": {
          "id": "5edbaa36-646e-4696-8fb9-5ed71649dd9a",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "0370db57-b9db-43b5-b9df-2e9fc71bf74e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0991f3a5-ffbb-4cb1-b540-f21d7eb2464a",
        "cursor": {
          "ref": "3b622627-f66a-4d11-a9ef-a9c1900875b1",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "388aaea4-b771-416a-8bd4-88071344062d"
        },
        "item": {
          "id": "0991f3a5-ffbb-4cb1-b540-f21d7eb2464a",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "5b944c19-372e-42a2-8fd4-8d92d2d61833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e26828c8-31b9-4b29-b460-efb1e2fa68ab",
        "cursor": {
          "ref": "eb4a63bd-36b5-4bb2-9618-e4049df99200",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a388f467-53a1-41c5-a63c-eb8679becc01"
        },
        "item": {
          "id": "e26828c8-31b9-4b29-b460-efb1e2fa68ab",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "048690dc-1046-4327-b8a5-aff4a5110f31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a10cfd8b-71e7-43ab-bda6-65da58ce335a",
        "cursor": {
          "ref": "de9bffaa-2180-4e34-a578-4dedf0b0731f",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "8c1157b1-96d6-426f-a24c-53ce858abf96"
        },
        "item": {
          "id": "a10cfd8b-71e7-43ab-bda6-65da58ce335a",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "96091412-8ef4-4367-b390-62a69480b03b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23a0e106-d063-4245-be3c-849b0d3830cf",
        "cursor": {
          "ref": "22feadd3-452f-48b0-be63-d61d3e6c17a9",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "0595a2c4-8ad2-4021-9ed3-34bb71d0d739"
        },
        "item": {
          "id": "23a0e106-d063-4245-be3c-849b0d3830cf",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a493e9c6-ebe6-4e00-aba2-6bface6d8885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae453e35-ff8d-4a1a-bf6e-a9d5818d2199",
        "cursor": {
          "ref": "0eae74bd-b31b-4aaf-af69-c09d302eb60d",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f95f2bf7-3b92-4720-b523-99385d9fdf32"
        },
        "item": {
          "id": "ae453e35-ff8d-4a1a-bf6e-a9d5818d2199",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "35e50a27-ebaf-48f0-8558-933191dfb965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c88d635-46c4-4045-a5c3-43ffb3036f40",
        "cursor": {
          "ref": "92885b05-95d2-408e-bb0f-19ea63c293a2",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "8b38d0e7-7e96-48b8-96ab-625bf4ecd931"
        },
        "item": {
          "id": "9c88d635-46c4-4045-a5c3-43ffb3036f40",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "fb1ea7f7-6032-481a-bc96-98f072c9fb42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afda6769-bdbb-4a50-80ba-730723ff606e",
        "cursor": {
          "ref": "57029ae1-d8ee-410f-8220-d57fdb17306e",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "f1e4bee9-f99b-4a9b-8043-e93bda1aa4e2"
        },
        "item": {
          "id": "afda6769-bdbb-4a50-80ba-730723ff606e",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "3e0ab1b2-ab6f-4dbe-9350-09d26760b3d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf27c16f-d76d-4e7a-aedf-6ffc33bdc030",
        "cursor": {
          "ref": "c5d7003a-84a8-421c-82e9-3f841e08cc8c",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5a10ddbf-201e-4942-8ad7-c45003c8fab4"
        },
        "item": {
          "id": "cf27c16f-d76d-4e7a-aedf-6ffc33bdc030",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "faeac097-429f-4bfd-95b6-850a99cbbd0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ae9445c-5c59-4ad9-985e-52a8501eca15",
        "cursor": {
          "ref": "99b2498c-870e-45b8-97df-011b2fc8395f",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "15ec3143-f572-4bba-8c3d-453aec1c194d"
        },
        "item": {
          "id": "3ae9445c-5c59-4ad9-985e-52a8501eca15",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "991f6b68-06f0-4640-89be-b88a795a44fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04f3451-a254-44b5-a06b-ff173955a6ae",
        "cursor": {
          "ref": "7feac125-72ee-4d83-a1a2-bc717173d6be",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "722809c8-36a6-4da2-b614-987661e92735"
        },
        "item": {
          "id": "e04f3451-a254-44b5-a06b-ff173955a6ae",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "6a996e0d-9ec5-4316-aa76-44589c358a3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bba7437-5352-472e-8a2e-34ef54aa3041",
        "cursor": {
          "ref": "df4c10b6-0565-415b-a60e-1668823ff397",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "55341ec5-59d6-4be3-87e1-5783d2a2147c"
        },
        "item": {
          "id": "7bba7437-5352-472e-8a2e-34ef54aa3041",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "4b5aad5f-2930-4641-9f16-16536ca33c33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b853bea-e654-416b-97ad-f924c16781f4",
        "cursor": {
          "ref": "5db73d28-6893-49c0-93fb-a30e0f79e903",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "1899b134-30fb-459b-ad1f-14b4642e7671"
        },
        "item": {
          "id": "5b853bea-e654-416b-97ad-f924c16781f4",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "c7e4eae5-e4fd-4f90-9d85-f8611a053356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c6f3b13-bd37-485d-a133-2b25393283b9",
        "cursor": {
          "ref": "fc328199-037c-485c-b616-686f3ad5aac2",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "d6cdac8e-a784-414a-976d-33c3999454d7"
        },
        "item": {
          "id": "1c6f3b13-bd37-485d-a133-2b25393283b9",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ba383e44-1370-4605-8fb1-800e4216d31f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d9ec17-6a22-44af-b411-a778b33aa650",
        "cursor": {
          "ref": "680c3e70-d602-4bd3-84cf-e39f2cbaa6f7",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "9c3a95e6-3c57-4d69-8e45-d47af8a701f9"
        },
        "item": {
          "id": "d6d9ec17-6a22-44af-b411-a778b33aa650",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "6bf60e14-6294-45f5-a73a-276262e148c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb0277e-c1a1-4950-9600-2212dd9eacab",
        "cursor": {
          "ref": "c2d0fcd2-cd7c-4d6e-8184-25e26e50889b",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "a86c1018-5183-4558-9234-a54ceee08d06"
        },
        "item": {
          "id": "1eb0277e-c1a1-4950-9600-2212dd9eacab",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d6ba9068-2b38-4dbf-b15a-c599a1ac86ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "690bd60b-8d8b-455c-8d9e-99eccfbb823a",
        "cursor": {
          "ref": "ac9b2e69-5c87-4f64-b231-2e9d5129c93f",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "6fdd0b13-2e7f-4d8c-8d53-8d257541d627"
        },
        "item": {
          "id": "690bd60b-8d8b-455c-8d9e-99eccfbb823a",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "6f8376e9-a38b-4dd9-bfb4-63106c9dc686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee37b2f4-1ef0-43a1-a591-b2e1be778181",
        "cursor": {
          "ref": "227f75cf-b7c7-42a4-971b-ae253b7f14a0",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "14c9aa7a-04df-41c3-b90a-11b0976a7eb8"
        },
        "item": {
          "id": "ee37b2f4-1ef0-43a1-a591-b2e1be778181",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "758023b1-1608-4e7b-afb9-569120ccaadd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78a15120-6696-4902-952e-622cea3b2bf4",
        "cursor": {
          "ref": "259f08c0-0550-4834-9559-fbf03bf7eedc",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "3f46cc2d-c1fc-4c0f-8d04-36a6b13a5ab1"
        },
        "item": {
          "id": "78a15120-6696-4902-952e-622cea3b2bf4",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "634d079f-e41d-4906-b270-0e966ec13dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22319894-20a7-4dbe-8813-31dd07595f9b",
        "cursor": {
          "ref": "2283ab1e-81a9-494b-92ff-146d8c5ad662",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "5c0df311-9124-4a8f-8618-1f1be48f44b0"
        },
        "item": {
          "id": "22319894-20a7-4dbe-8813-31dd07595f9b",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "844224f9-5f95-43ee-ab7a-446e2b02f792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2712624-4bcf-49fc-a0c2-e3debd23dadb",
        "cursor": {
          "ref": "fdd27b8a-6bf1-4f1f-8706-9205716befdd",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "dbc85d46-e34e-4e5d-ad2d-f5a562260e13"
        },
        "item": {
          "id": "f2712624-4bcf-49fc-a0c2-e3debd23dadb",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c473e68e-6238-42ad-b303-6b68934cb036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45e9da57-a74e-4df8-9d07-ddaf5bba60e1",
        "cursor": {
          "ref": "7dec246b-13d3-4dcb-a233-99dad3258ec7",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d484b131-8700-47db-8c55-3b08c83d1bde"
        },
        "item": {
          "id": "45e9da57-a74e-4df8-9d07-ddaf5bba60e1",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "de0fe22d-f312-485a-a53d-81b4b0202f4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "accd3a21-7f7c-4267-98e2-246b455cbf38",
        "cursor": {
          "ref": "bbc8f999-a192-4803-ac9e-86e6487b52c3",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "3419d47d-e8ec-43c2-90ba-a0e245ec21b1"
        },
        "item": {
          "id": "accd3a21-7f7c-4267-98e2-246b455cbf38",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a2965556-4322-499d-83d9-b7c91e18caf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f7660e0-2b91-4a12-a772-a409490a64e5",
        "cursor": {
          "ref": "8690f971-c9d4-452d-945c-bd7bb2fa6165",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "ec20212f-f99b-4ef3-9150-013e2a706a9b"
        },
        "item": {
          "id": "5f7660e0-2b91-4a12-a772-a409490a64e5",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "bf7c5489-920a-4488-9adf-e48675e38ff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dfc10c4-8b29-4064-bf18-00c5b73cb290",
        "cursor": {
          "ref": "7618d6fa-895a-427d-9f73-f71cc3cc6455",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "aec374bd-8ad5-4f1c-9ec6-8b7d41ba5ad2"
        },
        "item": {
          "id": "4dfc10c4-8b29-4064-bf18-00c5b73cb290",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "fa379d18-c2c8-4a1e-87a3-5f61c301af4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a0987f-df19-49c1-be73-1c5c54981842",
        "cursor": {
          "ref": "034f464e-7b9c-4e16-970e-72f9e68ca264",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c0eb860c-dcb1-4d66-b6be-c6b80ad4c199"
        },
        "item": {
          "id": "16a0987f-df19-49c1-be73-1c5c54981842",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "946c7685-0e9d-4851-b609-66207d3cf4db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6868bdde-5c1e-4195-984a-3abf17597395",
        "cursor": {
          "ref": "fb905c63-d06e-4be8-b39c-97e3de1aeb6f",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "711cdc68-ed9c-4fe7-bfd5-004a6021d8d9"
        },
        "item": {
          "id": "6868bdde-5c1e-4195-984a-3abf17597395",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "705fd372-0fe9-45ba-8442-b70536ee65f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6893c201-5c0c-40f3-b3d4-30f138ede448",
        "cursor": {
          "ref": "c816f845-c6d1-46c1-a8b7-9526dd75f7c6",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b08f7342-4729-4d9d-bc8a-eafac0061d9c"
        },
        "item": {
          "id": "6893c201-5c0c-40f3-b3d4-30f138ede448",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "21e87453-20d2-4a87-9b81-87dab1e078ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a31fdc7c-f25d-4649-8347-33614cdec70d",
        "cursor": {
          "ref": "6e2c59ac-9a0c-4ee9-a717-bcec4f7fe196",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "11272d37-bb17-4617-a624-d063340f45dd"
        },
        "item": {
          "id": "a31fdc7c-f25d-4649-8347-33614cdec70d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "151d6c0b-4c8f-43a1-9322-ac7e44b248b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d3c0fd-5934-4aaa-bc93-db51cd1a6b2b",
        "cursor": {
          "ref": "66381958-d4c1-480b-9368-817f07642626",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "35425f22-dc69-41f5-ac84-655c7b602cf3"
        },
        "item": {
          "id": "39d3c0fd-5934-4aaa-bc93-db51cd1a6b2b",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "affd95a5-ff06-4b88-a43b-075aa9f45b50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc0e56d-31b4-49b6-8ada-2bc271040a22",
        "cursor": {
          "ref": "e6a2e34a-4a2e-4549-84ef-415996bae559",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b8390945-f6b0-40d6-81a2-bac7b3fc40c8"
        },
        "item": {
          "id": "bdc0e56d-31b4-49b6-8ada-2bc271040a22",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "27bf737b-da32-4f3d-820a-5dd6e689a932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d4ada3-8e42-41b4-8df8-ae04c896b884",
        "cursor": {
          "ref": "4e405b58-853a-4ac7-be01-ca42de793746",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "a56eb3d0-aa38-4e95-ad00-ef29bb27098f"
        },
        "item": {
          "id": "64d4ada3-8e42-41b4-8df8-ae04c896b884",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ab34d851-b00e-47d9-bf86-60514ea459ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e06723f-b721-4d42-a6d2-3c2ad42c8119",
        "cursor": {
          "ref": "0cd6088b-bbbb-4969-a217-d1a05497f4dc",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "28a208d4-f4ca-4dc3-bbd7-d5dbff188302"
        },
        "item": {
          "id": "9e06723f-b721-4d42-a6d2-3c2ad42c8119",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a939eeed-ffc0-4496-88ed-0d8e2a047859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cda04141-ad23-4eb9-b357-5bc2a3271c4d",
        "cursor": {
          "ref": "d1c613a3-08d7-4606-b43b-1ee3964a10ce",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "1bf2b91d-2ded-42a3-97a4-9a45860a47e8"
        },
        "item": {
          "id": "cda04141-ad23-4eb9-b357-5bc2a3271c4d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "166906b6-8443-4aa0-a723-8b88b792a1be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14a94003-7a8f-406c-8e47-7737cecdf832",
        "cursor": {
          "ref": "7f441c2c-53f4-4c3d-8a05-c0788f3564cb",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "660c72cc-739c-4130-88f0-b28731d98d54"
        },
        "item": {
          "id": "14a94003-7a8f-406c-8e47-7737cecdf832",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "d11acf49-3a13-4a42-a96e-470d45f8f890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c480cd3-bcf1-4c5f-bb75-084f3ce07548",
        "cursor": {
          "ref": "4c892dfd-2fbb-45a3-a67d-a51007332ee6",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "25e01abd-8249-4d01-baaf-59ee628926c1"
        },
        "item": {
          "id": "8c480cd3-bcf1-4c5f-bb75-084f3ce07548",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "427c4d6d-3f66-40a9-ac5d-29341d97f4e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fe5a6b4-a4a0-4d25-9b40-2c0e38bb7313",
        "cursor": {
          "ref": "c32bce7b-79e2-47c9-a8ba-c8dfc191192d",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "5b2efdfd-dfad-46c6-b2c3-a4716d5db409"
        },
        "item": {
          "id": "8fe5a6b4-a4a0-4d25-9b40-2c0e38bb7313",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "7971bf04-320d-4249-89f7-209523259cba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6a7dcbe-9c1f-4fc3-ad65-406a1d026613",
        "cursor": {
          "ref": "8e0693cf-68ad-4089-93f8-b13f7dc0b3ab",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "d143525f-a62f-45ca-8d7a-a58a084d5aab"
        },
        "item": {
          "id": "f6a7dcbe-9c1f-4fc3-ad65-406a1d026613",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "1cae3005-4ec4-4bb8-bff3-170d59874a90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a0972e5-2bdf-42a8-80d5-8eefd178c02b",
        "cursor": {
          "ref": "a4b8fb33-8ef1-4416-a944-d8d1d1dcf25f",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c0d56c2c-864e-43ba-9e5e-2cf7de7f88ac"
        },
        "item": {
          "id": "6a0972e5-2bdf-42a8-80d5-8eefd178c02b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "084751fc-661c-4167-84a3-2a00f21d11cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc9170f5-2d95-450e-b362-6bff662a0aec",
        "cursor": {
          "ref": "316ae924-3322-4f70-9f64-7bebff5cc45d",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "df40b827-3395-4209-a159-6d7c1a8ebb33"
        },
        "item": {
          "id": "bc9170f5-2d95-450e-b362-6bff662a0aec",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "e1196803-2c6a-44e4-ba32-bb1f4e99e0e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "676d045b-37ae-446b-b2ae-62ce7ef9a8c1",
        "cursor": {
          "ref": "04f70384-0e0f-4e0b-91bf-aeef341a3677",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "32216cec-9ed5-4650-8e63-a9645a0361f2"
        },
        "item": {
          "id": "676d045b-37ae-446b-b2ae-62ce7ef9a8c1",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "37409a67-51ae-4bb9-96ea-b527bf17ced5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06910a46-bb52-4fcd-910d-341c3a01d2bf",
        "cursor": {
          "ref": "2f96ae0c-6d87-4aef-947e-1b33dbfadcff",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "35d82f71-6911-4837-86e1-6f97b940bee1"
        },
        "item": {
          "id": "06910a46-bb52-4fcd-910d-341c3a01d2bf",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "23d9e476-476c-4e6a-8f61-b5690ccc2e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "823d2ff0-eaab-47d4-bb5c-a9bbe1b1ed19",
        "cursor": {
          "ref": "af2156c3-41e1-40f5-8fbf-888075dc8ec3",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "b8c87d5e-7c0b-4b87-82b6-383b44e8955e"
        },
        "item": {
          "id": "823d2ff0-eaab-47d4-bb5c-a9bbe1b1ed19",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "c039e1a0-d2ad-473a-b917-e0069c3e4f03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56955658-a20f-4ecc-b0e9-19306bfc0275",
        "cursor": {
          "ref": "29f18412-7bc6-4c97-b6ea-c0457917ca85",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "3a949db2-71fd-4b35-a828-d0bd8e9270db"
        },
        "item": {
          "id": "56955658-a20f-4ecc-b0e9-19306bfc0275",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "e5f1eec0-0543-4200-aa69-6e8ca485dd37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e10ed8-598e-4069-9e5c-3efde2ce6cc5",
        "cursor": {
          "ref": "33f2ddec-8f72-4568-bc15-deab819205a2",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "f8020eaf-3884-4f54-b3cb-e439f7020b47"
        },
        "item": {
          "id": "14e10ed8-598e-4069-9e5c-3efde2ce6cc5",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "2e0a83bc-5225-47ad-a485-897af41d05a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8416d98-90c1-4f48-9b3c-d68108061a97",
        "cursor": {
          "ref": "08a536f0-4c56-4fa4-891d-afaf1fdf6eba",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "9221b185-4277-42dd-a56b-5904560feaff"
        },
        "item": {
          "id": "e8416d98-90c1-4f48-9b3c-d68108061a97",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "24b975e7-aa6b-45ab-9dd2-1a520af67690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c0e423-ee08-46ab-bc47-3f1baabb723d",
        "cursor": {
          "ref": "a15681a0-2a0e-4a79-8fd4-3a4cafcdeade",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "721b0a1f-bbf0-4abc-a358-d445e92204a8"
        },
        "item": {
          "id": "14c0e423-ee08-46ab-bc47-3f1baabb723d",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "0f17e33c-07ba-4427-8f74-8ee1526e4120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f209cca-20a7-4902-8cfb-75bb18868414",
        "cursor": {
          "ref": "0b6e2790-b30d-4829-af81-a8c5c3b6ee84",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "b449b368-0b56-4518-ac29-13ac6603bac8"
        },
        "item": {
          "id": "7f209cca-20a7-4902-8cfb-75bb18868414",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "a8fb2aa1-d14d-44cc-a295-df0d72fef6c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a148bb6e-f3a9-4bf4-95d1-3dc8237bbe05",
        "cursor": {
          "ref": "2b890822-b1e6-457a-8dca-b3950b98e347",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "7fcef69a-b7bb-498b-94ed-5c7115abda40"
        },
        "item": {
          "id": "a148bb6e-f3a9-4bf4-95d1-3dc8237bbe05",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "00c65f50-6b2a-482d-922b-a428affc7c7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc26371-a96f-4ef5-992b-46f253a06284",
        "cursor": {
          "ref": "3640e77e-dd08-48ac-a272-0e6e6d86fbba",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "2f9274a1-3060-471f-baeb-222a69615ca9"
        },
        "item": {
          "id": "5bc26371-a96f-4ef5-992b-46f253a06284",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a327b130-99af-494b-b140-6346b69167c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8df37c40-1e58-4759-b5e5-eaaa8ab9d569",
        "cursor": {
          "ref": "8a8cb465-f98f-4886-8e06-d0ce585b3861",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "68ab0e7e-1bc8-4338-a683-0de2d2c04ec6"
        },
        "item": {
          "id": "8df37c40-1e58-4759-b5e5-eaaa8ab9d569",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "cb5c28ac-8478-4b88-b2ac-1ad89a197d99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b50a44eb-45ff-4d2a-909c-c8f02dc01ab8",
        "cursor": {
          "ref": "d65f05f1-d4d8-4231-a37e-0405d13eb770",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "75b0e552-44ff-4945-aaf5-104931025cb0"
        },
        "item": {
          "id": "b50a44eb-45ff-4d2a-909c-c8f02dc01ab8",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "7995f679-1aa1-4330-aa30-981a4b765380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f2111de-bd25-41c0-84d1-1f5fe4ebd8f7",
        "cursor": {
          "ref": "8671880a-64cc-409b-90e7-8954cc06d85d",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d363b543-c61b-4d3f-a999-6671e1bb7c81"
        },
        "item": {
          "id": "2f2111de-bd25-41c0-84d1-1f5fe4ebd8f7",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "18b6104f-0a59-4f0a-8aac-ac1a5ed0955b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a97387-297e-4e70-97e2-7a4f49a04225",
        "cursor": {
          "ref": "e954e322-e64b-48a0-99f7-96ad84445f72",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "418d948e-33bc-4ab3-b2b4-5b0121975dda"
        },
        "item": {
          "id": "91a97387-297e-4e70-97e2-7a4f49a04225",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "5e0b7e44-68ba-4882-ae7f-b6d28fb3f1f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb9a509e-183d-486f-80cd-05f0873e27a7",
        "cursor": {
          "ref": "f50eacee-8723-45f1-890c-6d3b6efdb421",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "e65970ba-99f1-43b5-9c1c-d1eae4d1f6fb"
        },
        "item": {
          "id": "eb9a509e-183d-486f-80cd-05f0873e27a7",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "2663a15b-4280-42d3-b600-11de0d788a96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76147091-552d-40ac-91c2-7c744fa94fa1",
        "cursor": {
          "ref": "82564766-2342-41bd-9725-731be021db07",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "8bda02e7-5446-467a-bf43-4b7a42370deb"
        },
        "item": {
          "id": "76147091-552d-40ac-91c2-7c744fa94fa1",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b381dec7-6954-4f8b-9641-6d9739f21d12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6747b934-9fa1-4b01-bb1a-f96474ebbdf5",
        "cursor": {
          "ref": "ec2ee720-b503-4eae-aaae-83f9bcce16da",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f739bd79-d75a-4a4f-aa7d-f2ee84d3bc12"
        },
        "item": {
          "id": "6747b934-9fa1-4b01-bb1a-f96474ebbdf5",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "9d1107e2-37cb-455c-8c43-069f409b0cd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f6b2f8-714c-4211-872f-82ef3b3803d0",
        "cursor": {
          "ref": "16156ae2-6489-4c85-97bb-39449325f958",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "8f2a77a7-8400-429f-be27-a3ac21132576"
        },
        "item": {
          "id": "83f6b2f8-714c-4211-872f-82ef3b3803d0",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "6f3fc11d-3094-49fb-aefb-229a68b7447d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6aa2c62-97b3-4a87-a3bf-6814fbb5f3d9",
        "cursor": {
          "ref": "02da7445-2d74-4c28-aef2-016674bcda63",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f28bcb7b-7f90-4a19-905e-9f932af10d9f"
        },
        "item": {
          "id": "c6aa2c62-97b3-4a87-a3bf-6814fbb5f3d9",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "93f95174-fa25-4c39-9308-440e8a99932d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9550b46b-8ae9-4349-8f27-585028fd7312",
        "cursor": {
          "ref": "c6331148-3502-45d5-ac1e-7b60508bce79",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "0a049b4e-2222-4a8d-978d-683d8896f369"
        },
        "item": {
          "id": "9550b46b-8ae9-4349-8f27-585028fd7312",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b47893db-392f-4788-93b3-c1b4a8a7fda0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f55e41-df71-43b1-930e-ae56423e2d44",
        "cursor": {
          "ref": "9260a827-1581-4374-ae1d-21b0846c0224",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e9656f0d-8320-455d-8669-bded6d5e3c1e"
        },
        "item": {
          "id": "85f55e41-df71-43b1-930e-ae56423e2d44",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "5695eb47-eb9f-481b-aa08-0e6a5cc1ca73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89968691-62b9-4721-8f62-66fb7d09deb8",
        "cursor": {
          "ref": "675d28d5-9d92-4017-a55b-6ec34c354c56",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "85f1df48-cae2-43ed-8644-4a84734058ec"
        },
        "item": {
          "id": "89968691-62b9-4721-8f62-66fb7d09deb8",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "cdf992d2-d5e3-47fe-b07e-ef25778bd3f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "531b4027-57cd-4ca0-8753-b68d13b5cc08",
        "cursor": {
          "ref": "a82c6a81-2cdf-40a7-aca2-70529ebc1541",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "99acc091-0a6b-4022-ab04-1c76216b1b55"
        },
        "item": {
          "id": "531b4027-57cd-4ca0-8753-b68d13b5cc08",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "9a5c3fd9-3e7f-4d70-865e-3fad98d9130a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a061da72-382c-4b86-b17c-b801a3890f46",
        "cursor": {
          "ref": "bc38c93c-a06a-40ad-84ab-970f41c79df7",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "6b4b6bbd-5a11-4b7d-b4c5-8ce7e9103565"
        },
        "item": {
          "id": "a061da72-382c-4b86-b17c-b801a3890f46",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "cad4f4a2-c556-42c1-bd8e-c245ed8f182a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7806fe9f-19d5-467f-8006-d8bd0f3085a4",
        "cursor": {
          "ref": "23dda211-14fe-4da6-a367-5c333209d992",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "dcbf1b3d-ed63-455b-abe6-95e93c3795a4"
        },
        "item": {
          "id": "7806fe9f-19d5-467f-8006-d8bd0f3085a4",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "0571dff2-d627-459e-b326-9d69e07b9de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "917e1b99-a625-4534-a6ee-fbb5524c5a46",
        "cursor": {
          "ref": "001f19d8-92c3-439e-b47d-7c35a4c9d278",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "0c44ba8c-d67e-4cbc-b08c-2d457b595b39"
        },
        "item": {
          "id": "917e1b99-a625-4534-a6ee-fbb5524c5a46",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "bd4913bf-490b-40aa-8b64-08eca286ac2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d86d280-2ae4-4b8e-a25a-64c127f193c0",
        "cursor": {
          "ref": "f7b5eab6-153b-4ba5-a562-db898367bbc6",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "85fed03f-7cba-4ad5-91fa-4dd35f606d51"
        },
        "item": {
          "id": "0d86d280-2ae4-4b8e-a25a-64c127f193c0",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "cd10fa03-2e0a-403e-a1a5-cd0d47ebaf4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6bad422-5805-4696-9b52-cb10dddf3322",
        "cursor": {
          "ref": "38e21249-0eb8-44c1-ab3e-471b2c7698a9",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "0ab21f12-ce2b-4a85-9eab-7a8595695d9f"
        },
        "item": {
          "id": "f6bad422-5805-4696-9b52-cb10dddf3322",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "5f86cd1c-5d3c-4f3d-b92b-6f7bf1f7f6ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe61bea-b9f5-461c-b4e5-052592548d95",
        "cursor": {
          "ref": "2594f28c-9917-460a-ae62-77fa3d27dcdd",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "3b0bf5d8-8aec-409c-9ce4-80cda3140e46"
        },
        "item": {
          "id": "dfe61bea-b9f5-461c-b4e5-052592548d95",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "870ec781-ff6b-4560-b9b8-bf1d0ec42902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81207b04-d899-48b8-88d8-75607e2a8f52",
        "cursor": {
          "ref": "74503ca6-7c05-414b-82d5-1b5a498db8cc",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e726ecd3-ed0f-40b1-a789-ddc1bf3eb2eb"
        },
        "item": {
          "id": "81207b04-d899-48b8-88d8-75607e2a8f52",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "1cd87003-83d6-48b1-8637-52d6658039bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "361b4310-15d1-4234-b044-bac0d264d6f5",
        "cursor": {
          "ref": "eda63bfd-825e-433e-9813-ccaa2ade6785",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "92189381-c4d3-434c-a5de-eb33d5fbaf8c"
        },
        "item": {
          "id": "361b4310-15d1-4234-b044-bac0d264d6f5",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5b6f7371-2f16-4ac1-83b4-7fc5d624945b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1365a086-efa8-4147-b621-b5697f8f1aa1",
        "cursor": {
          "ref": "a2fd3b6d-fba9-48c2-ac4f-18457dfab106",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "8e22c2cc-a5ee-4b76-a58b-71fcbe995586"
        },
        "item": {
          "id": "1365a086-efa8-4147-b621-b5697f8f1aa1",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "a89926bd-bfc3-4423-8439-b14ac685a3fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "ce7f068d-73ce-4a85-bbc3-e2e3485a0b6f",
        "cursor": {
          "ref": "fd0cb821-a6c7-476c-9455-fbb08f3c7a49",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "947092ce-0906-4c42-9844-a4f5b2911b18"
        },
        "item": {
          "id": "ce7f068d-73ce-4a85-bbc3-e2e3485a0b6f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b4bfe3b0-3a8c-473f-b491-19166fe83c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "975159c0-d285-448f-842f-046248df349a",
        "cursor": {
          "ref": "0c10e143-c2b5-4856-87db-d8f1d2c7f5e4",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "95b37615-df18-49dd-baa3-de2a898c91d9"
        },
        "item": {
          "id": "975159c0-d285-448f-842f-046248df349a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "8affee60-641c-4901-b261-b0f7ecd8f44b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "44bce997-46a8-4e93-b07a-275b3edff96f",
        "cursor": {
          "ref": "bb251947-8ddc-48cf-9fda-ed2bd7a255a3",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "57826f64-c14c-438f-a670-b17579eaa55e"
        },
        "item": {
          "id": "44bce997-46a8-4e93-b07a-275b3edff96f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "46579f63-a519-4649-9a91-44d026d50253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "e5dfca78-bc7e-4d0a-9a7e-817b8e21c352",
        "cursor": {
          "ref": "013064cd-f06a-4b69-98ef-bb19f217ecca",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d33e2a4e-47e9-4a6f-bf58-5c0ec55576a7"
        },
        "item": {
          "id": "e5dfca78-bc7e-4d0a-9a7e-817b8e21c352",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "897d2d6c-4c37-4ad5-9948-de970ea184d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "4530c9a8-9d48-4a35-a086-f3f2222accab",
        "cursor": {
          "ref": "2000da46-4900-4faa-908f-ab013fbe060b",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "427f8c28-49c6-4fae-8c18-02a06292c851"
        },
        "item": {
          "id": "4530c9a8-9d48-4a35-a086-f3f2222accab",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "610d5391-3ef5-482f-ad2f-fd10e765e973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "0313b5bb-8958-498b-8ead-1c9d3d526ef9",
        "cursor": {
          "ref": "d1e2305e-81ba-4939-97bf-9189b3381317",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "0577227b-e765-402f-9173-021f95acb8d7"
        },
        "item": {
          "id": "0313b5bb-8958-498b-8ead-1c9d3d526ef9",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "5eca0110-6615-48f0-9ac3-7f215c1d3b26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "43c0ad6a-3652-4418-9553-7d7fdd143910",
        "cursor": {
          "ref": "94cb54dd-2bb6-408b-86b0-22d5ab3568a6",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "5e64e121-90ea-4171-a8ce-4343ed2dd4b3"
        },
        "item": {
          "id": "43c0ad6a-3652-4418-9553-7d7fdd143910",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e5a97cfb-ebe1-4061-9b7c-f35d9df059a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20442d51-18c5-409b-8388-ba31d8cdfbd2",
        "cursor": {
          "ref": "a585a698-10cf-401d-ab54-d99c949940d4",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a5df3fbf-c702-4925-a18b-b6cb0ac04cfb"
        },
        "item": {
          "id": "20442d51-18c5-409b-8388-ba31d8cdfbd2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "18b04da6-fe67-4b2f-9a24-85a5d984b193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "029d2123-3c3a-4e51-83be-be5d95a89e95",
        "cursor": {
          "ref": "60e83be4-9fcc-4455-a498-41eb3a74f850",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "10f6f932-df54-45dd-84c4-d3cd74edf3d0"
        },
        "item": {
          "id": "029d2123-3c3a-4e51-83be-be5d95a89e95",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c652fc6d-5c86-4865-b72a-666e6e0447d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf84677-4bd1-4c53-9fd3-705adfd13372",
        "cursor": {
          "ref": "346aff6c-7ea9-4e46-a688-cb0c9df822d2",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "a400a158-7c71-45f8-9c02-42d9c6506f3d"
        },
        "item": {
          "id": "dcf84677-4bd1-4c53-9fd3-705adfd13372",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "675aea75-c970-4d0f-bf92-64debd703fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef013647-e2c8-4a22-8c97-169eca5bf091",
        "cursor": {
          "ref": "976e90ed-ac8a-4dd6-89ba-71bd2e896151",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "80c1e5d6-17bd-47fd-8124-0afbbaadfe9f"
        },
        "item": {
          "id": "ef013647-e2c8-4a22-8c97-169eca5bf091",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7f1a6371-4e51-4562-8b10-a5b55fb29932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18478bd2-666c-42f4-bb3f-48adecfb7e60",
        "cursor": {
          "ref": "051be073-d13c-4d0a-9600-b83c8b7131f6",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "9535a11b-6173-45be-91db-0945517a3aef"
        },
        "item": {
          "id": "18478bd2-666c-42f4-bb3f-48adecfb7e60",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8f0966b6-8cf3-43d0-a0f1-a9cbd58eb494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92826cfc-a34b-40d9-a03a-725b67a85cf2",
        "cursor": {
          "ref": "1b67e5c5-12ef-43ca-8c9b-1bcc2ddfd6a8",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "51e2300f-43a9-4e0b-9c1b-e3cb8cf1d208"
        },
        "item": {
          "id": "92826cfc-a34b-40d9-a03a-725b67a85cf2",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "25f90beb-5cf8-4145-9524-53ac590c8107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d55215ba-d7f7-496f-83a1-a1cfa10330b7",
        "cursor": {
          "ref": "202b8b60-3cbf-450f-9412-1dcf6055fafa",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f056c630-0f2b-4d96-b91d-6b25f3fdabf2"
        },
        "item": {
          "id": "d55215ba-d7f7-496f-83a1-a1cfa10330b7",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "72e9bf50-aa09-4a9b-bbf1-9a60fe12c262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49864da9-4d79-4376-869f-3ce943380fe2",
        "cursor": {
          "ref": "63160142-4806-4c40-9051-584930f705bf",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a8accb37-6234-4908-9a9e-70f20e77380c"
        },
        "item": {
          "id": "49864da9-4d79-4376-869f-3ce943380fe2",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b27a41be-ebd5-4545-b5a8-d04b86e343a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc2dcaf-eaea-4044-8212-63eea245edab",
        "cursor": {
          "ref": "b4fa89a6-d130-4cde-94e7-3b40daf7ba33",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "b2b42b07-b49b-46cb-85aa-08fb942a9f79"
        },
        "item": {
          "id": "4cc2dcaf-eaea-4044-8212-63eea245edab",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6270ba03-34ad-4d1f-8ee6-2b518a5e029a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "620bfb17-28e6-440b-a529-3d41e0e607c9",
        "cursor": {
          "ref": "149e990d-8ed2-485c-9129-b431d4a85471",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "33e4c00e-4d4a-48b4-a7d1-bc6a0acbc9be"
        },
        "item": {
          "id": "620bfb17-28e6-440b-a529-3d41e0e607c9",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "96b17646-e507-4515-aa40-fff9daca320e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5d782f2-5a7b-4d06-aa09-4e56c90976df",
        "cursor": {
          "ref": "cba1f41d-7ba1-48c9-8465-186f15df6083",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d80964cd-091a-40d7-aa7c-29a9d31ecb61"
        },
        "item": {
          "id": "d5d782f2-5a7b-4d06-aa09-4e56c90976df",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "acc00376-83be-4961-829d-8fe18204085a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcfe898f-5d9a-4bc0-809a-25e7a233e70d",
        "cursor": {
          "ref": "1a1c2399-12e2-4efa-aa38-e42d6c347fbd",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "c24bef90-a4d8-4420-9436-1af11577a6d0"
        },
        "item": {
          "id": "fcfe898f-5d9a-4bc0-809a-25e7a233e70d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "792eb2be-22bc-440d-8d9d-af037185dee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce092d55-42b6-4b36-a614-95cf901b7bd8",
        "cursor": {
          "ref": "b3663f5d-24e7-45d2-9830-3b68c0a2a1aa",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "0cec7db4-3236-464b-9a37-3d7ef32bc77c"
        },
        "item": {
          "id": "ce092d55-42b6-4b36-a614-95cf901b7bd8",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "12669540-4940-4074-a09f-cb1f342c6263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ad0c35-e88e-42f5-9331-816859a725f2",
        "cursor": {
          "ref": "2f5a7e69-f960-4094-9bd2-d4fb158c6d12",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "5940d615-f057-4548-ae55-34ae1553392e"
        },
        "item": {
          "id": "39ad0c35-e88e-42f5-9331-816859a725f2",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "201a5d37-391a-40ff-b853-03f71100a68e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e33a37-87aa-4330-9822-ee17d0d2893d",
        "cursor": {
          "ref": "029e17b4-e5bf-4a79-8345-7ee64887207c",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "1feb6fe9-5ad5-480d-9962-ea01dbaeefa3"
        },
        "item": {
          "id": "a5e33a37-87aa-4330-9822-ee17d0d2893d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "dea0fe13-b5be-46f5-9e1f-f3a1c8913648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d32fa057-84b9-4c8b-9e26-e9a3b20592b4",
        "cursor": {
          "ref": "24214c72-f29c-4409-b06d-23c392d44e17",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "63cf49ac-d235-4224-885b-9e0485722937"
        },
        "item": {
          "id": "d32fa057-84b9-4c8b-9e26-e9a3b20592b4",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f86db9e7-e031-440f-87a2-5df1a2b81efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4adfb0d-19dc-4708-b19e-71926a271d63",
        "cursor": {
          "ref": "e0234f86-6102-4719-b88d-8fb1d2524ae7",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c3075aa6-80d7-4420-8330-d9eb6c42b47b"
        },
        "item": {
          "id": "b4adfb0d-19dc-4708-b19e-71926a271d63",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3f8945a7-5b00-41c4-a838-f3ba0bdb1942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f22691a2-31c4-4d22-85c5-43626ff74109",
        "cursor": {
          "ref": "f30fd3d7-e229-4694-aefc-f8348d543eb4",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "e2297455-3ba4-451a-a76c-328bd870cf4c"
        },
        "item": {
          "id": "f22691a2-31c4-4d22-85c5-43626ff74109",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "45074ffb-bbcb-419c-8b6c-c461021699f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce6df66-3824-4299-8a7e-4d59b695efad",
        "cursor": {
          "ref": "4ff94b34-52bc-4303-81ad-6c34a6fa87d0",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "f1aa6b33-eebf-4e03-8ed8-aeaf5729b046"
        },
        "item": {
          "id": "0ce6df66-3824-4299-8a7e-4d59b695efad",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0de4cf61-2fd5-41a2-ae63-a32f3a9ffca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c51de7b-5231-498c-a867-17358f86ae50",
        "cursor": {
          "ref": "4a5874be-e826-49e4-80cb-166586f65af6",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b0636f8e-b271-43ee-b0e0-76f4547bb861"
        },
        "item": {
          "id": "1c51de7b-5231-498c-a867-17358f86ae50",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "02dd1210-c670-4f8d-8154-d8221084a8af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfcb2bab-892c-40b3-ace3-6e5359490676",
        "cursor": {
          "ref": "54f433bf-db92-4878-bf15-a2174feb5d50",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d732a71f-7513-4c09-8db0-51c074ae1d60"
        },
        "item": {
          "id": "dfcb2bab-892c-40b3-ace3-6e5359490676",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c3069602-cec1-42be-a9cb-3abd291a06a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ffe5ff-8e6d-4237-8849-39ddc838181f",
        "cursor": {
          "ref": "03de14b7-59b8-401d-9b61-291282d37d28",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "70785f71-716c-4979-aae3-e48d47d8d3df"
        },
        "item": {
          "id": "68ffe5ff-8e6d-4237-8849-39ddc838181f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "516fa8da-d71e-4511-8bc6-be94efee8681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72862721-eb41-4c6d-9525-83cba9eb2101",
        "cursor": {
          "ref": "ab5c80ed-3044-403e-942c-6fdcdb0d74ea",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a4371f08-913d-4226-afa0-8fcb1b3d97bb"
        },
        "item": {
          "id": "72862721-eb41-4c6d-9525-83cba9eb2101",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d4cf7c81-f48b-4c99-bf91-a45a1ed5054d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56dfe11e-ff37-4ea1-87de-32a1c9ba9dbb",
        "cursor": {
          "ref": "a5ff4def-ae38-4645-b4e5-0c6126f79e71",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "55fcda47-b812-4b79-b0e4-a6570edea1ab"
        },
        "item": {
          "id": "56dfe11e-ff37-4ea1-87de-32a1c9ba9dbb",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c04d10ea-13f5-4fed-9415-edf305558c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a9d1415-fec4-4d2d-abb4-195168120b5b",
        "cursor": {
          "ref": "a8ee6687-c9e3-4bd4-b673-0008c3f16fb6",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c72a4edd-b6db-49a8-82e3-ecc30a2b76de"
        },
        "item": {
          "id": "8a9d1415-fec4-4d2d-abb4-195168120b5b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3ab6d49b-5b5e-43e3-80f4-0515864f07bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c6ada8-0417-49e8-93dd-c803251cef26",
        "cursor": {
          "ref": "1da72daa-228c-4523-b01c-bbdfe6510a99",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "fabb7dc3-36a0-4830-93ea-5b53b5a071b5"
        },
        "item": {
          "id": "f7c6ada8-0417-49e8-93dd-c803251cef26",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3ef82bd9-e9b8-470b-83dd-87dcc53f0ab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0460a325-6fdb-4f02-8ed3-0b61756c4889",
        "cursor": {
          "ref": "c35854b3-9a4b-4380-a52c-7c85de7509ff",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "dcef912f-c430-4e5b-b341-ba799adb4033"
        },
        "item": {
          "id": "0460a325-6fdb-4f02-8ed3-0b61756c4889",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e2f1a506-dcaf-418a-9222-80efb0ca4fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "338a5ea6-5805-40ff-a3d7-3b5aea4abf56",
        "cursor": {
          "ref": "1e800d4c-7b0c-48da-aff9-5e179a6c7097",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e6f9acfd-8e3f-4b2b-8c8c-144be94f9b86"
        },
        "item": {
          "id": "338a5ea6-5805-40ff-a3d7-3b5aea4abf56",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3fe71582-5cc4-4984-bea9-971f7d70c7e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "152205d5-1b21-4711-ad81-359bd06d23a9",
        "cursor": {
          "ref": "1573c891-1cfe-4a18-b7d2-fda342016b72",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "7ad71ee3-84da-426d-958b-996b1c78458f"
        },
        "item": {
          "id": "152205d5-1b21-4711-ad81-359bd06d23a9",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "71a102f5-6ed0-4a5a-9085-a8bbd1980781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d391593-5d3e-48ca-a5e3-4959c95a9531",
        "cursor": {
          "ref": "37753a0c-1303-43da-82a4-b1c8a1c81e63",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a93b5139-8b59-4286-99e2-1e712aec7b98"
        },
        "item": {
          "id": "9d391593-5d3e-48ca-a5e3-4959c95a9531",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "59404cbc-f560-4081-80d9-1a9e17a598f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb48802-7212-4bc4-afb4-e59d5fa37c82",
        "cursor": {
          "ref": "7648f644-a31d-414b-96ed-4b7bf7d5fd67",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "808ccffc-cb37-485a-ac55-df124a7331b0"
        },
        "item": {
          "id": "ccb48802-7212-4bc4-afb4-e59d5fa37c82",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "1b0ffffd-7c3c-4a75-bf8b-6c11550b7c26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07bbfd98-9782-42f4-8f03-d40caf8da2d1",
        "cursor": {
          "ref": "8b65f182-c8b1-41c3-bbd5-6772ff5c6231",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a9d5ad13-1688-4eeb-8fa2-167b6556d25b"
        },
        "item": {
          "id": "07bbfd98-9782-42f4-8f03-d40caf8da2d1",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "fe96dd77-5273-48f3-a857-14c6e4a37dfc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d80fee0b-b1a4-4a4d-be2c-5ebb4e46f2ff",
        "cursor": {
          "ref": "fc7b8156-3e64-4adc-ab8b-27490852cd26",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "25c46a38-da46-4ab6-b12e-4177da84c1ec"
        },
        "item": {
          "id": "d80fee0b-b1a4-4a4d-be2c-5ebb4e46f2ff",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "90f5b197-b47c-454e-a387-79536d2206c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dde2f34-6872-46da-ae6b-19716eedb63c",
        "cursor": {
          "ref": "3959acf7-b2fa-46a7-9f86-b0700d6f722f",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "6ea9da0e-0dd8-4507-89ba-6a41336d6b5d"
        },
        "item": {
          "id": "0dde2f34-6872-46da-ae6b-19716eedb63c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7b44f444-cc8a-42d2-a5cd-3df2d79e5108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55af9ede-196b-42f3-be8e-38b0abde4f6e",
        "cursor": {
          "ref": "737e3743-b22a-4902-ac54-63494085c71c",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ac172db1-032d-41e2-bf9a-0265dd98fdc4"
        },
        "item": {
          "id": "55af9ede-196b-42f3-be8e-38b0abde4f6e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f2a88e24-6227-4362-a2cb-a32c8c4d80f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8547f9de-94f7-438c-ad5c-9b55b5b95fb1",
        "cursor": {
          "ref": "27d30a25-78bc-45bb-974a-70ce1c2937f3",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "23c9ef59-08b1-4257-a6db-d8331c301097"
        },
        "item": {
          "id": "8547f9de-94f7-438c-ad5c-9b55b5b95fb1",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ef0b782d-5c16-4e6c-afd3-8dd12a7e3e3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c32a19c4-8023-4a86-8000-70b22383f0d0",
        "cursor": {
          "ref": "fe813aed-7ffa-4530-a26b-c8d3e21a6a06",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "64692e25-43c0-41e1-8d02-1869b4a6bfcb"
        },
        "item": {
          "id": "c32a19c4-8023-4a86-8000-70b22383f0d0",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "49634edd-204c-4b30-81f5-f6ecd72cb601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec8e9f8-ec72-482f-91d1-7e0ec64077eb",
        "cursor": {
          "ref": "7191e320-9b57-49fb-9be9-afbd81ae689d",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "4c21e104-ec54-452a-b269-09f19ae24a6b"
        },
        "item": {
          "id": "fec8e9f8-ec72-482f-91d1-7e0ec64077eb",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d2dfaada-dfd8-4f3a-ac24-951a7ed1c51d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba0d2f4-f806-47d3-8f45-d3cf1089f1b5",
        "cursor": {
          "ref": "ff869f5a-f2d8-4005-bee0-6beeb68cb22b",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "68cc7469-55e0-4ef3-947a-ec5d719997e6"
        },
        "item": {
          "id": "cba0d2f4-f806-47d3-8f45-d3cf1089f1b5",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "305e9b37-c642-4827-87eb-4419697ab37b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8bedbe5-9eb1-4464-8669-3e6e99a7fdcf",
        "cursor": {
          "ref": "a9a4fc9c-9d49-4e37-b77d-ce9518ab7dd4",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a5cbde1a-607f-4ee7-bb37-8ecbe5672ec4"
        },
        "item": {
          "id": "d8bedbe5-9eb1-4464-8669-3e6e99a7fdcf",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8cfb536f-b056-47fe-80ce-385c27fccde8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27bcd5e1-9a72-4a30-ae26-839d7206a2c6",
        "cursor": {
          "ref": "7eef0d50-5316-4a60-8c66-92968d829b35",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "1966ba26-fb8d-48fc-9913-d1529b2a5523"
        },
        "item": {
          "id": "27bcd5e1-9a72-4a30-ae26-839d7206a2c6",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "feee46d9-7659-4b77-a17a-82f829817b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "175c125d-d4bf-4249-bd37-c31e9393d1c3",
        "cursor": {
          "ref": "aa3d8e8f-3e61-46cb-9e81-191de312723a",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ed250a64-a3a5-474c-8ede-408a4afab771"
        },
        "item": {
          "id": "175c125d-d4bf-4249-bd37-c31e9393d1c3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "72fb720b-e98d-4f3c-a147-e3e3b5231405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3968a10b-676d-419d-8d71-562c91bf9e6d",
        "cursor": {
          "ref": "28b571b0-e19e-4560-8adb-14835473844c",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "c191bf5f-3917-4436-9e56-2f335735866d"
        },
        "item": {
          "id": "3968a10b-676d-419d-8d71-562c91bf9e6d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8b82b985-570b-448b-9fc9-dbe7daae2301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebd67421-902f-4efa-9ebd-4bcb8f705de0",
        "cursor": {
          "ref": "2eb407c8-aa35-4279-8d9a-5d24dce547ae",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "146bd473-1727-48ca-a4cd-0958c01de500"
        },
        "item": {
          "id": "ebd67421-902f-4efa-9ebd-4bcb8f705de0",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f05af9cb-d138-4bce-8a6f-5f6adc1c91df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef36192-ff39-4028-a5b8-eaa2c0f02693",
        "cursor": {
          "ref": "944db84b-e3b2-4a17-be33-f1f607dc79a9",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b622ed3d-50e4-403e-aef7-f7b92a72fb29"
        },
        "item": {
          "id": "8ef36192-ff39-4028-a5b8-eaa2c0f02693",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0cedcf7d-9ad2-45b6-8a54-9ad68d52bb07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a7b7748-98ff-440d-af8e-e77175022ba8",
        "cursor": {
          "ref": "a36be0e3-e611-41ef-8f2a-ef3ee610686b",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "82e84817-3ce1-4333-9ebb-3d5c0a8a42a9"
        },
        "item": {
          "id": "7a7b7748-98ff-440d-af8e-e77175022ba8",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f9d9bca0-cfe3-43b2-97c5-46ed656bf557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa4f747-2b57-4e62-9ae9-b2dc5e4a95ce",
        "cursor": {
          "ref": "916cd97e-a322-42f5-8786-55d579db2fcd",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "fcd50fbc-6560-43df-a948-c7811edcc418"
        },
        "item": {
          "id": "9fa4f747-2b57-4e62-9ae9-b2dc5e4a95ce",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7ee47b54-bd21-482c-b237-9e871c0b1984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c25642-1e2f-483c-9e2c-b00fff72ddf4",
        "cursor": {
          "ref": "2448e9ee-6c99-49d3-8bc1-cb68f01ae72f",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "592d5c76-e8c6-42ab-9a51-b5667a03b1c9"
        },
        "item": {
          "id": "d7c25642-1e2f-483c-9e2c-b00fff72ddf4",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "941f7ecf-2bb4-40f4-a0da-017450074418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "458084ca-2e73-4306-a107-7e7b839f8230",
        "cursor": {
          "ref": "171da881-eab6-4aaf-8314-3184f42fb08e",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "bb584a74-d43a-4672-9e7e-5057c62bc121"
        },
        "item": {
          "id": "458084ca-2e73-4306-a107-7e7b839f8230",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "85adaf7a-55f8-4ce4-a57c-10267e4140e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a28a1d2f-d3c9-4fde-bdc9-f10f7e733fed",
        "cursor": {
          "ref": "da5f75f8-0df5-450e-b186-59cee78a4297",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "160efd21-4b12-47e0-aa14-727ac8eb0270"
        },
        "item": {
          "id": "a28a1d2f-d3c9-4fde-bdc9-f10f7e733fed",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9f26c8b3-040c-4c99-9ec7-73f77da9762a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52eadc40-0835-4958-be5d-b1a6ddeb7424",
        "cursor": {
          "ref": "3e1cb9fc-2464-4e56-8b91-1d006e2878da",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "7a323e61-e21f-4726-8d83-1021a3388e46"
        },
        "item": {
          "id": "52eadc40-0835-4958-be5d-b1a6ddeb7424",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "621c2189-5521-4acf-aae3-80d8f14d19f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "682b7c34-73b1-45d7-b45e-0572f903956e",
        "cursor": {
          "ref": "caf113e4-e5f3-4a4e-a958-064efaa88072",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "213765d3-7916-4acd-b94c-744617681ebd"
        },
        "item": {
          "id": "682b7c34-73b1-45d7-b45e-0572f903956e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f082989a-d02c-4f33-b4b8-67e2a38584e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9151bcf-0e9f-48c9-9c89-10eac22c5bfe",
        "cursor": {
          "ref": "a24c43b1-309f-49c1-a80d-f8bd94f01949",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "f6ec9fd9-907e-4d61-9fb3-ffdfdf9816bc"
        },
        "item": {
          "id": "f9151bcf-0e9f-48c9-9c89-10eac22c5bfe",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "96ad2273-3ea1-465b-909b-5946a43ada03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf4a9f2-93e4-4964-b89b-3aed47533aa1",
        "cursor": {
          "ref": "e390fc9b-5b4f-4fca-8ac3-82e6bc0fe32c",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "51fb978a-5dfc-4c8d-8029-9caaef221195"
        },
        "item": {
          "id": "ccf4a9f2-93e4-4964-b89b-3aed47533aa1",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9c05eabf-d79a-4604-9c34-3a41a2a53718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fda290a8-15c6-4c9b-9bd3-db05d0dcd568",
        "cursor": {
          "ref": "320c1537-9a02-4bab-bcba-e51257c57bea",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c7005b19-0af8-4b38-8bf6-7fab2578471d"
        },
        "item": {
          "id": "fda290a8-15c6-4c9b-9bd3-db05d0dcd568",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d8567bee-afec-4497-b953-033d6ab55e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "928b403b-ac77-4283-afc6-20d2060e6962",
        "cursor": {
          "ref": "3d404c36-35b6-4e6c-bb8a-0618ef951d51",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "4fa16631-398b-472b-b8fc-cbb93a385aa6"
        },
        "item": {
          "id": "928b403b-ac77-4283-afc6-20d2060e6962",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "87e8e291-49a6-42dc-a48d-28ba113080ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4c98e83-67e3-480f-8bd9-dae9837babd0",
        "cursor": {
          "ref": "4555609b-6612-42f5-b210-ee1b3c5298db",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "1acc30c5-0fb7-44b7-a895-a0c0ad765181"
        },
        "item": {
          "id": "d4c98e83-67e3-480f-8bd9-dae9837babd0",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8eb6dceb-8a60-4b08-84fa-f7b738f9c792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc810eb3-ce64-4ffe-941c-64b159f93fbc",
        "cursor": {
          "ref": "c30fe9a3-26a0-40f9-9321-957467438a69",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "312fd1ab-5e17-4f62-a009-e5d4e290bd55"
        },
        "item": {
          "id": "bc810eb3-ce64-4ffe-941c-64b159f93fbc",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6c3db6b4-3621-4a25-bc7c-cf5de2455d9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3a00e6f-00f2-40ca-ac3e-7cec218348b1",
        "cursor": {
          "ref": "3264db7c-3c40-4719-8ac5-1aff80dd8fea",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f94a4179-4af1-4d52-9d7a-c84f72a28652"
        },
        "item": {
          "id": "e3a00e6f-00f2-40ca-ac3e-7cec218348b1",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "9317e6cb-a731-4376-b9fb-03b3a6c0dc6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a483bff1-7ef9-4930-9416-03c141e72f21",
        "cursor": {
          "ref": "d54fbb8a-fd6d-47f8-babc-73587ef28fbb",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "cf319fa4-b64a-49d1-a19d-d49638778e58"
        },
        "item": {
          "id": "a483bff1-7ef9-4930-9416-03c141e72f21",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "38576815-0096-4c58-a520-b019f84c7587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e9cd7db-93e6-4453-8dea-1d1b2e5ea696",
        "cursor": {
          "ref": "6a8b23e7-cffa-461a-b6b2-dcb94103a17e",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "689b4f9d-ee6b-4606-a72c-f8588cc151f9"
        },
        "item": {
          "id": "8e9cd7db-93e6-4453-8dea-1d1b2e5ea696",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8322d4f8-04e7-4c51-a235-20db5a4b94e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "129bad34-c92b-4b70-b293-ee4f7157bdd7",
        "cursor": {
          "ref": "85efa700-cb76-4240-8569-8eee56b85e84",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "3398557c-a7b2-446f-b670-281e495a725e"
        },
        "item": {
          "id": "129bad34-c92b-4b70-b293-ee4f7157bdd7",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "fb1b4ec7-3c6b-469a-ad9c-7055065fe69c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d6013c-9d35-47eb-9769-0ef68a0f4b7b",
        "cursor": {
          "ref": "ce12fcdd-fd71-473e-92fc-c1bc75fd4519",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "c9f65cb2-9ac9-4076-a916-fcd394430eae"
        },
        "item": {
          "id": "e1d6013c-9d35-47eb-9769-0ef68a0f4b7b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "25f80934-ce10-493f-8964-213333afda35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a5e9d48-0032-4799-ab25-f6e4599d698b",
        "cursor": {
          "ref": "84be73aa-6dc9-468a-af51-0cb2b849ad6f",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "6c9c87af-1333-4001-8048-72551f8833bd"
        },
        "item": {
          "id": "6a5e9d48-0032-4799-ab25-f6e4599d698b",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "b0e719ee-42b1-4d74-ac14-76a50412a75d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a41b920-e7f8-42e5-98cc-c009e375c002",
        "cursor": {
          "ref": "a9b34363-5c1c-4681-8de0-f0e6056a18b4",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "aa9f2212-c815-4b62-8e79-8c016c30f218"
        },
        "item": {
          "id": "3a41b920-e7f8-42e5-98cc-c009e375c002",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "bd542e41-ee28-4d05-acab-ed8e380b747c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93f05e83-faf6-4562-bca5-b192c0ac2625",
        "cursor": {
          "ref": "29e95d7b-b013-4c61-9c61-904aa9bd3a7a",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "8a7b1404-aab1-47b7-a602-1d83c392eb18"
        },
        "item": {
          "id": "93f05e83-faf6-4562-bca5-b192c0ac2625",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "20a7da2d-7ca8-436d-a630-da6468565ed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deaa7d44-d1d3-425a-b5e5-e68546e606e8",
        "cursor": {
          "ref": "be903fe1-f707-496e-a805-eca8c672693f",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "e09b2cfd-ec4e-458d-a07c-fab61bc4d6a6"
        },
        "item": {
          "id": "deaa7d44-d1d3-425a-b5e5-e68546e606e8",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "1f5c58f5-dde3-4e2c-8bdb-ab430e256dcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1894a263-1ad3-4bcc-83e1-bd961c557e85",
        "cursor": {
          "ref": "8cae850e-86de-4982-8a8d-75b80a1b07df",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "d8b2f483-694e-44fe-976f-a5004503f3cf"
        },
        "item": {
          "id": "1894a263-1ad3-4bcc-83e1-bd961c557e85",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "b7d587b7-c44e-4f5c-9cf6-5689d9d2377e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d9eb6ed-2f59-4b58-9164-c10b80c2870e",
        "cursor": {
          "ref": "ba12dd59-e0c6-4f6a-a22c-9563412b668e",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "34cf25b2-ff6a-4958-abcd-c19f83748e43"
        },
        "item": {
          "id": "8d9eb6ed-2f59-4b58-9164-c10b80c2870e",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "b8c982a5-4e31-48c3-9d27-f8d27052c2f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f840bf2-1590-4014-b7b2-8f588e02b4bc",
        "cursor": {
          "ref": "05ebea52-5e22-4bef-8595-9eb3aa2c4476",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "7c275196-4404-45aa-8177-8378d611803f"
        },
        "item": {
          "id": "8f840bf2-1590-4014-b7b2-8f588e02b4bc",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a2b718f4-1c2a-46c6-bb3c-84ecd9dd210a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "731edcdf-d46c-4081-850c-b7cbf0f999fa",
        "cursor": {
          "ref": "f9153bfd-d036-48e9-b089-ebaa1cd5f292",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "76ac042f-5946-4d6d-aeb7-1700c1009326"
        },
        "item": {
          "id": "731edcdf-d46c-4081-850c-b7cbf0f999fa",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e6230d70-1cb6-42e2-b360-82fe1178c868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d784863-f5a3-4b9e-bbf1-f502cf8fecd5",
        "cursor": {
          "ref": "757afe71-5e06-4ef5-a772-39920afde548",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "5cc8ea86-efd5-4238-bea2-f618324b2cc2"
        },
        "item": {
          "id": "1d784863-f5a3-4b9e-bbf1-f502cf8fecd5",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "d6102390-320f-469e-8aaa-88d7fb99918d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f626ff75-1d8b-4016-a1d7-1efbdc990dbe",
        "cursor": {
          "ref": "59b3f1f5-2512-4821-aa1d-6d4eee467b99",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b5a974f1-d60f-4d45-bff3-82c9f5b91170"
        },
        "item": {
          "id": "f626ff75-1d8b-4016-a1d7-1efbdc990dbe",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "06d5e2c2-6df2-454d-b2f7-f54808096dbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "463da946-76f6-42c5-8fa5-eefc2d2c71b3",
        "cursor": {
          "ref": "102abe4c-a915-49ef-af8a-d3e56f5a8ffe",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f2fad642-948d-42f5-a4c7-e7fe45ff277a"
        },
        "item": {
          "id": "463da946-76f6-42c5-8fa5-eefc2d2c71b3",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a2d14278-34ae-4e94-87e1-262227dc3d60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce238c2-b84a-40ff-a836-344105653314",
        "cursor": {
          "ref": "f903b7de-1dee-438d-a047-0768b23a46bd",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "98a42e5c-c071-47f7-bb29-c9e0e4d17a76"
        },
        "item": {
          "id": "4ce238c2-b84a-40ff-a836-344105653314",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "807f0b8b-b54b-4bea-80b4-709ddb79eafb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def8185f-aae6-4956-a0ee-634e45b967d9",
        "cursor": {
          "ref": "c2310210-3cbb-4a18-8167-a891475b070f",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "34d37f34-5ada-4106-9dd4-3a4ee84bea04"
        },
        "item": {
          "id": "def8185f-aae6-4956-a0ee-634e45b967d9",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "43293f44-7121-4067-8222-49b2a13b3200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b9b82f-808d-4fec-b0e5-3d1dcf4578fc",
        "cursor": {
          "ref": "364ed22c-22b8-44cc-8e79-7bb6fcfba048",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "86ccb7a7-1a58-4c63-8f4f-57487d886c93"
        },
        "item": {
          "id": "85b9b82f-808d-4fec-b0e5-3d1dcf4578fc",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "dbacfade-8457-4aaf-948a-49fd04a31b80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df51dfd-5d94-405c-b22b-ee9943ad95b4",
        "cursor": {
          "ref": "460609d8-5a07-4a35-9001-ede6db3e86da",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "72c7fd52-cf28-431b-82ea-3cce257d49b5"
        },
        "item": {
          "id": "5df51dfd-5d94-405c-b22b-ee9943ad95b4",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "5c8a2d2d-a72f-4937-b4d4-1eef0286bbca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81cae2e1-863c-4509-ad0b-ee709d5567a4",
        "cursor": {
          "ref": "bb0c07e1-12af-4b00-b032-31aa38a9dbe4",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "18fec717-2283-4fa8-b236-5b4bc0c27999"
        },
        "item": {
          "id": "81cae2e1-863c-4509-ad0b-ee709d5567a4",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "8cb13152-b04b-4b9b-8877-87e6b233ce7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2984345-cec4-492c-9c42-3056629411c4",
        "cursor": {
          "ref": "ff103d6b-7d79-42b5-96e6-30c3e3170c7d",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ff6551c9-e9aa-48fd-83dd-c4841cc8062b"
        },
        "item": {
          "id": "e2984345-cec4-492c-9c42-3056629411c4",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "2f706c4d-d304-4f65-aaf6-41830465f691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d373d9-9615-4e02-a33d-c291e27afcad",
        "cursor": {
          "ref": "da192c49-e9ad-4835-8cf5-03901891cca6",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "40dcdbc4-241a-432b-8414-6712ab628417"
        },
        "item": {
          "id": "53d373d9-9615-4e02-a33d-c291e27afcad",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "91c777df-baca-44f0-aea9-00804c6bc552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aeb6551-b629-4e00-a4dd-a65354161580",
        "cursor": {
          "ref": "64c7f184-7c5f-46ed-be91-1ed32c2f93f1",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "a1f95b66-2188-4663-8df7-34374f6752a2"
        },
        "item": {
          "id": "2aeb6551-b629-4e00-a4dd-a65354161580",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "1960f370-aa8d-40d6-831b-341fa20a156d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "237a96f3-3506-4d35-95d1-c877082d89fc",
        "cursor": {
          "ref": "575c69e5-9edb-46a4-8513-e9c23da7e3f9",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "7a703043-6ec2-4431-8751-340940c87175"
        },
        "item": {
          "id": "237a96f3-3506-4d35-95d1-c877082d89fc",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "cddca8a8-4c97-4dee-b908-f9e24cb92194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bb42d94-f025-4008-944b-d44c42471b40",
        "cursor": {
          "ref": "5006ef77-5b19-4fa3-8140-28183a1eb865",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "d02110bf-e46a-4a47-a64c-9b19041ddef5"
        },
        "item": {
          "id": "0bb42d94-f025-4008-944b-d44c42471b40",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "374cc471-2cc7-4a0e-9b2b-f37d3d5c6f8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41b65505-6986-40d1-8b2e-2badc465cc08",
        "cursor": {
          "ref": "ed24fa05-a58e-46fb-8dd0-3614b7c40b4d",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "55208b0d-68c7-4438-95de-09169401bf0e"
        },
        "item": {
          "id": "41b65505-6986-40d1-8b2e-2badc465cc08",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "086bf87a-5890-4033-9fed-fee089ce455f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d49290-fbe7-4420-afe6-91b21e4db9d9",
        "cursor": {
          "ref": "45af305e-d064-4dab-b405-f4f6e7dc2858",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1434acff-c3ad-44f8-88b3-738054dc7749"
        },
        "item": {
          "id": "b1d49290-fbe7-4420-afe6-91b21e4db9d9",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d164cc5f-c13a-4be4-933e-7eed7e59ab52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe7df01-b2d0-48e7-aeb4-7df3371f3e55",
        "cursor": {
          "ref": "f0413504-b17d-4d21-9483-21119a4ed49e",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "fc5361c2-e365-4a51-af0c-6ce202d64944"
        },
        "item": {
          "id": "dfe7df01-b2d0-48e7-aeb4-7df3371f3e55",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "94f63cd1-aba3-4192-98be-0e5f3cf8a13c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49ab0d7a-a4a0-4fb1-b9c0-b16bb46d2eee",
        "cursor": {
          "ref": "38d572e5-a2fe-4df2-b669-1a4baf123acd",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "1f1daa89-8a38-4a71-a79c-d6ce58012e6a"
        },
        "item": {
          "id": "49ab0d7a-a4a0-4fb1-b9c0-b16bb46d2eee",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "0f615053-67f3-4618-a144-d212d61395e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d83f37-a3bc-421b-af97-231798089b89",
        "cursor": {
          "ref": "f2fe8c93-6201-4b4d-b229-cca3b05a0d70",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "a2731f75-7764-42d4-9f87-095883c97040"
        },
        "item": {
          "id": "d8d83f37-a3bc-421b-af97-231798089b89",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "df966a07-66c4-4916-aa7f-076a39b3fad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ee7b20-82a4-4cec-9c27-7fdf97b6ef9d",
        "cursor": {
          "ref": "0faf8d46-7776-4659-89c8-12794edec4fe",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "eba00a74-7308-42c8-a74c-4b27a14899ae"
        },
        "item": {
          "id": "f5ee7b20-82a4-4cec-9c27-7fdf97b6ef9d",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b8f3ccec-9e80-4f0f-bb62-5c1b417d2210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2801c5e-f33e-4246-aa96-92bed446c509",
        "cursor": {
          "ref": "412f40ed-d943-4932-a73f-7b9b379d8fcd",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "7a4ffaf5-7bf3-45b1-bfc8-bd172eb94c38"
        },
        "item": {
          "id": "e2801c5e-f33e-4246-aa96-92bed446c509",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "7632a988-8879-4b22-ba80-da9a0e980af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e72f0b11-8ecf-4681-aefa-4379e5fd3e88",
        "cursor": {
          "ref": "a1a0958e-89e0-4dd5-a3b8-e6333cf706ae",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "190dc6c8-af36-4b29-9e27-25a6ab21210e"
        },
        "item": {
          "id": "e72f0b11-8ecf-4681-aefa-4379e5fd3e88",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3cce7b49-1c3c-4def-a516-d2bc55cccf4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41bce5d3-672b-4f50-8eaa-3fae85483bf2",
        "cursor": {
          "ref": "275c3cb1-80a7-4890-8a94-2a98dd13095c",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "bc8a41db-19b2-4314-99fa-ff689ab7f2dd"
        },
        "item": {
          "id": "41bce5d3-672b-4f50-8eaa-3fae85483bf2",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "3b07422a-d42e-4d88-aeb0-276028e6d0f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe4f8c79-c9cf-411b-a287-baf80333075c",
        "cursor": {
          "ref": "46d921ba-1564-4bc1-9fb5-ab991d1ce189",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "28b669b8-66f1-4c47-bb85-746913ebc8fc"
        },
        "item": {
          "id": "fe4f8c79-c9cf-411b-a287-baf80333075c",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "3af7f760-843a-455d-80b5-ccb02dabdf70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4698b3b8-640b-42cc-abeb-8d72361fc086",
        "cursor": {
          "ref": "e6a0c070-8464-4231-a673-c6d3744e8d3f",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "bffb4552-f2cc-4134-864b-4daf37cff99b"
        },
        "item": {
          "id": "4698b3b8-640b-42cc-abeb-8d72361fc086",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "cd98ca24-a326-4e69-8e9f-6591afe761d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37a28326-674a-48d7-8ba5-395ae02415ed",
        "cursor": {
          "ref": "7302ddc2-66f0-43b7-ba95-5d5ee081bbbf",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "a99ca0c6-1076-45eb-873b-f5afe87a086e"
        },
        "item": {
          "id": "37a28326-674a-48d7-8ba5-395ae02415ed",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "94295ffb-6c52-4915-aa2f-85987d9f2678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66eb3f06-023d-4602-8735-1782fa01eed7",
        "cursor": {
          "ref": "f84b6360-bd1d-4b09-adde-6a0cca0e7469",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "9c4eec6d-3a45-430e-bbf7-c5646c21128e"
        },
        "item": {
          "id": "66eb3f06-023d-4602-8735-1782fa01eed7",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "2929713b-0091-4c95-9d46-e9aba22411a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "995a0b12-50fb-4bba-8a30-9c913e0a2412",
        "cursor": {
          "ref": "fc1b9cdc-4866-4d04-ab73-8275712fed1c",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "3c574951-14c1-4630-9599-dc1cd7cd27e3"
        },
        "item": {
          "id": "995a0b12-50fb-4bba-8a30-9c913e0a2412",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "4e975ca0-be24-4a78-8b82-1789edc4252f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bde27a3-f3c6-4821-98a8-e609f199d5c6",
        "cursor": {
          "ref": "580f7ae3-7da5-4726-8d01-d228680cacc4",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "38130df4-cc25-4eff-9dc8-b71ece02e523"
        },
        "item": {
          "id": "7bde27a3-f3c6-4821-98a8-e609f199d5c6",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "8f09f797-b351-453b-bbe1-994082fe530c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f49b32c4-c075-4bc0-9fe2-a9cd51a427c2",
        "cursor": {
          "ref": "a896f70d-9a0f-43dc-b2bf-f497c40b4aa4",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "0fe30354-9433-448e-a8ab-3c4da2d2c65c"
        },
        "item": {
          "id": "f49b32c4-c075-4bc0-9fe2-a9cd51a427c2",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "711a3edd-90ed-4f56-ba8c-7d56899ec568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2054898-ed52-48ec-bce6-924143689abf",
        "cursor": {
          "ref": "7d6e3bd7-c4d1-471b-a4fe-8268b40b530a",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "bdb264e8-7b72-494a-9121-f1b5b1d815cb"
        },
        "item": {
          "id": "f2054898-ed52-48ec-bce6-924143689abf",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "10d0a1e2-f571-4dc4-9663-7b7cb3b773aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c7bc579-c4b4-48cc-b5f1-96bd89a752bd",
        "cursor": {
          "ref": "88772692-6782-43a8-833e-95d76bd6acd5",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "8e549b23-3773-42cc-bf3c-9c748b3ac27f"
        },
        "item": {
          "id": "0c7bc579-c4b4-48cc-b5f1-96bd89a752bd",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "2a298887-57cf-458e-9d0c-a9fe0bbaf234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff749903-34be-4e92-8a49-c50f54c3ea15",
        "cursor": {
          "ref": "9226b093-388f-4fcc-a194-b5b89819def1",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ca310fd0-9235-407b-b6c8-9e38b169430f"
        },
        "item": {
          "id": "ff749903-34be-4e92-8a49-c50f54c3ea15",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "2f3c1709-d8f2-4f30-be93-0eece2c5151f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8a01db9-0868-46e3-b309-a597c61eb649",
        "cursor": {
          "ref": "e942c86c-2f54-4769-857c-251d869f8154",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "2ca966b9-f654-4f7b-aca0-6b3a7de89dcb"
        },
        "item": {
          "id": "d8a01db9-0868-46e3-b309-a597c61eb649",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "cc7e3aa2-fb5a-4299-8ce2-165c44d966ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb5b883-e265-4eab-bb4e-c3714ab65042",
        "cursor": {
          "ref": "fa7ccc32-4f1f-49aa-9198-cd075ad79db3",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "9bbf6227-d314-4db1-b79c-f92e135dd77d"
        },
        "item": {
          "id": "9cb5b883-e265-4eab-bb4e-c3714ab65042",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "a5b201b7-4069-493e-aba9-725131ab4b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34ae8818-c822-45a3-99ee-5a4e96301106",
        "cursor": {
          "ref": "e893ea3c-77a1-403c-baab-52a12e8802ba",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "373285fd-2fe7-49c7-bb06-2320f0a24a2c"
        },
        "item": {
          "id": "34ae8818-c822-45a3-99ee-5a4e96301106",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "9008eae8-43f4-4164-a036-1ce0eb91aa37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d7eccb-f5be-4922-8d79-52e8d06cb1e9",
        "cursor": {
          "ref": "d0ecf5d4-3ce0-47f4-a43a-d6a56e9882a4",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "a4338e50-b8a0-43bf-b49c-c7dbae1ae044"
        },
        "item": {
          "id": "02d7eccb-f5be-4922-8d79-52e8d06cb1e9",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "abf7ce42-d17f-48e4-998c-90ef687319a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c04c3104-911f-4b42-9775-a76457d6f38f",
        "cursor": {
          "ref": "5b799fe2-2319-4308-9853-6722dd05536b",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "12edea40-b870-4301-9870-2091f0daa4a1"
        },
        "item": {
          "id": "c04c3104-911f-4b42-9775-a76457d6f38f",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e0a59899-d410-4a40-b050-4fa0e822cd01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcb2949b-e252-4314-bbd9-df8696bb4eba",
        "cursor": {
          "ref": "19468838-ea37-4a52-be01-3cad8acc9e99",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "d4751575-168c-4a24-8956-a060e257bbe3"
        },
        "item": {
          "id": "dcb2949b-e252-4314-bbd9-df8696bb4eba",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c9e1d0d9-851a-4a7e-a1a0-dda91e6bc29d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2172c88-6cba-4ac3-a6f2-ed63bd1f66c5",
        "cursor": {
          "ref": "48502470-5d0a-4052-85be-4525fb1f2af5",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "ef990d7e-89da-4e06-ac2b-11dc9474412b"
        },
        "item": {
          "id": "e2172c88-6cba-4ac3-a6f2-ed63bd1f66c5",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "64d946d7-5ae8-48c0-9fcf-5d5b4bcda238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6938b9e6-5fbc-445a-be21-e79c0c90d690",
        "cursor": {
          "ref": "37411985-aec7-46d0-889f-d07e02b2fbec",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "0453e9e1-7073-49c0-ba12-d6934db92eba"
        },
        "item": {
          "id": "6938b9e6-5fbc-445a-be21-e79c0c90d690",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "aa3aa9f5-d002-426c-869d-be0f41e051dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7188b277-964c-4d03-b6cb-4c3a90bf68cf",
        "cursor": {
          "ref": "0e9478c5-0dcd-4c34-b520-d812c34ab80c",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "5d1e8ed8-c564-4340-b428-b070f4e3295d"
        },
        "item": {
          "id": "7188b277-964c-4d03-b6cb-4c3a90bf68cf",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f258e136-8dd2-41ce-aa84-7f2a31be7ed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0c8e926-78fc-41f6-8026-d6621bec6427",
        "cursor": {
          "ref": "d2390e35-023b-4dac-9123-1d42e2b60409",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "081252d4-d273-4ffe-a353-5512511f9f79"
        },
        "item": {
          "id": "d0c8e926-78fc-41f6-8026-d6621bec6427",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "2c980097-eaa0-4e5f-bfdc-07d5fed942f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23281338-71cd-4761-8b06-01613c2c8c15",
        "cursor": {
          "ref": "d92938ae-fdde-438a-9844-02cd015f62b6",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "a245ae2e-e95f-4af8-8875-4eee42ca676f"
        },
        "item": {
          "id": "23281338-71cd-4761-8b06-01613c2c8c15",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "b73efdd6-4426-40e9-b896-4bf77b1249b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aba76cee-c102-43c5-956d-4bafe9be8d1e",
        "cursor": {
          "ref": "27dc8df2-5499-4872-9297-1e9b87dfa23e",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "27315cc9-4782-4577-83fe-4f58a5401d70"
        },
        "item": {
          "id": "aba76cee-c102-43c5-956d-4bafe9be8d1e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "40de5934-1488-4def-a497-072c3d8d2375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30b9e109-3d98-42bd-9a10-15c0bfe6cb3f",
        "cursor": {
          "ref": "b7ef6ace-37d2-4cbe-a30e-8bbbc3e62b2e",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "8255fe86-642e-4966-97aa-4b1e6f25581d"
        },
        "item": {
          "id": "30b9e109-3d98-42bd-9a10-15c0bfe6cb3f",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "f3886380-6695-483d-acee-ed9d9702618b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20b11e98-7f6c-49f9-8a4e-94746e623a70",
        "cursor": {
          "ref": "cccf45ae-2655-4812-a8fd-e42f6ac49d56",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f6212a29-426a-4378-925c-a1fbece0d8c0"
        },
        "item": {
          "id": "20b11e98-7f6c-49f9-8a4e-94746e623a70",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "56179b08-3957-4072-b3d4-24b41401c587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11615f1a-78eb-4ea0-a39e-a9bdc45deac8",
        "cursor": {
          "ref": "4454badf-00e8-4f20-b8a5-005d387334b5",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "b4f012b8-6a58-41c6-8538-155ee4d6f6f9"
        },
        "item": {
          "id": "11615f1a-78eb-4ea0-a39e-a9bdc45deac8",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "1d927dcc-36a5-4d15-befd-0feb50f14dda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b8cf080-0736-4398-97dd-c11246505821",
        "cursor": {
          "ref": "6296e673-49aa-4806-ab03-158187f1357a",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "22cc97d7-086c-40dd-bdf6-7e48126c49c0"
        },
        "item": {
          "id": "9b8cf080-0736-4398-97dd-c11246505821",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1af0694f-5ba4-47dd-b5ab-f1888af9abeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03428069-ded8-4a61-9da4-b37469d85c99",
        "cursor": {
          "ref": "d261f9bd-086b-48a4-a209-673c3926554f",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "bb0ec20f-166d-4d6f-8f08-a65fc111cc8a"
        },
        "item": {
          "id": "03428069-ded8-4a61-9da4-b37469d85c99",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "969f5df9-2b32-4600-ac36-abdfe4143142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f53902a2-61c1-4518-b58b-6f56384dcaba",
        "cursor": {
          "ref": "8799ebc6-c749-4f53-ae26-534ee01d865e",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "88365b2d-abf2-485c-8e8c-dbf8d7202345"
        },
        "item": {
          "id": "f53902a2-61c1-4518-b58b-6f56384dcaba",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a4982248-c7ac-4846-a3d2-028945b8b845",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "3445194c-71ae-4af4-ac30-a785e9bbdb68",
        "cursor": {
          "ref": "13e902fa-5814-4e3f-ae29-83f477b476f4",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "18aca9af-eca6-4400-9525-4617a8928d44"
        },
        "item": {
          "id": "3445194c-71ae-4af4-ac30-a785e9bbdb68",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "0eb30b58-f979-4098-9e54-e845ed534a97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0317339-6f44-44ca-b73d-3869956a4888",
        "cursor": {
          "ref": "78b62745-0d4b-4650-9a63-79a1a7195137",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "1c3ae2a6-0cfa-44e4-90be-44d0de3cb6c6"
        },
        "item": {
          "id": "e0317339-6f44-44ca-b73d-3869956a4888",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ac1c88a5-d3ce-42d1-9249-8d00de9c3a79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d79a16-f333-42ae-986b-52918bcc27fb",
        "cursor": {
          "ref": "b3361dbf-f288-41cd-af14-2438354ae73b",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "a3de1a44-9766-43d1-8c28-48cd69bc550c"
        },
        "item": {
          "id": "74d79a16-f333-42ae-986b-52918bcc27fb",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "47bb57d8-4ed1-4ea4-891c-c32ba5adc6c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b70a72-efc3-44fc-a856-8ea649dbc6f6",
        "cursor": {
          "ref": "2b424c7e-aeca-44f0-ac31-07ec3aa8ec4d",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "0a2bba82-ac24-4713-b23b-ba783da1ddfe"
        },
        "item": {
          "id": "12b70a72-efc3-44fc-a856-8ea649dbc6f6",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c73b3936-366e-4241-a1d3-d54f1ac1d1af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3b87b8e-56cf-4734-b014-bdd01dab498c",
        "cursor": {
          "ref": "5fcbfc9f-a9ae-4fd3-8c67-2ce90778f51b",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a6c66b8c-0bdb-4c47-8273-61f2b5a92262"
        },
        "item": {
          "id": "b3b87b8e-56cf-4734-b014-bdd01dab498c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "ef0ce3b3-9839-41ce-b15f-791087d36242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b31cedd-e2d9-4a73-8d2d-4dee65f1b1d7",
        "cursor": {
          "ref": "a573d31f-2751-452d-ab09-5a0bf1433faa",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "e8aafc6c-4d5f-4316-b10f-18ed969ab263"
        },
        "item": {
          "id": "7b31cedd-e2d9-4a73-8d2d-4dee65f1b1d7",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "6a22832f-1c2b-4b9f-aab9-c18122e2dec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0461b9a3-269c-4c98-8292-47898387f1f8",
        "cursor": {
          "ref": "fb099df8-54b7-4e40-b6c8-08ce76886b46",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "d94db424-c4ad-4e32-ae04-746fb822f195"
        },
        "item": {
          "id": "0461b9a3-269c-4c98-8292-47898387f1f8",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ef82095c-85bc-4573-91ad-fbd457463f22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f98d1ee-a587-4d2d-9dfc-47d846c0a4a2",
        "cursor": {
          "ref": "d49038ec-d78d-4cf8-afef-40401be00ec1",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "1687e667-2b7c-4afa-a08e-e2e4c9f74911"
        },
        "item": {
          "id": "7f98d1ee-a587-4d2d-9dfc-47d846c0a4a2",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f4832b92-9843-4b95-91ac-1906bca1c5cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d026697-a501-4e08-a076-8f5da8398521",
        "cursor": {
          "ref": "fe795b36-c716-4214-b17c-d5ed9e7622c7",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "4a639e98-3ef2-470f-8c4d-951c6a0ab605"
        },
        "item": {
          "id": "6d026697-a501-4e08-a076-8f5da8398521",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b54c0ea2-9d1e-4d00-85ef-1b7ed43e3182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e14a7e7c-2877-44ff-b74e-8931c7bfd82c",
        "cursor": {
          "ref": "afd23ae5-bfe5-4414-8323-78806a2fa4c0",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "9a166553-2f9c-4326-9299-60554a56603a"
        },
        "item": {
          "id": "e14a7e7c-2877-44ff-b74e-8931c7bfd82c",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "74ae9ad9-e157-4c55-91d2-55b690ef8c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b342e6-69ef-4814-88be-e907ef87895f",
        "cursor": {
          "ref": "cce15486-4a0d-49c9-a10b-34930eaa98cb",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "dd7e1ec8-4346-42c8-a8b8-cd36f4870e84"
        },
        "item": {
          "id": "a8b342e6-69ef-4814-88be-e907ef87895f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "17f415d7-b69f-4cf4-9682-8591c75b10f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d5c975-e7b6-45af-af67-d93c647b75be",
        "cursor": {
          "ref": "b5c1cfb4-55d2-4782-8036-16120f995f79",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "3e4e660e-fd70-4e64-9d48-ede6c2e3ff00"
        },
        "item": {
          "id": "83d5c975-e7b6-45af-af67-d93c647b75be",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "6bd5adf6-e8ba-41bf-acc7-e07dc30fdb9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f73a5d79-0aa1-4ed7-97cb-c03e62e10dc8",
        "cursor": {
          "ref": "65f7a1ce-66e3-4319-b8b2-ed1967ceb1c0",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c9cfd23e-b779-4f1f-be71-36ad9d2be76c"
        },
        "item": {
          "id": "f73a5d79-0aa1-4ed7-97cb-c03e62e10dc8",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e314d854-1537-4e3b-97d6-d3623aed613b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb4d85d3-e9bd-495d-aa3f-aafed165f923",
        "cursor": {
          "ref": "981d55e9-7c08-48ab-9a90-42f3a267c21b",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "fb8b11f3-0ce5-4ded-8952-06d44e9380a2"
        },
        "item": {
          "id": "bb4d85d3-e9bd-495d-aa3f-aafed165f923",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "c5aa82d4-43c2-4966-aec6-806f92608119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18568804-007e-48f4-9eca-fb746dff68bb",
        "cursor": {
          "ref": "9e0326e7-833a-4ac3-b4ad-c2ecba442b7f",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "6c70ca76-a86d-4531-820f-72cbd3c3851d"
        },
        "item": {
          "id": "18568804-007e-48f4-9eca-fb746dff68bb",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "0fea3a00-2c09-4baf-a979-9990e3221bb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eead170-c819-42f0-bfd7-a9850e7c5eb5",
        "cursor": {
          "ref": "123c79a5-1cda-42c4-b380-04c2fb53243e",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "fd3eed4d-55d4-4385-8bf2-2ec73e2854f3"
        },
        "item": {
          "id": "0eead170-c819-42f0-bfd7-a9850e7c5eb5",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "d062d9e5-3acd-47b5-8d7c-bce37d0d5482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40020b3a-28f7-4808-b141-4c5dc32a3e55",
        "cursor": {
          "ref": "f38c8251-0e8b-420e-944d-a0f4ee122f6c",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5ef0b84a-c766-4e4e-a81b-f4a1a932dbce"
        },
        "item": {
          "id": "40020b3a-28f7-4808-b141-4c5dc32a3e55",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "17e2c6be-37dc-4629-9e18-2ede73c65d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a55f591-2337-4529-834e-9a40dcfe8ae0",
        "cursor": {
          "ref": "7ac73399-ea9e-434e-aa77-ee991659301d",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "94e29c3b-460f-4d29-bd4a-98ff910b0463"
        },
        "item": {
          "id": "1a55f591-2337-4529-834e-9a40dcfe8ae0",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d3e1c928-664b-4872-b954-f7f1c3aedaa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d331750-3a5a-41aa-968d-0a9f95f50749",
        "cursor": {
          "ref": "47904ffe-54d1-4352-94e3-97dafbef4ee1",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "86966481-0998-4991-8d6c-c55d02ecda7d"
        },
        "item": {
          "id": "1d331750-3a5a-41aa-968d-0a9f95f50749",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "78b3eb04-2229-415c-aae5-acc9fb03ce64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "128728d5-38de-46eb-a16a-1458c53827a9",
        "cursor": {
          "ref": "dd047de1-df02-4e55-a022-b1ff63ae2ae1",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d8145130-0a0f-4520-b396-42a48547020d"
        },
        "item": {
          "id": "128728d5-38de-46eb-a16a-1458c53827a9",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "90630557-14de-4a0b-8658-1a9fcf507237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "970571df-c620-4cfd-a180-797051ea0bcd",
        "cursor": {
          "ref": "a13b46ca-16f2-4b60-90cd-ebd27732721c",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "3734c33c-3b7f-419d-88ab-56aa80a90d4c"
        },
        "item": {
          "id": "970571df-c620-4cfd-a180-797051ea0bcd",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3a5fc854-b276-489e-9dcd-86a794b5153f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "018fc975-5670-4fa3-81c5-ff58db122394",
        "cursor": {
          "ref": "c44b9a43-2028-4a13-af75-d44820a57464",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "c1aa5066-b2f5-44e0-bbde-b3ab8a47c389"
        },
        "item": {
          "id": "018fc975-5670-4fa3-81c5-ff58db122394",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d5c92fc8-be5a-4075-93d2-625fcfd2a6a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d289a340-0858-43cc-8193-b8d9f41f902c",
        "cursor": {
          "ref": "1919144a-c110-420c-a245-4876c0a6cc6d",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "51d4fe29-174d-489d-bc28-b8f99ea8bc03"
        },
        "item": {
          "id": "d289a340-0858-43cc-8193-b8d9f41f902c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "67eef030-bc25-4088-95b7-85325c5117f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "385b816a-6907-4044-89dc-81ad397e10a3",
        "cursor": {
          "ref": "eaf9ea4c-0739-4d5d-965a-a1643710b7fc",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "2d35a623-247c-444e-914a-df330bd79e02"
        },
        "item": {
          "id": "385b816a-6907-4044-89dc-81ad397e10a3",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "2e7cd015-03b9-4bb8-aae5-65cb32af1005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "664924eb-30be-4c5b-9fe6-6ee013a1dabd",
        "cursor": {
          "ref": "7b16393d-bd6f-4728-a01f-4b4d15ab220b",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "23684284-0fcc-4bd8-b6e8-6f3484d66bf7"
        },
        "item": {
          "id": "664924eb-30be-4c5b-9fe6-6ee013a1dabd",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "fe19b7ba-f939-4b99-b94e-e1a4c478da9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efdcf865-28b6-48eb-9114-4ee67ea123b7",
        "cursor": {
          "ref": "7b81b5aa-8387-42ef-a1cc-b495ed6ca907",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "b322e3c0-e698-4d90-b645-4932b171a85f"
        },
        "item": {
          "id": "efdcf865-28b6-48eb-9114-4ee67ea123b7",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "24d293bf-cf3c-4228-94a7-325ee8d8ca37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc8f38e7-d649-42cc-8ab9-11cc3db9d11f",
        "cursor": {
          "ref": "0e86c85f-14da-4123-8adf-edc3c65cf692",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "7f0c4cc5-b323-4412-85df-3894017d1824"
        },
        "item": {
          "id": "cc8f38e7-d649-42cc-8ab9-11cc3db9d11f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "ac5a60ab-97fe-4849-abc3-73e526c1e01f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c4f6ae6-4165-4088-a3ef-d96f355d9ee8",
        "cursor": {
          "ref": "0eeec7d4-8634-4919-a8bb-4815d135be9a",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "fd612c53-3c5b-41ed-816d-5102338bb785"
        },
        "item": {
          "id": "3c4f6ae6-4165-4088-a3ef-d96f355d9ee8",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "747abfc3-f099-41b6-a10c-a82e951bf024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03617108-5b50-4b95-8907-23004a358d78",
        "cursor": {
          "ref": "02fc0aa2-8113-41ea-9b03-d701151f13ac",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "80a2db78-3772-4090-a2ca-47419438d564"
        },
        "item": {
          "id": "03617108-5b50-4b95-8907-23004a358d78",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "ae822c26-257b-429c-b032-2f5e10b82c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d275d5-6ef0-429d-8d8b-9e34c9bfbfe0",
        "cursor": {
          "ref": "15cb2507-11cf-4eda-9d92-c0bbcc076cfe",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "253f0273-5ff1-4c19-8682-8ca52ee98d9d"
        },
        "item": {
          "id": "a2d275d5-6ef0-429d-8d8b-9e34c9bfbfe0",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "b16b6995-8a9d-402a-93c3-2f865fe525fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5509102c-db06-4583-8118-95380f9228f5",
        "cursor": {
          "ref": "44e47a7f-f7bb-48dd-aa9c-11e9b68ea846",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "d43de71d-1ab6-49ce-b183-6fbf5c6b33b1"
        },
        "item": {
          "id": "5509102c-db06-4583-8118-95380f9228f5",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "3ad6d3d3-fd90-493b-8272-8481df409894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd3ad08c-3cab-4e80-8c5f-a55319ea5f39",
        "cursor": {
          "ref": "f4e55d28-6ea1-4fc3-928a-4118422d4789",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "9a9d7ced-d410-4bdd-af48-2411043d0450"
        },
        "item": {
          "id": "bd3ad08c-3cab-4e80-8c5f-a55319ea5f39",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e2605681-2809-4551-8bc6-3711195ab3b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "834e3e19-73a1-4a75-8a2f-a16e55cefad5",
        "cursor": {
          "ref": "09a82a25-fa4b-4bbd-a94a-ad87e16116da",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "1ee4dc8a-838a-4b76-9ccd-3e87dd52097a"
        },
        "item": {
          "id": "834e3e19-73a1-4a75-8a2f-a16e55cefad5",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "dd8dfa5e-ad02-43df-adc9-18677239959a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "409d8328-ff03-438c-8bc2-81cbe9e7c24e",
        "cursor": {
          "ref": "f6e08441-a4bc-465c-9d36-d76c30ef39de",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "943fb68a-4095-4556-a269-9898905ecc15"
        },
        "item": {
          "id": "409d8328-ff03-438c-8bc2-81cbe9e7c24e",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "7db50e1c-964a-4499-bbb1-c3bd9167fbd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb994ac-5af8-4515-91c8-4af338fb642f",
        "cursor": {
          "ref": "6f62aec3-6710-4b7c-b4cf-11c5980121f0",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "129a3208-de5d-46ff-b27c-477cdacb1d91"
        },
        "item": {
          "id": "ccb994ac-5af8-4515-91c8-4af338fb642f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "48659f4c-e008-4907-ba84-cca447188deb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7f12ee4-e938-41a9-b14b-18c987dbc178",
        "cursor": {
          "ref": "7cc44fff-15c0-4f8b-891d-26b681058cae",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "335a746c-08d1-48fd-8891-610d07fb02ba"
        },
        "item": {
          "id": "e7f12ee4-e938-41a9-b14b-18c987dbc178",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "9546b583-4e67-4e2f-aec4-a8d1adf16223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09180b42-9778-4f38-93a9-9bf0edf7f3b2",
        "cursor": {
          "ref": "6a4ea24e-7cab-4d78-82e5-c627118300b8",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "b5beb761-c39b-4a35-85e5-370fa3ff582b"
        },
        "item": {
          "id": "09180b42-9778-4f38-93a9-9bf0edf7f3b2",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "c77d04f0-29e8-4b12-a997-6484f455e393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "930a41c7-aec8-4a15-b7a4-3a55261bddb3",
        "cursor": {
          "ref": "27c9fcf9-c710-49b3-bf7e-51dd9f378123",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "7479025d-606c-40e0-be85-bbec3eeb1ea4"
        },
        "item": {
          "id": "930a41c7-aec8-4a15-b7a4-3a55261bddb3",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c7953b5b-408f-4b8c-b5e1-405399b2bf45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9082b8e0-e3c1-4bd5-a6a8-41be48ed0e77",
        "cursor": {
          "ref": "5fffa29c-0876-45f6-92d1-d9f6d0f7b7f1",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "3113d2c8-04d3-4aa3-9a8c-d2c5c99af782"
        },
        "item": {
          "id": "9082b8e0-e3c1-4bd5-a6a8-41be48ed0e77",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e6ae162b-83cf-474e-8009-a5436f72fcc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "341d4844-0fa6-445f-8710-d6b642e332e0",
        "cursor": {
          "ref": "5bcc8b3a-6e20-4fb0-a606-fb9554ceb978",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "058b96aa-cb47-42b9-b8c3-ca39d9d57674"
        },
        "item": {
          "id": "341d4844-0fa6-445f-8710-d6b642e332e0",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "967431fe-4083-4c02-8611-eb03f75aee4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afbedc7a-5b00-4ec6-a14e-d97dc0f629ab",
        "cursor": {
          "ref": "ee8fa0f3-d714-4e88-9d21-9fa94f7b13fa",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "a88e28ed-0d14-4ee5-aab3-aec159097a05"
        },
        "item": {
          "id": "afbedc7a-5b00-4ec6-a14e-d97dc0f629ab",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "0921bab3-07b2-4057-a301-de7cbd20c8e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b88d384d-f51a-45ca-a338-a94c9ea9bee3",
        "cursor": {
          "ref": "604805dd-3c18-4712-aa8b-2ed3961618bf",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "091de1e9-5af7-48ce-995a-6dc414397916"
        },
        "item": {
          "id": "b88d384d-f51a-45ca-a338-a94c9ea9bee3",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "99b393b9-3558-4b18-a4b3-2f8f3bcc5304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e8ed6f3-bcd7-4e55-af38-947b2a86329b",
        "cursor": {
          "ref": "9a444e68-c0b1-4e89-b355-d334c1de1c36",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "2bd644ee-947a-466c-ac86-01ed79d8f904"
        },
        "item": {
          "id": "8e8ed6f3-bcd7-4e55-af38-947b2a86329b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "404d2499-7f52-4287-a05a-a0e701dbf1d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d0ca1cc-e398-476b-96a1-03faf87e1da9",
        "cursor": {
          "ref": "b3010d2a-857b-4730-b55d-be727bc51303",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "32c61c04-139a-4069-b551-35d9c15702af"
        },
        "item": {
          "id": "8d0ca1cc-e398-476b-96a1-03faf87e1da9",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "7af4c487-15b3-4e4e-a9e9-efe56d7addc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e8bb47-ee3d-46b3-b155-f7d8fbe71e57",
        "cursor": {
          "ref": "bb6b86a8-8142-4744-9783-3d9fffc9a79d",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "a99f5764-666d-41fb-a89f-83b2f21c9ea0"
        },
        "item": {
          "id": "06e8bb47-ee3d-46b3-b155-f7d8fbe71e57",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "644d6efa-7e54-4541-ae86-33f7003148d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f81679b1-2f03-40a5-998c-d22592363dd8",
        "cursor": {
          "ref": "6e1b7d0a-ac15-496d-9e8f-935a33e1cc15",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "af01e5af-e146-49ae-9f1c-ff66c62fdc3a"
        },
        "item": {
          "id": "f81679b1-2f03-40a5-998c-d22592363dd8",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "43ed0971-5fa0-4d27-8220-cec5c7c3d4f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89fd7579-22c4-401d-9902-f1844492124d",
        "cursor": {
          "ref": "325bfa48-d14d-4f7a-aef9-da1bd0e757fb",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "97d57d9d-36db-407e-b737-e0f35d5bc788"
        },
        "item": {
          "id": "89fd7579-22c4-401d-9902-f1844492124d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e0059fb8-b72a-4c9a-a0a3-f1f50c4a447b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19acbbca-da78-45be-9f3e-fd8b0c2dda0c",
        "cursor": {
          "ref": "39eaf5d3-d93c-48e8-baf9-14f3bce802df",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "b36009b1-5e9f-43e8-b66d-c765cf3dee3c"
        },
        "item": {
          "id": "19acbbca-da78-45be-9f3e-fd8b0c2dda0c",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "deb89710-1b95-435d-9cf8-2963f46213fc",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "feef694f-78e4-487b-a4c8-8f8c03937ee3",
        "cursor": {
          "ref": "a8de2aff-b511-4109-9c6f-465be35f6762",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "113f5fc3-cebd-499f-b188-e4380e5707d0"
        },
        "item": {
          "id": "feef694f-78e4-487b-a4c8-8f8c03937ee3",
          "name": "credentials_verify"
        },
        "response": {
          "id": "669e7890-e529-43d3-80dd-9e509511422e",
          "status": "OK",
          "code": 200,
          "responseTime": 17,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "16dc8a70-4f7f-4a2c-a549-0ffdab8ef677",
        "cursor": {
          "ref": "e46642cd-b126-424e-be73-0f28d1b03548",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "2f5a436a-46ce-42a5-9f7a-bc35d709f6c4"
        },
        "item": {
          "id": "16dc8a70-4f7f-4a2c-a549-0ffdab8ef677",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "fb7189e6-ff74-48cd-a3dc-f84f084ae7e8",
          "status": "OK",
          "code": 200,
          "responseTime": 16,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3859ecff-c7f1-434f-9286-74027b4e8a92",
        "cursor": {
          "ref": "e75b09f3-5d01-4452-9529-81eff692b7a5",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "fac3c18a-8645-415a-871f-124b499be9d0"
        },
        "item": {
          "id": "3859ecff-c7f1-434f-9286-74027b4e8a92",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fc37427d-09e8-4769-9871-6220440cef74",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3859ecff-c7f1-434f-9286-74027b4e8a92",
        "cursor": {
          "ref": "e75b09f3-5d01-4452-9529-81eff692b7a5",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "fac3c18a-8645-415a-871f-124b499be9d0"
        },
        "item": {
          "id": "3859ecff-c7f1-434f-9286-74027b4e8a92",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fc37427d-09e8-4769-9871-6220440cef74",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c08bf75-cd6b-432b-81ce-a9b16a019b2b",
        "cursor": {
          "ref": "77c706ff-2cb9-499d-af78-7345c0af20f9",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "a18b2ff6-6826-4236-825c-cb5feaa46f85"
        },
        "item": {
          "id": "5c08bf75-cd6b-432b-81ce-a9b16a019b2b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ef6b536d-ab0f-40cd-9ea4-93426e7c0d40",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6159f9c-13e0-4ab1-ae99-c7234111bd0d",
        "cursor": {
          "ref": "39c4dc42-9a6d-487f-85bf-0c011658a992",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "3f58483a-6c0b-4844-b9dd-a95c5a9070df"
        },
        "item": {
          "id": "e6159f9c-13e0-4ab1-ae99-c7234111bd0d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a0f0ea43-3fe8-4fc6-82a7-6456aff4c2c0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}