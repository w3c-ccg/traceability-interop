{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2ab95584-7b3b-4e05-8020-58cfbd7fc17f",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c700a096-739b-4cff-a552-1fda510ca8be",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9ceb2b5c-b91e-4e4d-843f-e4d5fc7a5bfd",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7b80545e-4839-431a-8c54-e3ed9296003e"
                }
              }
            ]
          },
          {
            "id": "b0af03aa-11b0-4589-ab2c-7a33d4246d0d",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "33b58f32-da51-4a8c-abfc-113b68e9d87a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d104b6f8-135e-4c49-8e5e-90e7a7c585e6"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "d22097c4-8120-4b82-a2ef-e2e7c92f28c4",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "17738db5-e67c-4727-994f-1164b6ed12cc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "941c6d7f-4b84-4ce5-b01c-89e95f6bfdb1",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5afeda31-3d6f-490b-99c5-eae19922ed74",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a66068ee-5d01-49b6-b786-b23313a21036"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dc1232b6-15e3-4b00-84fb-9012e5964db9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6c2a9bbe-bc7e-498d-ba89-19d4f55eea57"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6fb5b03e-dde1-443f-8dee-a9e346b65ea7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "24c60175-90ad-496b-a089-16d97b167694"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d71909fe-ea3e-45f8-bc65-2916e75143a5",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "3d2a8707-34d8-4eb6-8af8-6c85c9af8a16"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "975e6dcd-47a5-4c16-a0dd-2a808085f6cb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "22095d16-7d24-48fb-8faf-132ec4be1386"
            }
          }
        ]
      },
      {
        "id": "808e80b8-278d-4b85-84f7-89fbb490a7fd",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "b48511dc-fbf3-4b76-9486-716781cf3e5d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "18399052-66bb-4114-855e-128f7c2aa374",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9f42e906-6fae-43a2-a9ce-610a47ac558d",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9778ee4-d428-4d7a-bd86-be2c53ad1114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3e017064-6e86-4e43-b549-c6cadd516734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f688a205-5c9f-49ec-a65d-994d4d8da4d2",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c97c4f2-c71e-4fec-8004-90ce8dddb41b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fbd8c592-3472-46e8-b8b8-c2814f9f7170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0761bc51-ff2d-4ae1-83a4-610608402afb",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "094f0e72-20bf-497e-a962-73826f14dee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d4b37757-0085-40c5-b9ff-beb6d3cc4464"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3df759e2-3dfc-432c-b107-550657a6953c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "33cb860e-cb3e-4505-8d00-5fc811e386f7",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98c250b3-8d14-4d26-8e77-8a90995ed749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6085169b-bc14-4c23-8877-d28d8418801e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f13544ab-0776-4e2a-9166-aea6f7fab30c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd677c9c-939e-47e5-8326-3a78b9e074c3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "50756619-76a2-4d0c-9d60-788541c8500c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "336fdafd-4778-43ca-8cea-333796a8c893",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b3f74a72-44f4-48e6-bae8-dc271a24e6b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "199186cb-f1da-4256-8c55-102c9a71463e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6f57f4b8-b824-43da-98b5-5815545da06f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "301d9b64-4eba-4f46-8100-aa1826f42cbc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "376fc412-5929-4bbd-94b3-d10a240f021f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c15e7ec9-f074-4a1e-8340-30220eb9dfed"
            }
          }
        ]
      },
      {
        "id": "9f48cdd9-01ad-4e03-bde3-ead6ad741b39",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "1b480c37-7047-432d-9670-2bb4865b7d6f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fcaf4b73-ae9e-47cb-b618-25f9dc5e5bd9",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "53481a9e-7a5e-4cd7-ac3b-d1105e54d5d2",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c34fb592-4230-42aa-9ffc-47ef7917bab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae9d9c90-8faa-4863-a81e-dafeb72f98b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1710166-4b49-411b-9a1c-a52e15a9a300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d82a5ccc-955b-469f-adcb-5c7d77c67f1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd56c87-08f3-476c-b050-f04ac1da9296",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7370c085-5f4c-4c47-a547-1fe41d4d311c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67c81fa8-b755-4efb-9740-a43bbab94f1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3842a66-d31c-4380-b09a-c191a612c1e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16928bab-24eb-472a-ad28-3645369c305d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c9d592-c2d9-48ca-831a-1175b302b292",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a45e15a-9cf5-49fa-a453-f13a94755300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d82e46bd-809f-466b-a656-856cdaa61806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50b27c05-56bf-455e-972d-69df2be720bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c32120ec-e861-46a6-bb64-c7c20cf76590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f994e1af-094f-4b2f-b6e5-d56d2594bc97",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d716d11-4c6b-4091-9c24-c6d673235fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2db1fd9e-9552-4c42-93ed-b7b36c76785b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00df074e-38e1-4542-918a-cbc43cccf026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "58ea0be9-305d-444b-9ef2-eb7dc06df5ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7e74eb1-96f4-41aa-bc33-1f630e5e704a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c49e751-813f-4e2a-a88a-cdb73a439de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd348b81-46b1-43a7-baa9-e2217b4c99c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad36bdc-465a-4a80-ad97-3d154ada462a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ff09208-f82e-4092-8c11-28643fae7f6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b03a9927-3cbe-49ac-ac38-43c74131eede",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "566d41b7-0e49-456e-9df2-3cfbb9465820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5990dd34-f5ee-464f-aec8-bebdaa4fe288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "990c1bd4-6956-49ac-b9c4-f70d48667269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8514b38a-2f04-42e5-8f99-e5e46939ff4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f9c03ce-05fb-4a5b-8d2a-46a4206753cc",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4103546a-4346-4c6e-af15-6fa50f68c4c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dc2c2d5-ef80-493f-ab84-20a62fa9cf50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2add66ab-72d7-4f9e-8cb3-d12305ba8c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb4136ef-8138-4f7b-b666-7459b8b9e271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7aca3fd-7e72-442b-922b-f33d1d11dbfd",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "591d5d14-3612-4925-a3c6-7ee67478b0d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71d3e4d7-a352-4299-a198-112263017108"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c2009bc-7c3a-4448-95bc-50d3b35e7f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c53f4acd-ab49-459e-824b-694b83b841f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a04f4d-98b9-4169-9981-1d3129561d57",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e8037d4-5962-4e4b-a4a7-e2aa92cec2a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b3b4491-3ea6-41db-85d3-d0dd2005345e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d1c7c09-d686-464c-91e0-f4c9c94a33c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bac4cb40-a0a0-4c1b-907e-3b2e64448b68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62aeefb3-6596-418b-89db-cc93656cb97d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3c3db09-bde5-43db-bdf9-2c78249ce49d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8665b97e-9b09-4695-ad78-c20b51af2e74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9504f64a-0672-450c-9a22-a9adc13e05fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c533ce0a-4be3-422f-8ce5-4f8dd8b98000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec9d1397-2724-40da-89e8-b82c7f7f6ec9",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "802e816f-3fb8-4b06-a82c-b087973843a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c89a96a-d08a-43f0-8064-890a1a1a3472"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9fed446-c78b-4357-b457-0f7e02eabb6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2f77ac2-ae3f-42a9-addf-94736eb884c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a8d5706-4374-4870-b43d-ee484ad83966",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "167e1479-6260-45f7-97b2-5c1c6e5aba5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bfd17e9-5f83-4b77-9507-e3a47080c919"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55f23373-ebfb-44fa-b345-4c27f97487f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31bd29df-e665-4474-9342-236919d3aa0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a5ba02b-7110-4db1-954e-ceb13822860b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d27c643a-de3c-462a-a1c5-43be2033fd52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0da926cc-bdd0-4f40-9c07-fb53a6e46797"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af28e30-2c13-4f81-bd98-fbea5f7e5923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d1306bf-8373-42d1-9255-0cd6090770c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "144e9bfa-e64c-4aac-9c2e-2d556d433e97",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09e3c8c8-064b-4006-a2a3-7b072fa1a6b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ada1240-3e52-4dc9-8e9c-119170f849b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a1b5d26-7845-4879-a04f-2996b48b405b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f9a10099-fc8b-44e9-be3a-e0430e8440af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11053993-7d52-4750-9f9d-72cb98694f25",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7b3c800-19ac-4ee4-96e8-bfcac8bd7acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfdd82b6-a509-489f-9ae8-a59acfe71aa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af643cbd-2b83-401e-b96a-6302fa2be9c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2d935e6-c8a0-4835-ab49-67af9fa6fdd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff5790c4-38e1-44ce-86c0-02d80c764b29",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bfcbab9-75b3-4109-aff6-ccc2f1763d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7f13d73-b1b7-41f0-a348-4d7ba7ca8cd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59faf51c-e99e-460a-a6c1-e0ea4cb18fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c2c22fb4-bab4-4d9f-adfc-4b2249cdfd96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "138a4938-26e4-40ea-84e9-f052fe034110",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ff2e1a-b756-4b5b-9721-4a861c8510d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24190521-eae7-4528-ab0c-1ada55c1e14d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f321db-08cf-46e8-a468-d9a3600df93d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7371d2db-9dcd-4a9a-bf58-7039fa0026dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "025387c0-d5fd-4e51-a3da-dfbcab925f70",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25efaa43-9e6f-4765-891b-1fd2481c75c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdbd5488-85df-4e97-953c-45983fb3e3b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0dd669e-d147-4a8d-9c72-0dc30e2b1f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ee92e04-4511-47d1-bb85-9cf59068df3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "945c7cb0-9fe2-45e5-aafe-5f7f9b3f7e31",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cca41dde-01fe-4db1-92ca-a8c8b66aeaec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70c7941a-f725-45fa-8e0c-60c345f75fd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4869ac6b-ac31-4b53-aaf8-25f306de65a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ce04560-4fc3-446b-ba2a-a085b7c48d52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ef04844-dd31-4bd8-82fe-bc9bb40f5add",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce856e89-02fb-402e-97cf-f2308158c565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "934345c3-0263-486c-95a5-39c854eaac7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1c2dbf2-6f28-460c-9172-39b40760c147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e89d459-b1a7-4dc0-abcd-2dd3f910e3d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f569fa6-3e74-4047-9e3c-871826198646",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41fed60d-d41d-4d6a-9a3f-41cb7d00d788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73d3688a-5098-44d1-9215-71f9e940ebed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd22e5dc-84f5-4193-bf30-6a88a232dbae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "54e21855-cee0-4062-87d9-a896416fb301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3fc95f4-e0be-45e7-9c23-243cfecd9cb9",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f489f95b-6224-4af6-80a6-0ddfee9e7aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcd22a90-3171-4896-88de-a3e6aba8b850"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09ba24c3-ebfe-418a-9c06-260425483c03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e94badd-8f54-465c-a6d2-6874360dd79c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb0f17f-1131-4d4b-90eb-57b9209189a9",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed0a34b5-5f43-42e8-850f-8a3747bf089c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "186a3ef4-dba8-4eaa-8312-e8642ebcb52b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e8e404-f100-457a-8924-e164d3d3b580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "002dcc8b-a80c-4f5d-9ce3-ae9699056fb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85f69fda-bcc1-4bcd-8830-735dbf1b8179",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ce2047-d9de-480d-8d77-d1770167a008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e02554ab-b468-4bde-b3a8-eaef09602584"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05653bb3-0fa6-4c74-8716-3c749a2f0d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "96449423-32db-4610-86e4-b168a939795f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e81fb55-75cb-4798-b253-678645583690",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34b6ba76-9760-4d7c-b054-4ba64d37bca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7152d503-4a6e-4f71-a964-646f1ea34fab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b49de844-d4fe-440e-b351-ba96bb6ad7b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fdeb1d2-0921-4814-8be3-1de1a102bd56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebd5101a-8776-4ea8-8723-77052998df8b",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fda5e0e6-7c8a-4bc8-ab30-75e329b73760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebe57f2d-1b98-445e-8f51-5436f1b2ec91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "675811ac-01ef-4f65-ac97-9aded8986087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4752ddd-4d44-4330-8457-42e1f5f0de57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e37bde4-5146-47cd-aea3-dfb4d3638eb8",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "095e849b-e907-4510-8c50-57ccd1ae6682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8fddcec-4e3e-4180-8600-230052aaf610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e539fdb-5e9d-43a8-be8c-3ef0b4a130b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fae00511-b948-4e7f-9214-05aed52e4437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a4bd206-9fed-4ae2-a4b6-7ddae5754e5e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b8bc296-0dfd-48b4-90cb-6c8e0f1a2939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "624b0fc3-b19e-4415-882a-3ea91e1098ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b89a3eb-db6d-4cab-8423-3916a63713a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca9a19e7-ed3b-4236-9226-58794963e15a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed484d66-8295-4c36-a438-89c642348340",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a7bf058-0967-4536-adea-96897b77c749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b906c8fc-52eb-4eed-bcec-b6eaacfb860c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac1a061-5bc2-4d6f-89d8-d4c8a72a8646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "47ed9714-3bb4-4382-9878-ac2b28556914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "581c0ae8-052a-456b-a710-bad389ec8d2d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6492e0e3-b427-457c-bb3f-73e4ce706f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08f8ab8b-a1fc-4c0c-8a62-f34a8db73e71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b81d0e66-227f-4226-b49e-b4898d93a844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "81a38d72-696b-466a-9ff8-b690375e662c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f3e9dd5-4617-4fb1-9b0d-bb7e7a1dbded",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d44d98dd-1987-41da-b95a-6d4ab0124376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "475ac1f9-ad66-4630-8f73-53341f5c5c37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54a1f60e-0110-41c3-a49b-9721d78a97e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1570602a-0de5-4edc-8945-98693881e2c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f36104-7928-4266-88fa-c575965f3665",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09ed70f2-1c06-4bd0-a3f4-662b563cd871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6130bcf2-100e-4c19-8bd0-e9bfa47bb458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe45807a-6295-49bf-8f37-fcc1d2d71d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1363dccc-3a85-4ad8-989b-aba3dbe181bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc604781-e4b6-4f67-a909-afb92e6d8170",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae3ed66a-7d3d-49b0-99c6-334df00ee24c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2877516d-12c4-471a-8e5c-483a385d16eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c66340d-fb06-44e2-88e8-a47f0410d445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "99e90c7e-cd51-4e2b-8ac7-df8e219b3a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3071120a-f495-4fb1-814e-565033d74f64",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07698ebc-d72b-477b-8149-b66689fc6d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "251323df-1855-4770-b513-ecd5d9f54a8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c6c051e-300a-4895-8876-be2745d6cec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "621d4d7b-d62d-44da-91d3-66904cff5664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1df801f3-a257-4294-b277-e6f59cf8155d",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4882b15-b947-47e1-bef5-97ea56fdc40f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07946a57-83e4-4443-a520-dc46d6232e38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b9e813-53cc-4b98-b560-26cd4fc5e373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e22045ce-6041-4d21-af6a-5808e6a7cf42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61b8c00d-c656-4c50-8059-7dfd8ed6cc49",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6edc3977-b32c-4209-beff-ecbdeace2338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aa8115c6-a8ed-41b5-aaa8-508a00f94e7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f216d48-35dc-41d9-a917-810ccf3d51f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b6e4fa76-663d-4423-a46e-0d9c246c8511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb03f903-0890-47ec-b4ab-e9d90504c9a5",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03ac586d-1460-4b27-abc8-bdb1848fa163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04b16ada-1dda-4d40-99f7-61e5ef8123cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7735ed03-49f4-4139-96a2-112d0db61d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4890e5f8-9931-4a58-85f9-8153e7066df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d01677ee-11ac-4b65-8056-49037eb85c61",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26db06bd-cecd-485f-9c3f-baeb76fc5b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fc85123-8880-4053-8861-a63dd4236e4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6da4aca6-77d5-4a37-9216-6f4a3417266c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bdeb38c0-d826-4675-9803-4b298d1f58ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89ccbe79-57b5-4aa4-805b-32e1fef1367a",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7adc1f3f-b493-47d0-81d3-39aec44b82ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73ba48eb-7370-4fa7-b663-35804fe7c4f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65618b4b-b621-4fad-b8d4-f80f10231359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d1f8550-dabf-4ed9-9619-b174f5a5ce2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2413c266-73f3-4054-9d48-067cd4db8fb9",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c78a02-544e-4c95-98af-1269027b8e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77a8c099-ff31-4a0c-ac4c-67ca7a299a55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c9a87d8-de90-4be0-8993-c730ace868c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8dcf219c-a0e8-48dc-a6c9-b86c36466b25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcc710f6-9d17-4d08-9f3b-6f2047e1fc32",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9dbb5f0-6da6-4c81-a3eb-8608419798b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5473d533-40e3-4768-8f8c-055885ec3873"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a995b44e-4e43-463f-a806-be41bc9f801b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "798d2cc5-dc01-42a7-a5ca-1d4e54e16f78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "461743e3-ea2b-4c76-aefb-9bddb3c7c497",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b4cc271-3ca8-4f5a-939c-2cae4b1fd62f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8206335-f475-40f8-8415-f03076f2232f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b971ae8-9823-4e2a-a39c-18992e47f859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "430ef7d3-74d4-41f7-bed4-bee52479a0c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "676b317e-9e9b-443e-a450-69c1ccdc8d43",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e629aa78-dde3-428c-a026-b247162da051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "546fbdd6-eac5-459e-8019-325b6bdc7cfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb763fc-0740-4bed-b5e4-dda8787884c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "52ef8182-700c-4b7d-9c56-61ca79f61a37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82e071a7-f89f-48bc-a264-4413682576ae",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f7434f2-304c-4535-bcfb-a83894953c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca685f4e-02c4-4fc2-9d6e-0aad4427b8e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f6f57de-a0f2-451c-a867-88f28cc8c1ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "024ed41c-f109-479c-a008-3df1f59e00e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37bb3889-0234-432b-ac48-60713390247b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53245a18-7103-43e2-84b4-2ef03b68fc98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1e2bfb8-b20f-4bd6-b8d4-cb84082c0769"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af4ede6d-9301-40ff-98ab-a8b2e63046ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bba15bb6-6275-4263-b8ba-9e3851c2f994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e36aef44-9f1b-4762-8603-21d6ad6e2985",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ffd402f-ff3e-4dd8-888f-d20ec3f1d821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e399421-287c-4c7e-adc2-7ae54df3c1ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba02ca2a-7e41-4d34-849d-8b33f77c5f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3261eef1-701f-45dd-967e-740c2175f926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "787f74fc-d0df-47ab-8f71-d6f1b30ef5fe",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aee7c75-10c4-494f-813a-4be705f3c0cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f56f9ac-440b-4758-a439-7e1036be3780"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae4e845f-364c-41ee-9307-073ece26964f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "98842f9b-c42e-4be4-b75e-cf8badb4fe6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cee5cd09-00a1-45e1-8ea5-946cd2e9432e",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b169f3-177e-4f7d-a7a3-228811d0a69f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4efcddf7-41f1-4054-9b26-9b49c442d948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd2d1179-45cd-41fb-91c0-90efdfab32f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3a685e3-bb46-4348-ba3a-99db08f4aa8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9af3a70e-ca13-438a-943c-f309329abbdd",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af8a5015-a6ff-43c1-8dde-8af50e2c5830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6c4eaa4-5cec-420c-b579-63998b288508"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f30de8-b830-4ff7-9133-46c290b9fe97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ef1f5ea-d758-4dbf-bfdf-d15c209b7e45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "879eda51-83a0-4d7c-bbff-d88672bd68ec",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9386e3f9-021e-4efa-92f4-f7ebc15d6830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e494785-f2f0-4def-9ff8-64d071a723af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1bfbc12-e910-4d0f-b429-c24560d1eea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "40c7e7a5-2356-4121-af18-c6b096bcea71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28162f79-dff6-40e3-99c1-e0492b9e8563",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96bbe337-2f13-44c1-ad64-d0a1b68f3432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9828487f-6445-4c12-bf22-c1957739402a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08714d58-10ea-431b-a74a-51494bb59bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "461db22e-fdce-419b-a07f-b587946b094c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd4f74c8-3cf6-406c-8e51-9d05e9612331",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0db6edb-5d57-4c39-af63-b4e613aabb5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dba4e410-60ac-443e-8dce-f54809d9f71d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fc81b64-d86e-4e79-a463-5804675a43fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "be71b07b-8e6f-4b30-8c87-f7e4c5cff522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7b53ee9-33bb-43dd-97bf-920d980bc961",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e79f71-0eb7-4879-a67e-7965559c15a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68737dfd-caaa-49be-a9ed-076cd18f6cdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d778c5b4-0ccc-41b6-bf0c-d19eadd8a724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "52a08441-bb0b-453c-bc52-4909d77f4478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66d41445-6b7f-4a11-96f4-2d0640c1debf",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a5a35d6-a669-4b85-b143-e4329770df35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f171c76-bddc-4ed5-8934-7f4883cdb776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "032c5d63-0a0c-46dd-b93a-27d708d44c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "de2b15c5-e9a0-42e3-885e-765356b78805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d694aaa-16c6-4474-bad0-5c5ad4ea01c5",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c98a400e-49c0-4ebc-83d7-a661b10eb35b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f46fbd8-1fd3-4602-b9c6-983b50b4bcb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02c90a22-7101-4ef3-bcce-17bf64634e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "35e51b39-44c4-407e-86e4-65b7f0d51931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20864494-17c5-410a-955b-30998fa0cd7d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "501eca67-b88f-49bd-81ed-06008670e04a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3542b53d-7f36-4f7f-9ae5-98593e5850dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "503c68a3-299d-4150-a848-d27cf6c70da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "a129d0b0-3bc7-4231-8463-00f7858ffde0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "381f4b3e-73b5-46a3-9265-d9e51bf3df5f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a55afa6f-cdc7-46d7-9ea0-3ca428f8c83a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "724e4e4e-0684-42dc-a0cc-01983e2814ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7194e4a-6af9-4407-ac09-88a2574c9cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8677e16-d347-4733-999c-04cd25e19abd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42130842-dbe7-4ff8-821c-9e6ec9f4562d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0191333-3f39-4c69-abe4-8a3326f6c37a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "379e7336-726e-400c-8b2b-7e9e120ccb8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "036bfdde-9ea4-4be5-986b-b2407416e110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f518fe5-a647-4870-bebf-f990a111fa3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17fe4af0-2cef-4f56-946d-864b1b052706",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c8fad1a-4786-499f-876a-9533c9e81124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b60291e-f3c1-4e5e-890a-0a308bc7f8cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "451d1ac3-229e-4e4d-96bb-74404726a86a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9ebdc40-baae-448c-9b8e-bc1bee6a38d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c501f47-4f73-44a3-805b-c364ed5e4b09",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "867ae34b-2e10-4adc-8748-1598cc10577a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56a1ac88-6f2e-4c15-abd9-b43cc8e2113a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6173cbe-8488-4d8f-a701-3e6df7ef342f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3295e9b-e7aa-409a-b0c3-21c360e78a23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f57f896-e935-429a-8c94-e1b88ad286fb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "297015fa-22a3-4809-82d6-016c29871a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d90c2049-3735-4c19-89de-77f610b25a97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d96bf834-3237-4b5b-8584-4cc3af8971e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "db8bb29a-8e0d-4d94-a061-8e038a40a56c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d84ddd-e347-40a8-be0d-e6acb3ba8553",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b852f4b2-65ac-4f3c-9ee9-ea0bcc0fac25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "492430ec-efad-46d9-a75e-a05775764257"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c56e4e26-e89c-4365-b4eb-e3612e8a90ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "802fd82c-e532-4387-99b9-8b79d97a44ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead599c9-f7fc-4f5e-868c-ebaf725942d7",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "755b729d-ac17-45dc-9a92-1896d859ede6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8843a071-6d96-49cc-8e4c-74809b9f8402"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ea9219c-515e-4dbb-bc85-81305d08ba6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "354e42b8-a3bd-425b-90f7-eb9245c829a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77df1370-1253-41fc-ba4c-0cdf034d7300",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5845557e-3016-4cdb-a610-9065714f50d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2339fc9-0c50-4b4f-b3b5-4f72defef2da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8836384b-82ad-4074-a274-41cdbcd82bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "daca9492-e63f-46ca-93c9-c7fb50e8bae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fe45081-851a-46cb-966b-f64fcb21ce6e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd83d9c-2b8a-4d68-a5d6-801b4e1721a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1e9fc33-3b64-4d9c-9ce9-61462d450760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd30eebe-b7f9-42b9-869c-1ef31b1f6f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2aeae404-3c3e-4153-909f-3e3c26ab794a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb5c85f5-f4aa-4264-952b-b5701dd84a65",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2eda6f4-25dc-48ac-a0c7-7d977aacb317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18729b0f-e2aa-4368-8b78-0a5e37b7a1a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48dc301f-c8f0-4ec0-bdae-20a3743c25c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bd097c7-72cd-4d08-a58b-c55eacf3664d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e532811b-9a45-4b86-92a3-d6d473c2ee4a",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88f7b50f-11d4-48e4-a166-2b633ed19ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "493ae5f6-aa8a-4868-8a78-723cfd1a756d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b3767a1-26ce-46c1-b4b3-e8f4acb0fd80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1a134bca-1bfc-40ae-b041-72bab5745635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35c272bc-945a-4426-be17-b6701904f288",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b96f56-4f4a-4dae-b7a0-2e9139a115a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5eb8d10-3f46-4b05-bf07-967daec6fbe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23d99b83-7328-41d5-9786-fa3304a32cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f836023a-9423-4343-8e29-5bea68496eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8725795-b754-4b9d-b3da-de7dc92ff1d6",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ac6922-e4ff-468c-aafd-2a91080f451d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac5934c7-ed89-42d6-867d-c33b81376984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ec36377-fc3a-495b-969f-7526e997396f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5f2d8a5-4d08-4a67-96df-499f5cd43433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64ec00ca-9640-46b4-be61-022230b4537a",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8dc5e49-b74d-41b5-a5a2-22f9862f9b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c6537d8-ef6c-418f-8f73-eabf2a31538a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a9cfa8f-e0e8-4e3c-ac0b-1c5db9be805d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e117e7b-a1ff-4a9e-b345-5aac45d486b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d21bbdb-ac00-43e3-a77a-0c8a02c68579",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a31c3c-2c29-45e1-bcb8-90fe08b2794c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e119e664-c366-4ba0-a757-1e953770b408"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee6ecfb-5f51-44e0-ae2b-5c59e4e92d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "72497aa3-57b4-45bb-a47f-3e33ea123aaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36462b0e-c3b5-4885-9dba-e77736e8888b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de5ada38-60f7-4453-8011-65154e475d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93876769-be21-4cd2-8854-161c238bf1bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "419725a7-f0ea-49d3-b9be-8f91ca4c9b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "88cfddf2-cbc6-4f12-b102-bd6dc89e4989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "664e694a-a61f-4c29-a3cd-89a0cca2b6e5",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a0c29d8-7e39-475a-b9ea-3f23f79fba7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "962eb272-083c-416c-94f3-b09f8f0f69a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4602461d-459f-4f54-95fa-92b8f7b4f294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8972ac2b-8662-4755-862e-65d4a5b61fb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99cec85b-ee0f-40b7-83da-8032c5530f5a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca851d43-5166-4b9b-bbd4-e40dcac69abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a00d6f1-560e-4c44-9cf6-18d0c1644325"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce229c53-132a-4e13-b8d6-01281d412a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "31f4b147-6813-4890-a48d-00a6b068b5da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f73982f5-fecb-4da3-a5f4-6c26c1ed52a2",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a13c11-81ab-40e2-8789-13ed1cb78e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db115830-3713-472a-be89-e32c275209e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19668cd1-26c3-4f8e-9e32-9d0b7f0cbd1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5293122-b9bc-4166-af37-d34592d8c980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e9a0085-8d7a-49d6-b353-c0d93dbdca27",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4310a7d-bcda-4d70-860d-a80caaf3f66c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "080e5293-09b5-4335-82a0-7ef5b19b9c2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1371b9a8-16a3-4ccf-ad98-d1edc2e032c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f924131-0bbe-4374-845e-fea84469ed48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84676542-4495-4be6-9b16-8640b0924d8b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db45c26-2568-495a-8fa6-538cd9919fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6afe57af-f02c-4442-91f6-adaeed4a3b1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "831c4dad-380f-4766-b094-30bfb0584629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "16be84b5-b922-4f01-ab34-4474663f4a88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a798e7d-789a-4ca6-8f4d-56de18e4031e",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a779391b-60f7-4acf-9f40-fe8f05d53141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05aef5b9-4e8f-4f16-bd76-c76886cb5b88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8a50a51-fd26-45f0-8eb7-1fea7d722047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "30aae5ec-77b0-47df-ac9a-2673fa5a4c5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eebb46bd-559a-4234-bd08-baad570dc90d",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e14682-eb87-49ab-8dc5-39d26b964559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccce657e-6178-4147-91df-b277bf82dbd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e6d2430-5bb0-42eb-82c4-b2ed82756882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a103eed-224c-4186-ad83-c85961c591e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d9c1af9-7112-4944-91b4-cabbe5ca6e83",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cbb21c7-28f8-48dd-9b6d-cab4e274035d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c38aa98e-2864-4c47-83c7-c4473fae0473"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31860324-cc47-4568-83ba-c51582605ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7593946b-26a7-4165-9314-f2271276758a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c70926d-11d9-4aa1-9a2c-e118091b0db2",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8ee9cd2-fb57-4a26-94b3-840442ac41f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7389e19-2524-433e-a84e-ec1c5330257f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6115847-8234-47d5-a929-32f2b3cddfbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "335fda11-8ad3-41a2-bee7-df9c53a66302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c9bece1-9301-44df-b2ba-e9e4f48f616f",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb1d6d6-c21c-40c3-93e4-1a39ea2f5d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70c78513-5c58-4f4d-b44f-b5ce70d9bf3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b552e445-a530-4c78-986e-5fc84e3ccd6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "809c6daf-ebd7-4084-a69e-d861d7a41993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7f528ba-45e3-430c-ab0f-7e1a5622b26f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36359f06-ce88-4de5-bb44-d57d684f7a90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e933e727-d94f-4996-9e56-1fe5d9db61d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb6d0065-ec27-4a37-b38a-1e58ca63f8d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c48e046-fc27-4d2e-8e2c-c18a0f9c0c9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e815a942-c8e8-43f5-beea-0d2331c3029b",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a037f6-2d39-4e8b-b917-fa52d5708a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f92c634-1e55-4e2e-813c-7c31717a1946"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7daaa425-5eca-4edd-8770-3d1c1c67e1a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcc949e8-bac7-4b6b-9392-525ac6e76b7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c0be2d8-25d4-493a-b317-903741551b00",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "445d08e9-a1da-49ee-acb6-cacf24c9e297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43883612-33c4-4fbe-9acf-3c450b7ec03d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b8d632-1286-4ad9-80cb-dd89351be153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "31fae685-e7b1-4cbb-89b9-908af7fc3a8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f9bd3eb-cc3c-423d-ad2d-d40e2002f1c4",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5c08eea-495f-4f40-bd0b-26a76195dec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "326bfc5c-1f20-47c0-8f29-d1d83942d8ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80921971-27a4-4660-b274-6c105c58a3ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "238397dd-817b-4908-bd5c-10200da3262f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30c563c1-94f2-4ebb-a404-9d0db325a027",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef1a5fd-c885-4b23-8ad1-c530c8efd84c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26a32e86-0ff7-4203-92e6-8d156eba9e1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d57a98bc-712a-48f6-adb0-71cb44d33674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "013b4f4d-eb48-42e3-82cd-5f64b8b3a0b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44c6a93b-43e6-4e52-9f95-189355706c12",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "680afdc1-ae07-4fbd-9171-001af65cffd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d5b7e7b-ae41-4458-8233-cb329ce98547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d892e15-6209-47e2-a76a-53958f2fa896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "20e64f6d-eb18-4d6f-a5ed-5de4f3d8e683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23cf97ea-221e-45e4-8b74-013eea3ddbbe",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9af0088-8250-4b27-8034-b989f128793e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "604906af-48cc-435c-b765-56d4d31b0f14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e66f8e-7b47-436c-9d7b-53cc04685a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "34d5e566-0d74-40f8-bca5-391e3b31886e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0a3defc-a142-41a2-824f-cda3a0abb741",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "512a1fab-7a85-4334-889a-adb4c418e25d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01b3ad39-98fe-4071-ac0b-425156bad2b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ae28db0-3c3c-4c04-8ff8-ee5a4a05e083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "53193997-4332-4c0a-91e2-be2d0550a097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36c29dc1-bf71-4d58-8a2e-b012dc0ec125",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a30d5c25-ecc7-4124-a1bd-ac87f198c98b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2bb4b2b-0c9e-4700-bddd-196e45478c70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d2b865e-5395-47ff-8284-7a427f5e271f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f852420b-a85c-4234-9a86-f76a544335c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6b50932-7bd3-4603-be97-479cc82671de",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa52cbdc-1bd6-4934-b98a-6f05f3e68d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e93a5001-7e3d-4fc7-8f8f-6ff08709a103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eddf0ce5-189a-4883-bf10-ed683c21720c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8dab2f8e-fd40-4b6b-8daf-e0f72113531b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "efd8b2e3-0ca5-48e7-a629-91e997e99501",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "86f77a56-3259-4d43-bd73-a255595d5f77",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94af9dec-dc9f-4d87-930f-e26fc4064425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1b967639-ce66-480e-a73c-a4c811537385"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61c025f3-91ea-4275-b185-c9cab6445dfa",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca3f4276-a7fb-4710-8b84-db704e91a5d6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c17e46bc-fb4c-4996-9f90-9b665a19faca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ecb8e56-289c-488e-8d1f-22c7fdb5a760"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2839b0ef-d6f9-48b9-8bc1-0c606efe1603",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2a90457c-9d99-4650-98de-b41fa34e3888"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "865bb8af-9227-4096-b3b6-059a555b74f8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b5a0f05f-109c-417f-9d78-6cd85610c5a2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5ba9f6a4-1c44-4a02-be3b-ebdb85d8965c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "29bd5f03-cabe-4deb-a4b4-987be4ba94bb"
                }
              }
            ]
          },
          {
            "id": "0a724c1a-646a-495a-8250-47d8c16e6334",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0509f0ab-3b47-4fa1-94e7-d86369216bf9",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "0f8daee7-dfe3-423c-a654-8903c02a98bc",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d30d4a0-caf0-4c7e-b3b6-ff9d449850e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "af3adfec-cf66-495f-99dc-570d337670c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "441c9e84-b2d4-4068-b1f3-dace02351c45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eb461ad-3663-480f-aaee-eb4d64534339"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9e8290b8-33b9-4673-a534-e07ec3fd9ebb",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "020699f5-5b99-4051-8a5c-db3693e4ea81",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f0c2b89d-256f-4dde-9c16-41ab52ca2d66"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b1b3f64a-b3e1-4694-8a5f-8290847d70f3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f4db591a-edf6-4822-9dbb-e0be2730e68f"
                    }
                  }
                ]
              },
              {
                "id": "839e064d-1130-4cc4-950e-ea0a6ffac0e3",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "55c16e34-399c-4aa3-9e22-d63ca54d1468",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "422fbc73-edb3-4c92-979e-0019aaf6bac7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ca666d59-e4aa-455b-b480-e48a95cf61b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f13a7c27-9104-482b-a998-108e37454961"
                    }
                  }
                ]
              },
              {
                "id": "82e96af5-c607-4106-a863-a3750bfb03f4",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e374e983-5d03-4df8-8c3e-50ab248ddcb6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "86956a16-036a-43ec-913f-bdde6f3736d8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f4f38b33-c05d-4262-9ea4-14ef800e2387",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "74837e15-365a-4bef-9859-19cb4f42068f"
                    }
                  }
                ]
              },
              {
                "id": "1a1c0dd7-98b7-4b9e-94cd-4a450e9384cb",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b20fb76-89f1-4b01-b75c-0d171272e37a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4d48f76f-1eb7-4ae6-a200-5dc4abcf5ece"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "76e5b879-1c6e-4da1-8380-038101f866ef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "fffc7e67-0055-400c-a836-4e8ddcaf0f94"
                    }
                  }
                ]
              },
              {
                "id": "1c5e0970-248a-4de1-a19b-6e4abd0f2aed",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ebe0e4eb-b965-488b-bb8e-35dd28ebe8de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "97329e0a-f0e7-428f-ba89-b737f7faf11d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c60c2a5-3c02-46c5-bae4-ff6131663051",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "aa38e436-5fa5-4b5a-964f-7be2248ca694"
                    }
                  }
                ]
              },
              {
                "id": "89773460-9a6c-45c5-844e-fb0ef8ffc778",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b2bac627-b412-4f46-99ed-aa91b7640c37",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d1ff56b3-c2cc-4c1a-b0d4-a0d925856d3a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9c5b209f-d088-4182-aa3e-bab6a63fd7bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2d17f17d-648d-405a-bba4-6d864ce41e78"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "25744d31-1197-4f0d-8e2d-020a7b8f4250",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3a0c2483-b261-41ce-81f0-ca3a11a5f156"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "93037b00-a520-4321-a694-7dc8d6c8d578",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7a0bbedb-79fe-4499-9283-28510d91c60b"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8fd09fdf-5f93-43e9-a003-129d05a8d551",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "10a4c217-8898-43a6-9f24-de31a2dcc011"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2b039581-f094-4440-9102-5572e2fede16",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c31237f3-59eb-4265-a8f7-1281edf77792"
            }
          }
        ]
      },
      {
        "id": "6114182d-915a-440a-a904-bda7c9428adb",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "2bb539c5-f56e-4965-a090-c6536d654329",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e60477fd-7259-4929-b4f4-c428a1e54b99",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "982fd93c-27d0-44ba-bb38-1f7c25f92c42",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0188682f-b455-4e14-a8f2-dca4e07f0d60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbbb0099-41da-48ab-8307-8aa9820579b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5719325-a44d-424e-9501-e1b5f6940c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c05de43b-7247-49f6-8629-ee85f283e9d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ea7df76-a239-41ef-bf1b-f04bc30e9424",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c0a2ef-838e-4288-98a9-4d072692bde6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c84a05a2-1c1e-4172-acbf-14173d93f527"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ea89bc4-366e-43a9-b805-2a92e9823639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0478733f-84a8-409c-9ec0-174f727e2467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a398b3-7ae1-42e4-895b-999fd9d67f14",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1e212bf-e95c-4418-9c7b-c8795efd36e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e3c3096-5262-4a77-ae2f-0436d4a8239b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d8d458d-0dad-44fa-8d53-a83a0e9230cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "786486c6-d8fe-4d1a-b364-dd5c56f11214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14be35d1-e85d-4d36-b786-f9d826dfb132",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f25da5f4-881b-4f34-ab22-fd750a7432c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01a704ee-ae07-4eba-bdcb-e6ca1ee55ce2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bf59f08-ac58-4757-a46c-a4641a261f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbe8980a-519d-452f-97cd-dd8f741ebf31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d41f2e-470c-41d4-9a47-8e3a8dc1fba2",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7c0c5b4-f354-4a3d-b3c6-7453fca2b1db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a777715-7d62-4ece-95fc-803afcc03aaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41497740-89ec-4264-ada0-5fca0d51e9b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6220d06e-349e-4a73-a128-af889fa94411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "456c0a22-0d56-4db2-a9be-48b40e25ea62",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "839ce45c-a4a2-4cdb-80b2-eed01213ce33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "575f8f95-359e-4aeb-98be-bcf1283b7da4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "546ceb61-8682-4302-9328-d3fd809e5b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "58513b1c-5a29-4b4e-af22-bfe643071e0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15fb033a-90ea-4029-a05b-173ba320141d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be1dfb13-87b5-40e5-a697-7931ca12a309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4d09dc5-25c8-442a-9ba8-8a02997f4b47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f382e32-6782-4384-a373-f858a47ac893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd4fe7a4-4e70-4062-a339-d443c0d561b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d70ca54-f848-4141-af96-b5f466cd2150",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcea09e1-a7c9-4db8-9f4d-e3f9e134af38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f7f4113-b9c2-43cc-938c-49c000a8466a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7878911e-61c4-407f-b2d9-30939624be93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b154cba0-d3ec-4345-a8e2-a97cf1ab2dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "322a5715-050f-413b-8980-db05091a85fc",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb9d2f38-abaf-432c-ae40-197568107569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5504ecc3-77f6-432e-a965-63a04b793548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4a79268-991e-4e85-a813-de73c0126979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "deb6f5fc-e804-43dd-9a6a-d89ddf3d747e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "543aa196-a5e1-4d0b-a98e-9a2b17138e9e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f4a520f-56ec-4a48-9b63-c7538e373bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aadfdb40-1996-4014-b768-478052ca55f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73ea144e-9142-4f04-9b0f-97cc644914cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d1a87e4-f350-4d2d-99c9-fc6c4d460797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c339333-fe53-4ba3-82eb-905a565baea1",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba97e13b-c140-4f7e-88db-fd35bde7504f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbd8e889-594c-46de-bc79-1fdeda9dc919"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af8f7309-6460-4ae3-b573-8ca69952b3b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "292e3dd6-a945-46ec-b163-7a1c50b2dcd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "302f5225-81ba-485e-a14f-910c3c2bac23",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda66523-8b3f-4d5a-bdfd-c31b919401c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aab10022-7a20-4986-8230-70cf3dfc6e65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82565b68-e838-45e2-b5b5-8e658f550b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "118d89dc-a3a6-42f4-b148-6b69555e9f4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24dc90be-265d-47cc-913e-cf61dba6e33c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d71c2c57-550f-45d0-a224-902dec8544f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54e89d17-3d36-436d-8f4e-67409f5677bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e16bc28-8171-4937-8b80-12a9731252e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e784c86-6644-4f19-ac0c-3a67358b4ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f4b608e-03ab-49e8-b6f4-315e38f67d15",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "946c061b-74bd-4e93-83d3-c2dff8ae8e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae07f08c-ec9c-4580-9007-cb21d80065ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95be85b8-94ab-4321-9443-89d6fe7bf992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8f447f7-606a-4cf8-b966-17f750633230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b325c5-7912-4895-aa71-0447a1f3d3f4",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc38c1c-572d-43f0-bedd-7b098263c6a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c15a0c78-0e51-4afc-87ea-7fe7d079e38b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5ef1567-ba9b-4e49-94c4-65a8e2e6e94d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8c13689-55b7-40d4-bdbb-0270248f8de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1641b960-3274-46a1-ae82-a1591092c760",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d32feb64-ebd3-46d4-b829-88c7e1ec314e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feb86ce5-2bc4-4d3e-8aec-230515180dec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eac7d8b9-3b32-466d-9766-8f98d2b949cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf5d9700-7ed8-403c-850c-2ff18186e081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d624a56-fc31-497e-ab44-378d28b03bbc",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0ba45bb-c5c1-4f54-9f0a-3fabcf4e6431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c5f559f-12c1-4aea-a931-72aa289e3f90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf5524fd-d475-49ce-9904-0597ee17e16c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cae4e89-ba1a-4f11-8d18-1802f1e3aa24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec5324bc-b0ba-4925-85ba-246ac42e6f25",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9234bd7a-8d42-4c14-83ba-7180db27f8cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4947e25-cb5a-418e-9cdd-f9af56289132"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e34cfc-e4d7-4630-8278-e724ec2a5461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1345465-6ddf-493f-b930-1125276115ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e689898-483b-44e2-9683-202eccd67f17",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8248d8e-3a01-47d7-826e-e80adacab914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33837fb8-6a8d-4b29-8156-c3e1847ed9d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc1ff5d2-4f95-484d-8e27-f634f188ea62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71fa14a0-eaf4-46ce-a8be-968781ca6d19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6644baec-aa37-42e8-880d-c94e0563be01",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02198126-58ed-4ded-b496-eb108201d709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3658393e-3ffc-4220-97be-5d803ac7380c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e0cbff9-aee6-4711-b5ea-5ee96106f827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c310720-7971-4f51-aebb-03416689bac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ab9e286-a962-4689-a692-45027b53d555",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "111000ae-75dd-4796-89e6-9f8603fa70f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ca69f6f-f4b6-497f-836c-59f1c9251cbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfd34541-c678-4bee-8978-cceadaaf22e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cff4b21-1c15-4ccd-94f6-c9863464995e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a33fa922-78b4-48b1-a11c-e8512eaccaab",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "171d1ba9-7e1d-42a8-8832-90c2453ebded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e1d8241-2923-433d-a45a-07b8734b8d82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91a19b25-ea02-47cd-894d-850a4c58cb03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b81bc1e-1359-43c5-ae35-dd3d5a9bbc99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8159c618-8268-424a-9f76-cf15a46c2c0f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ed66b30-734a-41a0-8d0e-7d799e6222d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64a78054-e6b5-4a88-bdf2-e0c66875d06c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5181451f-f5ec-4db6-bc73-e18797e386f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa0d9435-1c63-43e0-8442-3455dd28239a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6bff0da-518d-4cae-87ac-b698c3b952f1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4a83d1d-9d65-4846-b386-7b28c8f52407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d65af341-45a8-47c5-92bc-8e3e5d4b20c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e120df-d2d6-47a8-8ac7-80563bc486d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b681666-aa90-4744-91c4-a3e46a6cf7cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e68b910b-4df6-4533-9c69-2a0c6fc7bbe8",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f2c1d55-c766-43c6-b377-aee7ba1c5b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dee6c7a-550d-4b88-b06e-397d3de546e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d04247ab-5e11-4a3a-a778-fb7514f347f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13dbd70e-f0f8-45eb-84cc-79d9747fc82f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad076789-932f-44e1-ab46-b16eda5a514a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d484c50-b834-44e4-8348-19d66e817452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26128ce7-e70a-4b6d-a054-b328f7a37c8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15235200-0858-4d20-92cc-22e1cc18877e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12f91068-7262-4dc4-8ffd-9edbc57f1de4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "851df506-231f-4aa9-9dee-780c00b956ca",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b18399d-278d-490f-9463-52f1a856a0dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4058799e-1b14-4594-ab5d-eaa7ae08395c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e32d3ec8-d7a7-42c9-9342-7f6ba3d59d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17827837-3d69-40cc-9d54-afa3caed6154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c078e3d-92b8-4793-a043-876987495d5c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f12c4fe0-c6a5-4861-a40b-f6e603b22abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d063ae5-4f15-4c30-9431-b201158e165b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2438dc3-fa55-409e-beb3-b0500d82785d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1247483-ae0b-4bf4-8995-a962e539829d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00ac1ef0-0d5e-4f09-8323-da075270a920",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d0e1415-6b8e-4ee6-8f2c-cdc3e527fed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f16527be-8101-42bd-846a-b4fc73ce8c28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "937d6c0c-365f-4fc5-8f11-f1b2f1c43224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12d69d37-339b-4530-b92d-c9f04290c2af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1916932-66e0-4fd8-843f-a59a73fa0451",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4701c595-5ec4-4e86-9f82-dc6f6f77b770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4d1ae50-720b-4e89-b8c3-a3e73c01195f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "873b534b-2805-4956-b67c-dbf4d6b4f3e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1159751-5755-4e0f-9a79-af514d6f9108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1957a16-acd6-42e8-889a-d77883905bb9",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25fbd93e-2812-44be-b68b-8d8a61efb7fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a22d38c-9390-4a52-8d6b-95458e2dfaa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c7eb1ba-a04f-4b1a-94f1-15814cf4c690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a778e10c-8423-47e3-9910-b8f016ca31d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "041e2e48-f0dc-4d5f-8eb8-7229aa68cfcc",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dca9b9a-8b3a-4fb4-8002-448671f1be25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcc1b740-4876-4a84-b3ad-14951c3a9f08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbdf753c-8e2a-491e-993e-50b2c44f9c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10436c10-fc06-4661-ae99-071eee4f53fd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9b84086e-81b1-4c45-b765-708598e4cac2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a15554fe-fbac-4a8e-a21e-b3d998e18c21",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7decf6f6-75bb-4847-88d4-11a6afeb22c5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ef6b8c68-849e-4018-ad4b-e1dee359a5b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd05f733-94e4-40c3-a9c7-dea91f5f9d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ab8c510f-1e53-4bfe-a15a-5e5d7f115d01"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "59daa6f7-25f0-4cd7-b3e8-cde317b594b8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b53db1ac-1fa5-4b84-83a7-38aedd3f0474"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "37e0ea7e-af1a-48b8-a8ad-369f9dd925c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eed52399-40d5-4850-8092-e14d747f20c4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c04fa874-5765-468c-ad23-c69d24bc9edb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ec8bb9cc-e1de-4618-9197-395f916c7fe3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0556c2bd-8276-4eff-8da1-4b0d7a09e2f7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5bf8dc8f-c4e0-4575-841c-21eb0fb2a41b"
            }
          }
        ]
      },
      {
        "id": "d5c4ed58-1169-47f9-96e7-3a9ffc272086",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "6a23c6e0-e66b-4244-b141-6b8c0d68f9e7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6e683ddb-7630-474b-88f7-51a1e38b6a1a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "52e51129-e289-45cc-b124-e3a8d7e3160d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd26dbf-1870-4eaf-aea5-a5f3337c907c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c31f860a-217c-473f-878d-5c04b631dea6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae7a9c77-a1a1-4ef3-aa0c-13ab78dd0f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "24ad4cbd-567e-4fde-b19b-7e04928870fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1eb353e-36a5-41d8-a818-8fa1fe59dbc4",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05164e93-c235-4f9d-b0d4-0acf033fcfde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23ee16e2-0d00-4680-a3f9-135e73d19a77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "688524dd-f99c-42e6-be6a-d5bf584e30ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb6a1a80-1fe1-4763-a02b-535d59145405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8f1e68e-4fed-4567-a4d6-582150965ec3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15cb1234-fa65-4e15-9e19-8156b4a16b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beae15c3-0381-4d1f-8fcf-18ef74f82ad0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11c0867b-77f1-4d8f-a8e8-7626af4b2979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e6f448b-7c0a-494e-9992-17e6f545a8ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "536af294-e6c2-4b6d-8d1a-315eaecc83a6",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "639b1f8d-d837-4fc1-9cd4-d60f8550574f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7258418a-f691-43b5-8a95-6df57b8f4730"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "217a3b1c-6760-4740-a68d-f1a0e4e445dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e66bf195-be22-4788-a20d-abcdcdcfa3ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0a8023b-8b5d-4688-bd4c-5cd530699dbe",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "151d7ee5-6fae-4013-8804-3de6fe60acee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09a5d811-0740-44c3-978e-fca2542310ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "603633bb-b49d-4776-8647-24ec80e1bf6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "47138524-1994-496a-9f4d-1cea9247e3b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "573d2a03-9188-491e-8b1c-cad6f84dfae7",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a64b84b1-91db-4316-a609-c5add5f08742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8275cc9e-5430-429b-b9a2-c11af67b097b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c7c65cc-7156-49a0-aa34-6e722dcb56b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7511fb41-f0ca-402d-b259-2442d364fc3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c0d448-301f-431e-bb0b-a8297e973b2d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "521b2ece-1396-4d98-9c31-784cf663c61f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dc5469a-d837-45b2-8f89-186588f483cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "878f2e11-bfe9-4f2e-9f92-bae03f56f1bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "350f363f-e2c3-427a-b7a4-db2bfae50c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "825dc2e8-a663-4763-9593-f714a762c220",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d775636-3662-4813-a51d-9e11a4ee923b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fb8a47a-dd26-40e3-b03b-5fe797d78e2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92da652c-62bc-42ea-9bc8-ea228daec835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ded77faa-cd95-443d-bf48-b6bef445de98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de12577-9bbd-44cf-a87d-85596d5c064e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d2cb4f2-d5ba-4ecf-a45c-d9feaf57e3a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5544f5ec-f1d3-4707-92b9-4c0704e8e853"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ff56fa6-6a22-4a62-b5c4-aea8c42386c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b74aeab6-7d60-48ef-b96e-dba9a7e96dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90afd7de-c39e-42f2-8b1e-555b7c374e7e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "831d70e3-19d7-4a27-870b-3e9ca98bdd5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d2f8191-41f0-4ed3-a203-694c5825a7b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b8ad5b-ad84-46a3-982c-c9e2d960f76b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6636ea6f-7de3-453b-b0b2-a4d4f16e9810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3635108-8145-46f8-986c-fa6f7c7e6d6b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d6cd622-fc6e-46a8-9dd0-f361d8a67afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2ca5da7-e006-4112-93c5-e8061231da7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fad3231-6818-43e1-9a49-cbfeb7c52370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5e1badb0-88ce-4dc1-927a-9fbd474aa7ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90881b72-b3ac-4bc4-9b01-f5784e2949b7",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e24162-df59-4984-97fb-ec0189117bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8be950f-ed82-41b4-8c8d-9c10d747e093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a8a5d5d-45c1-4cf5-8706-099905b74217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dd66f1cb-dd1b-4ecb-a374-2878a5e6bafd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9008724-094d-4670-9dd4-670b167336fe",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b140c4-fcad-4230-89ba-3ebd4de3e089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d3f9e9e-c801-4655-9a33-3d86becefb6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a3ceb0c-fa4b-4af5-95e5-0cc96c6cc1be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a4d1a88-cd50-4a0e-93be-4b8c62b5aecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad997208-a70a-4157-aad0-cd13ec73bacb",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b14db09f-2d5e-4761-aea9-9bc24406dbd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d3eacc1-647e-4172-9301-62679181da2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6ccb755-2e78-4f1a-b286-498ec44cb41a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ad0374b-eeb4-4077-9ed4-163001c2990e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b4bb3d8-0bb7-4ec8-bb70-80447da4ef41",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dac780c-aec9-4389-a069-9c1aa4adaa15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa5e6850-4a83-4aa6-a4bc-27917f77a506"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "151b87c2-494c-45fd-8925-f1fddff8fbaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ae62eac-b237-4cc3-a870-4f834bcf6b6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25dfe4d2-fdb2-442f-9ec6-e60205cd1db1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "096a70a9-5a55-4680-a403-7f374f5bb655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73110852-2c32-4eab-833d-27e8da5a78fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b5bb872-e240-4620-ab53-4c79dd5a5163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "de9f3945-1f68-4811-b4ae-ec5644acb98e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91f41d9f-4f2d-4857-99e5-15405624f7d7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b79231a9-ef20-4e61-abe0-db6a696e91f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6510621c-260b-4643-9115-b630d54c54ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b7d6279-7e4d-4ac1-8f24-a5999bcb678a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a505a2e-5ca4-4b04-96c0-9463b9a9ca90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64cccdbb-8d52-440a-bf31-649719122286",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc6bf794-56bd-4fc6-a4fd-94801e74ce38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f91936a9-ece1-4ca5-9573-8e50a47010d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c22df34f-01af-4289-9d02-7f67d8030b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3590d9c7-c264-4ffe-8f31-711fa2e1388c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5fe4543-6a05-492c-abfd-ef9de9996d40",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "344ed86b-ee56-4abf-b33c-eea3e46bb625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f32ef0fe-9f7c-40a0-8a97-ebdd792e4333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94c21300-7727-4a51-abf5-88cedbacc95c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "716958f6-db99-41b4-bbc2-8d6217508986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab37c27-9717-4661-b9a2-fdcea63d6093",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a550ce9c-a222-43ae-868e-44edb6a30de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b1d0dd7-56f6-4557-a641-567b6505194b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5e7dc07-404b-455f-aefe-3c599d5840a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a2b15e3-7725-402b-b131-4a72c1b15204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54936c1e-8e78-4737-a3ca-5eb3c14c62e0",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88f285b6-711f-4848-af7e-f75fdcd46a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77ed6bdd-ead4-4b9f-ae31-7606cd636acc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8d05300-75cf-4ce5-a31c-f657808bb205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51cb35a8-2be7-4f1f-8d84-3208abe5a5f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97529600-f8f5-4161-8b4a-5d8f85586013",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f09e2304-0c2d-43f9-a2ab-9abf99fa5a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d607c894-423e-4b1f-9bf6-95dbfc233e97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23c71634-cc11-42f4-a484-c11e2fb07314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b018b18-65f2-48b3-a59b-c80b68207e4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36c8b951-a880-4afe-8d86-ac7ae9b29e45",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f5da0f-c6f6-49f4-8154-39cbf21073ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b79f425a-9ad1-41ed-812d-fd81ba47a00e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f6c2ecd-3378-49c8-85ef-0756c828447d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cb2bdd0-7d2b-4ee4-aeb8-6d06af04c4db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "539bedea-d505-49f1-9f12-f2c20b6d585f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a3e7af-eb26-4c4a-915a-611737767ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc570ca0-6c7c-4ce3-8025-7988879236de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0161a407-9239-4613-af98-e99ded81c126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "490844d1-7abb-4b7c-9caf-4417a098365a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc4c930-4760-4a66-8e90-38821e00ac57",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbcf3924-1777-41f5-bffc-0c5450218135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9b83208-ab4c-46c1-ac7c-f13a6a84392c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc22829-f796-47b0-a858-de9eaff11cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77edb3e2-b904-4307-a6ca-d3433c45e3dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39a45b7a-da8f-425e-9a9e-9782faeabebf",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b0f92f-f295-4edf-9554-0d61acfaae6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0afd179e-2472-4433-a85a-145465d180ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "248c4b75-bd56-4196-82d9-de861c9eb766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe43ff52-53b0-4ca8-9543-b2e5270b1adf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "527ea638-8f82-423e-ac38-ed47a187ed45",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb53824c-9166-4e66-ba1b-20d302b060e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b0bf3fb-a55d-4a71-b9bb-348f9aa96a28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11cc28bb-2a2d-40a1-b9f0-d758da55669c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9465bcb6-aaf1-4dd4-b86a-af3c5c1a3ec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b874d80-b061-46e1-ae36-da12a39101e9",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28306962-61ad-4fbe-be3b-2e44adcfe33b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a873f63f-bf14-4bc2-88e0-404989ce9488"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68d7193a-c588-45bf-bee3-fe5f29970d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdc42772-95b9-47f2-9834-307d7c144966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867a73c3-0bd5-4bc9-8aa9-c71e0817879e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1378da8-fa14-49e9-bb31-1b88797753b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfb1f805-c176-4310-949a-9797495ef62e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12f60645-3362-4a49-b197-b908e2a43b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cab452c-6430-4339-9d0a-d0147eb37de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77bd83cd-a44b-42fd-8ac8-ab030d64002f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "638ec22f-cc5e-47d9-acc6-c6d424462919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efcf91f2-4f7b-427b-9608-6e3437120ca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9971c24-302f-4644-bb4f-bda0574f080c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "afd02cc5-0a63-4f35-b7f5-8be82c8ff25c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c00d4fa0-8ab2-4615-886c-64739b98083e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1e69a13-02f7-44f8-a8e1-8eabc80598ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11200e62-3f44-4256-813f-c424134de658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc8bd8ec-1693-4e5f-b1d3-90d7c06a3984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b7ff11a-df53-46a6-ab25-3a57313ea52b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "698af0c1-8f6b-49c8-af5b-5ba62014d278",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43ae2c05-1387-4f11-8385-645fad624759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa74c292-da9f-4565-92e3-2dc9811ec77c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ac357c4-4ec8-4835-b405-35b74d2036a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44ac361d-3281-4ba2-8b46-ca54633afff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d14ecd87-74c0-40ae-8379-562ef32a027c",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b7fadeb-0ba3-4f1c-94d9-801acdb64174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a5f6a90-0b35-41ce-96c4-8b54b0d54948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f936c1-45d3-4bd6-b7d0-bb28cbab530d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07336b63-0aed-424d-88f8-902fe3fcd5fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d14e76-0416-4c34-868f-0b9cc1843178",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a90f07-0d96-49b7-a188-49632b9acbe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "618ee541-4cfa-4173-a644-57414437f75b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a391dbcf-dabb-439e-bf15-819e07d731d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "559af586-dae6-456f-a9c8-fdc3b6d3b0cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1740a5ed-1da7-4a46-90ea-d03adbb239ee",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd5387e7-6001-4377-a1c4-4e3e55cc29b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a1e74e0-79fe-4479-aa67-ce83961e902f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d359af11-049a-447d-82d5-61af3ed1d410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f0d4385-bb9c-4f37-84a4-744a04504412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af225548-2edb-4278-97ed-697246825e97",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edddf723-77f8-45ee-9c5f-97a5f1cf5368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb0da1ef-3323-42a4-a1cd-16fce18456c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c4722a5-818b-4cf4-9741-48a7d71bec7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49c846d0-c491-4453-9c94-33d7e75c9a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2be0e265-2b48-4f64-8954-9fecee7f1408",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ceb307-9455-4522-918f-ee9fb5b335e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92742bd7-3b80-45f7-982f-e3652418a993"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab53fc69-bb85-4680-a908-b39f50251e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b0792d7-8384-4d18-b6fb-8accf38fa166"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "944ac35f-e98f-46c5-8ebb-a98fa7308183",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5240628f-6e03-42df-8006-2e86e75d6002",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4edfc4bd-b146-472d-be5a-cf16ac35beaa",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "054b0420-0584-464f-934f-6719a26b7fef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb211b5-b41a-4edf-8b01-51e871757aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f2f7e1e8-a36f-4684-9d1e-d163447a4f0e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b58aa985-2128-4894-acee-0760d2b1c472",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4075b406-20e2-4593-9ebf-9cdd40794843"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "76ada41b-1f1a-47f4-9ae0-7d0e98960771",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "16266368-af1b-40b5-b86d-37eaa7092f42"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5d931aec-1cca-4bf2-8f63-197850026d7e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d59fc7ca-f7bd-4129-9b32-163f5ba8f20d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9628a9ee-856e-46ae-9c72-86411e97ea7d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "134ea07e-2464-46f7-af0a-78be9021d9f5"
            }
          }
        ]
      },
      {
        "id": "900cbf53-0783-47e8-bba3-5208291c55fa",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "9e33af1f-cc81-4d99-925f-04d64b2d38a5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bbcb09ec-f1cb-480c-a888-5c7464924303",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9edf7325-530c-4c7e-8df0-b0b8a67d680a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d704b9c-e0d8-4ed6-8cb4-45b204639a39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82dc8713-09e3-432c-87ce-f070c75be1ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8c7f777-dde1-46a6-accc-aab71d0cf061",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ad2f0d-e927-489d-ba0a-2501f74c9475",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba64dc6d-ce78-4ae0-81eb-77b8601cc699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b020cd-5534-42f7-b4c0-b43ff9aca4fd",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b6178d0-1c92-4739-8d33-e14078ed88f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1847956c-e8a1-489f-a23d-bedec47467ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edfa2243-7234-459f-9b14-082e832defa3",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "165d6422-e8f0-492b-83d3-52a834b33816",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c6b7d92-a43a-499c-b4bb-7dc2aa8a0e36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d82ac39c-c262-4af4-bc7f-cb8393ec8ad6",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d95e586-32eb-455f-b23e-c0c03a846973",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da168ad1-bf4f-4b2a-9090-d58442b112ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bbea82e-ef3c-4c7a-85ca-6e2963decffa",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e747eb-df82-4052-8cc6-512775b47a65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92d518d8-584f-41f5-b8ec-66f581f1604d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7436c7a8-7fe1-4c4f-9fcc-7e0b30748786",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ce78f5-192f-463a-9ed0-776b70a7844b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74dd6e68-2ead-43e6-83c8-e758d92bc858"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3554a0a-fb3b-4ef3-94d6-8886f9dd6c36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b5f96f8-1f5e-46e8-98b5-f70742104df9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "423b173c-e5e7-4da4-bf87-ab7f15efbed7",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "663c75e7-d92f-4ff3-8deb-3b5a94a209bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca2351a7-fbdb-4bed-802f-3fe302d26bb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0594239-b9a0-4f69-9551-620e3d003754",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "819e1dd8-7452-4e2e-8511-a7acf2b9aea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a3bb8e5-07a4-4fbd-a1e9-4bc843167771",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7ef8a7a-7d31-4f01-bbe7-31010b6ffe9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "256d8572-e285-4855-b926-49d871871a72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd85cd57-f3f4-4d6b-bd81-fa0d23d923d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e060d01-2603-4fd6-bcb2-e26e68f5c215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e760f128-928f-4465-a50b-7e165e28dd3b",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "933f68d4-6a99-4f7f-a8df-3a5c7b7f854c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30f13570-c196-4251-9ef6-a4d844c8f273"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a91306e6-3381-4740-b1aa-3cd1f25a22dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "514245b2-4b68-4934-bff3-2265171c550b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e4a100-e020-4667-aa8c-421775ba65d8",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9427eaac-f58f-454f-8e7a-d222f7b0d9c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d42e3c99-f223-4621-8e69-b45679009071"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d2f26b-0565-4f5f-b847-097044703357",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4757fe55-231e-4caa-be82-3a6149409909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e201083-84df-4c4e-8aa1-6dea2ba48e17",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49f52900-f00a-4228-8c20-f5ba8317d99d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50309c28-6ee3-4847-a31c-76c8722ec8bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c8b7835-3ef5-415e-ac0b-65bf23086a59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fea51b6-9e1d-4896-baa1-a27340dc1a18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f09d6c-117c-46f1-b25c-ad4dfac76378",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0baf8164-172c-418c-8693-539a9dcfbe60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f82daeb4-87ed-48f0-8d6a-2f2360545253"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eba6bd0-5b50-4d8c-bcba-0c7b26722ebf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12d1810a-22fc-4608-9cc7-b5c8883a96e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b1a511-4ff0-42c5-8893-12dcd4f0fa78",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e81343-af50-4fe3-b2ec-ac21d8a5c18a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e22a8c1a-65cc-4e4d-ad76-665e0ff8728a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63bb6251-d84d-4fda-8733-3b139abc5087",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4443d57-2b1f-4daa-a2ac-369a279702c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c7b4177-f37b-4565-b594-ec0f5ed1f929",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba404ca-4f7e-4ab2-8b31-e99614030bb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1f38fc9-5795-4036-afd5-4d2115e83818"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a3533df-4546-416c-854e-2fad23137bc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5b59a59-a180-4b91-93d8-872fe5f72158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3fb8bc3-addd-4dd7-83e7-74e1609291e5",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a3e691a-2dfa-4e89-bee4-70d428163d64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fd5bee1-4e62-4dfb-8ecb-cc7fab2c2a91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5faa67c6-8a65-4f04-a06b-f83fa9a56690",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6cf6974-6e97-4d64-8e9e-0404b35753d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf8d8184-7173-46ab-baa3-9b78b1443c78",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "225a1c43-734f-4698-b47a-6b57fae58a9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e9e530d-10c8-448e-b3e5-36f83576e50f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ff1edf-c09f-4910-ba68-82f3d817a025",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e95665d6-45cb-4d89-859a-721ffecd6637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d62c93-5145-4ec4-b33c-6cf31faa8a48",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac4a4e2-3b4f-4b2f-99ac-b7d4faae18e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5452bd1-b0aa-416b-9be8-662572c97e86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "411f6255-ac11-4ff9-adc8-5c0545656f1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f153eeac-a978-4b7d-b78d-24e033a33e16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3202a30f-9dd3-41e7-a1f4-2ab1717b9ee8",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a20c97-90ab-4170-ba87-a7299e914f74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e2239ea-cf9d-4572-bd6c-9aa428c644e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8edfbb0-9d9a-4f0f-9c39-868a2fa375f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "396db7d4-1c3d-4063-a5e2-64abbf8740f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ef0afea-6900-4445-b984-c3300e5176a8",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18f77a0b-8a7e-4d0e-b930-32f3635d01e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da3b0a1e-8d34-40a5-abf8-bf17541cbfed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f409156e-0e7c-4e4e-b135-985e7969d2f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee02c749-f702-4a87-a27f-253dd37403f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1eaf368-a1b6-41d6-ab44-ecaaabf23a1e",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b121485-50b3-4886-8d69-3301cc2db4eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa5868c6-e885-49cf-b142-9766f08a2c72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "049d059e-b99d-49fe-834b-0a5f5e33d9cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3aa36a0-d96e-45f0-ba1c-e951fe98f52f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df35597-f0ed-4f01-bafc-8c637b86c2a7",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a79ffb61-450e-41ff-ab52-b0185214326b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1e98232-41c5-439c-9f86-389c02d28816"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7c90b76-51e3-4f98-8fae-c9bce52126cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f98cb656-4d95-4f31-9ff9-0fe4b20d8465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "184ccf04-b562-4557-9c4e-f9a6c2db928c",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b7e1b74-a568-46df-8a75-8dee411ee502",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "655d6367-f863-4979-878b-0baf5fbab549"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "938286b8-77bd-46d9-9eb4-3662f259e079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3083ae42-4d0c-44e2-b5cf-278f41979264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c213ea7b-5c1b-4474-80fd-a70662efa153",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cb5f387-0007-43ba-8268-0310b55916a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea9d87d4-e185-4d81-b8b3-dc0e8ea1ea7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7787fd76-2d6d-4ce5-a166-8a5a3500aee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9d4f41f-49fe-42d4-af62-9837f378980b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b89917-2ab3-4f4f-bd3f-bc009c3b3649",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff3560fd-3037-4be3-842a-c29727d17e4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc0a2cd7-73f1-48a1-ac40-6dcfd5c10418"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9efb411-836b-4092-857f-68703e6ebe82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b3559a8-04fc-40c0-8672-232d6b83d5bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f20dc57-123d-4bbd-90ff-05547c09b347",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c7f0d5-8b50-47a6-8eba-777bba4aa759",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05d74ccf-2751-4a17-b3c3-57547794aec9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81662eed-4d23-4a88-a1bf-4d4474de791e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "785b8ffd-901c-4f55-8ba0-8b38989e837f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cdd505d-8190-4f8a-bf88-7f7f2c804658",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0496a877-62bf-4288-831e-07cd159f6ae8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32583722-c10d-4f17-bb08-aa1929ae0741"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa639e36-d580-4eb4-ac40-e201f20314eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21eda7c4-e042-4472-bca7-017cf2a3fef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71018c4c-c611-495f-a986-d3a17aa24aba",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2669987a-3617-4153-a4dc-e8a88dd69e08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dc7263c-06f8-4daa-b383-f6a2a3fc649c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "693ce626-24a7-4f11-942e-49b883af585b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6edecbc-8c99-4df2-a4bd-2bb066cd9750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c4bea70-a5df-451f-9c7a-dc3444e3bc26",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec1cb7b-ef71-48dd-81aa-03f2ce115dba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "157e54a9-c516-49f0-8cb4-e98fca40aa63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efa67156-b900-40a4-8434-8972c81b32bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b705c248-1734-4a07-a81a-928dbea5f9e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d97e7453-3020-47ce-b09a-06195bff954b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2caedb3-47e0-4eac-9f04-b891158f6b02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c850902-81ae-4105-9cc4-b97537e6a8df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d849e70-dccb-452e-8184-a1eff3ac11d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "390fd370-3db4-44b8-9bbb-e41cd987ee60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14e0748a-b2bf-4811-8333-915a0150cb03",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8368db11-4480-4ad4-b338-cc6c5a64e5aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "288c843f-8e2f-40e3-8313-fec4ed00c36d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c6235ad-6e6b-44fa-bb14-12eb96ba9129",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1efc1b60-4270-4eba-bc84-ced52782205b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cab62f9-16fb-4140-a61d-4bc4471c6be2",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeb9fed0-bb5b-4b60-b73f-4ce8b1dc8d57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40b30a13-746e-40be-9342-5e46236079e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67067405-17e4-4f7a-a3d6-af1d00b5f603",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14726c64-a677-4358-90db-3187c6aa9643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec308da-7c89-4459-88af-5a0a2e037a54",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fb2b2c9-9885-4f7a-876e-5c8e23d0cb87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a66080f-5def-4da0-beab-f9a524514807"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c459030d-d7fe-40f1-ab4d-37e59f6d7e93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d99662a2-2388-4dde-b080-ee882be9efc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6032290-edd2-42db-9825-b8d008368f9c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab2fc743-24cc-41a0-a47f-ad5c5ac36702",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a69d81a-fe8f-40ad-90a4-5e65bbf1da02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2100425-3f2f-430f-b1a2-2c9136ee9e27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4b2ae39-d8c0-434c-a6d9-7e04524b54d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c17010a8-ee8d-4ace-9c95-5ab4d2a714a0",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5401219a-571e-43a9-ba97-a53fff762ca9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "762bf0fe-a929-456e-a3a3-3b3dda3b9ec8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71256600-028d-4c38-8904-673d7d58c905",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c027125c-3dd0-49ab-a687-4dcd603ef00f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83253c87-0d92-462a-979e-efe5d70af284",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6496020-5a16-4162-a7d4-7d12736e7f4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeaea81a-ea85-44c7-b325-3e9fc7dc4412"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9229f8e6-f65c-4177-87b2-fe6b2c877fd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c86b84c-95f4-43f3-9391-0640ff756a3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c151608d-86f0-4e76-bf16-d83cfbebf88e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "084e1eb4-6544-483b-b86c-8f252d09ae40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16926d62-0fab-48e9-90e1-0f68b7a996f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82348388-453b-405e-8951-bb833588df1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5af583cd-b7db-469f-b35c-4718ebb06d3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6b3bc00-4702-4048-81c5-29849e3c664c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cbb1b4c-7f5e-46a5-b7de-7a3952451613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea73c6bc-af22-4d81-b353-38b0da6a7c34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0d5a262-40f5-4a24-ab4c-b8b22746707a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3fe9ba9-6240-4ecb-bac4-ea0bf585666a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66a5df5e-b357-4379-bded-5312d9d82a40",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6fa39fe-be34-4301-914a-423c3d245532",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e52347f4-f9cd-4e68-86a5-1cd1de3fe37a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd59ea3-d837-4555-8069-6f19a439f789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "936adb1e-023a-4aec-a88d-ad21c280a347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd656d0e-27ab-4a70-aac7-5950d0116877",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41395702-07eb-49c9-a928-13293f363c42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50a48643-d523-4198-80fd-a64d1207c392"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5987e7cb-0d3d-45ed-afdf-93b215323059",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "635b8896-6daf-4c97-9899-27ff797077f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cafdb0df-3a3e-464b-a303-89a52ebfb7fe",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00dde019-ea5d-4e37-95a2-40508097a0bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d10fcee2-f5f4-4a03-96d9-a2e8891b8ff1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "228da0aa-e64e-4706-b921-17a0b966b6f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4fc1e0e-eb4b-416b-8808-e6c4dfa5b871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf6af3ca-1371-42ad-91f8-884cd40d45be",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "463d6dfd-9412-4c14-9881-df9053d3153d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f034a41-7df2-4d95-a09d-80d6941b87dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f75be0-3ff4-476d-9d5f-9e38561f326b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d170e69-423e-4db9-aaaa-6c6572ec1d1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb33da7a-410e-4ebe-a99e-58d1c65c6629",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e1614fd-9dec-4752-b24f-55db8b4eb760",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3da7b37a-c4a0-4c70-88b4-96979ae88569"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "705f5a8b-4f55-4e6d-8e09-c69e5d93f171",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68d9d58f-9011-4090-a30a-235579cca731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bd3d8b3-4df1-46e3-9639-8531f7a10744",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b4c0c5a-5b45-4850-9708-e20fd9b659b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b8c61d2-7fa0-41b7-9b36-a3c54bab74fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "654a5904-f9e9-4a48-bba9-b58043128a25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0c88149-da40-4093-a411-3d1eccc5b7de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ffc07a-d863-46db-84cf-af2651919d07",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e80524-14c4-4252-9657-c436fbbc9943",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "142d5427-58f9-4604-869c-32ffee44c2b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c04062-b5d7-4ff3-b1ec-63a40d699d6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccb65f1c-80d4-4970-a258-2e623aaa024e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66f6ee04-3ee4-41f2-9517-f4fa0fcf7d55",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24d1eaf0-0bea-45b8-a58f-134d2f39a49e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2b6130a-2a09-4c07-b605-da894ea019f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ffa34f5-eace-4913-8a1d-96fe27dba60b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18b26f59-4c29-432f-94d9-a50803b902ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbf71e29-5522-4290-a25f-4993e3a7f3d9",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca9e7bd-93a9-4ad4-98f7-fc1984c83cee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ecd6dc5-30c6-4105-9bf1-3fc1305f445f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81fca9b7-aa6a-4a62-baeb-7a2653673370",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d75eb3d6-542d-43e3-829e-a409b13cf0ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e7c9a3-1f0d-4a7d-a215-7aba6e338e68",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f882c1e5-a84e-4d6f-b2f1-2cd397b7cb8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c18d451a-f7cf-4585-b680-6d4a4c5e4897"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a1da1f-bd71-415c-b45c-344dfd624d73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc92bd8d-3916-402c-9175-6d2b0f4eca3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2260c9b-7a25-4e65-b2f7-11739076b1fe",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ab936ab-5621-478c-9a4e-4dc95ca570d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d0f0684-92a0-418d-a9de-94daefaa4626"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7db8e849-c00b-400c-ab05-2701a06dfc44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cbd24cb-16a3-480f-ada4-925b624c363b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0db3c2f-6e56-413d-bc3b-4779cfff1a04",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40eb07f8-40e0-44b6-b32b-cf68698fcd0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40c533f3-5278-4b6b-866e-31192cfb9281"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c14c0903-cccd-44f1-bb1c-e923a12585b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0324ca6-01d4-4946-b956-819107e59c84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3418792-d1e8-4795-a690-4e35e5a9c4e0",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97ecc5b4-2b56-4ecf-bb10-8876dbc69dbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b62f89a-7b84-4569-b3bc-5be1ef2aceee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a65cefe3-6732-46a3-8ab6-8d104019ce00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bed7c7a3-9195-42c0-91cf-851a207545fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd362dfe-5888-4fb8-b589-59804bcfe70d",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fa5a330-aa59-4fe4-bdd2-9d5cc851b96c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c075906-f838-4314-9568-62e11d58b9f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0cc6151-1639-414c-8246-20e943651071",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "280d1e14-8d1f-4171-8417-1353766ccec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f0d0d6e-93fa-481a-a6a3-d4216e9e12be",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "219663da-c545-4577-bb19-908b48d2f125",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "687d0518-28e7-46da-be36-caa23435d010"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c0dad1-898b-4125-8c9d-c714bc525574",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c869dc5-ed24-4cce-851f-b7866faa20da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67fda52e-0958-404c-9ea9-d89c4a316662",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b1a75f8-99ac-4029-b3ee-71c01d12408b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59534724-c1a8-4855-a01d-070a2c546803"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e8c5a98-bbee-4673-9d14-189569f0caca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f393c3f4-4b2a-4b28-a8bc-6fcbfda42416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75be949a-dc67-4faa-8366-307c69855963",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8afe5727-b54a-45b6-92f9-aaf5d0f8507f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a36f009-efe5-42b1-a5f6-6476c0ce8715"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7efbb0f1-4bb6-4d57-871d-80cc700329c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39aad841-e68f-48b2-a507-242458e32989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ce2bdf5-cf17-484e-b149-a1632ddfc2d4",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbc87b2d-f8a1-4f23-a8db-5bddb13e2eef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7b71a94-18a2-4d8f-bdd8-3413cb768116"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c12c279-fa5b-4060-8743-d757193a8e5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "774b27c7-0db7-4162-a2a9-100a61924aef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "232c9508-9c73-4610-be03-a14b99cf1c21",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2454539-c274-40c8-b674-bc3ab6126ddb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99d442f0-64df-4a96-86c8-abd18f775409"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7548f882-a871-41ad-9471-2567b3d1577f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13c7e20c-3465-4e23-b894-4723a755e41e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f8c0f3-b540-4c2a-9865-52206f78804b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f2ed6a3-186f-46ab-8a77-3e6510d73eeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee036762-6ee8-4903-8522-fb8e975de9a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b10620-ccfa-4717-adab-0c7c5ce0457c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cef3616-b607-4ea2-8c81-f9c34f3e4678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23658d4a-bc72-4871-adcf-7e78583593a8",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "061edbdb-d000-4c72-aed6-a9b84d1c15e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45ccef94-31aa-4c74-8ac9-619247ad763a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45ae379e-65ec-4227-b7c2-80c70856869a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f27261c-0baf-4689-b988-1ffbbae4c58e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e524ef72-be6a-4905-9d25-89a028ca58d0",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd2ec5a9-fe52-4dcf-8e7f-288ce10481e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41b866ce-96f3-4186-b2c3-f4e3e375aa3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "402348d2-b585-440a-87cd-832ec097d089",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc44cbcc-384e-48b0-b7aa-58451838033e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9aba4fe-3318-4493-8487-9e05d2fea452",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "625638c4-39d5-4824-a12c-99f655e5f280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cfeb4f2-d0d1-4985-add6-6b4ff804bd23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90128a6c-7bb5-408f-b495-c114d807be72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b998d4b-c27a-49e7-92c3-d2df36e2008e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1820520a-1f05-4fb7-b2bb-9cab628fbca3",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19e0eeaa-2325-4707-8b41-2bd97835da36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "130853cf-491d-446f-a537-09aa0e066998"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc7e8590-5347-401b-bdad-a382cf05015f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03b91633-743b-44e4-a28e-06bd94b327df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a02fcfeb-1dcc-4b58-98ad-db851c65024e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8916649b-68a4-4cc7-99a0-d28d5c0bae4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ef8b5d8-a49c-4143-8df0-fb79516c5406"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2773d542-64e5-4b9c-a94e-e748143b6c74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8962a19b-dc61-478d-83b6-7d25450b3dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a62aa1b-73d8-45ee-aaeb-9904144f05e7",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e98c2442-41cf-45d5-9315-8ed002767a1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be161118-f145-4f63-be0b-9580c904f476"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "188a1ea6-9358-420d-ad84-12c6b6b7ac75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47927517-0d0a-4f2b-9ef2-c276ff3f50ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d26b629-bc98-4651-bcc1-a61908ab7628",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba285cf1-2162-4ec0-96bb-072d8fd941b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdf60720-a8dc-4768-853d-877b7518d6ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e6971f-2e18-4277-b20f-6796d207ee24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cad9a86-e562-4286-99b8-e09e369803c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ee2ba2-31b4-4ec4-b015-552e451dbda5",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28db0585-bbbc-4828-842d-321402234716",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cae8f83-bd6e-435b-aca3-4d9ffc419dec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ffafbc-837c-47ae-b380-fd7bc68ba4cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9ff4817-e85d-4eb5-8acb-40182dc536b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00f90c97-444d-4a96-8e0c-0fd47f92bab0",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e2ae01-ec1b-4f2d-80a5-ddbdead9f306",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "076a0881-2b99-4623-92c1-1f9f6084f8e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e02ec5-e41a-475e-a7c0-f3fb48779890",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fde5c477-243c-4e00-82e3-bb04e082addc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d240f99a-fbe0-4be6-9596-2743002f7cbd",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f7eaf33-1942-4c02-a7f7-dbc9f24d3792",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a1af2c7-c5e3-41ac-a4bd-6f144712714f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eefb4a5-998b-4838-962e-80dc9d68f451",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c8218c2-59bc-4db8-aa03-3da46a2abd5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "870c3cc7-26a5-4728-9816-406a8257c235",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e32390-1a28-4103-94bd-8ca11a8ec2e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b14adbc-469e-410f-a75f-b6d8d5f2c8a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb84a88-5072-47b0-b8be-0c57e6736870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4758e975-d731-4b00-b07a-53f5722621ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e4c0d2-6109-49cf-8a51-f954d279a40c",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ebec049-c1f6-429d-8be9-e7ed118fad90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57a9b4d5-5a98-4740-a215-16e1264aedd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "641e622d-1516-4f12-96e7-1ca941e29ac9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9936f903-371a-4203-84f9-8098b8b111ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3228ec4-6adb-4752-ac2d-0bce03245fc2",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cfedb28-880e-46a8-85c0-1eee1ee3ed74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8704e116-8a08-4569-9377-489e6ad289c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07637ca3-cb8a-4fc9-b95f-fdb98f644542",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ee4332b-e5cd-43a7-a59d-aa38e6df126e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72f4e800-cdeb-4e82-9210-279c53b57172",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de2d3643-f7cd-4d99-bd99-b55d5bcc2c99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5ed7a5c-3561-4585-9ffd-b9c968f029f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42679f47-ba25-4577-8e0c-e81b7a3302e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e7fbacb-1630-458d-8911-c9afc68e4b95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0445ad43-4290-48e6-969a-1986a85e738e",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "765a0321-09fd-49d5-b8bb-224379f173d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27b151ae-666c-48cb-872a-6329e1edfa3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "250b970a-9d61-43b4-8fde-a7b12a7ac4c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31dd760b-d60a-4318-a056-878ef2a7d8e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f13f5ed-c1f7-4db6-ab18-4de6b57c7ecf",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8abf3e3-d336-4f7b-a61d-ef60b32f0a9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d74211fb-b106-44af-870f-add24640354f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e82708d-b7de-4050-8562-f843a5a41b80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86b81c81-9178-4004-88ac-ca8762db94bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19a99cbc-0641-40b3-a2d0-18388cd4bf85",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d410ad0-ad24-44c1-b6bd-3a12bf342d3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b550f69c-f4d1-4f9e-99a3-8a7be660dc66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf303f85-e104-475d-a2b6-df11817475e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d23432dd-d5b1-4cbe-ae03-8cee975835c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15916087-1a77-4aa4-881b-a0d4ec3deb89",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "673a8e38-463a-4b67-a61d-9871e25eb43e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37a77b6a-a34f-45d6-80a1-3774d661583a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c1a7ec-cd9a-4203-bd73-57b7cbb512f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c74c0ee-e4f7-48fe-8b86-0298beef7444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e97dfda-2fa5-4459-bff3-580b0282cd11",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbbae9c0-15ca-46db-897d-5bb16c21e5b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4750d2f8-b0fd-45c6-b17b-a18760a90860"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e7052a-f5fb-4a24-84b1-d8f028ca82d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea887018-e2db-4af7-9399-aff8e04a8524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "195ff91a-66c2-4fcd-9549-5b1618bb0ee1",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3a45d75-39ea-46b3-9fee-3de12d3373af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "412001df-4180-4c8d-a522-92bcb2064063"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dea6627-fe78-4d01-bbb3-0cb233d1cb5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc138e86-a3e5-4594-bdbc-5486e4e66d4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad626b77-8bcc-4cf6-beda-c69c9b21f808",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2347234-89fa-44a5-b4d8-accb3ab9645e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7aa49b87-a7c4-4323-b643-e2d61466b810"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f8c9c52-678b-461e-9bc5-c3b2dc30efb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a826a37-b67e-41e7-a66c-5f52bf7db539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40cfbec2-189d-40a0-81ea-95ab707d6b20",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7438db17-7552-4659-8a7e-7eb42fb7ef56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eca6db09-9881-4fb5-9a0d-4c6b17e3d797"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8b9da99-0fc7-4264-a840-9e61f9d33bab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61e1c762-3afb-4d5c-a566-3bde971d5447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5853d2a9-be98-45fa-97c0-e11f517f0fd5",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc911182-bf8e-4f8c-bfe4-22a1767c04dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "191e7bbc-ebad-4a85-83cb-0d5d548b517f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1783e03e-66cb-4f1c-b587-e809697414e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d99a7d18-7275-44e0-9f4e-c9f865646946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d42e30d0-2bb8-487f-8977-41f738eba64e",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7095df97-0bdc-4348-be57-23227bdc95cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "784aafe4-5658-4dc7-ad48-741e6045dade"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00871c09-df31-465c-9f2b-c85d6723035a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45f85659-47ec-443b-ac1d-ce16c5d82855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c4f2d19-454e-4847-9fa3-7cd522adce11",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58db493b-578b-4319-84af-8431438f8723",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d03b73b-d3e0-4ab2-8a9b-4bd1959687de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec87a65f-eafe-4ded-abe5-3b8037f47e94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62df1379-4875-4312-967f-ae7c6b2d27db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac3134b0-0b89-40e0-8b08-c677614cc7de",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b74e102-708b-4627-9e1c-a337b97a7019",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f9b7515-9cd5-493a-a3c6-b9137001a67e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8464ebf9-f061-4006-9147-c88ad3ab9fd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f75650aa-7160-49e9-93c5-c6b74043c4f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b43e3869-8154-4068-85f8-4324e7071711",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8da2091a-00e9-498f-8691-0702bd360001",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c60d3d32-46e3-48bb-ad76-7a9d6b2320c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e33946-fb3a-442c-84a2-baaa2bdfdf94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffcb6698-7b01-460b-97ab-b25e4d1cfa7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7804efbd-497f-46c4-aa03-db4b680840d6",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b7c4ca4-4f08-4067-bd4b-90bbae358f79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c97ee39-8fd4-4155-b3c3-60d808d2ca9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09b259bb-b9da-4161-80e6-315d7b840928",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27e99e21-cd74-4ab3-bb02-76e49cf698d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c641ed8-2896-487e-b009-d79304ed98ca",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f8db989-a0ec-48c4-9ab6-4ca360cfc59f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c9f34c2-853c-4731-bca9-db1ac4d23a43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df846641-4ed2-44d7-953f-8728ee82bca8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcd5f0fb-fbf2-45b9-89ae-6b4f5a8af811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f45d547-fc85-427d-a7df-3b092d8f0ea2",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66b00fc7-536b-44ed-9cfa-292fd570e105",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df06c32f-c884-4970-9d38-18293dbc286c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f80a92-051f-4d1f-80ce-2f66d162cbdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89c918b3-6576-4171-9dc7-9ed2553b6871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f695429a-8d95-4607-b540-3a059326a302",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "110bb2e6-bda4-42cc-a7d6-a0c68ab58f1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "406a12b2-1de8-43b6-9afb-2d5e632c2c92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "451953bf-a9ad-489a-81da-e4990b5e7029",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dcad24b-e06f-4801-a61c-a5597febc3e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "230999cd-d548-424a-a7f1-a253fcc4a451",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f44de5e1-6df5-4b37-b16b-dc68b9e45743",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccb7754b-0419-410a-ac8e-6ff439826e79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f067b489-86c1-4814-a658-ec0555a4f2cd",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f889ee40-6ecc-4f78-8f5b-9faf6bb17999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69556bd8-3ff2-436e-868e-e8b176b85f41",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a23b2edd-ccd0-4959-8914-1c899c585558",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "855a6fa8-eaf0-4571-bfcb-3b20f63db077"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a7a5ae8-2b3b-4567-9f6a-f5895f43b123",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab1c3376-b3a6-4e80-ab69-c7277c6e1fb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4281e88-d27d-4243-b0a7-dc19982b0dde",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ecc0852-eba2-4d98-af79-652e66aa6514",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "692915fb-e868-46e1-a42a-499672093c2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14c4e732-69b5-4764-a2b3-ecec90421c5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f813a190-cacb-43eb-bc58-ab4c2f7520fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d5e2f90-8850-4c5f-a7f8-c5759d1f6b20",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48c604f3-c9d0-4d0f-8312-7cb9fac699aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d24a8d57-c928-4f7f-8cf0-732ac143e095"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6db5a886-945f-41a7-99e2-73a771d355dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00783094-58f9-4aa7-bda9-7ccad7104309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4a11cab-47cc-491e-9124-d9af31ae8928",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e8f0ca2-4625-40bf-94be-2d367ce52ed8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "734d8902-ec15-493b-ba31-0edd52e158c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea6a5a7-029b-4300-9bf8-7b07c70c173a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b210d9ef-3529-429d-a4ed-6d82fdfce4bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83a93249-d6a4-4d79-ada1-c4903e2862da",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d53230b-b97c-431c-a3c4-3dde8e595e65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b8ccab2-e563-4361-aa01-2f02dbe51071"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8125f907-d5df-487e-88f9-ce965807f2e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "316ea0a6-41c6-4adc-8a29-f63e6772dafd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eb64121-21d1-4b42-a65b-f7d4c59d7588",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4363156-1609-45d8-a636-567e3d20b36d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63667e62-a55b-4d3d-8a3f-6a0528eb0830"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "277416ae-9036-4482-9a9b-f7cd835b5686",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62ff93cc-55ab-4f5b-b9eb-17e478d2924f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01a98244-227e-4e8c-9674-b9309e929ac1",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f431284-4146-4f8b-9a8b-e6cbbbbcba24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6006d71f-9b45-4866-a05d-2a9d18a37cea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "139c1b8d-abce-43b0-91c7-e20ef4cee238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ec8c69e-698f-421c-bc10-f8ff811af0ec"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5f0b4419-3785-4a4d-a466-08c2926404ac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c311b96e-6770-4554-ae1d-533e52f53f37"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0565f28a-0a95-457d-aa7a-136e20c7efa1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c7e0a00a-9602-4742-bd62-aa85dfc548e8"
                    }
                  }
                ]
              },
              {
                "id": "f01ce49a-f775-4033-950c-5f31f75a862e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0f353ee6-a991-436f-9c2c-8ef5e3cae775",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a113284a-1591-436c-a237-fc6abd2eb3ab",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "823e1a84-0aea-4df9-a23b-7b0375053a1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "689b5a9d-32a6-4890-aa47-37c1b1ee7719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "352b6bd1-b487-4cb6-a366-365cacb21595"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be81b13a-546e-4188-87c3-4d19d59aca9f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b446727b-ba47-493c-94b7-f32eb0e2c2f9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e8974c07-a580-490f-afc2-d12d05c2c36c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c3354ef7-8d00-471f-b698-159e46c87794"
                    }
                  }
                ]
              },
              {
                "id": "24b4bed7-2424-465c-a97a-77aee6e3c1a2",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "fc69e585-f69b-47a3-bb54-cd1b3f9ae22f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c5075d7-2158-4655-ba64-f68aba167e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "6a42f10b-ce9e-4fc5-bf40-80a0fa3ec9be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b19b1d-4a35-48d4-bfe7-dd0ab1134c75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b16a5229-a72f-4ad9-b6dc-647c6c3080a5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "745671c3-e759-4bc8-9cfb-45f3d2174fab",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a4cd0f82-baaa-4217-a6ae-fda715505fdf",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4f9437f-bc06-4452-8efe-611b9192faf1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f0f847fe-0555-4ca4-9932-5baac1d0d49c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cfd63c52-ba4a-4562-af05-4004ba81a95f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "42cf8542-2b15-4818-b6cc-a5a7bfd87764"
                    }
                  }
                ]
              },
              {
                "id": "6bf08ad2-e9e8-4843-8232-42e0077315fa",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6961efd9-82bf-4be8-a77c-ba56b6615bcb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2cadafb6-7515-48ee-a2f7-f208f8a2e6c7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "09acd412-6a46-411b-ae60-dae9187a3ff3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b6c12d8-233c-4b1c-ae4e-b0f05c6882bc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "21ac6e10-7c62-4e79-ac89-9c3c3dba5255",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "ac76c387-390f-4aa9-901a-31dbdf8f3602"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3d32f7ce-d261-4bee-8e56-a9cb007ef19c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d6c442a5-8086-4270-8afd-06ef774fd917"
            }
          }
        ]
      },
      {
        "id": "ab39f239-3545-4b58-93df-3879e2fa0cba",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "b8123777-ada3-4ada-8ee8-1dc76db06e21",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6d0327f1-5ab2-40db-b485-44dd9f529b76",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0e7ce843-8c92-4515-90a2-b2cc4a770cc0",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e2a9d9-2c08-4d9f-ae70-868d662e8844",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "5df66733-ce7f-428d-bb7a-fa927d957afa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "893c263f-2dd5-4fe1-baca-69aec40cad0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2cb83eb3-da81-4aa4-ab85-f75d3dbc3708"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "72be266a-0980-4f4b-9476-4ad6f9a554a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2627d8c1-7cda-418a-8383-770fa51b89c7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed313c41-1d7b-476f-8ea7-c58f0433e265",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "75003d99-2198-449c-8a18-f7cb04a368a9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "60a35bd8-68fb-4d57-80b5-41aff9231fd4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "47b4a077-ac1b-458f-8cb0-b6aa018b6465"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0242af20-20f6-48a1-a9a8-b40466104804",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "323d89bb-d446-421c-809c-ecb65bddc149"
            }
          }
        ]
      },
      {
        "id": "9a8298ac-230a-4bef-9e1e-abcaba82ecae",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "2ace20fe-4349-4ef6-bbdc-81cf8bb76ed5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a1be0291-0f79-4a6e-9911-4e292d6fe485",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4111d6af-6ce5-41c9-b545-39a6aa3ac180",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3b7dc67-9ccc-4636-bfb1-79810dc72f07",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a9945d9-96db-405c-90d7-194e7ceddb01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba489041-d8cd-425b-9003-bb87a36de62d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2640ecb0-64ae-4401-9197-b3ce0e29b1c2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "74c9da13-cb11-44fb-a236-18a5f67b1fed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f7c182c-2bbc-4524-a777-bb9e50841e06"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8701ce58-088d-44d7-b5c5-aa742a51f313",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "16711f7b-b152-4444-b491-0388b5f1c874"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7f74c814-1873-4d31-95eb-5928ad815828",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c78c3d2c-57f9-4398-89fd-ec428cfa8a41"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "727fcde8-f95e-44af-8871-2501595afa82",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e154d862-0c4e-4aff-a6ab-a36e43e4619c"
            }
          }
        ]
      },
      {
        "id": "368c63ea-465d-428b-96bb-219b6669a1cd",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "e512c31a-2b92-4148-b686-9d4a97925c9a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "41ae582c-f3b3-4632-bdbb-4ccfe5584edb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5c0216b3-f2e3-4da0-a099-cbdbac44c83d",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fabc9c0-3aec-4db1-977b-ccb1e71d1259",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d89ee778-1a83-4277-8e24-da505f2b45a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "163ada24-a000-4f8b-8fbd-2fd7ba5c873d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ede7c469-ed0d-411b-a93d-1195bb6b54fa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff42888e-6ec6-4c95-8d48-88295bfb0f96",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9e1fb9c-1530-4126-8500-f4f9c0b040d2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0235ed8f-ded1-431e-b3f4-da73012a5d2d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "939a39d9-3bad-4738-8da2-ec12c3fcf4c6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c9e21ce4-ba91-4631-ab58-408cc5f29c64",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "830388cb-ed22-4c6a-b75f-469a5e16b349"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "45856e41-abcd-4e2e-b155-3d54c4413768",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "abcc807b-2474-4e43-a44b-a19ba8a70c74"
            }
          }
        ]
      },
      {
        "id": "e62228d6-7637-4efa-a2d4-5047d8b28efd",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8df3bbde-48c7-4120-a3b8-ae52949cfe6c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "24d95046-de22-4467-9655-9b3bc9fadf8c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "f4174e8f-3943-4be8-822a-b369aadcf83d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "79fdf4ad-080e-45fc-9aaf-8ffa9ca03b11",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ab508554-868a-480e-8b83-95e79be39032",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 92.37543859649125,
      "responseMin": 10,
      "responseMax": 7459,
      "responseSd": 499.1665433432302,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1707525166174,
      "completed": 1707525201761
    },
    "executions": [
      {
        "id": "c700a096-739b-4cff-a552-1fda510ca8be",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "5a760229-2d5e-48e3-9d80-0cfca47dc4bc",
          "httpRequestId": "4c262f37-e831-4147-b80a-9c6e9da433b5"
        },
        "item": {
          "id": "c700a096-739b-4cff-a552-1fda510ca8be",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "4ae83fec-3b7b-4c73-a53f-d2958a980756",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 0
        }
      },
      {
        "id": "b0af03aa-11b0-4589-ab2c-7a33d4246d0d",
        "cursor": {
          "ref": "17dc1594-262b-45f1-8d27-dea7e37a94e4",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c823db61-4b7e-4340-bd34-0aff1258b970"
        },
        "item": {
          "id": "b0af03aa-11b0-4589-ab2c-7a33d4246d0d",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "d1e81f85-abf9-451c-8d6e-e3442ab8ccff",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "941c6d7f-4b84-4ce5-b01c-89e95f6bfdb1",
        "cursor": {
          "ref": "80ead2bc-f2e1-45ec-ba9d-f5848ccf8051",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "73449b05-e33d-4d61-ae2e-199bc146e8bd"
        },
        "item": {
          "id": "941c6d7f-4b84-4ce5-b01c-89e95f6bfdb1",
          "name": "did_json"
        },
        "response": {
          "id": "4e2ce8b6-0dd2-41c6-aba0-60a17c6c4179",
          "status": "OK",
          "code": 200,
          "responseTime": 306,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f42e906-6fae-43a2-a9ce-610a47ac558d",
        "cursor": {
          "ref": "283b6366-c97c-4bbb-80c0-d468f52a371d",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a62d4a3f-b622-4c6c-9d09-6fb632835fab"
        },
        "item": {
          "id": "9f42e906-6fae-43a2-a9ce-610a47ac558d",
          "name": "did:invalid"
        },
        "response": {
          "id": "d24eab31-f912-4b56-a730-e2dbba3c767c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 593,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f42e906-6fae-43a2-a9ce-610a47ac558d",
        "cursor": {
          "ref": "283b6366-c97c-4bbb-80c0-d468f52a371d",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a62d4a3f-b622-4c6c-9d09-6fb632835fab"
        },
        "item": {
          "id": "9f42e906-6fae-43a2-a9ce-610a47ac558d",
          "name": "did:invalid"
        },
        "response": {
          "id": "d24eab31-f912-4b56-a730-e2dbba3c767c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 593,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f688a205-5c9f-49ec-a65d-994d4d8da4d2",
        "cursor": {
          "ref": "7944d618-a70f-4119-8d81-03b06ab5a440",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b904ce80-9416-4f1d-b2b1-22f99d7e2d4c"
        },
        "item": {
          "id": "f688a205-5c9f-49ec-a65d-994d4d8da4d2",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "09cc8991-40fd-4465-9fad-2185ede26c63",
          "status": "Not Found",
          "code": 404,
          "responseTime": 41,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0761bc51-ff2d-4ae1-83a4-610608402afb",
        "cursor": {
          "ref": "6b4b1535-4b75-4dd0-beac-8295cdd81a28",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "2e4f6f48-a787-40f0-95fd-88a073c4e7cc"
        },
        "item": {
          "id": "0761bc51-ff2d-4ae1-83a4-610608402afb",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4012df4e-5fc0-49dc-ab0b-d1a4bf21e986",
          "status": "Not Found",
          "code": 404,
          "responseTime": 39,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33cb860e-cb3e-4505-8d00-5fc811e386f7",
        "cursor": {
          "ref": "ad1858cc-aec9-4415-af6b-ff879bb2a194",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "b6a29043-be67-43d4-bf71-630bf1f4c992"
        },
        "item": {
          "id": "33cb860e-cb3e-4505-8d00-5fc811e386f7",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "249907de-9deb-48f4-92cf-d04bb47606d6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "336fdafd-4778-43ca-8cea-333796a8c893",
        "cursor": {
          "ref": "94afe3ec-5746-4f4a-af10-5ed7332a8fa0",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "978bda85-9fae-47d9-b25f-f330dc317fda"
        },
        "item": {
          "id": "336fdafd-4778-43ca-8cea-333796a8c893",
          "name": "identifiers"
        },
        "response": {
          "id": "69fa4520-a3e5-4ac6-8f2f-189f733a9ddb",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53481a9e-7a5e-4cd7-ac3b-d1105e54d5d2",
        "cursor": {
          "ref": "32a1e4ab-b0dc-49be-8969-ef55544541d4",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "8a827199-ab09-4803-8d15-82ff3b5898db"
        },
        "item": {
          "id": "53481a9e-7a5e-4cd7-ac3b-d1105e54d5d2",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "1d212da3-53b3-41f6-bb5b-336549089e71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd56c87-08f3-476c-b050-f04ac1da9296",
        "cursor": {
          "ref": "75632db5-e3e7-40d9-ae44-23de81bc4c09",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "2754e80f-99ec-4805-967d-854a911d271f"
        },
        "item": {
          "id": "4cd56c87-08f3-476c-b050-f04ac1da9296",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "174d1ad4-250c-4795-a27a-f0411290211c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c9d592-c2d9-48ca-831a-1175b302b292",
        "cursor": {
          "ref": "6fef87c9-a25a-42b4-9ce2-8e9207a524a9",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e884f3c3-4b8c-404b-a33c-1363fc289ac0"
        },
        "item": {
          "id": "c6c9d592-c2d9-48ca-831a-1175b302b292",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "8e949bed-d9bd-417b-a1fd-24156ae75636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f994e1af-094f-4b2f-b6e5-d56d2594bc97",
        "cursor": {
          "ref": "87734441-d99c-40d2-b774-3ed3a47c1f48",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ffd46535-87c1-4fe0-8a45-e0dd6592f2bf"
        },
        "item": {
          "id": "f994e1af-094f-4b2f-b6e5-d56d2594bc97",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "4f091b7c-b89e-45eb-9a4e-00212e21511e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7e74eb1-96f4-41aa-bc33-1f630e5e704a",
        "cursor": {
          "ref": "9e075745-ad2a-4e04-8ee2-6b3ca3f2dd53",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "fb4a813e-2fce-45fe-9f4d-5fbf00782fec"
        },
        "item": {
          "id": "b7e74eb1-96f4-41aa-bc33-1f630e5e704a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "c1f83589-4800-4c19-b7c9-37155c105eba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b03a9927-3cbe-49ac-ac38-43c74131eede",
        "cursor": {
          "ref": "10875d07-57c8-4903-a4ad-2d6218b9905e",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "2b49b4b7-1377-48bd-847f-854401915126"
        },
        "item": {
          "id": "b03a9927-3cbe-49ac-ac38-43c74131eede",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "2e50e443-8a62-4073-a3a9-b810fcb31de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f9c03ce-05fb-4a5b-8d2a-46a4206753cc",
        "cursor": {
          "ref": "eb80535e-c824-4ad4-a557-d498580ef896",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "570d02f0-c365-42b6-bab0-17e97f91f4d1"
        },
        "item": {
          "id": "9f9c03ce-05fb-4a5b-8d2a-46a4206753cc",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "6dd879bc-a1b2-4ed0-b109-7ead68173067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7aca3fd-7e72-442b-922b-f33d1d11dbfd",
        "cursor": {
          "ref": "c2ef487f-32cd-4811-aaba-8a28b13f60a1",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c6f34a53-eef5-4a73-b1c2-77f80a52bc78"
        },
        "item": {
          "id": "e7aca3fd-7e72-442b-922b-f33d1d11dbfd",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "d52a3599-b4d3-44e2-9942-a15cadf148c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a04f4d-98b9-4169-9981-1d3129561d57",
        "cursor": {
          "ref": "1bcb0aa6-b937-458d-a1df-a22ee864ab10",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "d7085ad5-44d8-42ce-b082-b8c0cfbd5b4d"
        },
        "item": {
          "id": "52a04f4d-98b9-4169-9981-1d3129561d57",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "39c6b1de-30a7-4eaf-addf-db2056f5aa4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62aeefb3-6596-418b-89db-cc93656cb97d",
        "cursor": {
          "ref": "eee75764-00bb-4bc0-8e8d-1cebfcc2fd92",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "82541d58-99fc-4388-bdfc-ccdaf8b7ee1e"
        },
        "item": {
          "id": "62aeefb3-6596-418b-89db-cc93656cb97d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e3d3b758-e7fd-437c-a193-7dc61ae7e6d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec9d1397-2724-40da-89e8-b82c7f7f6ec9",
        "cursor": {
          "ref": "e3da9211-b277-429b-bd0d-fd43caaa26e3",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "a4344726-57fe-4e54-8bab-1d952146290e"
        },
        "item": {
          "id": "ec9d1397-2724-40da-89e8-b82c7f7f6ec9",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "bad685d2-f525-47bd-afd6-0a1807186605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a8d5706-4374-4870-b43d-ee484ad83966",
        "cursor": {
          "ref": "f8e47e61-9f70-4754-bec2-e7a57f3aea5c",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "fd86592f-e428-4a1a-bd75-02aaa8789ddb"
        },
        "item": {
          "id": "0a8d5706-4374-4870-b43d-ee484ad83966",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "5440e611-c038-4a3b-8667-be93dd261ac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a5ba02b-7110-4db1-954e-ceb13822860b",
        "cursor": {
          "ref": "f77c158e-25a1-4748-9c4d-19ad7abe68e7",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "54367cad-172a-4f67-a0d2-4b1ca83912be"
        },
        "item": {
          "id": "6a5ba02b-7110-4db1-954e-ceb13822860b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b4e91a6e-df71-49f3-b808-a16b8868d33e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "144e9bfa-e64c-4aac-9c2e-2d556d433e97",
        "cursor": {
          "ref": "a3d6d831-c4de-4b55-a726-bd5661696687",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e4dc41a6-fe26-4d2d-95b9-90b6b0548c55"
        },
        "item": {
          "id": "144e9bfa-e64c-4aac-9c2e-2d556d433e97",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "15b9a505-96f5-4382-9f27-1ff1bb44a10d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11053993-7d52-4750-9f9d-72cb98694f25",
        "cursor": {
          "ref": "a8d2067d-5e34-40e4-a28c-33295cad48ae",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "fd7c348b-4b40-4802-9175-e6a575933d0e"
        },
        "item": {
          "id": "11053993-7d52-4750-9f9d-72cb98694f25",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a947ce7f-7da5-479b-b410-afc136b0d566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff5790c4-38e1-44ce-86c0-02d80c764b29",
        "cursor": {
          "ref": "8a08f152-f98a-409e-a19f-70ebdb08c70a",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d63f395a-f446-4754-bfb6-f4eecaf0f4eb"
        },
        "item": {
          "id": "ff5790c4-38e1-44ce-86c0-02d80c764b29",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "adba0797-af97-4803-8ab6-9a0fe603d040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "138a4938-26e4-40ea-84e9-f052fe034110",
        "cursor": {
          "ref": "099aa113-35d6-451e-8c4f-13abce5f0f0f",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "78a7a334-d696-4020-a2f7-1a7c0f3e23a4"
        },
        "item": {
          "id": "138a4938-26e4-40ea-84e9-f052fe034110",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8adc8074-27ca-43a9-b1a6-f999cec396ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "025387c0-d5fd-4e51-a3da-dfbcab925f70",
        "cursor": {
          "ref": "f0810cd2-607b-457e-a292-9711e4a7e01d",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "ee127028-3e73-47b4-b366-1f6a0b2c7e7c"
        },
        "item": {
          "id": "025387c0-d5fd-4e51-a3da-dfbcab925f70",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "bee9c0cd-c161-4d7c-8c72-06d39248abe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "945c7cb0-9fe2-45e5-aafe-5f7f9b3f7e31",
        "cursor": {
          "ref": "9cbbd377-ab6e-4828-8e00-fecb71275e7f",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "0c57f415-1d81-4044-a4e4-b9a39f955ca4"
        },
        "item": {
          "id": "945c7cb0-9fe2-45e5-aafe-5f7f9b3f7e31",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "0fa4ca3d-7f93-494e-a0fb-dae96e8cbfeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef04844-dd31-4bd8-82fe-bc9bb40f5add",
        "cursor": {
          "ref": "76410210-5c78-46a7-9963-d3511516ad80",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "4a31d649-6028-438f-b75c-cec31a40d74f"
        },
        "item": {
          "id": "2ef04844-dd31-4bd8-82fe-bc9bb40f5add",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "23cd3686-a798-4619-9c43-6dab6d5a0eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f569fa6-3e74-4047-9e3c-871826198646",
        "cursor": {
          "ref": "730d0591-665d-4bd2-8276-bb6cce0a880e",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "41874161-0a45-4334-b721-470035c94765"
        },
        "item": {
          "id": "3f569fa6-3e74-4047-9e3c-871826198646",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ddcdbc19-8207-48b9-9370-8b41bc9a22ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3fc95f4-e0be-45e7-9c23-243cfecd9cb9",
        "cursor": {
          "ref": "10b66320-cc50-4b5e-bd59-244d332f8194",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "59f3c6b5-94b6-45bd-9639-c2ccc12a4464"
        },
        "item": {
          "id": "e3fc95f4-e0be-45e7-9c23-243cfecd9cb9",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "2ba554ca-60e6-4aa8-b063-16d4852678dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb0f17f-1131-4d4b-90eb-57b9209189a9",
        "cursor": {
          "ref": "7bd1d2ec-9954-4835-9579-d90b111f46ec",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f32bb02a-8550-4a8e-a4c6-9467746621eb"
        },
        "item": {
          "id": "5eb0f17f-1131-4d4b-90eb-57b9209189a9",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "04e326af-5e31-4542-a79d-e804f2986022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f69fda-bcc1-4bcd-8830-735dbf1b8179",
        "cursor": {
          "ref": "d565da03-ac0f-4216-bd27-a95bd2fc085d",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "946e2f35-83c4-412c-a079-4e2d52860f0e"
        },
        "item": {
          "id": "85f69fda-bcc1-4bcd-8830-735dbf1b8179",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "263b7680-8c22-4259-84c5-50533d4a6095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e81fb55-75cb-4798-b253-678645583690",
        "cursor": {
          "ref": "0d98264b-d0aa-4ac7-924e-423665ff91eb",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "4dd5201d-d59d-4549-8fa3-76d706eb4cf6"
        },
        "item": {
          "id": "1e81fb55-75cb-4798-b253-678645583690",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "abd876cd-06e6-43d0-8423-d62dd3fdd9a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebd5101a-8776-4ea8-8723-77052998df8b",
        "cursor": {
          "ref": "6ae4a0c5-da8f-439e-a42d-3c2b880f2d49",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "d46454c1-e5a5-4b75-8b53-8241b0b76c56"
        },
        "item": {
          "id": "ebd5101a-8776-4ea8-8723-77052998df8b",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "853899e5-5231-43a2-a142-d4c8e8e06080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e37bde4-5146-47cd-aea3-dfb4d3638eb8",
        "cursor": {
          "ref": "9c296fae-e835-400d-8fcc-1f39e3685c4a",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "2034ab60-7157-47bf-a5ed-ebb317fc91a7"
        },
        "item": {
          "id": "0e37bde4-5146-47cd-aea3-dfb4d3638eb8",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "192ef45f-7988-44b5-a791-1b94dc212180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a4bd206-9fed-4ae2-a4b6-7ddae5754e5e",
        "cursor": {
          "ref": "239f4351-81c9-41e9-9d32-f2695118e936",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "19a4b12f-7f56-4e32-b515-3d0987f1974d"
        },
        "item": {
          "id": "0a4bd206-9fed-4ae2-a4b6-7ddae5754e5e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a8b06c21-1b28-4ac8-8359-7e560a3b8a35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed484d66-8295-4c36-a438-89c642348340",
        "cursor": {
          "ref": "3cdc2d10-0639-40dc-9ad7-2c2367f368ed",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "ce04bb2d-40ba-452f-a422-168f3d20590b"
        },
        "item": {
          "id": "ed484d66-8295-4c36-a438-89c642348340",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "108bd32f-8858-4dad-b804-c68421b4cd1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "581c0ae8-052a-456b-a710-bad389ec8d2d",
        "cursor": {
          "ref": "2f8267ca-d724-4796-a407-aee4684d777c",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d65c00bc-92ca-4a1c-9bfa-bc3f8d9f1687"
        },
        "item": {
          "id": "581c0ae8-052a-456b-a710-bad389ec8d2d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "10ce6aac-091a-4c9f-9f51-37fd52c3143b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f3e9dd5-4617-4fb1-9b0d-bb7e7a1dbded",
        "cursor": {
          "ref": "b3427ab2-03ab-479e-b225-c913848df20d",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "fe0f2940-c8a7-42d7-9eb3-59fc00300a05"
        },
        "item": {
          "id": "0f3e9dd5-4617-4fb1-9b0d-bb7e7a1dbded",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "e7d50569-b49e-4f3f-95a3-502e5dca10d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f36104-7928-4266-88fa-c575965f3665",
        "cursor": {
          "ref": "dc5f80f4-cdc4-4ae2-ae89-af13cba72c62",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "767d4680-9802-4215-b3d2-e0d9d1d1c4da"
        },
        "item": {
          "id": "88f36104-7928-4266-88fa-c575965f3665",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d172a75f-e371-44d9-9750-0cb167f405a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc604781-e4b6-4f67-a909-afb92e6d8170",
        "cursor": {
          "ref": "315d083d-a173-43d1-a96f-846f77cc0c1a",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "fd3393fd-8cd4-4690-8393-19a7dacdbba2"
        },
        "item": {
          "id": "fc604781-e4b6-4f67-a909-afb92e6d8170",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "7842a8cf-6212-4c7c-8aa1-4f770cec77ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3071120a-f495-4fb1-814e-565033d74f64",
        "cursor": {
          "ref": "a4249f36-28a4-491e-bfbe-49d7c23b931f",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b5077929-ac84-474a-81cc-1ec5a9862dfe"
        },
        "item": {
          "id": "3071120a-f495-4fb1-814e-565033d74f64",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "8c0c931e-45a2-4b00-8de0-51d45caf5807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1df801f3-a257-4294-b277-e6f59cf8155d",
        "cursor": {
          "ref": "a55a33f8-d64c-4bf8-aadc-2da4948d90c4",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "bf8d016b-3f64-4f38-a969-6c2e59f07bff"
        },
        "item": {
          "id": "1df801f3-a257-4294-b277-e6f59cf8155d",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "1d70d1ff-c43b-4770-a6c8-3d4727ec66d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61b8c00d-c656-4c50-8059-7dfd8ed6cc49",
        "cursor": {
          "ref": "1b68536b-15a7-4546-b3a7-a96fe17d80c4",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "0786bf0e-4320-4745-a0af-a1e9405447f2"
        },
        "item": {
          "id": "61b8c00d-c656-4c50-8059-7dfd8ed6cc49",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "43a34c59-3846-49a5-88ab-f68d3ae44744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb03f903-0890-47ec-b4ab-e9d90504c9a5",
        "cursor": {
          "ref": "25ee5104-8523-4e4c-be1f-45b240954db2",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "1a070a55-8269-4e4e-906b-6c995cc0167b"
        },
        "item": {
          "id": "eb03f903-0890-47ec-b4ab-e9d90504c9a5",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "fb9dcbf0-b260-427b-ba96-a480b460f722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d01677ee-11ac-4b65-8056-49037eb85c61",
        "cursor": {
          "ref": "908499fe-4f4b-45b5-9ce4-0c3054dc5407",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "a39b654e-50d9-4dc0-86ec-5ff2d70a0db3"
        },
        "item": {
          "id": "d01677ee-11ac-4b65-8056-49037eb85c61",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e1d8dcea-e539-4a33-a770-afaa3db48665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ccbe79-57b5-4aa4-805b-32e1fef1367a",
        "cursor": {
          "ref": "b86da692-66ea-483a-ac98-25f4934591f1",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "96f94b2b-865f-4f64-bd9b-a8894933d239"
        },
        "item": {
          "id": "89ccbe79-57b5-4aa4-805b-32e1fef1367a",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "82a9d4af-3a1c-4dba-b768-374ea56195e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2413c266-73f3-4054-9d48-067cd4db8fb9",
        "cursor": {
          "ref": "bedb87e8-6e3a-4c65-97b2-ecca07132c17",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "56468576-f673-4718-8c65-d2a29c6e4c7a"
        },
        "item": {
          "id": "2413c266-73f3-4054-9d48-067cd4db8fb9",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "68acd6bb-3f6e-435d-b04a-3d2683168d2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc710f6-9d17-4d08-9f3b-6f2047e1fc32",
        "cursor": {
          "ref": "9f9c69b0-3418-4e9c-963d-aeac1dbc42bb",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "04b86bc3-c790-4643-a31f-598e776bc6f8"
        },
        "item": {
          "id": "dcc710f6-9d17-4d08-9f3b-6f2047e1fc32",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "93082480-ea2e-4f9d-8985-cb864cbd3ba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "461743e3-ea2b-4c76-aefb-9bddb3c7c497",
        "cursor": {
          "ref": "836f931c-1adf-4a34-8f2f-ab343f3b82c2",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "fdee82b1-3c11-44c3-8b5d-455b74c29c40"
        },
        "item": {
          "id": "461743e3-ea2b-4c76-aefb-9bddb3c7c497",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "9a1dbc56-1d3a-4ce1-968b-bec938e7d6ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "676b317e-9e9b-443e-a450-69c1ccdc8d43",
        "cursor": {
          "ref": "8dee6a2b-cea6-4a79-bf2d-9f8d5b518b70",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "7e9e2f3d-0206-4a34-9723-cb06081c3eaa"
        },
        "item": {
          "id": "676b317e-9e9b-443e-a450-69c1ccdc8d43",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "a88012bc-e04d-4534-af30-2a710fa8813b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82e071a7-f89f-48bc-a264-4413682576ae",
        "cursor": {
          "ref": "ce5a5c29-3725-4e4c-a105-37fa08f2aa8e",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "f8c8a50b-0a6b-496c-acde-de56b8eacba5"
        },
        "item": {
          "id": "82e071a7-f89f-48bc-a264-4413682576ae",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "6ca889ec-bf23-43f1-96be-d4a09ed5a9a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37bb3889-0234-432b-ac48-60713390247b",
        "cursor": {
          "ref": "42650977-6b5a-40f1-9de6-678a4d36e7bb",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "901c3a65-d0fc-438c-b6b2-4022cfc63a4f"
        },
        "item": {
          "id": "37bb3889-0234-432b-ac48-60713390247b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a90fafc9-52cd-4472-a0fa-27bf22016d44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e36aef44-9f1b-4762-8603-21d6ad6e2985",
        "cursor": {
          "ref": "878a68ec-1b46-4cec-befe-4eadda29c18a",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d02e0923-d211-452d-b864-4a9ca4fb1649"
        },
        "item": {
          "id": "e36aef44-9f1b-4762-8603-21d6ad6e2985",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d1684b5d-015f-4be3-9a38-283f89b0310c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "787f74fc-d0df-47ab-8f71-d6f1b30ef5fe",
        "cursor": {
          "ref": "6bffaed7-9013-419e-bf7d-6958f8acd3a5",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "69a46784-ea3c-47df-ab6a-4693178333be"
        },
        "item": {
          "id": "787f74fc-d0df-47ab-8f71-d6f1b30ef5fe",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "d444b2da-d686-4f87-91f4-23bf87c6ac16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee5cd09-00a1-45e1-8ea5-946cd2e9432e",
        "cursor": {
          "ref": "6d38fd93-f2ba-4feb-9e7e-dbcbe7d214c3",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "24e6a38d-6dd8-402b-a0b4-656d875f37ef"
        },
        "item": {
          "id": "cee5cd09-00a1-45e1-8ea5-946cd2e9432e",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "316f6c3d-efea-4eca-b873-8020f2df54ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af3a70e-ca13-438a-943c-f309329abbdd",
        "cursor": {
          "ref": "a03ff846-1043-433d-a43b-0092be98a21a",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b7469f9b-1929-437d-987e-26d82c7d456d"
        },
        "item": {
          "id": "9af3a70e-ca13-438a-943c-f309329abbdd",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d6136ac6-0fbe-4b85-bf42-c695d91e3714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "879eda51-83a0-4d7c-bbff-d88672bd68ec",
        "cursor": {
          "ref": "238a45ae-e1d2-489b-8c36-bc87b046c558",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "cef97789-2850-4580-8af0-827011f441b1"
        },
        "item": {
          "id": "879eda51-83a0-4d7c-bbff-d88672bd68ec",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "9ff11590-d66b-4a14-9ca3-87b69d4da7e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28162f79-dff6-40e3-99c1-e0492b9e8563",
        "cursor": {
          "ref": "9db99b81-efb1-49af-8bcd-619aa690e2dd",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "85fa1fee-5737-42f9-af47-2be9d0ec087d"
        },
        "item": {
          "id": "28162f79-dff6-40e3-99c1-e0492b9e8563",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f9a19741-0a3e-4066-bff1-426b2ce421c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd4f74c8-3cf6-406c-8e51-9d05e9612331",
        "cursor": {
          "ref": "e79aa852-e043-4500-98a2-6c664a1fd17b",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "81f8ee01-fbbb-4ab1-94a7-cbfb1ac0a692"
        },
        "item": {
          "id": "cd4f74c8-3cf6-406c-8e51-9d05e9612331",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "a5091ba3-41c8-4f0f-ad5e-8e39c87b48f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7b53ee9-33bb-43dd-97bf-920d980bc961",
        "cursor": {
          "ref": "8a7faf98-a50d-4055-801e-7d0891352c4e",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "bb9789dd-c9bb-452b-9b6c-b46b325f37c6"
        },
        "item": {
          "id": "a7b53ee9-33bb-43dd-97bf-920d980bc961",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "cc1e870f-b119-4382-beee-c13b5615a66a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66d41445-6b7f-4a11-96f4-2d0640c1debf",
        "cursor": {
          "ref": "878a4cf1-4fe7-4040-bc21-f285e59a94f6",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "601aac34-c0bf-45e9-902c-75fcc55094e8"
        },
        "item": {
          "id": "66d41445-6b7f-4a11-96f4-2d0640c1debf",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "f7230e7f-307f-4d4d-b296-d057ca6e7e37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d694aaa-16c6-4474-bad0-5c5ad4ea01c5",
        "cursor": {
          "ref": "40e25082-eaf0-43a0-bdb2-31364e753acc",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c65cd128-fb83-4650-b6fa-6049016b042d"
        },
        "item": {
          "id": "2d694aaa-16c6-4474-bad0-5c5ad4ea01c5",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "4e55451d-5421-4e30-b0de-2945f963afaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20864494-17c5-410a-955b-30998fa0cd7d",
        "cursor": {
          "ref": "c05feb87-d1ad-4a60-8821-b6e85aa55be6",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "edeeb9b0-9ebd-4ad2-ba95-b753be3faaf6"
        },
        "item": {
          "id": "20864494-17c5-410a-955b-30998fa0cd7d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "977b8eaf-d0ff-49ba-a221-9fb5b6b07009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "381f4b3e-73b5-46a3-9265-d9e51bf3df5f",
        "cursor": {
          "ref": "1e083a68-8514-474e-8300-a07060fad53e",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "6bd83a11-d8b7-4838-b6b0-88326df28436"
        },
        "item": {
          "id": "381f4b3e-73b5-46a3-9265-d9e51bf3df5f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "9d7665d0-1239-4d52-b5f8-9c5f892c480e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42130842-dbe7-4ff8-821c-9e6ec9f4562d",
        "cursor": {
          "ref": "cda6399d-c189-4bb6-8fad-74bf70d333a8",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e63343e4-960a-4255-adee-a43095426fa3"
        },
        "item": {
          "id": "42130842-dbe7-4ff8-821c-9e6ec9f4562d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f4f046e1-0b75-4c08-a5bd-7ad4435601e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17fe4af0-2cef-4f56-946d-864b1b052706",
        "cursor": {
          "ref": "42b9b3b8-9edc-45f0-bb8c-b9c3f66fd9d1",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c8f66d47-24a5-410a-a826-230a6f1fbf76"
        },
        "item": {
          "id": "17fe4af0-2cef-4f56-946d-864b1b052706",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "7605ada1-bb34-4e38-ae49-b4670fa26532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c501f47-4f73-44a3-805b-c364ed5e4b09",
        "cursor": {
          "ref": "ac09b546-8423-4887-9127-00980109e260",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "3c6d30b4-639d-47ef-bc26-01c14d86c66e"
        },
        "item": {
          "id": "2c501f47-4f73-44a3-805b-c364ed5e4b09",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "6ded5205-a600-4800-9327-56e23ae1202c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f57f896-e935-429a-8c94-e1b88ad286fb",
        "cursor": {
          "ref": "1f75409d-614e-4c65-8947-a71d59998f95",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "e9b5b2f2-7697-4eab-8b1a-5c6f0fb2d1e5"
        },
        "item": {
          "id": "0f57f896-e935-429a-8c94-e1b88ad286fb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "0ba73dc9-3835-4385-b635-21f9c7f62657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d84ddd-e347-40a8-be0d-e6acb3ba8553",
        "cursor": {
          "ref": "63084f5f-8034-4f5a-ab0e-4952c6275c17",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "4526e8dc-09a0-4e97-92f0-5aaf7a143018"
        },
        "item": {
          "id": "75d84ddd-e347-40a8-be0d-e6acb3ba8553",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "c2bc7b2c-45e5-4b3b-ab2c-521daaa3967c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead599c9-f7fc-4f5e-868c-ebaf725942d7",
        "cursor": {
          "ref": "3dc6747c-570a-4329-b0bc-05df56336808",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ff229824-282a-4cdf-96fb-a0ef597af1b6"
        },
        "item": {
          "id": "ead599c9-f7fc-4f5e-868c-ebaf725942d7",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "3a4c3b1c-d2ba-4fe7-8244-a80ba26e29a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77df1370-1253-41fc-ba4c-0cdf034d7300",
        "cursor": {
          "ref": "fceaa8eb-7124-416f-a974-d2a6505f2bf3",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ed18c709-94e6-48ec-9f20-0a686d2060fa"
        },
        "item": {
          "id": "77df1370-1253-41fc-ba4c-0cdf034d7300",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b301d42f-c9e9-4a2a-b43f-6dfbd14aecc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fe45081-851a-46cb-966b-f64fcb21ce6e",
        "cursor": {
          "ref": "f41c4971-cfd3-4632-b0eb-ade58ed46263",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "db873d21-73f2-478c-a693-60e39c41f0a7"
        },
        "item": {
          "id": "9fe45081-851a-46cb-966b-f64fcb21ce6e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "35c55c88-1e78-4872-b9ca-bba011bdf408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb5c85f5-f4aa-4264-952b-b5701dd84a65",
        "cursor": {
          "ref": "8006fbe3-236d-4567-acce-84eaf8d71cc5",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "85798976-5b5b-48dc-ae6c-4a5dc23f5304"
        },
        "item": {
          "id": "bb5c85f5-f4aa-4264-952b-b5701dd84a65",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "aed1967e-b8ec-4cb0-bfb7-9615db981497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e532811b-9a45-4b86-92a3-d6d473c2ee4a",
        "cursor": {
          "ref": "c726fdd3-107a-43b7-8196-d5e114973d36",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "fc519452-ac39-471d-8f59-531850509b18"
        },
        "item": {
          "id": "e532811b-9a45-4b86-92a3-d6d473c2ee4a",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ad716ae9-c663-43c5-8d4a-081c1c8e1470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c272bc-945a-4426-be17-b6701904f288",
        "cursor": {
          "ref": "3b202e8e-3942-49a9-be92-79afc00272f2",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "81ce0e6b-77eb-4480-9485-f35184872ace"
        },
        "item": {
          "id": "35c272bc-945a-4426-be17-b6701904f288",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ac49a7e6-6965-456a-a024-badc3a384a09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8725795-b754-4b9d-b3da-de7dc92ff1d6",
        "cursor": {
          "ref": "69a25f18-3641-41b1-b5f4-a45c16a2be27",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "554dd27b-91cf-462f-ba00-d26445d351e8"
        },
        "item": {
          "id": "a8725795-b754-4b9d-b3da-de7dc92ff1d6",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "8854fcb2-6a97-4cf0-96ac-9f27176640b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ec00ca-9640-46b4-be61-022230b4537a",
        "cursor": {
          "ref": "51518fd5-3a2b-4ec8-888b-8bd8ecb104bf",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "c260a984-c204-4f09-8723-4e1b6e0b76d0"
        },
        "item": {
          "id": "64ec00ca-9640-46b4-be61-022230b4537a",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "12754431-1a12-4099-9d4c-cba2db42718d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d21bbdb-ac00-43e3-a77a-0c8a02c68579",
        "cursor": {
          "ref": "770924fe-24d4-4c38-942f-1b7027943258",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "c25c69b0-0c1d-41c5-b3cd-8a5afc9e0640"
        },
        "item": {
          "id": "8d21bbdb-ac00-43e3-a77a-0c8a02c68579",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "b82f9a74-df9e-4042-9650-3d62fd26e5c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36462b0e-c3b5-4885-9dba-e77736e8888b",
        "cursor": {
          "ref": "83ad3453-56a1-46fa-8b1d-c358b7733249",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "e6a01cd3-2e37-4cc6-ba94-877f9f543224"
        },
        "item": {
          "id": "36462b0e-c3b5-4885-9dba-e77736e8888b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "fde2328a-900a-4b0d-a933-7c984c1609aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "664e694a-a61f-4c29-a3cd-89a0cca2b6e5",
        "cursor": {
          "ref": "e901e356-248b-4038-9579-e3cdc57ec115",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "b0c28cdc-7bba-4513-b824-ba24bc3e7664"
        },
        "item": {
          "id": "664e694a-a61f-4c29-a3cd-89a0cca2b6e5",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "589f6662-009a-4a75-86d5-040b52544dd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99cec85b-ee0f-40b7-83da-8032c5530f5a",
        "cursor": {
          "ref": "2b0016ae-de7b-4963-a40a-74e5c2a49721",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "073134aa-277a-47f7-ba86-a3a4b46605ec"
        },
        "item": {
          "id": "99cec85b-ee0f-40b7-83da-8032c5530f5a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "3bb3052c-a9e0-478f-854d-ab4cfdf143c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f73982f5-fecb-4da3-a5f4-6c26c1ed52a2",
        "cursor": {
          "ref": "0c5bdc28-77a1-4f70-9904-b5aa518a0080",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "ecf0c1ff-c550-42bf-8841-5567558a0a1d"
        },
        "item": {
          "id": "f73982f5-fecb-4da3-a5f4-6c26c1ed52a2",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "cd0b27d8-4a41-4173-9891-7c0bb9d84b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e9a0085-8d7a-49d6-b353-c0d93dbdca27",
        "cursor": {
          "ref": "60b7fa00-ba6f-490b-bf68-b621e8aaf239",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "59947a68-89a1-47fb-b9f5-0304382f4058"
        },
        "item": {
          "id": "3e9a0085-8d7a-49d6-b353-c0d93dbdca27",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "1ef865db-372b-4e50-9b12-0932c66a6243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84676542-4495-4be6-9b16-8640b0924d8b",
        "cursor": {
          "ref": "b4766174-4e72-454c-bffd-7196d88edae6",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "c2cd3e07-b799-41a1-8368-031424d8fbba"
        },
        "item": {
          "id": "84676542-4495-4be6-9b16-8640b0924d8b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e897dcfc-54b0-40c9-919e-a6e59fdf28ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a798e7d-789a-4ca6-8f4d-56de18e4031e",
        "cursor": {
          "ref": "d747e0f6-f423-4c7a-8434-6039dc824c5b",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "ab0010b3-474a-4fc8-8cbe-7848ec6a7d0e"
        },
        "item": {
          "id": "9a798e7d-789a-4ca6-8f4d-56de18e4031e",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "dcb969aa-7373-4028-8747-4b6beedf254e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eebb46bd-559a-4234-bd08-baad570dc90d",
        "cursor": {
          "ref": "7e7c2632-00e7-435c-b5df-51f8da025dbc",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "ddde552f-c845-422d-a2a6-3d048dc35c9f"
        },
        "item": {
          "id": "eebb46bd-559a-4234-bd08-baad570dc90d",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d418b554-5eb5-4482-a2ab-008c25f268b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d9c1af9-7112-4944-91b4-cabbe5ca6e83",
        "cursor": {
          "ref": "15c54911-de89-4b69-819f-51b8556e3062",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "06f5dd1d-f5a4-4631-9556-723551b64211"
        },
        "item": {
          "id": "7d9c1af9-7112-4944-91b4-cabbe5ca6e83",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "280392b3-c374-409c-9514-149e809bf395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c70926d-11d9-4aa1-9a2c-e118091b0db2",
        "cursor": {
          "ref": "0c3e91bf-43f2-40c8-958c-e86b1fba17bb",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "9949f9ae-c4a5-45be-8c61-2fe99b604453"
        },
        "item": {
          "id": "3c70926d-11d9-4aa1-9a2c-e118091b0db2",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "1ab4d1cf-b8cc-46fd-9c25-d78fc4c78241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c9bece1-9301-44df-b2ba-e9e4f48f616f",
        "cursor": {
          "ref": "f958e881-f715-4048-8abf-bc8fa567684b",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ac819c13-6874-4293-ac7b-7685f10b5a97"
        },
        "item": {
          "id": "6c9bece1-9301-44df-b2ba-e9e4f48f616f",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "ebafeb83-dbc3-483d-ae6a-604f5ea0bc6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7f528ba-45e3-430c-ab0f-7e1a5622b26f",
        "cursor": {
          "ref": "8e861004-e628-4ec8-96fa-8803b2173d76",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "d332397f-48a0-443b-bcbb-6c86e68dd927"
        },
        "item": {
          "id": "e7f528ba-45e3-430c-ab0f-7e1a5622b26f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b3526405-4685-48ea-8996-2f1452cd0afd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e815a942-c8e8-43f5-beea-0d2331c3029b",
        "cursor": {
          "ref": "8a018ce7-ef3a-45a8-9ffe-9e6db2cf912f",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "8da43be7-dfeb-498e-9311-295963c92d8a"
        },
        "item": {
          "id": "e815a942-c8e8-43f5-beea-0d2331c3029b",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "e89c64eb-711f-440c-909e-b5135a362ada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c0be2d8-25d4-493a-b317-903741551b00",
        "cursor": {
          "ref": "e20d78cf-7c52-49d9-919c-3cb055450a15",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "cb6dab03-fd28-4a73-9314-c6bbb715f028"
        },
        "item": {
          "id": "8c0be2d8-25d4-493a-b317-903741551b00",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "9c2cdf8c-ca31-4f4a-80ce-6296a65bc2a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f9bd3eb-cc3c-423d-ad2d-d40e2002f1c4",
        "cursor": {
          "ref": "ddcacc9e-6d04-4ffe-888d-faaf1385d4de",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "296bb43f-d447-4ec3-a4c4-752f8bd9ea09"
        },
        "item": {
          "id": "8f9bd3eb-cc3c-423d-ad2d-d40e2002f1c4",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "f83719bd-4876-4554-bdcb-f686fb407b4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c563c1-94f2-4ebb-a404-9d0db325a027",
        "cursor": {
          "ref": "5717ba15-8380-4523-9530-960d6af02109",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "07b84673-a8dc-4a83-a03d-7653fe1ea2b6"
        },
        "item": {
          "id": "30c563c1-94f2-4ebb-a404-9d0db325a027",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "b975b01b-7a0e-4cc5-8a46-e03c0d1505d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c6a93b-43e6-4e52-9f95-189355706c12",
        "cursor": {
          "ref": "181bf05f-d7f7-4b6d-8b7e-f4fe567decef",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "32b1c971-a43b-49dc-ac50-0680be95323a"
        },
        "item": {
          "id": "44c6a93b-43e6-4e52-9f95-189355706c12",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "cdc915b6-f25d-4bd3-9a29-b4f93f58bd4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23cf97ea-221e-45e4-8b74-013eea3ddbbe",
        "cursor": {
          "ref": "381df90f-ee25-48cf-a5ab-d3a17110c8af",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a0e6187e-b301-4f0c-8ff4-5a9ef1d320f3"
        },
        "item": {
          "id": "23cf97ea-221e-45e4-8b74-013eea3ddbbe",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d1582f64-251b-48fa-a3cc-6ee71930cc31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0a3defc-a142-41a2-824f-cda3a0abb741",
        "cursor": {
          "ref": "41680d95-80d0-4e92-bde8-d907dca98b78",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "467aa536-1938-4035-bc4e-e97b5e47ba3c"
        },
        "item": {
          "id": "e0a3defc-a142-41a2-824f-cda3a0abb741",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "9ef00183-9c99-4206-ba76-860ef242ec81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36c29dc1-bf71-4d58-8a2e-b012dc0ec125",
        "cursor": {
          "ref": "60fb1b31-db45-4900-91a7-0cf91b39623d",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e2bd2f0b-e852-4d98-95cb-5149455f8143"
        },
        "item": {
          "id": "36c29dc1-bf71-4d58-8a2e-b012dc0ec125",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "053e4a8c-50cc-4053-862e-f29525e56f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b50932-7bd3-4603-be97-479cc82671de",
        "cursor": {
          "ref": "220c6e43-3410-45d2-ac4a-2f2daadae383",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "9eb18c74-0197-4a68-8bb8-d33d012d53b2"
        },
        "item": {
          "id": "d6b50932-7bd3-4603-be97-479cc82671de",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "fb21e215-7bc7-4e3e-a097-8ac45489afe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f77a56-3259-4d43-bd73-a255595d5f77",
        "cursor": {
          "ref": "1445b0b9-cf30-43fe-8aa5-e3482c7acd24",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "5461c3f8-a586-4f77-b96a-be0ab373af02"
        },
        "item": {
          "id": "86f77a56-3259-4d43-bd73-a255595d5f77",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0330842f-dd87-45ae-bb24-cfb0f8bef650",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f8daee7-dfe3-423c-a654-8903c02a98bc",
        "cursor": {
          "ref": "78142bed-bf83-4b36-ae5a-5a8b4b6195ed",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "c9912344-f484-4477-9300-f0b677a91bf1"
        },
        "item": {
          "id": "0f8daee7-dfe3-423c-a654-8903c02a98bc",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "6b568e65-7e96-49f8-9ae9-44dbfbe12b71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "9e8290b8-33b9-4673-a534-e07ec3fd9ebb",
        "cursor": {
          "ref": "abb64998-bfb0-422e-a066-3f81fa18fa95",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "dc685913-ec49-4bf6-898b-b4944040edfb"
        },
        "item": {
          "id": "9e8290b8-33b9-4673-a534-e07ec3fd9ebb",
          "name": "credentials_issue"
        },
        "response": {
          "id": "8bb736a1-b5cd-49c5-805c-1b54313450aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "839e064d-1130-4cc4-950e-ea0a6ffac0e3",
        "cursor": {
          "ref": "aed20351-8cf1-48f8-adad-8000dc1fb719",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "fb4c0d55-170b-4781-885e-bd70a9822c5e"
        },
        "item": {
          "id": "839e064d-1130-4cc4-950e-ea0a6ffac0e3",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "efae014b-ded5-494a-8b9c-89a579cc7fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "82e96af5-c607-4106-a863-a3750bfb03f4",
        "cursor": {
          "ref": "0de632c9-3d3a-422e-9fed-572fdd9ca5da",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "271598c6-b612-4543-89f0-19bdbc55d8c6"
        },
        "item": {
          "id": "82e96af5-c607-4106-a863-a3750bfb03f4",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "656b2bfd-89ca-4fbd-9725-d1f823eb17ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "1a1c0dd7-98b7-4b9e-94cd-4a450e9384cb",
        "cursor": {
          "ref": "123bd85f-4675-4427-a3a1-21b66a0532cc",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "944ae965-be6b-4def-9315-806ba49bc320"
        },
        "item": {
          "id": "1a1c0dd7-98b7-4b9e-94cd-4a450e9384cb",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "9fd1026d-578e-4f2e-a2cc-342c6d1885d7",
          "status": "Created",
          "code": 201,
          "responseTime": 7459,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c5e0970-248a-4de1-a19b-6e4abd0f2aed",
        "cursor": {
          "ref": "ab2c0db5-ff67-401e-920e-5218b45de7fd",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "2a3f5d30-4b60-44c8-98a1-7abd40ee4eda"
        },
        "item": {
          "id": "1c5e0970-248a-4de1-a19b-6e4abd0f2aed",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "a852d402-ab95-4dc1-ac37-3cc97895aafc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "89773460-9a6c-45c5-844e-fb0ef8ffc778",
        "cursor": {
          "ref": "9c04a990-5bab-49fa-b34b-22978fa21562",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "1f53e8f3-d426-42c6-a1db-49c967582049"
        },
        "item": {
          "id": "89773460-9a6c-45c5-844e-fb0ef8ffc778",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "4d37cf15-50b2-486b-a512-deff5995220c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "982fd93c-27d0-44ba-bb38-1f7c25f92c42",
        "cursor": {
          "ref": "a7d36b28-b6e9-4bf2-b6f6-7e6c0ff1dbe7",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "19e8eb22-25fd-4000-9ef9-ac8a27b8f9dd"
        },
        "item": {
          "id": "982fd93c-27d0-44ba-bb38-1f7c25f92c42",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "616e0235-3928-4410-a9c9-52ca1ef12141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ea7df76-a239-41ef-bf1b-f04bc30e9424",
        "cursor": {
          "ref": "d77867e9-d7a8-40d1-afc1-d89adeb18635",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "270aa577-1379-4d33-8a04-599aa49eb8a7"
        },
        "item": {
          "id": "9ea7df76-a239-41ef-bf1b-f04bc30e9424",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a834e2e1-faf4-4594-92f2-7a6d3523c2aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a398b3-7ae1-42e4-895b-999fd9d67f14",
        "cursor": {
          "ref": "0ce097b4-7c1b-4010-978c-880a7e3c8642",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a669b85d-dde8-4754-96ea-d4a00e82207a"
        },
        "item": {
          "id": "82a398b3-7ae1-42e4-895b-999fd9d67f14",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "29130cf0-1e08-444a-8a90-87f2a5e001df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14be35d1-e85d-4d36-b786-f9d826dfb132",
        "cursor": {
          "ref": "29a3b427-3744-437e-ac91-02341a10e923",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "56fc5567-8797-4a9d-8985-b5da6401e2d3"
        },
        "item": {
          "id": "14be35d1-e85d-4d36-b786-f9d826dfb132",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1cd9600a-145b-49cb-8742-05c849d59e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d41f2e-470c-41d4-9a47-8e3a8dc1fba2",
        "cursor": {
          "ref": "9ecf0895-91eb-48a4-8a8e-b69c4ff2f7a1",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "06c895e2-6af7-49d1-8043-ad543dd456a4"
        },
        "item": {
          "id": "97d41f2e-470c-41d4-9a47-8e3a8dc1fba2",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "881eddb4-8f44-4be3-8e6b-a6921dc118bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "456c0a22-0d56-4db2-a9be-48b40e25ea62",
        "cursor": {
          "ref": "f9a89f55-cb49-45f7-9904-d56c6b0b164a",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f4357519-ede5-4d4e-9994-0577740363a4"
        },
        "item": {
          "id": "456c0a22-0d56-4db2-a9be-48b40e25ea62",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "193e028d-91ae-46b9-9547-a1ebf7332410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15fb033a-90ea-4029-a05b-173ba320141d",
        "cursor": {
          "ref": "9f91d91c-b4c8-4836-96fd-bec7d16732e9",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "5919cd7d-78ee-4b97-83ac-c525bea9c3df"
        },
        "item": {
          "id": "15fb033a-90ea-4029-a05b-173ba320141d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "16de3000-16a4-4eef-821c-41222647120f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d70ca54-f848-4141-af96-b5f466cd2150",
        "cursor": {
          "ref": "76b41449-4a2a-49ef-959a-b6c2253d942a",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "33018e94-6956-4094-aec9-e553fd274819"
        },
        "item": {
          "id": "2d70ca54-f848-4141-af96-b5f466cd2150",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b98c793c-27a4-4a18-b2cc-369e07840b6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "322a5715-050f-413b-8980-db05091a85fc",
        "cursor": {
          "ref": "c26cda8a-3193-4216-83fa-3210ba5598a2",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "859709a0-336f-4ceb-9dc1-107078d58076"
        },
        "item": {
          "id": "322a5715-050f-413b-8980-db05091a85fc",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "684e24c0-5d74-46b1-9491-e161744926db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "543aa196-a5e1-4d0b-a98e-9a2b17138e9e",
        "cursor": {
          "ref": "88a8f446-5c24-4881-9f99-cec993a67c5e",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "93579b77-4ec4-400c-ae57-72384b4804b4"
        },
        "item": {
          "id": "543aa196-a5e1-4d0b-a98e-9a2b17138e9e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b1abba11-e5d5-484d-8fbe-b563a759269e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c339333-fe53-4ba3-82eb-905a565baea1",
        "cursor": {
          "ref": "ad1d6358-1269-4ba2-b069-af7d9c558416",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "2dc85b59-c200-4e68-930b-9481b2aee4dc"
        },
        "item": {
          "id": "7c339333-fe53-4ba3-82eb-905a565baea1",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8d636332-adac-4dfc-91d2-014d1a23f1fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "302f5225-81ba-485e-a14f-910c3c2bac23",
        "cursor": {
          "ref": "d73320ff-06e1-485c-8365-6389b432cdd0",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "e51323ad-7484-46cf-94f6-3449c47e3e46"
        },
        "item": {
          "id": "302f5225-81ba-485e-a14f-910c3c2bac23",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1ec790e9-d22a-4d78-ac74-1fa4af900d5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24dc90be-265d-47cc-913e-cf61dba6e33c",
        "cursor": {
          "ref": "3a6aaa2a-83b6-4057-ae99-fb8c25a418f2",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "107462c4-f2b0-4c02-ba73-1719a3f2f803"
        },
        "item": {
          "id": "24dc90be-265d-47cc-913e-cf61dba6e33c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c4db3058-1db9-4fad-9a8c-bd56e9c5a6a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f4b608e-03ab-49e8-b6f4-315e38f67d15",
        "cursor": {
          "ref": "582f77ec-9381-4c5a-9954-67367e02bd74",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "d6a43703-e383-463b-88e8-cbc4b1e62e5f"
        },
        "item": {
          "id": "5f4b608e-03ab-49e8-b6f4-315e38f67d15",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "59e5b7c0-6a67-466b-b787-af8e45da5443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b325c5-7912-4895-aa71-0447a1f3d3f4",
        "cursor": {
          "ref": "6814a141-cb32-4035-a0cd-422351f160fe",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "9299ad64-3fef-42bc-8308-ad9cf0e21847"
        },
        "item": {
          "id": "48b325c5-7912-4895-aa71-0447a1f3d3f4",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a2d0c327-e8ba-4f11-a831-8168694dcb9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1641b960-3274-46a1-ae82-a1591092c760",
        "cursor": {
          "ref": "ef284f1a-774c-4b35-9714-b41ab52c0552",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e48d847d-f1cf-407b-8434-7fec2f5323a2"
        },
        "item": {
          "id": "1641b960-3274-46a1-ae82-a1591092c760",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5e6e05c6-33a8-43f3-a18a-bcf191122bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d624a56-fc31-497e-ab44-378d28b03bbc",
        "cursor": {
          "ref": "294eec8f-0172-43dd-ab9b-6a944f7a8d6a",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "1eff73bd-6fdb-4b62-b13b-521b8af0c1f7"
        },
        "item": {
          "id": "0d624a56-fc31-497e-ab44-378d28b03bbc",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3f1cc2a9-cdd0-412b-abce-4c92068428c7",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 48,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "ec5324bc-b0ba-4925-85ba-246ac42e6f25",
        "cursor": {
          "ref": "98e2ccf9-1ac6-4337-8b78-6877f87f54bb",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "6f4d1e51-cfe7-4905-942c-0d25d67b772b"
        },
        "item": {
          "id": "ec5324bc-b0ba-4925-85ba-246ac42e6f25",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "cf4c844a-f77c-4aa0-9fdc-d15cc3056117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e689898-483b-44e2-9683-202eccd67f17",
        "cursor": {
          "ref": "e7f73fea-faea-4cb4-8110-ae5c338a4971",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "7c9b6566-6dfd-4327-b749-f0c321da56f7"
        },
        "item": {
          "id": "4e689898-483b-44e2-9683-202eccd67f17",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "adcab102-9483-4a0a-9470-c378bb8f3c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6644baec-aa37-42e8-880d-c94e0563be01",
        "cursor": {
          "ref": "5f17713e-775b-427a-8584-6150c99704f5",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "fc7c52a6-456e-4488-ad39-3cce7668027e"
        },
        "item": {
          "id": "6644baec-aa37-42e8-880d-c94e0563be01",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d0891ae2-9c2e-4d69-a4e5-a14ba0b8e9d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ab9e286-a962-4689-a692-45027b53d555",
        "cursor": {
          "ref": "77b8de6e-f646-4381-9619-31f394380e45",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "3ec6bca0-9393-4f8e-95df-f704a1498526"
        },
        "item": {
          "id": "4ab9e286-a962-4689-a692-45027b53d555",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f06bf8c2-9536-4e63-9a13-393f1e780410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a33fa922-78b4-48b1-a11c-e8512eaccaab",
        "cursor": {
          "ref": "4a7b2c57-0c58-4ba7-8dea-2c754352a832",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "980646be-a63d-4f34-b871-4f34624e1204"
        },
        "item": {
          "id": "a33fa922-78b4-48b1-a11c-e8512eaccaab",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e5e4381c-a375-4fa2-8895-036b45e4bceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8159c618-8268-424a-9f76-cf15a46c2c0f",
        "cursor": {
          "ref": "7098152c-fc3d-4616-bb3c-ab3dce7489c7",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ee47cd18-faf0-4f2d-91f0-6c541c390841"
        },
        "item": {
          "id": "8159c618-8268-424a-9f76-cf15a46c2c0f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f123b0a6-3251-47b1-a09a-4a02d6b8e19a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6bff0da-518d-4cae-87ac-b698c3b952f1",
        "cursor": {
          "ref": "fd3e6f55-537c-406e-932e-0fea9db0008a",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c080b705-696c-4e30-9889-45cf936904c5"
        },
        "item": {
          "id": "a6bff0da-518d-4cae-87ac-b698c3b952f1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b94ba15e-4ea3-4053-bba4-b3b9113768c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e68b910b-4df6-4533-9c69-2a0c6fc7bbe8",
        "cursor": {
          "ref": "f362665d-90b0-40c6-a90f-cf49d9d1ffc7",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e6d3498b-e8a7-40b3-97c0-251c1ad6c1a6"
        },
        "item": {
          "id": "e68b910b-4df6-4533-9c69-2a0c6fc7bbe8",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ab248464-c095-4f01-94a4-a724c2a0f6f4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 45,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "ad076789-932f-44e1-ab46-b16eda5a514a",
        "cursor": {
          "ref": "f4eb2b91-e08b-4fbe-94c9-4f4ef7d1ddcb",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "1eb07a67-f448-404a-84cf-16df05dd351d"
        },
        "item": {
          "id": "ad076789-932f-44e1-ab46-b16eda5a514a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4da8b3fa-b960-43bb-a1d6-e8b24c0d97ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "851df506-231f-4aa9-9dee-780c00b956ca",
        "cursor": {
          "ref": "dc6bb220-a90b-4bf0-a812-8d99b0f3c6a0",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "48be5843-4a5d-411a-8b15-2ef752b62132"
        },
        "item": {
          "id": "851df506-231f-4aa9-9dee-780c00b956ca",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "cb0637d0-e3c3-4b0b-b940-f9bb8bbbfce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c078e3d-92b8-4793-a043-876987495d5c",
        "cursor": {
          "ref": "b6eb04f1-891b-430d-ac01-d523ac80bc04",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "284f5169-a85f-4a8c-8d54-ef3f331331a2"
        },
        "item": {
          "id": "5c078e3d-92b8-4793-a043-876987495d5c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "191fbd52-5945-4586-aed9-10574da5b5ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00ac1ef0-0d5e-4f09-8323-da075270a920",
        "cursor": {
          "ref": "ab85f147-2068-4445-ba17-a4a7c640258a",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2101cc46-3785-4f8b-ac9f-6e88313ef8ca"
        },
        "item": {
          "id": "00ac1ef0-0d5e-4f09-8323-da075270a920",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d35e88cc-6142-42aa-a8b5-92c2a9b14ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1916932-66e0-4fd8-843f-a59a73fa0451",
        "cursor": {
          "ref": "2853a5d3-7c25-4793-8370-7136be90d0fd",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "6f601a23-84ee-47e7-bba3-028060a73c9d"
        },
        "item": {
          "id": "e1916932-66e0-4fd8-843f-a59a73fa0451",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b31d0dc7-9d5c-4b8f-b75a-8f41a30bfdb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1957a16-acd6-42e8-889a-d77883905bb9",
        "cursor": {
          "ref": "5d6e44b6-0ab7-4f60-875f-a07552822e15",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "556a6194-bec8-4d4c-98ad-02fb2304c246"
        },
        "item": {
          "id": "e1957a16-acd6-42e8-889a-d77883905bb9",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6081353d-9d24-446f-a7bd-fc5383e28aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "041e2e48-f0dc-4d5f-8eb8-7229aa68cfcc",
        "cursor": {
          "ref": "e80c6859-671e-49dc-9f04-def25ebeab57",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "fed98b7e-3f41-421b-b386-a9e80b702d7a"
        },
        "item": {
          "id": "041e2e48-f0dc-4d5f-8eb8-7229aa68cfcc",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "3fdca634-4aa0-443e-9fba-37bb103b2a77",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 83,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "a15554fe-fbac-4a8e-a21e-b3d998e18c21",
        "cursor": {
          "ref": "039ec618-063a-4a2a-bca4-94d3075bd5f2",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "422a5a78-00fa-4fb3-b8ff-d1fe509bc860"
        },
        "item": {
          "id": "a15554fe-fbac-4a8e-a21e-b3d998e18c21",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b8ada374-4cc0-4b8f-bcfe-cd1e04b7d0db",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52e51129-e289-45cc-b124-e3a8d7e3160d",
        "cursor": {
          "ref": "27144349-229f-457a-840f-53d895347cc4",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "0b3c8388-3937-4194-afd6-93b4fc662afb"
        },
        "item": {
          "id": "52e51129-e289-45cc-b124-e3a8d7e3160d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3d61d44e-9446-4eea-bb53-eb7e0b6a1fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1eb353e-36a5-41d8-a818-8fa1fe59dbc4",
        "cursor": {
          "ref": "2dbabe8f-6597-4a6d-abc1-f8018b0a1f5d",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a41448a4-cd23-48d3-96f0-7161e75cbe27"
        },
        "item": {
          "id": "c1eb353e-36a5-41d8-a818-8fa1fe59dbc4",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1aaf42db-49e4-41b0-8fdf-7339a1720687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8f1e68e-4fed-4567-a4d6-582150965ec3",
        "cursor": {
          "ref": "dcf7a8f5-38b5-433d-8a09-9777cb4c361a",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "bd5e8463-512a-4cc3-a0a7-080cf81aea07"
        },
        "item": {
          "id": "c8f1e68e-4fed-4567-a4d6-582150965ec3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f9900adf-1c1a-4d0b-8ee0-a98f2e879a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "536af294-e6c2-4b6d-8d1a-315eaecc83a6",
        "cursor": {
          "ref": "c10fd597-c607-4cdb-99b5-b29cd9498da3",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "8afa6792-44b5-4d6b-b796-b6094e63305d"
        },
        "item": {
          "id": "536af294-e6c2-4b6d-8d1a-315eaecc83a6",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e7915ca9-ba10-4823-b390-295358205855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a8023b-8b5d-4688-bd4c-5cd530699dbe",
        "cursor": {
          "ref": "60d08300-989f-4fb8-a912-2eb5d3b99b6b",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "d07507b4-d8bc-4981-8e44-13279bbd4fb5"
        },
        "item": {
          "id": "a0a8023b-8b5d-4688-bd4c-5cd530699dbe",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "243bc068-4285-4e66-a416-8b1d1ce60802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "573d2a03-9188-491e-8b1c-cad6f84dfae7",
        "cursor": {
          "ref": "22e90dbb-b19b-457e-aa59-45c75d0b5b2e",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "51a0ce93-4dd4-4007-bbac-07d44327be39"
        },
        "item": {
          "id": "573d2a03-9188-491e-8b1c-cad6f84dfae7",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "6ad427ed-be93-46df-98ef-e9dd8397cf9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c0d448-301f-431e-bb0b-a8297e973b2d",
        "cursor": {
          "ref": "a1cb7572-a74e-4a42-94e4-970f8e1c73ba",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "43e6c638-bd77-4e95-86dd-8ef7cc67d50b"
        },
        "item": {
          "id": "16c0d448-301f-431e-bb0b-a8297e973b2d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7d4d2453-be8b-48f6-ab89-a632d46c2d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "825dc2e8-a663-4763-9593-f714a762c220",
        "cursor": {
          "ref": "116befdc-e491-4c6a-bc74-f00e87e56513",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "9d7de573-99cc-474b-8654-4ceaff557a64"
        },
        "item": {
          "id": "825dc2e8-a663-4763-9593-f714a762c220",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c20600b5-87c6-41b5-96e1-ef24d926adc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de12577-9bbd-44cf-a87d-85596d5c064e",
        "cursor": {
          "ref": "c74ff70a-5788-4a19-9546-d6bed63ca027",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "3fc0d60f-aac7-415f-ace6-126941f7115a"
        },
        "item": {
          "id": "6de12577-9bbd-44cf-a87d-85596d5c064e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5c78ffae-6e98-4cc3-a550-e4f6e4b1254b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90afd7de-c39e-42f2-8b1e-555b7c374e7e",
        "cursor": {
          "ref": "a42554c7-ceb7-438d-84ef-791c5e2347b0",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "12f355fb-b4fe-438d-99d7-f853073ea14f"
        },
        "item": {
          "id": "90afd7de-c39e-42f2-8b1e-555b7c374e7e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c9fa52f1-750c-4a16-a579-28e31189a6e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3635108-8145-46f8-986c-fa6f7c7e6d6b",
        "cursor": {
          "ref": "c4d3c277-b992-4957-b5e1-6364ee5b1523",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "fa427b8e-16c5-497b-a646-137ad1296fa7"
        },
        "item": {
          "id": "b3635108-8145-46f8-986c-fa6f7c7e6d6b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8a8a29c0-b8d6-4e0d-a60c-d84dbd46ef88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90881b72-b3ac-4bc4-9b01-f5784e2949b7",
        "cursor": {
          "ref": "282f4e6b-f165-49a2-bab8-7cfa9be02746",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "bbc4c1f8-2500-4d48-8de6-32a92eee67ff"
        },
        "item": {
          "id": "90881b72-b3ac-4bc4-9b01-f5784e2949b7",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b58009ab-2518-48f3-90ae-367bdb26d9bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9008724-094d-4670-9dd4-670b167336fe",
        "cursor": {
          "ref": "010dcdd2-f2e9-4df1-8a8a-82a9294671fa",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "60f17ec7-07d9-4235-8f7a-c792f6124d5e"
        },
        "item": {
          "id": "d9008724-094d-4670-9dd4-670b167336fe",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6c4943b9-0713-4cfa-8f54-4ca7f75a2548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad997208-a70a-4157-aad0-cd13ec73bacb",
        "cursor": {
          "ref": "853c8a5e-091b-48d1-b01a-8dee577b4bc9",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "d60297c6-4ba4-41b5-a397-a9dab55981c1"
        },
        "item": {
          "id": "ad997208-a70a-4157-aad0-cd13ec73bacb",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9af1ca06-1693-4825-8648-9036182623c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b4bb3d8-0bb7-4ec8-bb70-80447da4ef41",
        "cursor": {
          "ref": "7c5b78e6-813a-452d-961f-07ab93ac35ad",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "4cf965f8-33e2-495f-a26d-817f880f5700"
        },
        "item": {
          "id": "3b4bb3d8-0bb7-4ec8-bb70-80447da4ef41",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "54321682-98ed-45d2-ba92-3509582032ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25dfe4d2-fdb2-442f-9ec6-e60205cd1db1",
        "cursor": {
          "ref": "5481b9f1-d24a-4e4e-9c0c-f6148382687b",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "05710ebd-ca82-4d1c-8fa8-af6e3a1862e8"
        },
        "item": {
          "id": "25dfe4d2-fdb2-442f-9ec6-e60205cd1db1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "061d513d-bd01-4500-b339-6f395af4615b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91f41d9f-4f2d-4857-99e5-15405624f7d7",
        "cursor": {
          "ref": "af53cdd7-de3a-4f49-8ca3-67e63aeea146",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3d2b6216-df2f-429f-8f40-9817880b4de4"
        },
        "item": {
          "id": "91f41d9f-4f2d-4857-99e5-15405624f7d7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7ba3cbc6-bbac-4e37-be93-51605c4bbdeb",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "64cccdbb-8d52-440a-bf31-649719122286",
        "cursor": {
          "ref": "1e295691-6fbf-464e-97d9-631f7ded0463",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "ae856066-8285-4363-81fc-feaaaf5ac9d0"
        },
        "item": {
          "id": "64cccdbb-8d52-440a-bf31-649719122286",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "989e15f6-f953-4f80-8d91-f0de118d57c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5fe4543-6a05-492c-abfd-ef9de9996d40",
        "cursor": {
          "ref": "7ba3cf41-d14a-4fa8-abf6-af4dfb6a9676",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "9eb8767b-0f20-4896-8dc9-02d0c45e7d7b"
        },
        "item": {
          "id": "a5fe4543-6a05-492c-abfd-ef9de9996d40",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "00c662c9-db36-4608-87d0-314794aa82d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab37c27-9717-4661-b9a2-fdcea63d6093",
        "cursor": {
          "ref": "fa9cadfe-0c63-45cf-a70f-c853a65f36aa",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "43654669-d0d2-4f63-b4b7-77003d63ef72"
        },
        "item": {
          "id": "cab37c27-9717-4661-b9a2-fdcea63d6093",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "80a435c4-a5c2-452e-b9fb-2b78c12f36a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54936c1e-8e78-4737-a3ca-5eb3c14c62e0",
        "cursor": {
          "ref": "80827e7d-bacd-4a29-8e43-f9342fb8097b",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "23a4d5ce-e68f-4445-8193-bb7ff97d9244"
        },
        "item": {
          "id": "54936c1e-8e78-4737-a3ca-5eb3c14c62e0",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e80ea66d-6190-493e-bbf0-e82857892c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97529600-f8f5-4161-8b4a-5d8f85586013",
        "cursor": {
          "ref": "fc2150d6-128e-4fb2-b731-016a08179e92",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "1b32980b-78e0-4a44-9a16-76ffd901db77"
        },
        "item": {
          "id": "97529600-f8f5-4161-8b4a-5d8f85586013",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "058c4abd-5a0c-4cc9-9837-19b66288084b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36c8b951-a880-4afe-8d86-ac7ae9b29e45",
        "cursor": {
          "ref": "0b5ba782-c6d7-4b6c-80d1-784755abb705",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "45725b05-e232-4571-881f-d96f8566b79c"
        },
        "item": {
          "id": "36c8b951-a880-4afe-8d86-ac7ae9b29e45",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e026a4a1-8ac5-4582-b30e-1aef145c0182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "539bedea-d505-49f1-9f12-f2c20b6d585f",
        "cursor": {
          "ref": "ccda0e36-2947-477b-85f4-d2a477ea8efe",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "cb736600-c2d5-47bf-bfdc-98e43790fee0"
        },
        "item": {
          "id": "539bedea-d505-49f1-9f12-f2c20b6d585f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "36d2486f-4ddb-409e-af3b-89753f8b0def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc4c930-4760-4a66-8e90-38821e00ac57",
        "cursor": {
          "ref": "334bc461-4f12-4450-93ab-517d65737081",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "35278129-bc26-42ee-8798-747657754b8d"
        },
        "item": {
          "id": "ffc4c930-4760-4a66-8e90-38821e00ac57",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "06c8675e-4b40-4d3b-9e91-d31dbcd42690",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "39a45b7a-da8f-425e-9a9e-9782faeabebf",
        "cursor": {
          "ref": "c8ca7a97-045e-44c7-97c1-d9313c5a9785",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "2e4386ec-2da1-4e0c-98c8-b9701a6338da"
        },
        "item": {
          "id": "39a45b7a-da8f-425e-9a9e-9782faeabebf",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8ac014d0-0961-46de-ae64-353670afcc5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "527ea638-8f82-423e-ac38-ed47a187ed45",
        "cursor": {
          "ref": "839092c7-48d7-4c64-80b1-2156b6badb4a",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "43cb30b2-2feb-4b86-8873-ca147fafde4e"
        },
        "item": {
          "id": "527ea638-8f82-423e-ac38-ed47a187ed45",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a24b5360-7b14-417f-8b1a-4704e11e9c5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b874d80-b061-46e1-ae36-da12a39101e9",
        "cursor": {
          "ref": "dcdfa2a8-416a-48f3-9eaa-7200f2ab1e52",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "b3e2c99c-c3ec-4857-ae76-71ca8f1bef71"
        },
        "item": {
          "id": "6b874d80-b061-46e1-ae36-da12a39101e9",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9fdb9901-84e6-4378-9fe2-74c76eaf9501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867a73c3-0bd5-4bc9-8aa9-c71e0817879e",
        "cursor": {
          "ref": "71151f55-cf0f-4755-ab20-cc67fcbf1344",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "0dab9c0a-a24d-4eed-b0f4-ae0c11a1494b"
        },
        "item": {
          "id": "867a73c3-0bd5-4bc9-8aa9-c71e0817879e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "47810ada-628b-4ac8-ab6d-5e3fcfc873aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77bd83cd-a44b-42fd-8ac8-ab030d64002f",
        "cursor": {
          "ref": "27275ad4-0922-4fa0-9d4c-b6a3e65ce702",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "364eae0a-42a9-4b2d-8dbf-fc46cda06c8b"
        },
        "item": {
          "id": "77bd83cd-a44b-42fd-8ac8-ab030d64002f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b9b55b0d-0d1b-4dde-b6ae-93107ea39894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c00d4fa0-8ab2-4615-886c-64739b98083e",
        "cursor": {
          "ref": "9b60755c-591c-43fb-8472-53ce87b74f9a",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "132c22f8-cd1d-4973-8b98-3e3f67ca5b7c"
        },
        "item": {
          "id": "c00d4fa0-8ab2-4615-886c-64739b98083e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "90072c5e-c270-4561-810a-fd2a8c1701fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "698af0c1-8f6b-49c8-af5b-5ba62014d278",
        "cursor": {
          "ref": "512b2179-8cee-4fc5-822d-6261a3acc191",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "83b58cd9-78c6-4e6b-8ae4-a5afd0c4c89f"
        },
        "item": {
          "id": "698af0c1-8f6b-49c8-af5b-5ba62014d278",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "52f24627-4f82-4c42-bd6b-112ce4fb278b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 44,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "d14ecd87-74c0-40ae-8379-562ef32a027c",
        "cursor": {
          "ref": "c416dac1-7da4-461f-b963-458d978308c0",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "396c4a82-5f3d-4c09-ba30-9e04f7c69912"
        },
        "item": {
          "id": "d14ecd87-74c0-40ae-8379-562ef32a027c",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "b9cd659b-03dc-4e9d-8e2d-addfb49b941c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 49,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "a9d14e76-0416-4c34-868f-0b9cc1843178",
        "cursor": {
          "ref": "789d8300-9699-4638-a8b5-93dca3dcb77d",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "4a4b424f-415f-4508-8921-3352d330cc10"
        },
        "item": {
          "id": "a9d14e76-0416-4c34-868f-0b9cc1843178",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "97124cc1-241d-43dc-a6e4-b094fd0d9753",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "1740a5ed-1da7-4a46-90ea-d03adbb239ee",
        "cursor": {
          "ref": "903be808-2bae-4e44-bee3-ad66fadeae01",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "53de83ab-823a-4136-a580-db17a6d0017c"
        },
        "item": {
          "id": "1740a5ed-1da7-4a46-90ea-d03adbb239ee",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "cc3551f2-5d9a-48cc-8830-8b6fde8b5b3d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "af225548-2edb-4278-97ed-697246825e97",
        "cursor": {
          "ref": "dda7efbc-3a11-4275-a6f2-0ef30200c9aa",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "2ab09539-4a90-4739-9399-a7d04789eabc"
        },
        "item": {
          "id": "af225548-2edb-4278-97ed-697246825e97",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "25b74568-a2e8-4d70-9882-a258d44be327",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "2be0e265-2b48-4f64-8954-9fecee7f1408",
        "cursor": {
          "ref": "e7997f7e-217b-4145-808c-8cce29046908",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "57dcd3e0-c8cb-4513-9b82-4179ad3a3bb3"
        },
        "item": {
          "id": "2be0e265-2b48-4f64-8954-9fecee7f1408",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "d0fe1d14-ae7d-4975-9bcc-4c467f822b1b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "5240628f-6e03-42df-8006-2e86e75d6002",
        "cursor": {
          "ref": "d498b16f-fd9c-416b-9c98-5bf8b5fa921b",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "7bd0f5a2-7666-48f9-b0c8-8fcfedf64137"
        },
        "item": {
          "id": "5240628f-6e03-42df-8006-2e86e75d6002",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5a2f9a89-61a1-486d-bc26-53afce7b4847",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9edf7325-530c-4c7e-8df0-b0b8a67d680a",
        "cursor": {
          "ref": "2c40d464-5aa0-4007-80f5-998975560ccc",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "ec8b6514-5e75-4d54-ba30-3ba07ab32d88"
        },
        "item": {
          "id": "9edf7325-530c-4c7e-8df0-b0b8a67d680a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "2375cf70-70b3-4103-9fa2-4670f7c7bece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8c7f777-dde1-46a6-accc-aab71d0cf061",
        "cursor": {
          "ref": "814b96ad-8602-4be8-82f7-9883dbc9fcd7",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "0ecdb55b-8800-432e-80c7-16ab421503e0"
        },
        "item": {
          "id": "f8c7f777-dde1-46a6-accc-aab71d0cf061",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "4d7e6226-642c-4ce4-b69d-9982419b1dbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b020cd-5534-42f7-b4c0-b43ff9aca4fd",
        "cursor": {
          "ref": "31dd1ae0-eb62-4bbc-92ef-a0b8a176be8d",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "27ee3298-cdfe-4f41-a7d0-3864ad866bbd"
        },
        "item": {
          "id": "89b020cd-5534-42f7-b4c0-b43ff9aca4fd",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "fefa4c72-b2bb-4219-9f0a-ed11bd1b23e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edfa2243-7234-459f-9b14-082e832defa3",
        "cursor": {
          "ref": "7839a19c-43d0-4348-80e9-1964bcfde5ba",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d82b6550-3b83-4ae5-8ac7-d6619d3a3e5d"
        },
        "item": {
          "id": "edfa2243-7234-459f-9b14-082e832defa3",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "875894bb-b135-4ed4-a9ca-a2678b7ef728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d82ac39c-c262-4af4-bc7f-cb8393ec8ad6",
        "cursor": {
          "ref": "e3809df8-e044-402e-8f77-fe9d9069cfb5",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "4c62a119-595f-4bca-8f09-d1dbceb811b6"
        },
        "item": {
          "id": "d82ac39c-c262-4af4-bc7f-cb8393ec8ad6",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "219c4fcf-fb78-4989-ad97-6a82ceb9c9f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bbea82e-ef3c-4c7a-85ca-6e2963decffa",
        "cursor": {
          "ref": "f8a02ffc-cbfd-4795-aaef-5944cbb54e35",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "e54750ca-7235-440a-985c-dd05df1bdb95"
        },
        "item": {
          "id": "7bbea82e-ef3c-4c7a-85ca-6e2963decffa",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c7406b36-e6fe-4fc3-8fcd-a6711247a56c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7436c7a8-7fe1-4c4f-9fcc-7e0b30748786",
        "cursor": {
          "ref": "e5f46b06-9f6f-4624-9bc3-628afd04f0f0",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "30b0021a-c6ec-4126-a3a5-1cc393858bc0"
        },
        "item": {
          "id": "7436c7a8-7fe1-4c4f-9fcc-7e0b30748786",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "b415d1b7-9afa-4457-8233-58e7a9b395ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "423b173c-e5e7-4da4-bf87-ab7f15efbed7",
        "cursor": {
          "ref": "9965411d-bfcb-4187-995b-523fe37c6e98",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "f46a45e8-82ad-4a81-b8d2-0a6c33244d12"
        },
        "item": {
          "id": "423b173c-e5e7-4da4-bf87-ab7f15efbed7",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d139c7a0-5ae3-4959-b4d9-b5e662d5eab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a3bb8e5-07a4-4fbd-a1e9-4bc843167771",
        "cursor": {
          "ref": "811ba455-5d9b-4ab8-869f-9440385aea31",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "42296e08-9c79-4273-bda6-3e53e428bec4"
        },
        "item": {
          "id": "6a3bb8e5-07a4-4fbd-a1e9-4bc843167771",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b27a9bbf-5eed-4870-904a-91d72aee2b18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e760f128-928f-4465-a50b-7e165e28dd3b",
        "cursor": {
          "ref": "1e869875-5fe6-4312-9844-84321f7e14b7",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "5f040d5d-3c3f-47af-a676-872f9effa7a0"
        },
        "item": {
          "id": "e760f128-928f-4465-a50b-7e165e28dd3b",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "6b1c3a9a-c31c-486e-bcbf-1f8c1107cb4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e4a100-e020-4667-aa8c-421775ba65d8",
        "cursor": {
          "ref": "521a028a-50f3-4844-8e67-d041535c8a1b",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "aec02391-d2b3-4e0c-aba3-3ecf576aff67"
        },
        "item": {
          "id": "05e4a100-e020-4667-aa8c-421775ba65d8",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "0b03f174-557a-49ca-87d8-1ab89bfa782a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e201083-84df-4c4e-8aa1-6dea2ba48e17",
        "cursor": {
          "ref": "87e5aacd-72e2-4e40-b1ca-3911fa62c374",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "aac0f1fa-2753-435f-b9b0-e2cabebce7a0"
        },
        "item": {
          "id": "2e201083-84df-4c4e-8aa1-6dea2ba48e17",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "7f473379-ae8a-436f-8369-beb8d59a2ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f09d6c-117c-46f1-b25c-ad4dfac76378",
        "cursor": {
          "ref": "7248f7da-de24-4c94-8477-40bc1f01d0fa",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "1b6ba0bd-edc0-4bc6-ace0-ee9769d9ed11"
        },
        "item": {
          "id": "01f09d6c-117c-46f1-b25c-ad4dfac76378",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "7403f11d-2847-4041-92b1-5db07d9a7503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b1a511-4ff0-42c5-8893-12dcd4f0fa78",
        "cursor": {
          "ref": "1cb8ab1a-fc67-4710-b215-25c2194a9cf8",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "9e5d0666-0ed1-4e28-a190-7b89c7bb588b"
        },
        "item": {
          "id": "62b1a511-4ff0-42c5-8893-12dcd4f0fa78",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f65d282a-e700-4ddc-97f0-2041e91c17db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c7b4177-f37b-4565-b594-ec0f5ed1f929",
        "cursor": {
          "ref": "747bef0e-22a2-4f74-9630-1ed9959468dc",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f737d98b-a72e-449b-9294-cebf6c145f09"
        },
        "item": {
          "id": "3c7b4177-f37b-4565-b594-ec0f5ed1f929",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "36113211-1d59-44a9-9c98-e6b63bdd46c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3fb8bc3-addd-4dd7-83e7-74e1609291e5",
        "cursor": {
          "ref": "963afe86-6f58-4e09-8fa4-0aaf3bad65e5",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e9eed60a-b1dd-4ea5-b02b-1a502e6f3e4b"
        },
        "item": {
          "id": "c3fb8bc3-addd-4dd7-83e7-74e1609291e5",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "ccaaa548-94d6-4de4-9840-d94dc571e437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf8d8184-7173-46ab-baa3-9b78b1443c78",
        "cursor": {
          "ref": "2d43c3ff-d39c-4dce-bb1e-52ee134c79ce",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "6df418ad-c4e5-4f0c-9509-c100bb4ad1cb"
        },
        "item": {
          "id": "bf8d8184-7173-46ab-baa3-9b78b1443c78",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "ffd3d1eb-9d74-4ca5-917d-d96b2fe435c9",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "74d62c93-5145-4ec4-b33c-6cf31faa8a48",
        "cursor": {
          "ref": "502a5a7d-1c3b-4f1d-a271-f82eeb811f07",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "2e994cb1-4b8c-4ca1-b8c4-04e622c40979"
        },
        "item": {
          "id": "74d62c93-5145-4ec4-b33c-6cf31faa8a48",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "be28b10a-61d3-491f-b6c9-56fbb4f093c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3202a30f-9dd3-41e7-a1f4-2ab1717b9ee8",
        "cursor": {
          "ref": "8beb6bf7-5cb6-4810-ba1b-8d6df1f1efdd",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "920a218b-bb0c-4962-8958-49f7be50d64d"
        },
        "item": {
          "id": "3202a30f-9dd3-41e7-a1f4-2ab1717b9ee8",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d2858892-bac4-4743-8378-02930e773367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef0afea-6900-4445-b984-c3300e5176a8",
        "cursor": {
          "ref": "48b83acf-3d76-4626-b7b4-28a75267733b",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "38db1990-0969-47c7-bc17-acea8fc470f1"
        },
        "item": {
          "id": "2ef0afea-6900-4445-b984-c3300e5176a8",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "a8f85f1b-d547-4baf-ba32-10876fc9c4d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1eaf368-a1b6-41d6-ab44-ecaaabf23a1e",
        "cursor": {
          "ref": "31a0f457-fc5b-4e46-b8d1-85016d2bfbec",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "8860c7f4-09a4-4c79-ba4b-c2afde13868d"
        },
        "item": {
          "id": "d1eaf368-a1b6-41d6-ab44-ecaaabf23a1e",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "6393fe0a-eca6-4be6-a339-a7c99b48f8b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df35597-f0ed-4f01-bafc-8c637b86c2a7",
        "cursor": {
          "ref": "af56b6e8-1a5c-4a4d-82d6-e46495249bd8",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "d35df472-2d5c-431d-99d2-c54101437864"
        },
        "item": {
          "id": "9df35597-f0ed-4f01-bafc-8c637b86c2a7",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "91bcee19-fd57-428b-8324-a2d30abc1f18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "184ccf04-b562-4557-9c4e-f9a6c2db928c",
        "cursor": {
          "ref": "08ecb102-3ccb-48ae-909f-5555b03aeae9",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "fe0ef33c-c9f0-4345-8d1a-739d244f348f"
        },
        "item": {
          "id": "184ccf04-b562-4557-9c4e-f9a6c2db928c",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "e302cd6a-3367-4079-9e3c-8d93b9f742b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c213ea7b-5c1b-4474-80fd-a70662efa153",
        "cursor": {
          "ref": "45adb8b1-395a-4cbb-a8b6-f10c7b589ab4",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "adc8e195-0009-49cc-b7da-3339bc85c1da"
        },
        "item": {
          "id": "c213ea7b-5c1b-4474-80fd-a70662efa153",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "1e0f91d1-0ea4-458b-a499-e178c3e79dac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b89917-2ab3-4f4f-bd3f-bc009c3b3649",
        "cursor": {
          "ref": "2006cd0f-0f7d-4331-8067-c540066bcd89",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "082dc339-cdfb-4e73-b4a1-31e5cec9e8b7"
        },
        "item": {
          "id": "f6b89917-2ab3-4f4f-bd3f-bc009c3b3649",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "e9ca9339-837b-44d0-8261-c5eb906f98de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f20dc57-123d-4bbd-90ff-05547c09b347",
        "cursor": {
          "ref": "0bd8dba1-460e-4c54-9d06-9a9cfb894eb0",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "36ce9742-159c-4256-b7e1-2e67e9a440a2"
        },
        "item": {
          "id": "7f20dc57-123d-4bbd-90ff-05547c09b347",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "103aef56-5dc5-4dc2-a4cf-93c43103fc23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cdd505d-8190-4f8a-bf88-7f7f2c804658",
        "cursor": {
          "ref": "2a2460c7-8035-4a33-9fd5-c773b49bdcdd",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "94d7e465-887c-4e02-958e-7dda89fe5cf2"
        },
        "item": {
          "id": "7cdd505d-8190-4f8a-bf88-7f7f2c804658",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "5b6de4b4-82bc-481d-85f9-cc2d5100f91c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71018c4c-c611-495f-a986-d3a17aa24aba",
        "cursor": {
          "ref": "0c3da126-5f45-4bfb-bd3f-cbf8ea304f30",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "65322c2d-a672-4137-8f74-38f30cf6c742"
        },
        "item": {
          "id": "71018c4c-c611-495f-a986-d3a17aa24aba",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f284584a-035b-48de-b4b6-5223fc379d51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c4bea70-a5df-451f-9c7a-dc3444e3bc26",
        "cursor": {
          "ref": "9faa10a1-4b62-412b-a01d-1346f29cf366",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "a07c3aad-4dc7-4ef9-a3fd-bb27ec2d42ce"
        },
        "item": {
          "id": "3c4bea70-a5df-451f-9c7a-dc3444e3bc26",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "1e5a7e0c-b19f-40c6-b67c-a6f8810183a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d97e7453-3020-47ce-b09a-06195bff954b",
        "cursor": {
          "ref": "83a39d44-9f8a-4fb9-bb6a-194766e81841",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "ab5b2448-164c-4fa5-9327-372049ce8262"
        },
        "item": {
          "id": "d97e7453-3020-47ce-b09a-06195bff954b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "6a122513-5b2f-4ea5-a4f6-c2ccbbbcafb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e0748a-b2bf-4811-8333-915a0150cb03",
        "cursor": {
          "ref": "f14e2974-12b5-42f4-aca7-27dac6b73f3a",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "f02f393d-0872-41dc-99fa-ae1ee036f933"
        },
        "item": {
          "id": "14e0748a-b2bf-4811-8333-915a0150cb03",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "04c0ce5a-99eb-403b-a1aa-9d3059728f50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cab62f9-16fb-4140-a61d-4bc4471c6be2",
        "cursor": {
          "ref": "2fb59e42-0471-4874-ac68-939a3484d56b",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "188a52ea-4aaa-4517-a7d3-bfaa19f78784"
        },
        "item": {
          "id": "9cab62f9-16fb-4140-a61d-4bc4471c6be2",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e0cfcc77-0243-4d1e-bd79-6fd552850036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec308da-7c89-4459-88af-5a0a2e037a54",
        "cursor": {
          "ref": "2097e2c3-d086-475b-9816-bf85851e53b5",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "dae0e258-b204-4d7a-8418-03e9ff3fb7d7"
        },
        "item": {
          "id": "dec308da-7c89-4459-88af-5a0a2e037a54",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "78676fbc-6f85-4302-978e-08211469c02a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6032290-edd2-42db-9825-b8d008368f9c",
        "cursor": {
          "ref": "8ca17495-dcaa-48f4-94f3-af237d5635c4",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "fc99d9b4-717b-46c3-8b9e-874b46e1bb9e"
        },
        "item": {
          "id": "d6032290-edd2-42db-9825-b8d008368f9c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "883344bd-c915-4da5-a987-81d98b8b214a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c17010a8-ee8d-4ace-9c95-5ab4d2a714a0",
        "cursor": {
          "ref": "8c5a7514-0780-4c88-95b6-fbdd3437a566",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "fc40c6c4-c351-455f-a0c1-a3f59c10f1e6"
        },
        "item": {
          "id": "c17010a8-ee8d-4ace-9c95-5ab4d2a714a0",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "597c37b4-a334-46d1-ba07-af21cc2d536f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83253c87-0d92-462a-979e-efe5d70af284",
        "cursor": {
          "ref": "1428f98a-1239-42e1-9937-23512199e358",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "2c7171c1-120a-4f5e-8b01-cb9d7564053f"
        },
        "item": {
          "id": "83253c87-0d92-462a-979e-efe5d70af284",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "b4568de5-584c-4c81-a058-97c67af57138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c151608d-86f0-4e76-bf16-d83cfbebf88e",
        "cursor": {
          "ref": "80a8acb9-6345-4f37-bdff-74f54b202e4e",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f955b991-186a-4e8c-9cb2-5187136a098e"
        },
        "item": {
          "id": "c151608d-86f0-4e76-bf16-d83cfbebf88e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "5d2042ef-50e6-4d66-b2d4-7fe9e9f20a0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b3bc00-4702-4048-81c5-29849e3c664c",
        "cursor": {
          "ref": "74654516-6d5e-4362-aedd-bfe090c2bc37",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "fdaa9299-71c6-43da-ba9b-cf193bed3dc6"
        },
        "item": {
          "id": "a6b3bc00-4702-4048-81c5-29849e3c664c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "f506fec1-2688-4366-9be9-edbafc1f030c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a5df5e-b357-4379-bded-5312d9d82a40",
        "cursor": {
          "ref": "bbd2fffa-adce-4540-ab4f-81665b89a9ba",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a72ae13f-cf73-4b52-a8c4-50b8e8f144d8"
        },
        "item": {
          "id": "66a5df5e-b357-4379-bded-5312d9d82a40",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "181e4906-3d45-4cfa-923c-5daac3c8d403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd656d0e-27ab-4a70-aac7-5950d0116877",
        "cursor": {
          "ref": "ec2a025c-2b4c-4bd6-b679-378b11f67a55",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "3cc11809-7c54-4a72-8e25-54cd4818d901"
        },
        "item": {
          "id": "bd656d0e-27ab-4a70-aac7-5950d0116877",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "7f6ded27-162d-46b7-8256-dad2f0eea32e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cafdb0df-3a3e-464b-a303-89a52ebfb7fe",
        "cursor": {
          "ref": "5f55d97a-06f4-4233-b355-105bf67cbeac",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "c067749b-d1cf-409c-820d-4d0000e585fa"
        },
        "item": {
          "id": "cafdb0df-3a3e-464b-a303-89a52ebfb7fe",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "19697051-a99b-436e-be38-0f6beadb4995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf6af3ca-1371-42ad-91f8-884cd40d45be",
        "cursor": {
          "ref": "ebf5f9e1-dd8a-4103-9052-7302a424aad4",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "dd44758a-c287-4b76-b731-78a820d978ec"
        },
        "item": {
          "id": "cf6af3ca-1371-42ad-91f8-884cd40d45be",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7c35b9d2-defe-4a77-8ba6-b44af9be7592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb33da7a-410e-4ebe-a99e-58d1c65c6629",
        "cursor": {
          "ref": "42ad4ed8-f7ab-40e2-aa3d-b39d3eb261f3",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c8d243c2-a7a5-422e-bb3a-1e366b5bd531"
        },
        "item": {
          "id": "cb33da7a-410e-4ebe-a99e-58d1c65c6629",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "e5923b0f-93dc-4789-a63a-15b02fe601e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bd3d8b3-4df1-46e3-9639-8531f7a10744",
        "cursor": {
          "ref": "5357f783-3924-434a-900c-af2080a070d8",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e4310ef1-1fac-44a2-a63b-6fb6b4aaea48"
        },
        "item": {
          "id": "6bd3d8b3-4df1-46e3-9639-8531f7a10744",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e5fe6de6-ece7-4267-9cfa-69668f7b52ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ffc07a-d863-46db-84cf-af2651919d07",
        "cursor": {
          "ref": "c8c028bd-915a-4105-adcf-2c94fc09dfd9",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "18dfddaf-8a3b-4e60-ab4c-21fe494a9831"
        },
        "item": {
          "id": "c3ffc07a-d863-46db-84cf-af2651919d07",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "0ff961d0-019b-490e-84a2-f4cab73e6fc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f6ee04-3ee4-41f2-9517-f4fa0fcf7d55",
        "cursor": {
          "ref": "a23f0140-4eb0-4107-b9b4-4b38da7a6307",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "1231693f-6185-41ba-9373-9f32f9c3cab3"
        },
        "item": {
          "id": "66f6ee04-3ee4-41f2-9517-f4fa0fcf7d55",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "9b336db2-5b31-4b3d-a48e-250b80d792f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf71e29-5522-4290-a25f-4993e3a7f3d9",
        "cursor": {
          "ref": "b3ca0ad3-78c1-46b0-9c4b-997b551b89af",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "e3ca2c5b-6d24-4565-bc84-b4fa57453145"
        },
        "item": {
          "id": "dbf71e29-5522-4290-a25f-4993e3a7f3d9",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "4f5d22d8-6bff-435c-b195-7c03c2e0898f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e7c9a3-1f0d-4a7d-a215-7aba6e338e68",
        "cursor": {
          "ref": "faaaf4b8-78b7-49bc-97b3-812bf3d69c5e",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "c5a73fe8-514e-4029-ae6c-889fc2f350ce"
        },
        "item": {
          "id": "19e7c9a3-1f0d-4a7d-a215-7aba6e338e68",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "1dcd639b-88cb-46c3-a201-8ddf7616d2b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2260c9b-7a25-4e65-b2f7-11739076b1fe",
        "cursor": {
          "ref": "d112b460-64d7-4343-808f-0ab30124f8b0",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "8249ce0e-4d52-43d6-adb8-b2184edcde7d"
        },
        "item": {
          "id": "b2260c9b-7a25-4e65-b2f7-11739076b1fe",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "2593bb86-7ac9-4888-b662-7131b3fafc69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0db3c2f-6e56-413d-bc3b-4779cfff1a04",
        "cursor": {
          "ref": "5d68eb66-a05e-4256-93b7-368b2032e73c",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "7fd1c569-26b2-4c85-980e-6acebfc8fc0d"
        },
        "item": {
          "id": "c0db3c2f-6e56-413d-bc3b-4779cfff1a04",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "068818e0-dd1e-45ce-b7f3-c9140d217c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3418792-d1e8-4795-a690-4e35e5a9c4e0",
        "cursor": {
          "ref": "0008870d-7e76-4acf-8019-d172891a6cf2",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "a63a30a2-c646-40f5-9c8c-d98030f10836"
        },
        "item": {
          "id": "a3418792-d1e8-4795-a690-4e35e5a9c4e0",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "dabbcf6e-3c6c-4d19-90ee-0c8635edd413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd362dfe-5888-4fb8-b589-59804bcfe70d",
        "cursor": {
          "ref": "487af652-b137-4b6f-8537-a8dcfdebf453",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c29fdbad-7129-4848-b425-4a6d50d7b15a"
        },
        "item": {
          "id": "bd362dfe-5888-4fb8-b589-59804bcfe70d",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "87f1ada4-0ae8-4af5-8828-949380b96019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f0d0d6e-93fa-481a-a6a3-d4216e9e12be",
        "cursor": {
          "ref": "0db5c107-4755-4659-9239-ebc2ab269e37",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "b9f611c1-e896-4905-b60f-bfb5ba380a3d"
        },
        "item": {
          "id": "7f0d0d6e-93fa-481a-a6a3-d4216e9e12be",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "0e68f0bf-4f83-4959-8a23-a2e977c5d0af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67fda52e-0958-404c-9ea9-d89c4a316662",
        "cursor": {
          "ref": "e242586f-13dc-468b-be6c-40b9240f9a1f",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "3b2fe47f-f890-4a61-9b92-8fd5b463cfa5"
        },
        "item": {
          "id": "67fda52e-0958-404c-9ea9-d89c4a316662",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "2d5e853b-7c73-4b7e-aca5-5bf0471ac8df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75be949a-dc67-4faa-8366-307c69855963",
        "cursor": {
          "ref": "00d514b2-18ed-44e2-8a28-35322e8c094c",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "1e7b383e-df61-4472-9e36-77edaeddc59f"
        },
        "item": {
          "id": "75be949a-dc67-4faa-8366-307c69855963",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "6ab23d9e-86fb-4156-816b-22cdf19e0b0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ce2bdf5-cf17-484e-b149-a1632ddfc2d4",
        "cursor": {
          "ref": "63e333af-5ac7-4e95-96f6-7c3dd04586ad",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "685c9424-28a1-4c9c-b8cd-e41b8e973ab7"
        },
        "item": {
          "id": "3ce2bdf5-cf17-484e-b149-a1632ddfc2d4",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "c59cab5d-d255-4e7d-aa72-45ea3384d3fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "232c9508-9c73-4610-be03-a14b99cf1c21",
        "cursor": {
          "ref": "805b1ea1-ed1c-4863-880c-8f64ed227d9f",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f5a27080-ef17-48b1-9f68-f2887698c3f9"
        },
        "item": {
          "id": "232c9508-9c73-4610-be03-a14b99cf1c21",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b66612ac-6d56-405e-9c01-b865ec8c7285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f8c0f3-b540-4c2a-9865-52206f78804b",
        "cursor": {
          "ref": "41bc160f-429e-42b5-aaa0-40661b9c154a",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "47d173ab-6aba-4083-85b7-689440967842"
        },
        "item": {
          "id": "78f8c0f3-b540-4c2a-9865-52206f78804b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "49283b0c-b467-4afd-9ac9-787a868d7f4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23658d4a-bc72-4871-adcf-7e78583593a8",
        "cursor": {
          "ref": "be5a36db-a5bf-48e1-a1e6-080c55eac594",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b87a731e-63d8-432e-b278-ec4359420023"
        },
        "item": {
          "id": "23658d4a-bc72-4871-adcf-7e78583593a8",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "0296762e-9295-4fd7-a2c0-2545e2c18385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e524ef72-be6a-4905-9d25-89a028ca58d0",
        "cursor": {
          "ref": "aa768504-40f4-4abf-ac18-afe2b7315f23",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "e89d3c58-f193-4994-9f17-851ba53165f0"
        },
        "item": {
          "id": "e524ef72-be6a-4905-9d25-89a028ca58d0",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "7eae4137-e5a1-4083-b8df-a33693696d0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9aba4fe-3318-4493-8487-9e05d2fea452",
        "cursor": {
          "ref": "ab78f3a8-a83e-4570-9288-8e3867335c5d",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "39dfb9c1-f6c3-4a0b-b3d6-21de76b3f897"
        },
        "item": {
          "id": "c9aba4fe-3318-4493-8487-9e05d2fea452",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "3765383b-cfd8-4d79-afa6-175dfdabc6c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1820520a-1f05-4fb7-b2bb-9cab628fbca3",
        "cursor": {
          "ref": "8df649ec-0bbd-4690-ab5b-43e4dec44570",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "56ddb694-ce62-4fd4-a3f3-32e467caa44e"
        },
        "item": {
          "id": "1820520a-1f05-4fb7-b2bb-9cab628fbca3",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "5f261aec-0f64-4e19-ad5d-e79e1bc66cec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a02fcfeb-1dcc-4b58-98ad-db851c65024e",
        "cursor": {
          "ref": "1b8778ba-e07c-496d-9c9c-05f72921bdd5",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "109c34f8-6fd7-46d4-9a72-490774d7d195"
        },
        "item": {
          "id": "a02fcfeb-1dcc-4b58-98ad-db851c65024e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "557d6c18-8a7b-4f96-ba00-b22ed90384cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a62aa1b-73d8-45ee-aaeb-9904144f05e7",
        "cursor": {
          "ref": "bb1ee2d5-cd63-48b8-b3ae-7ce881edc63e",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "0888338a-8870-4469-8eaf-5dccf6afe50e"
        },
        "item": {
          "id": "6a62aa1b-73d8-45ee-aaeb-9904144f05e7",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e8b36268-5e3a-472a-a57e-310ce60159dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d26b629-bc98-4651-bcc1-a61908ab7628",
        "cursor": {
          "ref": "d98e8940-4a29-4e2a-bd65-8fd22fbaae1c",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "f4a26dac-103e-4292-9a7d-c617dfb59c5e"
        },
        "item": {
          "id": "2d26b629-bc98-4651-bcc1-a61908ab7628",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "bf29e235-076b-4aa0-a16a-791d926b3696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ee2ba2-31b4-4ec4-b015-552e451dbda5",
        "cursor": {
          "ref": "3fcc2845-e4ae-4ba5-adeb-29730fafc2c8",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "bc5ebb78-6f5d-4cdb-8745-828abecbc280"
        },
        "item": {
          "id": "86ee2ba2-31b4-4ec4-b015-552e451dbda5",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "0a39cc6a-aa62-4220-884f-ed3891e387aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00f90c97-444d-4a96-8e0c-0fd47f92bab0",
        "cursor": {
          "ref": "ae8bfcb0-ec38-4568-9af2-c415ee336a92",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "10c69b46-cfe4-41bd-9538-08292fbea5e7"
        },
        "item": {
          "id": "00f90c97-444d-4a96-8e0c-0fd47f92bab0",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "3b8a6cf5-07d0-4ec0-ba06-bf89f05c8030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d240f99a-fbe0-4be6-9596-2743002f7cbd",
        "cursor": {
          "ref": "85865eda-4914-4edf-9324-f39b794e8c5a",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "fb3df904-3a86-4738-8400-81640b90cb6d"
        },
        "item": {
          "id": "d240f99a-fbe0-4be6-9596-2743002f7cbd",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "14a855a6-573a-4609-8a2a-747f97e8a4e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "870c3cc7-26a5-4728-9816-406a8257c235",
        "cursor": {
          "ref": "b7a0f737-692c-4d9d-9f43-05fbfd2d4ce0",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "80da16fd-1fa8-452b-a08a-57c815a3ce6f"
        },
        "item": {
          "id": "870c3cc7-26a5-4728-9816-406a8257c235",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "45f6abac-b948-4152-94fe-6ab82a310cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e4c0d2-6109-49cf-8a51-f954d279a40c",
        "cursor": {
          "ref": "be99fcf2-0a8c-49dc-9c3b-4db37df728e7",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "c422413b-eb77-4f96-a70e-147a71b41d33"
        },
        "item": {
          "id": "95e4c0d2-6109-49cf-8a51-f954d279a40c",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "21a92390-ae03-47b4-a9d2-0fc10c8b0e95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3228ec4-6adb-4752-ac2d-0bce03245fc2",
        "cursor": {
          "ref": "a2a70b0c-909e-4c1a-8198-00b11d45dacb",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "7dcc0e4b-daf8-4eaa-bf84-8283db5b253c"
        },
        "item": {
          "id": "a3228ec4-6adb-4752-ac2d-0bce03245fc2",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b25eb213-3a9d-456b-be33-4db227170f4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f4e800-cdeb-4e82-9210-279c53b57172",
        "cursor": {
          "ref": "1c1da1d4-590a-4682-a216-27c1a5bd5d26",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "eac313d7-5bea-477a-8ab3-66a6b80decc7"
        },
        "item": {
          "id": "72f4e800-cdeb-4e82-9210-279c53b57172",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "0d20a5e4-cfb0-4a5f-87fb-4b21a00b67f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0445ad43-4290-48e6-969a-1986a85e738e",
        "cursor": {
          "ref": "d7199ad4-9b50-4ced-97fa-8e5ced4e2582",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "20fe6959-0598-4cf0-9f4b-80c30e31cd5e"
        },
        "item": {
          "id": "0445ad43-4290-48e6-969a-1986a85e738e",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "68f70cdd-a7ab-4ca7-adc8-7c62988c0a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f13f5ed-c1f7-4db6-ab18-4de6b57c7ecf",
        "cursor": {
          "ref": "566fea34-2711-4514-a8c1-1b77107c29bb",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "edd84137-3937-4526-af5b-da5ad35d1e16"
        },
        "item": {
          "id": "6f13f5ed-c1f7-4db6-ab18-4de6b57c7ecf",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "4d50b8ab-c2ae-40a3-904b-b1c5168e8352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a99cbc-0641-40b3-a2d0-18388cd4bf85",
        "cursor": {
          "ref": "bb0fcb1a-f6a0-4b75-9f66-ae5db7260f01",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "666ab908-1bd0-44f7-80d1-bae21773f078"
        },
        "item": {
          "id": "19a99cbc-0641-40b3-a2d0-18388cd4bf85",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "7f31323b-7354-4915-89c6-cd81fb905626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15916087-1a77-4aa4-881b-a0d4ec3deb89",
        "cursor": {
          "ref": "f71cb28a-c727-45c4-9d15-cd63567727fa",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "ad090744-281e-46f4-93ee-1d3af078b120"
        },
        "item": {
          "id": "15916087-1a77-4aa4-881b-a0d4ec3deb89",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "cf877117-b2de-4f60-8ee4-f0b69c52075b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e97dfda-2fa5-4459-bff3-580b0282cd11",
        "cursor": {
          "ref": "871db267-a43f-4103-8789-8863e9f1886a",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "49522989-0d04-485b-88e6-0e01a37e49f0"
        },
        "item": {
          "id": "5e97dfda-2fa5-4459-bff3-580b0282cd11",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "27535cb0-5e53-45e8-8afa-23ea67dd12f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "195ff91a-66c2-4fcd-9549-5b1618bb0ee1",
        "cursor": {
          "ref": "b9516649-b101-4c09-8def-76abece979db",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "49b684ec-7808-49cc-a376-b13da97c741c"
        },
        "item": {
          "id": "195ff91a-66c2-4fcd-9549-5b1618bb0ee1",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "c1096153-2002-4acf-88e2-040f527d0621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad626b77-8bcc-4cf6-beda-c69c9b21f808",
        "cursor": {
          "ref": "8cae74a1-9c81-48c9-97e9-17fbb51bc9e5",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "cd17d72b-1574-452a-810e-6e259e27140b"
        },
        "item": {
          "id": "ad626b77-8bcc-4cf6-beda-c69c9b21f808",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "d9bffb3d-e44f-45f3-a434-55c5ea3a6ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40cfbec2-189d-40a0-81ea-95ab707d6b20",
        "cursor": {
          "ref": "80843926-2746-49d3-8fa2-8c20678daddc",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "3f563cc6-11e7-4834-9bf8-b55e0aea844a"
        },
        "item": {
          "id": "40cfbec2-189d-40a0-81ea-95ab707d6b20",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "f5a8459e-6efd-444e-8e98-0d1ed8eabaae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5853d2a9-be98-45fa-97c0-e11f517f0fd5",
        "cursor": {
          "ref": "3c73d749-09f7-4c4b-950c-7896a932ddd1",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "87988d49-8f8f-4b2f-abd0-b8deaf27562a"
        },
        "item": {
          "id": "5853d2a9-be98-45fa-97c0-e11f517f0fd5",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "070d91f7-491f-45e3-85d3-7cd99eec909f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d42e30d0-2bb8-487f-8977-41f738eba64e",
        "cursor": {
          "ref": "f0ead49c-e2ad-4072-af2a-028dd1b7bcd5",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "ef910eeb-ac8f-4b9f-a469-9022f187f4a5"
        },
        "item": {
          "id": "d42e30d0-2bb8-487f-8977-41f738eba64e",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "54d11447-ca8b-4da8-a860-e9c066104098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c4f2d19-454e-4847-9fa3-7cd522adce11",
        "cursor": {
          "ref": "f57045fa-effe-44a3-91a1-a4c3fa311575",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "2f14e9de-853c-4b8d-ae02-6341e76c4dc3"
        },
        "item": {
          "id": "1c4f2d19-454e-4847-9fa3-7cd522adce11",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "b1485994-640d-4fcc-8873-7f9b7555664f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3134b0-0b89-40e0-8b08-c677614cc7de",
        "cursor": {
          "ref": "7869e359-ce4a-4756-b20f-9c41ddf7172f",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "64f765bb-9602-4b29-933e-273e59a09871"
        },
        "item": {
          "id": "ac3134b0-0b89-40e0-8b08-c677614cc7de",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "bd831c9b-607a-4a66-b355-73f4479d7cbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b43e3869-8154-4068-85f8-4324e7071711",
        "cursor": {
          "ref": "6b8c2297-e644-4e64-8334-5ee710654e9c",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "50dd878d-a157-49d2-aefc-1747014711a5"
        },
        "item": {
          "id": "b43e3869-8154-4068-85f8-4324e7071711",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "2cb27211-f864-4f91-b88b-4004cb6c6ecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 157,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7804efbd-497f-46c4-aa03-db4b680840d6",
        "cursor": {
          "ref": "1fcfb51d-047b-4523-9d3c-16ee87d58846",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "ddf84a8c-ec94-4920-8ae7-af7ed6857d03"
        },
        "item": {
          "id": "7804efbd-497f-46c4-aa03-db4b680840d6",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e65e81c8-e748-47aa-979c-617222e66bcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c641ed8-2896-487e-b009-d79304ed98ca",
        "cursor": {
          "ref": "283c6c22-0a68-44da-ab95-59f95de8a942",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "a220dd4b-a4eb-4714-8078-aab612d783f6"
        },
        "item": {
          "id": "9c641ed8-2896-487e-b009-d79304ed98ca",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e7e498e3-4535-44c6-9e35-0bad9243ddb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f45d547-fc85-427d-a7df-3b092d8f0ea2",
        "cursor": {
          "ref": "4bc93f12-f5c4-489c-9a47-b92bd36c5231",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "49e0676f-f21f-42f0-a856-5b247df0a081"
        },
        "item": {
          "id": "1f45d547-fc85-427d-a7df-3b092d8f0ea2",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e12bcf9c-ba62-48d5-bae1-841a25b3fcd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f695429a-8d95-4607-b540-3a059326a302",
        "cursor": {
          "ref": "77853f2a-580b-4b64-810d-f308e372ad05",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "e505f91e-9db3-4b95-882b-fb06a58426db"
        },
        "item": {
          "id": "f695429a-8d95-4607-b540-3a059326a302",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "cb7d77c3-85f9-49b6-b40f-4643b200b380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "230999cd-d548-424a-a7f1-a253fcc4a451",
        "cursor": {
          "ref": "56badf9f-a9b0-4ec6-8332-d37fb2ae19f9",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "1aa5f92d-0599-4f07-8f61-1f01e498cc65"
        },
        "item": {
          "id": "230999cd-d548-424a-a7f1-a253fcc4a451",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "58139480-4acf-4b51-b1ba-1227148c4fe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 164,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69556bd8-3ff2-436e-868e-e8b176b85f41",
        "cursor": {
          "ref": "8c2a5320-b80a-4cb1-a828-7c72d3991be3",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "f07bc773-80f1-4a9c-a129-82ee42b0cf8f"
        },
        "item": {
          "id": "69556bd8-3ff2-436e-868e-e8b176b85f41",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "65f6428e-5c30-4bb1-a84a-bfe634459578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4281e88-d27d-4243-b0a7-dc19982b0dde",
        "cursor": {
          "ref": "cdc53549-93a7-42b5-8a53-aa42967b2375",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "8f050d08-f9a6-4715-8fa9-62cd344685c4"
        },
        "item": {
          "id": "d4281e88-d27d-4243-b0a7-dc19982b0dde",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "4defaa16-58ee-45c2-984c-55ab77ee6447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d5e2f90-8850-4c5f-a7f8-c5759d1f6b20",
        "cursor": {
          "ref": "9ebed323-d5bb-45e5-9516-6a9c47efbcaf",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "ae3c4546-52a3-4711-ab7b-e30e7374ce1e"
        },
        "item": {
          "id": "4d5e2f90-8850-4c5f-a7f8-c5759d1f6b20",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "dea889de-6ea1-4702-ae67-f725035a2c6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a11cab-47cc-491e-9124-d9af31ae8928",
        "cursor": {
          "ref": "0c96b008-2267-48a2-932a-7dffad89bb41",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "5191d27a-cd61-411c-b810-612c90756b5a"
        },
        "item": {
          "id": "d4a11cab-47cc-491e-9124-d9af31ae8928",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "54f8c766-7e40-447b-b00e-ed8ee3c4a092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83a93249-d6a4-4d79-ada1-c4903e2862da",
        "cursor": {
          "ref": "3d9fea66-0d2a-433e-b30b-aa01fc7597db",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "e1885fb6-8408-47b9-8bf3-f30da6fcf4d5"
        },
        "item": {
          "id": "83a93249-d6a4-4d79-ada1-c4903e2862da",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "baea11ba-d44f-46d8-9877-35f43757e203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb64121-21d1-4b42-a65b-f7d4c59d7588",
        "cursor": {
          "ref": "47b922f2-f720-44b7-9f9e-bf64365ccf14",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "7e146838-6001-4523-bab8-6bcdb8c50230"
        },
        "item": {
          "id": "0eb64121-21d1-4b42-a65b-f7d4c59d7588",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "4598fce0-6787-4c28-b157-87c9f90ff6e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01a98244-227e-4e8c-9674-b9309e929ac1",
        "cursor": {
          "ref": "dfdea23e-b86b-48d1-9eac-6d9d718ff983",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "26340d07-bd43-494d-b1e5-bba04c29458e"
        },
        "item": {
          "id": "01a98244-227e-4e8c-9674-b9309e929ac1",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "386549aa-62da-410e-8dc1-22c9623284ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f353ee6-a991-436f-9c2c-8ef5e3cae775",
        "cursor": {
          "ref": "6d9db388-e227-41d6-b764-1d239e1ab4e8",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "6f16a511-eb6b-4191-a393-443668fc7224"
        },
        "item": {
          "id": "0f353ee6-a991-436f-9c2c-8ef5e3cae775",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "afbe00a6-7d20-46e3-a4f7-956bcccbd8d6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc69e585-f69b-47a3-bb54-cd1b3f9ae22f",
        "cursor": {
          "ref": "268e3b2f-bac0-44f5-bcb7-7888b8ebf552",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "c041e814-8090-4db1-bde9-ff9d2fe85eae"
        },
        "item": {
          "id": "fc69e585-f69b-47a3-bb54-cd1b3f9ae22f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "b1835ec9-c610-4727-a15a-e6c1a587b34e",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4cd0f82-baaa-4217-a6ae-fda715505fdf",
        "cursor": {
          "ref": "2c3b11fd-6077-4974-8941-4f0870c1f120",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "1bf39e35-bc75-4ccd-9f51-7b724b57449b"
        },
        "item": {
          "id": "a4cd0f82-baaa-4217-a6ae-fda715505fdf",
          "name": "credentials_verify"
        },
        "response": {
          "id": "8c4038a6-b75b-4729-a214-980399bf8c4a",
          "status": "OK",
          "code": 200,
          "responseTime": 2373,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bf08ad2-e9e8-4843-8232-42e0077315fa",
        "cursor": {
          "ref": "dbecc503-99f6-410d-9fc9-ff45e29a9720",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "67bf1b5e-8486-41f8-92d2-484449dc41f2"
        },
        "item": {
          "id": "6bf08ad2-e9e8-4843-8232-42e0077315fa",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "d953e6a7-1bd1-4cbf-95ce-6004b9a17437",
          "status": "OK",
          "code": 200,
          "responseTime": 3117,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e7ce843-8c92-4515-90a2-b2cc4a770cc0",
        "cursor": {
          "ref": "32224f52-254e-490f-a3a8-0db99260f34d",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "bb67f3f7-64e2-4fee-8fb5-a8ff77845d15"
        },
        "item": {
          "id": "0e7ce843-8c92-4515-90a2-b2cc4a770cc0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "45752742-6c8e-4b0c-9d0a-4f5aa6444855",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e7ce843-8c92-4515-90a2-b2cc4a770cc0",
        "cursor": {
          "ref": "32224f52-254e-490f-a3a8-0db99260f34d",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "bb67f3f7-64e2-4fee-8fb5-a8ff77845d15"
        },
        "item": {
          "id": "0e7ce843-8c92-4515-90a2-b2cc4a770cc0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "45752742-6c8e-4b0c-9d0a-4f5aa6444855",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4111d6af-6ce5-41c9-b545-39a6aa3ac180",
        "cursor": {
          "ref": "cf37eae5-21d9-43bd-8e20-2734a217f6f0",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "2e9be09b-5596-4cf0-b0d4-f9c48354628b"
        },
        "item": {
          "id": "4111d6af-6ce5-41c9-b545-39a6aa3ac180",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "4e6d14af-8403-4a4e-9a9c-68cbd2cf96b8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c0216b3-f2e3-4da0-a099-cbdbac44c83d",
        "cursor": {
          "ref": "f8a3f6c4-1953-4f7b-ae8b-8120cbde5512",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "2099ea6f-c509-4b67-8668-c16acc1e2a45"
        },
        "item": {
          "id": "5c0216b3-f2e3-4da0-a099-cbdbac44c83d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f839d888-d2de-4ce7-9e12-338691148cba",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}