{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "3981d44a-cff0-43d9-9838-0773b06aba6b",
        "name": "Clear Cache",
        "item": [
          {
            "id": "6b97f5b1-104c-43ad-a4de-2c60e6d1a1c8",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a8e90c2c-778b-4197-ae75-2bbb50af0c4a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3182e079-cb31-4299-881d-a7d6356c8e23"
                }
              }
            ]
          },
          {
            "id": "4f07797a-6616-4574-a496-ae5f611f421f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ba3d9394-9b02-439c-b692-1b72280d1dec",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "77190654-b750-4683-a46b-4b2b217c1102"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "1ee794a3-fac4-427f-81f2-dde23ce3db28",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "cf281ffc-8eee-493e-99cc-50f3879583af",
            "name": "Positive Testing",
            "item": [
              {
                "id": "279cb813-08ca-4367-89ba-df3ade4dab2f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c9aa3523-8fc7-4e53-bcb9-9a23762482e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "618fe3b9-7820-4219-9144-b9138bef68f6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d1bf7c89-5847-45f5-a2b8-57d0f5aa03a8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3cc4c17b-94d9-476f-beca-ba7902bfb32b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e641c9ab-e178-477d-8ab6-a3ef7c30f387",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b3d92780-a9c8-41d7-83e3-4bac11c5435d"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6db0d336-adf8-44aa-a5e8-c9dee260d843",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e36435bf-5c84-4508-b23f-99e7a263aed5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8d7ad3c9-c833-4d28-a490-12ac16efae41",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "40a71a53-6133-4669-96f1-b6644fd1dac3"
            }
          }
        ]
      },
      {
        "id": "1f0a6862-f679-4342-b284-777d8bd17074",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c5d549da-d481-45ad-b440-cc8a320348f6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bce70c82-3fca-45cb-b836-700cc5509afc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "63f87d62-b7bb-4a07-9273-c9638873f0a7",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e863ab4-c962-45c4-a407-8cd1f195abab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a702ba0f-3a11-48ec-9741-55604f7a3d8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d706b3d9-e5bf-49fb-a82f-7f0eeb550aaf",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "902df486-ef25-42cb-b37c-389c15f01843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9de6779a-2a75-40f4-8e6a-cac6cbd32218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b96912e3-c419-4ccc-adae-fdf9af8b8923",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a7beb2a-6c1c-4947-9457-0e908b6c85ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c7378326-9dfa-47d4-aabb-6b4c6edd2efd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6efc936a-73d3-490b-9527-956eae812dfc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ef978da5-f653-4ee1-a44f-e62e9bd9f538",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2803e463-a4c6-4f58-989f-9b331139967d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6f8c3783-fa92-4681-96e4-2e3aa1f47f4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a717b79d-7f9c-40c4-9775-a3f5ea267f55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ff3067a-ac37-4b1c-877e-1cbd18705cd8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b9661817-9870-4dad-ae68-8339271f7308",
            "name": "Positive Testing",
            "item": [
              {
                "id": "371b806d-4f13-460b-8f2f-647f3f71c5d7",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "13a5822b-73f7-4a81-880f-5f5e66dfd748",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "06331340-79cd-4f74-b8d4-e461c2e70713"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5408aee1-284e-4764-9a3e-96b3a48fd240",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "86d2ceed-3a81-4db9-b3d1-6fea72b81e20"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0d5bf5aa-e1f9-4b99-a006-ab9166dac31c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "086193a4-9746-4bb0-a23a-7026811d52a4"
            }
          }
        ]
      },
      {
        "id": "a0f9b9d9-130d-46f4-92f9-1ca160f4c8f8",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d00f0b37-f7f0-4093-b96f-dce8a31baec5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "56618308-8e57-4e71-ae89-954a6f1e1fb2",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "1146213b-da06-4bbc-8249-bc178064a146",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f0af5b-2a54-49c7-a52a-8f75fa34e557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "483d17a8-868d-4a03-8580-8480d62109b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dae93b09-6e72-4573-a2fe-18b3ebb25368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "886a5b70-5cc3-4ee5-8063-31e1e8f8bc6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22033a2f-703f-46a7-9c99-d3f115c8bd90",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f09a3d7-0e54-4ea4-9999-b9d06dae5ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fff9622d-269e-4ccd-a417-38277ac1c269"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17deca16-fff1-41b9-ab26-754fe6f6f1fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4a14cdf-d25d-405b-9fe9-4c00f89cda84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b5c1b67-a0d6-4e8a-8c0a-3b1ea80a52a3",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06da9964-e2bb-4171-8b2f-8f0c7d8428a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca0b75f9-241b-4c56-ad20-b59e82f13588"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc22668d-4424-4d0e-b167-4aee01f2c43c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e290171-d101-4707-b5df-74c25bcbfff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "539a8f71-266c-48fe-b520-3962ba66520d",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c934961a-e36d-4f40-94a7-980e33cc6e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d129d15c-342e-4a61-9300-0fc6bf6d714c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4c85a13-7f0c-48b5-a4a2-b4c981d0bb22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a3315b6-807d-40f9-8115-4eb788a52342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d80787-87df-4701-8160-fec94d7f6579",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b098ab73-31c3-458e-aebe-6f26637af577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73bddc6e-d793-431d-aaa2-c5a0754f1609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94eefd94-487d-4cfe-a63d-f09ac1929cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c3810944-2890-4e42-b1e8-4193fcac1144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8585a704-0581-4ec9-9bf5-66a1635a0b13",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6012facb-bcf9-483a-ab72-8bc117b777a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44963e0d-5d1d-4f0e-9894-7bd902c919d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa893576-8035-47ab-bf96-682813ab1d87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "80407046-7041-4cb2-a33c-defe8d27d981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5798f0b4-8c9e-4a99-a6ee-81b325172d65",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "976d4286-3ee7-43d2-b651-11e92b87e995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "691560b2-9073-43c7-adb0-6beceb8d8aed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df9d2fdc-d020-4766-969b-3ad30ae3dfc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5c4e5250-77a4-4c2d-865e-64f7f50d706c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9b64f43-4323-49b3-802e-4d13041b73de",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2586ca3-00a0-496d-b81f-e9e0fba04e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42f1991c-805e-4c07-a9d6-1dc1e2f1f29f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a69aae45-d980-4e57-beab-c12e3df1e8c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f474060-c3a8-449f-a10c-fd6ac626b5f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99cefe04-11ab-4f94-ba53-d7a0dbac90b6",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f36dbe77-d438-4eed-b8c8-d83f1fefa8ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "911a8731-cee6-4b24-9f9d-f9304c9d5ede"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec4c98ad-2f47-4b2c-bf75-39f721be8c46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4fc7a6c3-b5e1-4cca-a975-c56efdb1db68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "069928c5-ee9b-4da4-8684-4a845483062f",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95580e91-80e8-4228-a1ce-7938eb4266de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b64bac16-ca74-40c4-9596-e1fc76bba522"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd15211d-eeff-4d61-be3e-90618ecf6c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d965626c-ac3f-4dcd-86cc-e3a06560f471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "124bcc6a-1b14-405e-8b23-2516cbf53635",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "916eb702-369e-477c-9f8c-ee70809b6da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7e51d3b-ae6d-49ec-82ad-185d5385b839"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67f28fbc-2e70-4ddd-aa42-2a97c50076c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d2b3343b-f109-4fd7-be08-fb660c86c028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35985d2f-4bbe-49c2-9e32-c0edea1e6d30",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc19bfd-c679-4294-9b7f-2a4f11a5ce92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3773d42-957b-44cb-a0dc-6aebd36f7382"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e6adfca-b060-4471-bb62-a27945beee46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f613a062-89f6-4e53-8c42-9400cc08da45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48699343-19f3-41c4-9fee-8d1fa2e54750",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a274471-9b1a-4d31-b4ed-fb9e65514614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29105b49-00f2-4928-b459-069bd36ccca9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "696bee85-84cd-4dc1-88a7-e810b809f43e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed46bca5-c483-4bd3-9ce8-7a304f396c90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76a6bff4-fbb3-47f0-8c77-fa984915d51e",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a827e1bc-2a3c-4522-a1a6-9af2e8011916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51a9ed3a-0052-4453-9b26-a50409cb0ce0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77d1cd6a-a5fc-4940-ab18-59687abed096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9878dc07-9277-41dc-a281-43ec0447c380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d24551b-af44-46e6-8bf6-a5f5cc228cb4",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68fe3aa4-7a99-4660-bee5-f90848c4d54f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6480e84f-1903-4004-b090-a28587a858d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e2cd4a-6452-4bd0-abad-e4b15b42c8ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6304fc8-33e0-43f2-a7c9-cc449ec883d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02aeb16c-82cd-46f3-9318-ff7b4fe1dfb8",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b1887b-8588-4524-9c5b-0e981f135758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16680070-c57f-474a-9247-2cbfa9ac15fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d81a0f8-cd38-41d9-9e2c-ba352d8bf2ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31c2dd92-2dcc-4791-b8ff-bf1732aabb0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9023c04d-8038-4ba6-bf7a-ef9d5a52dff8",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46faa237-913b-4d22-bf6f-b7f4fc6527aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48a878ce-fb3e-4544-809c-d32e3909798f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10817e2d-2fe1-4df9-bc07-7a55e93e69fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7934fdb8-8d79-4644-becc-81ca2ba857c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5433252-3a1a-4a5a-8b1e-38e396057b54",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5d56a61-a0ef-492e-990a-be027f948275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7ec18b6-817a-4e03-885d-fd12f7adb834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbdcf1d7-d955-4a4c-b6b2-ce6efd161613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d756bf81-7e7f-461a-aef6-66e17b588125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f059a9e0-54a1-4377-aae0-425bce5bb759",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18f04e84-5da0-4d61-ae91-5020e97596fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95f7915c-2192-4aed-b3bd-378398ced534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0309fd6e-992b-4fd4-960f-5f6c4fbe6aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "744288f6-0dfa-4181-8838-7408d8894e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "698456d2-84b2-4360-8993-9372db9f1417",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "683e0662-6025-4dce-b46a-a2d4bd4c8f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c110901-9d4f-49a0-87cc-da2b92017820"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4544c363-df9a-4da1-af75-e9994bfcd5fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "289ceca8-551b-444f-88b5-cd69a8009541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15a78c43-d420-4b50-81e4-c26741577921",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e00d811a-e667-4553-a52a-dd99d11be7b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b6cfe60-14c9-4383-986a-704e240d168d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a113049-5691-43ed-bd84-5d386e6fd34a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e166f3af-d288-4227-93ae-045d1528bf13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca6c2055-dd08-4c33-b659-f85cc20123ac",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb6d6adc-0a6b-46ad-8d77-4630bed75585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "679158ba-33c7-4549-88e3-97e6ee29ea38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ad59e2e-5f5c-4909-9676-c01b1877b0a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1fbaaeac-b1ef-4903-a507-402e6580ff57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0faa5d55-b7b1-4c69-baf3-05b37199913c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfbf158f-1cf8-4770-9289-bf2fd3df13ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "099fbb3d-dffd-41dc-8834-5fc6be9c7100"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5e3298e-b0bc-481c-b724-40a5159b4ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0e1652ef-74ae-4dbb-b58a-2b07691d811b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "147073c6-2850-4bba-8d5e-30c439af7bd9",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "568a0b43-a67c-4131-8d08-5a4b97b7701f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "517efaf3-fddb-4a98-8f3c-179c2ef9224a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5131059-9bbf-4b12-9ff7-1c302353d278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3912b9d-71cd-433b-8b9c-2cbb7297f9ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b48584b5-72e5-486a-965d-1543c8ccb457",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6740ad71-89bf-4c72-817a-a1a2b91b124d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0f90e13-0866-428e-91e9-244bcbe69aec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3dd2bfa-01fa-45aa-b1fe-57c33e2ae679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0a13ee1-969c-401f-8951-d98885d0177d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "127c8500-5fdf-4008-be13-e82061c5ab5b",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1fd2b5e-7e06-4fba-99bd-c4fff1906ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a024b634-1eb1-4182-96f2-f2424fc3b7d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d67e994d-5d0d-4790-bf57-79674f7ee7b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8734375c-f828-4dd2-9aac-63ab8f475efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d0bc41a-13f5-4b77-aee7-540f6d2f49f0",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "334d2118-19f5-419a-9153-b7614376763d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d31d991f-7989-40a7-9f66-8975bbe997bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "375c91b3-4e2f-46d6-9296-c2f9278607c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "39eacd59-c46a-442d-a96b-9f70d315b25b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c286a41-64a7-4e72-8b60-39ec958e3a9a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa44fb8e-5298-42a0-b1a1-501290509d2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0acf27d4-cd83-4af9-920c-9f109b114ae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cd73948-aef2-411e-9b1e-d7dab6ecffc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "29a33c93-2f73-4c3c-a03d-67f86c10a6c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63dc2f06-e03d-47ba-8c69-e052c009966b",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc75a31a-df10-48ee-8198-89e73a96a4c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c765f04a-4555-4d7d-9cd5-5bc589749803"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21bd1918-b1e3-4197-87bb-7e0a9546fa1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe8bdc39-c953-4352-b307-9308784236c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d5ad00f-6a6e-4592-809e-6731a7fbd6a7",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd13dd1-c4d7-4a83-98cd-700fc3584fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a106296-c390-42b7-89d3-398c694b047f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c98b3d89-467c-4eaf-b301-9e4345f130b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "4acccdb7-dd7e-4ea6-9ee3-93fcb924888c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea063d6-1fae-4fea-b9f0-545f8213e669",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd83c7c3-4d4d-4b24-8e05-853d847bb7ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f3efaec-3b34-4096-95a0-d404907024d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8d999b9-85de-460a-ba77-cf65c4f5b238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "50aea5cd-fed3-4e1e-90ed-b2c36a32c040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dab3704c-514a-40b5-b5b1-1963e81e436e",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f50c4be6-de73-492e-853f-39073fb5091c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d02ca908-1d96-4a18-ae3f-6924f0fe60f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "004b20da-df75-4638-8532-e7996b58d4c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a80127c-0651-4749-8b9f-9daed72ffa11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54fdca01-b8fa-411f-8c1a-7b3ab4d6400c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c80f952f-087d-4ea2-9753-7b4450832093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0205d5a8-04dc-4c0e-ae2e-0dbef46a6911"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bfc0d93-cdf5-4e9a-8357-5177c9fa984c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "25fd229a-b673-40aa-909c-cd4cdf1f4ff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "936d5837-56a1-4944-bc76-b34ebddd081a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18695b39-e7eb-4e13-abea-47f7e9cfd4bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfdd0a8d-fa31-4456-b531-cb9dfa64d290"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a168be2-58f3-4a2e-95bc-a1c6b55ecc8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "36aae96a-8dd8-498f-8b4f-caad4f6dc6d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f478c3eb-6fc5-4177-bd5f-efe93c0e1482",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75751c10-82db-4a03-bfdf-705d56ff5993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c68e169-b866-4136-8003-85762a5228c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c4ef21-8a4f-49d9-8435-ec310b394474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "221160b8-164f-4871-a2f4-ddcb22f269c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba3e3f6b-385f-4034-9900-eec84d0d0c63",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be1838a7-74a8-4e1e-a5b0-857bb3e9d87b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a4b345da-6e56-4b2f-8b33-e29482d2f05b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e8fa64-761a-4850-9f88-282e98d32a95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dbb9dfc7-8a06-45b8-a5a3-d343efaf8c71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a35f3a5d-ce95-4a5b-abce-71c88f31c451",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4602e8c7-5dde-445d-a98d-c4497d566744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "651c7a83-40c8-41dd-8486-6e6cdecd034b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65fcfb5f-b775-42b7-857f-c8367653746d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aab404b8-713b-4081-8453-17a06ed60cc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d821a8f4-237b-45db-9685-1f2beab74047",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1011b4a-127b-4ca5-b860-bf09570a82e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cae86364-48ce-475d-ad5b-5cde18e4683a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db65f404-2af7-4f3e-b132-1a65da0e2726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e99b2a6-2c48-4c62-95c7-ead42943b059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "111091fe-2090-4e99-94a2-688d05310f16",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a5ac17-bcec-4bc5-860f-0d8d98b8b32b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11c8a42c-246e-479c-80a2-bd9d4a9b5591"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "764fadef-b6f2-4610-b456-007c9dc75595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8fe8f676-f490-44f6-afe2-3fe3d4718ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac201d04-f5a7-45ec-8de2-23c2ecf3b252",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4082bf09-ab1a-4116-9eac-2211491ae49c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01606c85-f295-4e34-94f6-2826f2c766b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a876125-0ef8-4a3f-9bc2-0fb4b2d878f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "58191e0c-70c8-4fc8-aa31-8bcb45549cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c20bdd-5e24-4032-becc-ac68b2a57233",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd5a7f2a-257c-4b42-b76b-f4261084576a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2c4851d-9a80-47a2-85fb-0a1c40590e2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "926b3b24-4a54-4b7e-b327-1da7c4923a90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a631e7b-3013-48a5-b5b1-6a3ff861bc7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "761164fd-1202-4a3e-a11b-b94f5d7a3ba6",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eda0e1c-7d60-4a74-9b8c-af35495504c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b279cbf-d3a4-45f0-8388-07503250ecc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d96c4b3-80b4-49cb-b472-a55950ee8962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c466e93c-54c0-4aef-807f-c1b683b6f1c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a11d96f4-7c6a-4833-824d-b1cc04e794e9",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f51b59ae-863d-43b0-88a3-b630bf326a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf8dda83-e49e-4bc1-8aba-65dcec741ea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e04512e5-f879-4de5-9f04-d1d51a8d7823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "41451b10-8580-465f-8e55-92dbe9397b26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48bd96c0-34d6-4fdd-a0b3-33dfa474c96a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1122353-651c-42c0-ae9b-0fa738b42ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "205cf580-d105-4f43-8723-36c770475988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d74208-52ef-4364-8a96-94efc601462f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4952a50-b2e7-4999-bb9a-8a5e56d905d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "515e9cfd-adde-4212-b9a9-f50fcfd27d6e",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05130cf2-ef41-4ee9-933a-9a19556fd328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f6e9757-8b8b-4e53-8dc6-d4371fbe1222"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a586404-f38e-4d95-8f7f-a56ae568001b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a52b465d-ac0b-4db2-b3bf-17cdda420699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a83423b6-d6a5-4220-9c2b-61bfa4beeec3",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af6f2d61-6eaf-443e-a259-c65bd40c15d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21d9a424-ca38-4e81-83f3-bc455940c22b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cf325d4-fb00-4fd2-92a7-2bcae422445f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcf42f9e-a774-416f-a6b4-eb27569182d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8902b05-c1ca-4f70-ad3d-688b09f3fe4d",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b22dce6-3721-4769-9c77-e30a4a11573b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76499b46-ba1d-4ee5-b04b-56e9c0875860"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb151023-2df6-42de-9365-71c7870c0a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c956e08-c18e-454c-acb2-1fb5d8be9425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41273b92-4812-4c41-9f9e-1d551919d4ac",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "854745df-a67d-4c2f-b59b-4b52b7caf3ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce570014-2796-4d9d-a9c3-72ec88965aaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f22f08a2-a3ed-4a98-91be-0453dd117932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "595df522-d88e-41ee-83e0-6c559302408f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78da3678-f1a0-4c7d-a818-f21308d80736",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b0de302-7281-4607-8d83-1698216cb5f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2d16746-61e6-4ada-8901-c4d269623495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc1d92c-988b-4c60-8b85-a660ab1c3cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "72a73067-8bdc-4d80-8a20-21c2079e6302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ed01ed-c7ce-4639-89b4-cc266320d94a",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ca6d21f-4bfc-4592-8492-20f008dc65b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "316e7746-e7b1-4a67-b083-76ba6487e556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2ab1172-bc0c-4c3e-992b-676b64138c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2286e5f4-690f-49d5-9581-ab8d8d2da192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa35ad80-f7c2-4dc3-9cfc-4ff8bd709af3",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e1bf26f-2e8d-4a4e-b32d-39ff307b4e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "557e5815-0744-47d7-b2fe-cc70dde6e421"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77f6dc34-5120-40b1-9846-d1b3c873c8e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6349c196-e3d2-4ec8-9e71-0d5f0989112a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbb49320-5029-47f3-b095-c498e9798e77",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "198a8f44-5008-4c3f-8d50-d552171a20b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94ffbda1-ffe0-4946-a825-afdc9fc3a5c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5fff6bc-4f0c-489c-b070-7d6c84619c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5bc4de8-1acd-4a4d-95b7-ce9c240611c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c34753-0290-4bd3-ab59-1fde7913d9ff",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76be497f-befe-450e-9363-c280c30d49d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c43f626a-b106-4c2f-b6ad-bd7f9fcfbdd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76043103-d467-46fb-b13a-c453de7329c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef10a8df-e9f8-4843-aeae-960defe1fa4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d27b484c-27bc-4e1d-90d4-93056f8440a3",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e479f9f-ce9e-4b98-af6f-60e40a1db7be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33ad14ff-e074-42d4-9ecb-900fb410bacc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51d94121-4f75-4152-871d-6ad7ab906ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bac3bf5-47d2-4f44-9cbf-212286d13615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3162169-6cde-419e-a332-9f8b839e5010",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59123ea7-cc5e-4e5d-8f98-279b49d623d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbe67682-ead7-4d55-a8b3-fececcf7482b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeae4cf7-b0ed-4254-a52b-8b1f1eaa8980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "80cb6a6e-2ef1-4483-b627-98feb03b83e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71446444-28b8-4965-a433-0c987cc15b2f",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09e42d5d-847d-4a18-9b99-fd79b467b716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "348df8db-4b0b-4656-97e6-ae29d6382cef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37d19ec0-0eb7-46e5-a832-d22bfd16f8d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "6a911732-bb3b-429c-a7bb-35d4a0b7c437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe689fe4-cbd8-4b64-98ad-55ca27009128",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83bcc834-5770-4a75-ba0a-d11fe8ecf3c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3376d632-37f2-460e-83fc-24d688be78cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d145359a-6c9a-44bf-a764-bcf6e696a6c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2cc24eef-5e5a-4d54-b7de-ef25bc44e6f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0f6a3b0-ef48-4660-86b3-831e1148feeb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21533ac9-4bc2-444b-8a99-29e7a5c9adae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "732af3f9-2e09-4dc6-b67c-b599b5c13ccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a693fcfb-91da-4a0c-85ae-c0e3823a4766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b377201-c7c3-4310-a6bc-f7519c8b2c44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f11a280-d2c0-4883-a1f5-2c99442b8037",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c27d1043-976e-4907-aa63-3c32dd2019b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61faca68-02a6-4b06-98a2-dd59079e0d7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0814debf-7d41-48a2-90c8-2299e0fcc6bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1225425f-c990-4cc2-96ee-a8d42865e95e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69112936-3285-42b2-90da-bcc7dc3270e9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa94afdd-2e6c-4f9e-818d-73e0599d764f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4483049-936c-49d8-b99b-20ae0a54d9a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b52e15-3835-4c8d-8b08-3422fb282afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "27a34679-8d85-470c-9090-935d69ec270c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c859ccc5-d07a-4a4b-b6ac-aed14e64a89e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cd87de2-4bb1-4f43-ae0f-fd351d523dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42baa127-b59c-4d2c-8a35-abe48aa0eba6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7c7e2b5-c295-4f1e-a989-c6438759e2e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "87670fb4-6942-4359-b1c8-4e9cbcd461f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2fb10f5-3bb4-4912-8343-a26684021942",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1726e4b-d62e-4640-ba16-e23d53c474e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a70d6a0e-266b-4a13-8a87-b7dd20dc28d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b510f64a-1a8d-4aff-a9d9-da25b943a837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f71bd997-ac53-496e-a868-e9b6f097441b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39a5201b-e0a1-403d-a9cc-cf2bbe21f799",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9866b57-871f-442a-8d80-5d781e947f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dc44778-c7ed-4343-a8ad-a6f40734f433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c282e19f-d45c-4177-b3cc-1e12643a50d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "dff7477f-f43f-4967-a987-d37368886305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "118141c5-6362-45b9-bbf3-48ce36260bcc",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7e836ba-854e-4ebb-8c0d-0ce1adb1f9d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef8e6097-2d6d-4bb1-8f20-acc19ec6df3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e6c8ed-ca3f-47e9-8a4f-d648e628ae3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e26bb767-e44f-435a-b0c1-5057bf0d015c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af8b6172-c895-4fe7-9a5f-e0330015d823",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "025fa505-b9db-47fe-810e-72e80232150c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47b1ac66-880d-4363-b785-5dbdec248f51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17bea6f9-f625-4a54-9e99-75895b166c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "641a605d-a5ab-4d05-9c9c-e4753fb1b3fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f96c5f9-4120-4d65-a3b4-af329530d966",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc381a20-60c6-4861-90ef-f9551bd339ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "166e3e61-ebd6-4e63-99db-eeeb7795ceda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6044c8a0-ae05-4247-ba2c-9b55f77b2172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "efb330a8-e53f-4825-be09-7cabf30bd538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a586a9e8-dfc5-4c37-b322-c40564791a5b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79efe88f-c4a1-4f9e-bbc0-25beb3e75988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79b50393-b091-4bdc-85de-e3967214569b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb780506-7f1b-4533-b208-cdd308a0de3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5977f564-df48-414c-9adc-ed8ae25910c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b3728d-ea38-4576-adc2-ece6f7a8713a",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "336f879e-2c87-4ddf-ae18-be55b2f61d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eff2ff0c-f56e-44c9-bdc0-b51dad1f9ff3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "168a63ee-224f-443b-8afb-41ac9a8afdad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bf6585a-ae56-4b25-b17b-0559381ce6f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a756b349-5479-4ab5-a835-47388f91a9fd",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0f36b4a-4cc9-4c6f-902b-508b936bf26b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1291700-d11c-49c6-b772-0f3e1354c9d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf509196-8a3b-4846-a1ba-8c94c39c6aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "634922ae-81c3-435c-af10-8d2bb6064a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b042ce8-4443-44b7-8e44-b3d6e895d36c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed8489da-0110-4fe0-83c9-ac9485dba7b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04ea802a-566b-4921-a0e5-77ff39383364"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faa8aec6-6a75-4876-9bff-c9f56a32941e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec1bf7be-a1a5-4f0c-978b-dc790de3fcaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "421d74d1-7acc-47a0-97cc-01c5cf8f2e90",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8685e3ef-1c0d-4302-bb9b-77b3a153c51a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65a270af-12e7-44eb-a910-e8652b49346c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1f7a3c6-53f3-4b0b-a6e6-e9fd3002775e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "80cc3d86-c98c-48b0-afbc-65b997ee9b28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d383dda-34fa-4e6d-b411-af39b9dbd14e",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db947488-2a30-47f7-a177-56efdd7259d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a7e9037-b019-491e-b70d-8859a5fd100f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d519131c-5876-4812-9b47-e4b2361309fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d828597-7ba0-4d00-b39b-d81ddf685900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8947792a-e67a-4092-a4e0-bef0599713a2",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3187b5b7-afd9-4b5b-8394-4ce4099bfcb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edceb7ba-472e-46d4-bafe-48b3f6d8a8d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbf028c6-2f57-4eac-b52e-15ea9b29f6e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e8cef36-7369-4cd2-b4ca-99f9fdb2c732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96c90018-12e5-4a72-9ce2-2d1f7793d863",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b04f2cec-be6c-470a-a775-e39a3712c6f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d91d9b15-c905-4625-b14c-53b4d31e792c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aecd16ac-515f-44e2-af5d-b97cfd6577c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ca306a54-86bb-46e2-979c-088fee1428c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3808255-27b4-48a5-872e-fe507acc602a",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb39dc1c-f8b4-41d5-ad90-415758ea0749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca18401a-49ec-4f37-bf87-7ebae3bcc9df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6031339-3b20-4a64-ab1c-6897b788627b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "59365975-876d-4214-9233-9ac23fde2074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f97a438a-7a04-4918-9695-0c9440fc8ad2",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b611dd2-1f7e-41f8-84a0-e47889e7974f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef403366-e153-4cf6-8b02-37e392ad7fb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91fbd16d-ebea-4939-8db5-aac2524757e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "092ef127-56de-438e-a1d8-ff437c1efe9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5705abdd-d944-4e00-952d-386c519e3ff0",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dbc5522-6db4-448e-9cfa-1b72fa19ee86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4d97a7e-bbe5-44ea-9896-e46bf8297508"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecbbf090-7e79-4059-a63c-c5b7e2bbfb3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c8d2561-e311-4a96-b76f-1e60c45556f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b8df1f-9a3e-4d96-a1dd-be8b83b925b1",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78983387-4fef-4cf3-b38e-58048f3e1389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb70207a-41dd-4a67-8ab5-468eae7e5eef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d1a285b-d3ad-4b6d-bad1-724fdb411f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "88e7520a-065a-44ac-927f-d70e424536a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e90e201a-6ab2-49be-92e9-26822d1ad72e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36a334db-6658-4f9d-a30b-980d2fa17063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8e02e27-eae5-40f8-972c-77adbe87f814"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0083c7d0-64e8-44d1-abbc-eb9fafc37937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5fa7c0f-e40d-4a63-999b-3c89cb165baa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "183ff448-22cc-49a1-a7a5-55eb3ec2b38e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2824988-c0d5-4485-b660-e7504b82fc1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1907584-e487-4e28-989a-b6a6081c4db7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6832160-70b0-4ab0-8952-1e2d76a5e44b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "83ec3ec2-369a-4456-bafb-83b06f84b1b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6a93696-45b1-48f0-96d4-85056eba6a26",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad6b728f-83c5-44e2-a63e-b591d72df2a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6092ef8-bdf2-4107-9f65-9426c17133c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c733c28-e5d2-4586-b693-19ab6a3960a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9bbfc7c-6c36-4ea6-a21a-e05c664028f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c328a67-ea9b-414f-bb2b-e662d0ff39cb",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "013ff2e6-cefe-40c4-89c2-3d5c0ef4c0ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dec2cb5-cf8e-4263-ba66-247a6dce0a9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d26fb704-feaa-4db2-9b7c-c8a2e245efea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5ce585d-d67a-4e23-bfb4-4fe835586cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "693c8fa3-f52b-48f4-8019-54bdd07b0710",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff226676-745a-4c04-b1c7-a599b8a7f12f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb24dd71-74e8-4057-aa28-49825f66e2db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42b499b6-29a6-4d62-a238-e13ca4ca15c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "920bab5d-0132-4a8a-8002-c66d09821cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d277c0ae-7981-442a-9196-b16f291673a7",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f382ed4-cb0f-4d08-9e43-8058e3171fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58907654-f893-413c-93e8-ff89ba9e14ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1b05c7b-024b-46be-bd28-1eef4b0ea2dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6d5c8df-e61a-4810-b8c7-b51c5c8fea48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fcffc04-26d6-48ad-a59c-e9da9180c05e",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23b8fcd2-86a0-4abc-a828-6af082810c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3b93b58-54cd-425a-b9e9-b72c573919e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4ca84a2-9d53-4aa0-b888-c810a8404bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7f159224-14a6-49b6-971f-d0c6f3abee62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6bdd06b-bd95-440a-9118-d7f50b42c93f",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "054a895a-5f0b-4e22-80b7-9efd3c9d690c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70e96492-3c20-4be6-8c3a-4290ee086e09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5322ca14-9920-444a-96ec-96b5e0585b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "41940d62-0108-4255-9a0e-0c64158042cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82b6ca41-7492-4b61-b67d-4145ed350bc4",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e6e20b2-d72f-4305-b702-4219d2755c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caea9bde-be68-498e-a5dc-4043634d7ba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1060c348-2408-4605-9ed6-389fffd54a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8aff575-332e-452d-88d6-2bfff4fa5b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f90de30-9af7-4e5f-a215-6066bd883e4a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "821ca943-4370-4420-ab93-ef7259e6b857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8cdca82-449c-49aa-8dbc-b4a283781225"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acbb14ed-5107-4616-8f6e-55dd85cca8f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f15407b-c573-4f7a-b0bf-8e7d19312e58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcd3e4a3-ede1-4907-8deb-9dcba02a9684",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce71935d-c2fe-4102-a1c1-4238c8671576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95993888-fce9-40f2-b422-1bedab2d294c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f6b4388-56e8-4d81-93da-70373983d3d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e3b09b9-c208-4ad2-84dc-4e49d0a8bf63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9ad28e6-f928-4a7f-9502-fa4cb4adaeea",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f182e75-0a59-47f8-8197-c99a689aaf52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef5c7cd4-022b-4e3a-a80c-bd5928f2cec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29ffbee7-0dc1-460a-a627-4402aac54c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "845d4352-8a0c-41cd-9ae8-f22a31259f62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e967d51-81cc-4159-a324-80982c81e25b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb66b1e0-31fc-4fd3-b472-f6f4f6037f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "364ddbed-14be-4828-b033-c9888b559044"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dc89548-b23b-408c-8e75-07e05f06f1b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab608d63-8ec5-4f94-b63e-46bc83343c30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c43565a-38c1-4859-ae5b-50507de67c7a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b88dbf-5481-4991-af26-3cf69a6955fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "3fae65f7-53ed-4cbf-b440-4bffc55b2242"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50b59de0-c609-419a-87ce-c74c2308dfe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff56ae4b-8b63-4a80-b446-230441e1583e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7589cb1b-91d4-4203-8563-018dd67260a4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2a190dac-2aa0-4b10-bd1f-093355b2da7c",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e55244f1-b9ce-4f29-99da-1d721768b6f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "569f3f8a-5701-4768-8563-7cd4f1f21c27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d76e94ec-cca3-417f-8e4b-c73a0900b5f8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f32256bb-63a2-482a-ac37-35611f4a3e3c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc6c0cca-67b3-4466-b1cf-5f269efd9e1c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "204b3053-9469-45ae-853e-d5f1cbbe2635"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "20de1372-41e3-4c81-9072-dea05393baa7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "acf5dd18-2068-4dc4-aa8c-1508f05315f4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "114590c3-ab3d-41f7-8654-3deb88d172b6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "53c3269e-3f46-4fa2-acb7-a1754ece27dd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4a56b71b-935d-4bd7-815a-84cb12809c1b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b352fceb-2ba8-4150-9306-2f524c2d7f75"
                }
              }
            ]
          },
          {
            "id": "fdf2d894-af98-42fa-a7c6-2876e71268f1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "de45b385-a1b6-43ce-bf8b-76ee7af0c328",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "e5a10ae9-995b-4c38-837c-8e035b4efc5c",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "499b0e38-e7f3-4b7e-8606-aa5187308695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8da55ed1-e51d-4e3c-b3cd-f511aea5113c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aad513d4-96be-419d-bbc4-a3dfe6d3efd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "633fe578-9f7d-413f-aeb8-0c816253138e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "15cb0e71-b3e8-498a-ab4f-19af980fca9f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea64c0fa-6d3c-4d7e-8848-3103b6ccad0e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b23dd669-a018-4fd5-9fc5-fd11bdb6aec4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ed92f25-4f0a-4854-b3d8-64ab6eec30c8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d801e486-8cc7-4af3-a6cd-f4462e942382"
                    }
                  }
                ]
              },
              {
                "id": "410804b8-075e-45eb-90f9-02830c5c6901",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8247d3b6-6185-4237-9527-61f86c267f02",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0a63dd4e-a661-4806-bf3a-d136e3682026"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3be37c05-ea77-40a5-9ea5-12c36906af39",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "08c2fa35-257b-4f63-a0a1-8fa621f04295"
                    }
                  }
                ]
              },
              {
                "id": "5f6f6546-5fb5-4253-819d-b2b07535b068",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc623737-8759-4b39-8f37-d23bb4c03da3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a3650166-099a-4106-a54f-388faca59271"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7fd6f4d0-97dd-4181-8434-c50ad72793d4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "31714c8c-6bb8-4c26-9125-e4aa73da0b88"
                    }
                  }
                ]
              },
              {
                "id": "afb296ef-b034-468e-a478-d35775d93e81",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "10f48b2b-42a0-4554-8924-3c9c55ac4188",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1d59406a-ced0-40c1-8463-0332dd2a672d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "089b9b9b-635a-49ff-8d5e-e5808a930999",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "e28fca8d-eb74-42fe-90b2-a6be09530ce4"
                    }
                  }
                ]
              },
              {
                "id": "87f9b5c5-d01d-40cb-b3c0-5980d5c07cab",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "44f73628-b928-4dfb-8ead-9bf64fc233cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bf56eff8-45aa-4cde-8667-2c6f7cfc5233"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2361b469-0204-4add-9bfe-2284eb0da786",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d3daf25c-eb48-43d4-a8bf-75917814ad54"
                    }
                  }
                ]
              },
              {
                "id": "fff68a93-8af8-476c-ad6f-7a0813a43994",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "800eba0a-4b53-4bd1-bdc7-13b778e8688e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "401e7dd2-d245-43b9-9a0f-0ba5ea13761f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7633360b-e43c-498a-8e78-1b4594bf5923",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e7d0a1e6-eaf1-4fda-a667-705222656b4b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dbb056e0-d7b9-426f-9e46-51efebeb58aa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b7b29bb6-bf45-4c9b-b137-84004dfe192f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f764f127-e488-4952-a76a-89e41af74615",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "978326f5-5bc5-4daa-88d4-ea17a8750432"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bbd0a36e-3cd0-429b-8755-47aa58042c90",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b7ec6710-d022-44b5-a3ba-b88f16d3f3d5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "563b6cdf-b8a1-42e1-9516-6016d77512ca",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "59f26b8b-728a-43e5-9959-d89cfd1e2847"
            }
          }
        ]
      },
      {
        "id": "8a5c8d60-3803-463c-99c0-67f843533285",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "1e03dbc7-7243-4737-b672-7559f1c1fcbd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "55dfb9a4-4d20-49a1-b4de-cb10e48f2459",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9c9c8c25-55d0-4d88-bf8d-efae0c32a2ce",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98610406-f3e5-4864-9c25-3396e8db9eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad463561-5470-41f9-9468-85d24a66a01d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41c6cb58-75fd-4617-bea7-877500377fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "23397bd8-4fc7-4a26-9fd6-7e5f7bdedd1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2fdc61b-37f6-4012-8670-75fd3ec0c463",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13004bd9-6e79-47b1-8a5d-8df127d683fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b63d8ed0-85ad-4e05-972e-d6e796dd6b16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "892aafcf-ad80-4e1c-86f7-68a848c97ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "04420510-a910-4e67-9fbe-ef453ec55755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28938a77-c84d-4e1c-836f-e7c3890f4999",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47555b3a-8cdf-4c52-8f90-23d2db022c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80bff602-f3d9-4053-9c0a-53a9457f9f3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a43e8387-fd0b-4f72-8568-3dcfffa27326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f97d85a-669d-4477-9442-026fc39614f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af8b9a66-a9f9-43d5-b818-1e044a5ba62b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b2fd654-960f-40ea-af9c-ab999e7863fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dde1e5e-b153-40b0-a534-82f84c99a3d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c164c3-5984-40db-89a1-ceab4ec21f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f091ed95-5e5d-4e9e-99c4-13ff1e792c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39a1a95e-9764-4271-9023-e0c4ecd6e8fe",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b419c1-788d-4a00-bf4f-4c5ac4f68fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03f1a0dd-93c9-4728-ba53-2e89eb113d5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b340d35b-1290-4f41-9125-d2616424142d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6236ac8-358a-4ced-bbcb-37505d2fa744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b85546a-3e28-4204-b269-31e76d6c8882",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a48c03af-291a-4083-9d6b-bf2f3ed0adbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c86475b-0b60-4800-be58-2765b8d32ccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b5bb6f4-75e5-4f0f-97a5-389a5abfd8ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a95b6a29-e97e-4f08-98eb-16e09a272357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb9a6e76-6391-4a12-addf-4e1b806b1fa8",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c05e9b4f-e4e0-461b-89ab-47989d5b621e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4460f07-ce86-4bbe-a966-cfad14204c48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea3644cf-e4ea-414c-b253-4277a60b1bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "12f6bc0d-fc1d-414f-84f5-f92aaec7aed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c930b8-7b0a-4f66-a9cc-d08288d6e13f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae06960c-9cc5-4629-afc7-4ccad8ab5313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1950504-0000-4101-bfa7-a15fa749f09c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2240aecf-7c9b-48cd-adbe-e89b5f2ad97e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5956a02-03d1-4eca-9f8b-fafe2b560e42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01b936af-12f0-45bf-940d-9b262aa09137",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bfdc81b-d8de-4c76-8164-50025f88a010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c62d16d-58d1-45ec-a335-514a684094bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff1598c5-3deb-4827-ad6c-a2aef5c8b29d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e84e1f8a-2902-4faf-800e-47dfc18a6037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7eac605-852a-4cea-95a2-f203ee03d481",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28e366c0-1a54-4fdf-9527-ba09556d54ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb84c1b4-0049-4023-b880-9309bebf8401"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d4eb546-58e1-495c-8ad5-0ab7082b027c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "df85eb4b-3d71-4192-b5fb-480069b5bd8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bbd0805-f2ba-4683-92ce-ccce439ba214",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc3f087-a2ad-46a4-b744-6e6f30762212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f83e7a47-3590-42eb-a513-f72742321521"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b9ea25-c91c-4383-a03b-cf492444b0cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "700bc125-e578-40a1-83ab-f56b5d48b21f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfad7c55-8f46-42df-a603-260b0e53e37d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24746edb-0583-44bb-b3ed-dd45e66e756c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e52f6e5-6ee5-4f02-931e-15a50c01d127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4fa22b7-4102-4111-8a3a-053a2e26f536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e66cd08f-286c-4391-98a3-240df4c7ac52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bcab13b-4488-408f-9aed-b16457dfe376",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc67f833-85c5-459a-bf6c-6dc7c26f9def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eef97a29-3854-4f9e-b10b-9910057403b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "963162a4-8062-4002-a97d-766f8c0ca6ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "101e3a5c-1c12-4e97-8bcb-319270655f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4cad2ad-42b2-4b3c-b703-96100e73497a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd2dd757-fad7-4c68-aec0-458e2b28680c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ab90f73-cb61-4362-8912-22b536607369"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0a401e0-a70d-4908-948b-06fa8e28debc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d7e951e-0b69-4256-8b06-fbaf78c88630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b39426b4-68b2-4155-93aa-40f52a656e2b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eb862f7-b401-4a55-9908-43728404a13b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07fea1ea-d719-4f15-9692-b3dd0e0d8477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03671aa5-0fe8-489b-998a-e8b053c4768f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "39230508-e58a-4fe3-8eb5-cbecfff00a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8180bc0-20db-4e26-aff2-476f6fd3d2ea",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3328498-e3fd-41c4-890d-dd69e40ea7b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17b6a111-164c-4959-8c3b-f134f203298c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ebd7dee-9580-425b-856c-c2cae5065d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e91c0f6-ba2c-4d61-b23c-959b5212f5ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "309ce135-2151-4c95-b0ef-c92068014c3c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad7e22d8-8fa5-4c1a-8524-46bb67c073f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e144c7c-69d4-462b-8284-6a89e9d41904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "103f4430-d67d-451c-980d-897a29d6af71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f6acca5-dca1-4101-94f9-578e950af7e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f8b1d20-5fa2-4e19-ab72-4563d03f28ef",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35f1a7f7-9914-4940-860c-b47d2adc03ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e48a883-e040-4c95-865e-ef93eecfbdd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a0c6207-87b1-443b-a83a-7f617615bd37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "085f7c22-e31b-47c0-b3a8-e238273eeb5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cc06f62-7d9b-46ee-b43c-bc41458ef02c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b83cfb1e-4ba9-4e38-b8c5-9bb4054ffece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb9d900f-f4d3-4e5a-b6f9-9e61beec5e17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3bc430b-2e62-466c-926e-c3eaab5f1f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7120530-2038-4968-8415-f7755c2910b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5df03b69-ffae-4667-adf7-7502443f1723",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f1991ba-5f03-47ce-a048-d67ba9a9cbba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d2fbb90-0220-4750-904b-fc61b728f1b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1a9ba00-fd54-4083-93dc-20c3c371826e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f1e6dfa-2884-4f02-a14d-352efc47b85d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c49d6bdb-2f1d-4092-862c-aeab5cb49729",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c75fb5-9a86-46f9-8e81-a52822f1337d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba1b06df-eeb4-4069-be7a-eb0bf501179e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "991247ee-ef4e-4c7a-b5e0-05400b21b1f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2352d99-cb09-44f3-9f1f-8303f32f76b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3427b2a9-1639-4ae3-9e00-0154e2fe6e33",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3923661-1ab4-498d-a549-39a2d002f007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf40149b-9aa0-484c-9dd7-526fa0931e5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d332d1-6e89-442d-ae40-79875d564d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b47b2b86-e32c-43e9-838f-5849edc7bca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d38d1d5-c3ab-4ac3-8412-6c8e8f12f727",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09797e5e-69f7-465e-b78d-7464e37d8fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a22f6cf-20f6-44c2-8d75-d0eef9e8f771"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37188ce2-f8d1-4ce7-ba5f-621572ecd45c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac3ee886-05db-411c-9254-871a79e4e00a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d80ef8da-2465-4519-8452-655bfedbbb2d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b7d7c50-b0fc-4589-844d-e14f601184f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cca9c97-dea1-4699-af9c-628b49990247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26803fca-a622-4b59-bf38-29085c4c8ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a3ec89c-b593-410f-b2d2-539fabe77975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "579336ac-db4e-482e-b0e4-700eaa7bcf95",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f223e6cf-dd3f-41f2-907a-43b071f56b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe8b0a31-cfcb-4243-b40e-723fd75a3a4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "024bcb45-a15c-42dc-9f6a-07dd87237565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30f50b55-0982-40c2-a251-49e924d15acd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fb571cc-4340-4d94-8ff7-4d6295c608f5",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18cf4bcd-a907-4fae-b353-4c1cd9554ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c43f46e4-59e7-44cc-9c2d-c389eb89a9cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c84bb9-c26d-4726-be51-e7a5ec69de29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4393bd7-9ecb-45d2-9700-e31649c8676d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80fff7d5-87b5-41cd-b320-cae2b6c58fbe",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a23f317-1d75-455a-9e87-e6d9fe3be465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1199c64e-9d0e-4f3a-a7b3-eaaf2f17bbd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "751eb3b2-1ec0-495d-977e-53477d65eb61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e201782-5033-44ad-af83-a5189e649461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22f72622-a3e8-4fab-a922-78eb15edbea3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28043d24-cbb0-49d3-bd9b-fdfb5bd901e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56fb156e-5746-44cf-a976-f78fb2010cb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "569aa745-7ef8-403e-ac12-31a7f3e06f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24e242ac-cc08-4b59-854c-e0b217641a4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a22bda-6adb-477e-be7f-a873709efe84",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92f3835d-299e-476e-9e1e-0167cd9152dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81bf1a00-5784-4b99-8d9d-88c37ed9d230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c177ddba-5cfe-46e2-a3b7-dcb8661ab054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c4f5676-1f03-40de-bd8c-e84b44b89b53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0f3c768-db67-48de-9aec-efeda86c8045",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b1d552a-2ec5-45d7-b774-15d7bd8095af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1b35b1d-01cc-486f-b323-bfacdfb4c518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a247a10-e2a0-400a-b008-f963cffb168a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "478176e9-b3bb-4c10-b145-5fef79b2cfa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c179ae5a-693b-4a9b-b33e-a42ab3f66e5c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6168386-1991-498c-b193-2f983b317aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b47fa9e7-376d-4687-b9f2-3f593b8f362b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daef6bf2-3387-4b50-ab4f-06c280296b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc011d47-a3b1-49ad-b249-ea55dcfa5b9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "198a41fa-8190-48f3-8d93-38875a5d7cde",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "608aa420-9dc2-43fb-adb6-2aac1c9b9e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3669f1a9-22a2-4b1e-968a-01e50fb2c8c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35dec96b-0c88-4b1a-b740-cccaee8e0cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e99e10fe-67fe-42ef-be9f-115449532632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "598c06cd-08ed-41bc-9972-01954d608125",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7066e326-d6ac-41c2-a4da-74534d0be27b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71c20c17-b286-468c-a9cd-2e87f53f453f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d5916be-0d1d-4bbf-84fc-5da40f8a570c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d694dc3d-67a8-407d-8dbd-68c552d426d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60a5c937-2f97-416e-bea8-047303c7afbe",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4331358-1be3-43c3-ae22-9852f121f44c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd6821ae-0a5f-4903-b4f1-00f507bd55c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba509483-3b59-4217-be31-530c4b20d9b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ebecd96-68a8-4c2f-b206-030cd2e2fee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fcf0538-67b2-4e12-862d-3bbe3e7cb7d8",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b28824d-e9b1-4e47-a70a-6bd8c49c3ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4803cd58-a2be-422b-9045-92190bf6abc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96778da2-b1a9-423c-9f9e-a4b3a61f664f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7b2257a-053c-4d05-9788-c13d8f75835f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1321ba6-ca06-4291-b782-62787162ecb8",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14c4f891-6c8d-4ac8-940e-d18bb6ba0914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc91c9ca-bf76-4955-88de-161202c51396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a7cbfd4-6cf2-440b-a959-2f8e6a05b26f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a0c943c-4697-44ba-af37-d41e11fd0951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1edf0c7-c827-4ee5-a769-2fd58afbd695",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93ff3ab4-7be5-40da-ac89-51294968ed5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "708ec012-c823-4908-a876-9c62555b5807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eaf168d-e35a-45a3-b19d-d8edf0fa3bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcda70c0-0a03-48f0-b2f5-bf03ed72b95e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c3fc7b42-4a35-451f-8a5d-d2e74a63093f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "391b28f4-12d1-4226-ad64-0778202d0116",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07e93a72-47e0-4b36-9b05-3898642db026",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "643b7512-a306-42d2-9f28-5cf4a930b38c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b6f3f1-4959-4ec1-8eb2-ffae989c474d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1095148e-aa70-4633-93b3-015c19ac95df"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "94eb979b-ae2c-4a70-a731-8217c695c6fd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "adeaead7-ecdd-4523-a44e-af9b9988976e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a91529b5-d114-4783-8ec2-a745d344de50",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "253ad741-9550-45f8-9a87-2d7d7639c2e8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2053e23b-bb06-4a9c-aae3-a782426a6e3a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "60608d64-5de9-42eb-8449-7adea2ddb345"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "95bb9d33-9d73-479f-b772-cc6880c99860",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ba74b02e-b78a-4ede-a1a3-eafad806d703"
            }
          }
        ]
      },
      {
        "id": "83538014-a45b-4f24-9788-57af54d152ee",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "83a4ac2c-3c27-4750-857b-564c8d982225",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a5440a5f-93a1-4b05-8abe-6f5fe98c6fb2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "32b32b57-4e11-4799-b68b-74b0ca5efc0d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d965f3a1-437b-4521-9d4d-4b306cadb9a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9416f6ae-a131-4464-8fd2-190383a45ab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67fd5d94-ddd4-4093-a33e-a086ec7e6010",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f61f84e-e374-4626-a754-c47cec1ca45c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1d14b3e-7649-4af1-a6cb-20d4eafce9c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afddc583-ad5b-40bb-b358-0dc4ed1537ed",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82ac3ba3-437d-4a63-b803-55048d1950de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfcd8180-1a58-4019-8d0b-77f68e6d7599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdcb6da7-6b54-40ad-a06b-8301d8b5bb3b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ac4a0d6-800e-4162-991d-a59e48167189",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d8586d4-a7bb-4728-9c8d-26350f7cc378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5238faa2-3965-4549-b7b8-7d0dc52b4f1f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa9c8b0-d641-40a5-a4ca-6c72482bfe67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a2f0453-0c15-4073-a43b-5920e39dc4e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d82a000b-a873-4147-b3bd-8e11df8a6363",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff83495-de72-493c-b85f-fd5540e8cd72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87a1b7f0-ec06-4d6e-8008-55a667d9e58d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d55d6a83-9b97-4b6d-9099-14ba774d38b9",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89dc8244-cb52-4d08-b0f2-a80107ff67ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f68efd15-e4be-4713-b246-a70649fb0552"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3832597c-9559-4062-8110-f30b7bed1693",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2def51c2-80b3-425e-9aa6-34320f3194dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1673dda-fdbc-4e54-9395-131332a45a86",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b343e379-91c4-468b-8873-a51366ea90fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbef3f0e-2fda-42bb-a3fc-34864407895a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c7d2b5a-bf1d-4f40-816a-e5831853aa1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19b4e09e-2160-4a8c-84fc-db63dd7ece73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcee3a12-d076-4507-9822-2e8c13e5895e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d013d00-c97a-4ec4-a7e0-2cb024dfed4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1dc7883-1b76-49f5-a8e6-6a5e450d991b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "899e0f83-3c71-4ea5-8109-678fdf980eb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f147aebe-251b-46ef-a10d-02b1090a7e0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e138e4-4e99-4f3e-85ee-12845893ae42",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "902539ec-4c4f-4438-99a5-2931551c0f7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61b2f162-43e5-487a-b92b-54257a199204"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f68afd7-044e-4f83-9ca7-61a3e6799298",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e58c7e14-a0b1-427a-b7f9-41685200836f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25976aea-9227-44f2-b1c7-601648f28b80",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ccef013-b72a-48b8-88cb-ba117de4ef44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4df8ee1-ac5e-40be-ae44-f9a6296dcb1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3cb515d-184d-45b6-84b0-387e962ebcc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4330ac5e-6d86-42e1-8cc9-7720b02b4b0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50b2aeaa-3cae-4029-8190-fe0e5ea65f05",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5521b149-9c0b-4cec-af33-938e37ecd754",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82c9b92b-0d5c-4b26-8771-5f2d0791b242"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5ca2f4a-65d6-4882-bbd7-182bca7ad86b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5822e6d-fa4f-403a-8a57-38e97c8fab07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa04a955-261a-4f09-a653-2ed079f25149",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f14d462-10bf-4dfe-be1c-e49bb53c7ceb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b56e354e-d1b1-488a-a17f-8839f428b1ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6da94b61-7e25-4531-8e44-161543f68354",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81406a37-aba6-45d9-bb56-8fa95aadf586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbba9d6a-37d6-41d8-81b1-08dbbed2461e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fdf94f9-468c-4304-96d0-f61ab2d394ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d24ef6a8-97f0-4666-82f7-d7be2b34ce43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b70367c-a49d-4cb6-9388-e0c3cea16d58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2515be12-496f-42c8-b510-2322f30e598a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e57c916d-b57a-408d-8db5-fa1a95cc1d35",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c83245-b93c-4c1b-b792-0e46ac91b081",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4187468a-2748-4f36-a1ac-35d9f14e668b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b65d9a-9442-44d8-b08c-22f710d76af5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1687fe89-429d-4b72-8d2d-cda92aef8c84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dee0e3c-f2c2-4523-9589-61a4d90bcd45",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b7b5db1-748a-4063-9709-7b6607d4e75e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4e40678-5a2b-4325-8a44-78be030da704"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33c659e0-3484-42b3-8412-3422cbc82416",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47bd529f-ab26-4bea-8d0e-13c9aa77e960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d282d8b-32db-4828-a064-1da1b6fe6651",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25fa752e-0af6-43f5-96ea-e5f1e27214dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98e3ebdd-8a45-40ad-aebb-bea4bddac847"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eebd706-2779-43c1-b1c7-c0a2b8d2013c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbe11cfa-5cb5-4465-b826-b7aa0bc11de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bce2b49b-ff3b-4b12-84fb-2541b408f2fa",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64934ad8-aabf-4ccd-b55f-fdc7ad895490",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf7a338d-0655-4d83-af56-a197526e4615"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00e59f60-ecf0-4e38-a0bf-3e0f5d60db87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7989be0f-029b-43b7-8eeb-583fcfe86420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e6250c-18fc-4395-96c2-cb851ded4394",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b67995b9-d1d1-49bd-9a47-1a86419cc6e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d66dbd82-b2e1-4372-9f97-b7bc45f126ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c315c40-f183-41a2-ae1f-64ae42da3f9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "038e690c-da82-450c-993e-5bfb2964190b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b50a1a0-dc2a-4924-8c11-6ad3f0b6c3b9",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecaf3652-7d29-49ec-88f5-32ced67319e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0c0b62b-115b-465d-b726-8215eb71a349"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2184781-c195-4bfa-94c7-ef54a3a8b472",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "240e686b-9b4f-4b28-9ef4-c55e0aafa38a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4cef616-8b6d-42f3-b851-be378b28be7c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f513ff1-b3d1-4283-80aa-9e53b50700e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78b22580-43ac-43be-9ce5-0829b4564aee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddc4e9ab-69e2-4d29-b506-cce06fe0a72b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0095493c-47c7-4f8e-9a8f-3cc7f21cf59c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd51fbab-693a-4298-a11e-c9bd3939acb9",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d624273c-377d-4778-a5f5-31f49667dab0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a9e7d82-0eff-47c2-acec-1ac163def27d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89bb1733-047a-4637-a75a-2534a9de7404",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12ec112d-1a14-4d2b-94bc-1e7033372490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ca29a74-b256-4494-bc3a-9b1ba6365db4",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b76804c-2986-4c93-a4ef-97f5cca2bcb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e55b268e-245f-4296-8d80-230f6f51d3d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d7cba9-6e01-4e86-aa9c-8a919ebe80c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6160bf2-6bd1-4138-8d97-17ccecb1d4b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f7b1826-21f6-4618-9c65-395af1da877c",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd589076-5d13-4f4e-89d7-6d3880110da0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c98bb4e8-ef18-4a9b-b013-2ff7d639d385"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d00fce6a-72ac-40ce-be9a-193b8e1ed826",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eec1ece-6f9d-4f5d-9761-1b5ab40beed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f007a32-8b9e-42c4-9793-e193d649a8fe",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4b1a2ff-32cf-43a4-8474-ea2baf3f7487",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f19ea6ff-0f3b-4dbf-bed9-87aea6ed8972"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b68f7d1d-bb4c-4e15-98f7-e3dbbe53c801",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4426f491-4a14-47ed-ad27-41539096ed43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "626e676e-d14a-4111-8362-71f77d483b3a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cbfee2c-e648-44ac-add3-bfcd00db399c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "feca1e7b-2fb0-4088-b03e-d3f2f28e0b7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26a332a8-5eac-4572-9fcb-a688d9740cc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d430174-b404-4581-a756-82f3ad8ad214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07833892-c981-4237-87e8-b095219afd71",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1760c877-2f75-4aa6-928d-af0587f4333f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28e2bbc7-0803-444c-9aaf-886e4de8400a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b5bee5-37b1-4a98-aec3-671cd9569730",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b779bcb-0cee-47b6-a076-5fd7dbe21bd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecc6cfd1-3999-4438-b5f9-636b70d00277",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "515757dd-9dea-43ef-9849-552a3179fe21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4293285-d1b9-42e8-8c04-09d531548432"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a01794-3ca9-41b4-8d15-3491db921433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11184145-dc06-46ab-817f-3f5e39ad9ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6510f062-e921-449d-a086-cee77610a2bc",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dfc6cb5-553c-4c6d-9109-b79bade3188d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc59a55c-33ca-4bcb-86c0-453984fc09d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4989a8ef-1fb2-4b99-9fb2-07b8fa3aee50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7a5f81b-9d68-4cb1-b401-7cd9211e71c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41e925b2-0b65-406c-9e31-a0986cb4d6cc",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd73bf4-b4bd-4b98-ac6f-bfcd32b6dc0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b6117ae-fc27-4cf0-8b59-3bae215425f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fc04fc0-3e8e-4bc9-8d47-c9ff142501ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e52bb719-2435-4e48-9d89-d55206dc9ce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d8b513-c691-495a-99e4-b48b4a80dde6",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "557084a6-469e-47d6-b3a8-5b4af012798b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbc79391-9bc2-4d3a-9b44-e6ef06eb2909"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aae4f0e-d31d-4055-8a29-b7130a18843a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e35e181-d3bb-4e29-bd50-3b2693383783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecddf0f4-58ca-47c1-a953-a200d3f575ec",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8452839-6c6b-4e5a-9f21-49f677b8278d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca620c92-daca-4707-a272-5bc8a35554ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7da9786c-950a-4e46-891a-cb8d306cf7f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f679fb0f-e272-4235-bb30-6edf166b6d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b043fcf-4034-492d-9d2b-c21773e65d8c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9f1ea24-372f-4df1-9417-4db28d1c4f5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9aa096f8-d30b-4ca2-bca6-8dc52f08768a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "662d9888-2a35-47ea-a03d-469c06b993b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d011bead-adf7-4cee-8abe-87b605c02e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1339ef5-d48f-4fec-8f09-8cf22c2121c7",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c4a63cb-63b3-4b4e-956f-b811ea9a038d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9d9fd86-82ee-4163-a0d8-e923b8f7f830"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "307a71bc-d357-46fe-8aa1-6845c8805a76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a44b46b-204b-4bcf-b365-c0c932267bda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeeeae8e-2057-4f80-994d-7294482de9d1",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9304b64b-0a93-4de3-8352-48d548046fa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "846eb114-dfe3-4f75-8bd9-253b3c44bdef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b696ebd2-729b-4f7c-b878-7b4144f1316d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef4d23fb-6817-4f99-8549-c90fa1ad44b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f1fbc9a-3304-474b-9fc8-0ab05d5d2813",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02d1945a-ce86-417b-be3f-6d55767b2ac4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d01b1f46-d28a-485c-a0d4-b9ccefe56c3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5882d24-e8a7-4629-a8c8-8d77fc3ec70f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfc7d716-14f7-4d65-9dea-9d5db1d521db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec5de12-89c7-4b5b-9d1a-378be9b5cc11",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbb6b692-c3cd-4e6a-abb0-6e7eb0daaac4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5a15285-b2a4-4662-8a72-350ec0349af0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "209b8c3d-6beb-4586-ad51-10e96d628113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc862cdb-42d8-4881-a732-96b46371ccf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca952426-b5e1-4631-9b78-92529a58caac",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19d20be0-ff30-405a-aace-2569a5691f7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83e52ae0-773d-48dc-adb9-7ab1dd4f13fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8063587c-0b8d-4209-a34c-d78376dcdf13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a170774-dce6-44ae-8a81-0b2312530550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edb6ae40-eb33-4dc3-b825-82eef78c334f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34a01b8c-657a-48b3-8356-39aae60d45eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21520cb8-5f5e-41fa-a4b5-a74c0d134854"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "475d89a3-4329-4a82-a9a2-bef3046f29c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d980010-07b9-4d4f-b1b0-0c2e10a29514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ee424a2-80bc-4019-aefa-5e350a657265",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0c656a9-0f71-4f1b-9752-946b93818edc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "803f5d8c-f09d-4b78-b9fb-a4d8fa7c8798"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db401a33-0939-4524-9b54-d6771da90fe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c5efac9-2986-4d17-9d0d-fe12e2155a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcb63c59-3642-482b-a056-f3ae9101dfc7",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0092ee0e-9428-4a7b-bec0-fe9a14f67c4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98b54377-8d52-4760-a7a1-c69705afe83e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff393a4-bae4-40bd-9e1a-1d6bc0c415bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f61b8c0-c19a-404b-af92-c1665feff20d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff89813c-b46e-44f4-9002-51626dc78c7a",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ca51e7e-f5f8-4c72-8822-27ef8b183818",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "528455c9-64d9-43b4-8457-806b94dd06f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b079f689-50cc-4d45-bcf9-a2f373d12725",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c336425-43ad-48d1-a296-c2a0a179ad4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d547b2-c8ec-4161-83b2-96609b69a548",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6169dd35-e5b1-4464-99a0-139182bbf629",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc757812-de02-4541-b254-c2ff28abfbad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dbd4f1f-3d6f-4c5f-ba2d-b7143f775ab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de99cdf1-c42b-4256-b9fd-15cde90e8d1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb549cbe-a648-4703-b1d5-d4fd388ce00f",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c51f426-730b-4bfe-b012-0ce030bb10bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58ca40c0-15dc-4c87-84cd-f1ce66396501"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55935977-6441-4f04-be43-77827e4e4d28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "510d935f-9310-41a7-b348-ce0e635f502d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de127e6a-1cc0-4eda-8629-7e7db04bfc7f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4694c12-3a8c-4cc8-b3d0-4e3a60c215a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c34b39f1-b5a4-45ea-8f23-0ca3f47f6a54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd55e779-3a14-45cd-bc8b-231cb5444528",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c01b6516-d485-41f3-a106-3fb7178706bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f33e4778-e729-4d46-9f6d-734001df4a51",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3469395e-5365-4de8-97bb-63c33da45aaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c5f5bf7-ea53-410a-86f7-a254e03aafb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a2c9dca-ed8f-4d05-b191-28f6e1495fc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5dd5d17-6d53-4cf2-abe8-259d61be8ae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "642a36b9-8b00-47db-af43-499f634a1748",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd173c9-4ed9-43a3-bd0d-83e8e1a16c6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85cd9d4b-b0ef-46dc-95a6-c64da6e59bfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf3ddcc-4803-400e-b452-431968022ee4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b789ee4-21c8-4bcc-908f-ef4c79b38686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a83629-6782-48e4-b81e-d23953127cd9",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bde1342d-2144-48a4-b0b4-3409c0070a03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b3df3ac-0d4c-4c36-8e4b-bce59cf1f0f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff5490a-777a-440d-90b9-c79b8f071401",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89e1e524-6a36-4e15-b35a-266bd56d3fb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bc82131-8a65-4826-996b-40c643e276e6",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b9dc098-9777-42ca-8cce-91144843c77a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d009b52-d001-43fc-a58a-82edb5f6e98e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4284d2ad-e86f-45bd-bc4d-a3d6ac0970e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd15826e-79cf-4025-bc51-02b2b976e09d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd8f34ce-ee07-46de-963f-fdd5110a85b1",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "258f9a12-24fd-422c-b760-f6bf13348bf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fba131f-dc1d-4215-9c2a-6962baad4643"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb42ad44-495c-4d0a-8054-2cbafc35d211",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68cc0743-5be3-4b37-904d-fadd1387e9c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c6569f2-a920-4772-867a-1efc9fb648c0",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d571d826-1852-4ebc-b180-97a0ad03df2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a105cd67-d2e2-4808-92ff-430b4d76bb2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "328f1c77-e653-4e3b-8102-0b640937a8a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a28197e-b050-49ae-9c00-c53a104e50cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "931618a8-c90a-46c9-8405-fc8fc5902730",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed1c6521-d4dd-470c-8700-471786ac429f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "725aa739-5630-4a27-9d1e-108287dff477"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4cb8d1b-e739-422b-8a97-7d76297b4735",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1905e555-a823-4bf1-b67f-62c5d428a322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d7cb360-49f1-47ea-abec-b2947e3c1193",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f41c1b98-1643-4907-b05b-9ede83c8f126",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c3f997e-bf28-4238-bd22-fd8a9244aa19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9045c759-97f2-4241-817a-43fea30113c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4050edaf-299c-4668-9184-95b330e521d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3964b012-0c7f-42b2-9b2c-1c459b5c4729",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa0875d1-d32f-40d0-a1cc-8da6d74a5467",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9badc032-ff54-4942-8ac0-67d3ff03b6fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d25ac1-39c8-4296-be2d-18442d4b01ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ca925d6-beb1-46d2-bed7-917921d261e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bb1913f-f3ca-424a-a243-de96f9d6335c",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cce89f4-283f-4b07-88aa-04d90f2208b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11485798-12d5-4a46-b4b7-9164509fa2ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d2a7ffc-cf4e-4087-8b02-75eb590920b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2d7101a-f77a-43a0-bcca-c9c2ff2e6986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4fdc39f-0300-4cc0-8e37-2786c200f963",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fed3bed-eb3d-498a-8544-57fcf24475c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9096a160-3dd1-4e4b-995b-a318499aa953"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34c0e207-ab1a-43da-be9f-40dc4cde414e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cac2ab9-ad8c-43b7-91ce-8b1f7f2bc6d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ddc8548-7367-45af-8736-10c118a37928",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f68a5c7a-3cd6-46f5-863e-a839f85bbe2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac3419df-6099-4d07-bdad-25a9397ecbbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb8174d-d83c-4cf5-a626-bdfae5c0e503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "627534ea-71c2-4d68-ac19-70379c47e19a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6ba9a74-1003-4389-b254-350e3a589504",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1307eef7-400e-4861-bc91-d83d3e8d5300",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b765f74-2c96-4abf-821b-29187b215d04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "075e25f9-b990-4a5a-aa68-e0d5593c763e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc09a8a5-73d1-4129-b442-c0338a0e01fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ff219b-ac68-4276-9d40-5a148dc7c50b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65bf5fcd-3466-475e-82a7-3936414e9eeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9164864-f544-4036-bba5-76b20588fd0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab1c518c-3e0a-46a9-aae5-9cbf878428d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eaff758-45ad-4923-88b3-20a166140a8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "740e24ff-2014-4071-af7a-bd6aa623a01c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c705c77-c16a-48e5-9b0f-590f5c7bdf60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9062956-b415-4a6b-b4e7-dff3c014f558"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f79c45-8453-4755-bfff-203fa543d67e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df851cba-0d37-4b5a-943e-55eb50cc8a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a3f8a18-8cf2-49cc-95a4-f11b89b43a31",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56d398ca-6361-4a78-82db-361757a2ba53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b60beee-20ed-4e85-ba04-d705680f641f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc4ccb7-4997-4c36-ae36-6dfa9a91ed91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbfe70c2-9ea2-4270-88d8-820c71ca8231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c4bfb5d-baba-44b1-a951-5be91f6a7aab",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd86ef9f-94db-4d47-8e9c-e4ed944b1e2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02a96cab-d177-443d-824a-fc942fce9476"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "253dd27d-2e4e-4323-984d-bfc6b280fa1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91d724b0-a955-4128-b894-0df529bbcd73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc9d92a-6ce9-48de-b0c4-bc6db8b6c745",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1dabe80-97c1-4986-a3ea-2d839adafc0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e62063bf-9051-40e0-9b85-a623a5eab270"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e350ee31-9875-4719-a00b-f0a4a6b9d402",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f877f63c-89ac-458e-ba64-25389af32964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "104c170e-5752-40ed-bd8e-0dd573b80fbc",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c7fcc2b-d619-43bd-8cce-7b216e70ea28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "525bc050-6314-4f4f-af0d-b44133d51fe8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ece1cdbe-fe00-4b84-bc5b-a52367cc6b6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f0bc5de-6300-4030-b3c1-53c345dc7c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0ccb2ed-d768-4368-adae-ed7db3ac9e17",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f0c9eb-84d7-413e-aa71-83e0c59c0bd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70ccd6d2-bff7-4589-bb6e-aab10ebc2490"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd73a3a-0e4e-4df0-ad4e-eb7e64489568",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b0efc3b-414a-4c87-b40a-5850a64762f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5b7df84-d71f-4ee2-a124-7fa284c125d5",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c45ad150-55b9-4c67-9cf8-7cb2db946390",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85a5476a-acfd-4789-ad5f-bf5d9c0990f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a711a96d-ce11-4824-aeb8-3113f71180a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b706c356-3506-4862-a00a-2fdf2fbb1a9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b068fdd5-09d3-4df8-a254-f63a9ec1cae7",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c95aed4d-f3b2-44a8-a735-465a6b6245f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbcbf2ee-5ecf-441a-8520-0c59bc5d9d5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "397ea508-df60-4dd7-8e53-e5c5c5b74584",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce755ed7-9d1d-4639-b13e-4a3139494f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44118467-a637-4a2b-9b17-7b5972363a92",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e22b30a0-304d-4719-9f50-46cb42ada682",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc84fcc9-451e-42c0-9eaa-6f203c9a13c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e76c484a-b940-44b9-b3dd-063403fc6109",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b61828e-8db4-493e-9e5c-a7b4d2da0361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce4a005f-a8eb-4b7a-9eb7-4d2bf591babd",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eafef42-992c-442d-a8db-597352f2eca9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f917f8c9-ea46-491b-9ed3-6036c60a19ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d07b75a4-503b-45f4-be8d-2c7c8d39d1fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eaeb0cb-ccbc-4f36-bf90-f3c13e9467d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa2abd0d-6dd8-4f48-a9c5-bb7a2ec3e36d",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8930fca7-d0ae-4b8d-b67a-924524eadce1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e86c3dff-11ed-46b3-972d-16c88dbd5c5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c50feb4-5457-461e-82e6-a2e1b5e3f090",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a95a5a61-b620-468f-a225-47d9d2360349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3971b5ef-eba4-4432-b04f-8a540753c9c8",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fa90d71-99b1-4e9d-b5c5-3e1389f03d08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "694287ea-4734-4335-8804-6f056441653c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa1d297-afd9-4e04-8316-4744cd793863",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e882ee2-b320-4b73-9900-623525a11520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9acbd506-7813-414c-a9ac-37ea6e9deacb",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bbca309-8011-4ed5-96ff-8c4a6255bb5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bea28f0-2786-4af5-aadc-30302f4690ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c59244cf-853f-4b24-bb28-1a2f9aa766e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68194a73-e87d-45db-8865-7cf333b0acc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c9c9901-3733-4d05-88cb-23b32b9f03bb",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82665b57-f07b-4166-88fe-a746edffc2f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7c35951-9520-4b14-905d-1177f214ed2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da8a97d-a84e-4e99-9ab3-a8d779c20ecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40d2c232-acde-4d60-a456-a0a931ab41f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff0c60f-e628-4bdf-8d29-c7a78d4eb3ab",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d9243d9-bc9d-4c07-938b-50e3c3610d2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4618ec87-e3ef-4b05-a075-cf03308e491e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd3f1809-9554-4129-96b2-b62d5686898a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c37696c-cb56-45b2-adff-b449c13787e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a69919-70a2-47c9-a805-2a19382f7640",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d82d8d-6ea3-4001-8f69-04d234c3900d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d605c80-52f6-48e4-8ee6-0a95ae978849"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca404b3-4059-4776-be1b-56da84960972",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aa7c200-093d-4079-bfa1-d13dd2720057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4530308c-a154-405b-ae28-929c7d10f277",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d179e9d-8b1e-439f-b56b-af882f739b3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "389f44d7-9073-42da-bda2-4f01080168a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3379635b-85b8-4827-9408-4d8738f1e78e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c3651dc-ad66-4203-ad87-b732db028bc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa647754-dca5-418e-8efd-e6e8a8905a3a",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ff367c4-ab3a-4880-9755-11998df378f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed62c049-5c92-44cf-931f-6c79f5cc989a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a1885a-22a2-4b5f-8d23-b069f3cd3ec7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bacb3f63-6cfe-463e-bba5-7fc35fd09520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee6e4ee8-ba8a-452a-b74d-a94ff8950e1c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f5a9f45-3d55-4e7a-bb8c-260cce17379f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fb414e3-af13-4cb2-b2bd-f02dca710fe1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4528cdf-d200-49a4-a144-f8a085127db0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b49be494-7cb6-430e-8451-4cd522d1d756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c27bdaf9-646b-40f8-afff-4a12093ebc48",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5937b5ff-f044-4917-ae94-ed7bd133e521",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f330e1b1-4a4e-4f50-aae4-9ad17a4157fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d502f544-df26-4406-8e3a-6e3fcb892e48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd8a1019-9187-4127-af2b-0cc357df8d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e98c7871-eade-406b-8846-d96cd9be775f",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d56882db-ff36-4bd6-b4b3-f2d09cef59cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4461f2e8-23ef-451c-a9c4-a27fb12e38c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b092ed01-6862-46a9-8f64-2551fcbd3573",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6474c018-47d5-4405-8f9c-4d9a4743b9dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0201570d-ce0d-459e-b12f-a10a466fdac9",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e5b6893-a15d-4951-9b8d-f82d73510f2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb704ea0-a01a-4db4-8cc0-84730735bda2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a33b1dbb-eb91-4c6a-ba19-6dc8a02b079b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cc181a2-d9d5-489b-a265-5e19a2590ca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bfbfcb3-a3c4-409e-8c76-08484663e77a",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1909245-0e1b-4133-a568-08828d9d84af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bb77081-08a1-4710-a819-4f2bc900c98e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "158749a8-d27c-4055-a2eb-cd77683e62af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53b5e816-24cc-4d5c-98a7-64c031e19240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ebecd13-f833-4709-b427-5ac7788373c0",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0173b6bf-0c32-47d8-b911-c1ce3f0404b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e37f850b-5743-41e4-81ae-850447b0357a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f683cdb-e70d-4326-a71b-2e98d3085494",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85fcc06b-8bec-446b-a6ed-3790baf5990e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a260e95-12b4-4408-9302-ef9f27371720",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "283b70a4-7b54-412c-b96d-822e30497fb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0af00ef9-8edd-4c9b-b38b-a125ce320b55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45ee5a67-bbcf-45f1-b349-59bc6b80be30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28905869-ad91-4e42-af18-16d69bdb902e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cef3b462-f03f-43a2-9f0e-d9bf3ed0012f",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccb2541c-6f46-4f0d-915b-9f6c1258f5c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30b208d8-fad0-4434-b31e-15e34840ffa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85dbe258-ca68-4253-b309-bcc3a547a06a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c594b693-1536-473b-a23c-4c40043abcdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c4763bb-949c-4581-b35f-b4c63f4f5080",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a6c1c2-d1b9-4d92-b2f4-f6e72849e78b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63e12153-2c59-4cb1-ae7f-5d8e62cd51e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "782438c4-6bf5-41fb-888c-6947e420053a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5ee0bce-cfc7-41f7-96d9-0cccaf242daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9910b40-6941-44c3-886a-f19bacf8bee9",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26563474-20f3-429f-9e69-7508352537b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54dd652e-3ec5-49c3-abf0-a2a7023bfa49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a100bece-188e-4f32-b0b5-717b30ba6217",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6031ffe4-a30c-4b0c-bc77-a40794322f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "251d0aa3-631b-4bdb-bb98-3a24cdd2c4a5",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e774d6-43a1-49ab-bb1a-93d750d0504c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7049a6bc-28ae-4b9e-876c-80d4bea6592e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a2ba4af-ed1a-40d3-ad6e-b42e01caadfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69850c04-2802-4fe3-820a-4c1c8b2a2e04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f185570e-157f-4eac-a2d2-93ca5e5f237c",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea091df9-dd45-4b40-b8fc-f4f68a8d7a97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de3893a0-9e01-4be5-8bf5-8f273aad7913"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97783e43-53f1-40e6-bb90-cf87aa5f6c8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f47c672-2ec0-4293-8dfc-ce8b684a48d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77183498-c46c-46fd-86d2-8e7e05d2caf7",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d39799-aefa-4844-a699-9bda2e5e5719",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71886e42-3a12-4d87-8fb1-32783f902727"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb9ed49-42b9-4a13-918b-24ca1e3edf0a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb9821f0-4876-479e-8f63-bd9bf28da2df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42aa14ac-a233-4f47-b9b7-b28e45d8e9ae",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b41187f-0083-4b05-97f8-a8b6e1e386aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cb97c21-e5b8-4678-b943-2549ac8f089e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d73c75de-398e-4feb-8413-8e814555c9ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "035489c8-cb9d-4655-9fec-415f31ad1c0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bbd31d4-681b-4043-83a8-c369c0be4a04",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c98cf3d1-6ce2-405d-bdeb-6a845ce0bc12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c5386b8-dba5-4f79-9150-27df13f858b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f42b039-3676-4887-96e4-319ed762f2a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a0f30db-663b-4d87-8478-4ad78491b13f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f9ab5d-2951-4bad-9be4-1dfd12c314e9",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b70956c8-b162-49f3-a229-9bf3574ded56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9ff7a00-937c-4c8e-a37d-c4c57cd2a974"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da4ca1c6-9041-47c5-ab3e-dc44434ef36d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b5c278c-6e27-4c59-a0cb-74f3af5f19c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "290164ae-4c3f-46d3-93df-71b14479a26e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5cdcbec-8275-4618-857a-40f5b7a867c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08906b3f-b368-4545-b133-18c805f91356"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf0cace-a719-4d2f-9174-2bce703e1e97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87b45a78-610f-4f17-acc8-188ead96d30a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1107208-15ab-4b34-8538-ab088900cedf",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad6a3fd-9d50-432d-9c77-756317559b25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0308203-fbd5-4340-a6b7-13ae501abe41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a7375a2-a91a-4fb3-8821-2a606e552048",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e12d8ac0-0429-4610-8097-ff052f4c6ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbf25b3f-cbff-4996-8fb7-f61a4af49ff6",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa7bfdeb-b058-4aea-81a7-1378a081650c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b6e27ea-36c8-4a86-96f3-4b12c521444d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c65c2d9-7446-47a3-b3f4-37fae1f4d99a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b46edc0-b12d-45d0-a9f6-26b4d0865131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cdc4857-b60e-484e-b09d-d59ab9a38c09",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cd9a1f0-665e-4a71-9d11-2fd2895c3201",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5ecc9e9-4857-42bc-a34b-a55288042294"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa5e4526-bccc-4370-9c8f-4308ef66b2ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db1b6371-37c2-4bd5-a847-7fdd083af89e"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b46e395f-ec2b-460a-bce2-94fdf11a2ac3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ee0daf2e-1bcf-4718-9d94-375ee8009d9f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c8cf77fe-cc88-4b5f-abe9-7fbeaaebd34a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f15c7ab5-5dd2-4e4a-aded-681adc587ea8"
                    }
                  }
                ]
              },
              {
                "id": "677539da-e582-45ed-80cc-e7f15fa2aea4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e2dcd8e8-5a11-4785-8135-d9d9189c5e38",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ed6572-5736-4b55-aa5d-d5cf418a2733",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f387279d-ab7c-4803-8058-fce2823152f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "531f4b5f-4a2b-4ad3-9c5d-59118eda7e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3597f3f1-f55a-433d-92ef-88690a689e2e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2803912e-94eb-4cdf-af7e-765cff0e9a0c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "edb6d425-5577-478a-ade9-7e603a07e264"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b139a56e-3edb-453e-8296-a172ce8fbb2e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "52ddb4f4-4ed7-4e8e-8ab4-84704879434e"
                    }
                  }
                ]
              },
              {
                "id": "e7c96679-595a-46bc-b373-89fecae8fc8e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "98eb9e61-c53b-4256-b3b7-fc77ddb8f690",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58e2d42e-d595-443f-a3da-38ddea2462ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "9240dbf8-65e3-4b8b-9cf6-919500e4389f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47f8d52d-738a-46a1-bd79-f0ec8024f8d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec827222-2e25-449e-ad33-771bd4d6b74f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "16d39723-85e9-4fdb-ae39-871aa7a41be5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "08ec86fb-43f1-40dc-9b90-6fbabe4feb10",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "356ab076-e718-4162-9fc3-007949fd1363",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "91068ed2-bdf1-4699-b243-69e95c46e6b9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ab571fe-678b-4c70-8f76-ef001ce3c010",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "80d25c51-752d-4392-bba0-f9ca70822d1d"
                    }
                  }
                ]
              },
              {
                "id": "2a9d795e-6e5f-47bb-aaed-cc77ec0ba3bf",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ddbac771-7b26-414b-8aeb-c30980c15b68",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "db396bd0-bf61-492f-8617-a9908e504129"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "87024878-da38-414a-8c2e-ae28fa7c9c86",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71ef41d5-0356-4863-9213-506b0ce32559"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3d8a26c8-58a2-4b64-b0eb-47073483750f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "dfb82aa0-812d-4e3d-865f-2b2cb966533a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "929a14b5-25cc-4f9f-98b1-ec29a592f9c1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6c7830f3-979e-440e-b384-3b2e2aa50f3d"
            }
          }
        ]
      },
      {
        "id": "49138e46-a5c6-4e10-a885-1345ebfdb79d",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "3d91a244-995f-4d4a-85c5-5ce1a5074938",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3e2f0b7b-edcd-4f8a-81d5-f4662c602813",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "82e71f65-bc92-45d0-b19f-5a37ff8c3404",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7fe7532-821f-407a-b0a8-c17c26d99748",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7ea01c5b-f25c-4a5c-b33b-9caa05dab8f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a0793cd-df2a-4585-b2b2-760b7012039e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d0dca4e1-6676-4c9d-a47f-577446a0c3ca"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d57d322e-522b-4296-a3ea-38c72cb44a46",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "58c84563-3fb9-4e25-8ece-6c837ab19c65"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "934210b4-fe90-4823-91b7-52d2446e2bae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ed040c39-5e9f-4d7c-8287-054106dd4f64"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c2c62a7c-bea9-4fbb-a69c-00f29da0a259",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "066687ee-d687-4433-99f0-1adcb85c5342"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3b153da2-e6b8-453e-a437-4609f6a974e7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "663cdac6-cee4-4c9c-b3ce-42fa00c2c91e"
            }
          }
        ]
      },
      {
        "id": "6845b512-e64f-4a24-93d9-fbd58a5e6cde",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "0288cd88-71a8-4cf6-839e-3adfce89d2ad",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4677d7b2-b109-4eda-969e-bc15ae941fff",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "13d4705d-70c4-459f-b3f1-5bda817e2ac4",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13e9a31a-65eb-454b-bf6a-0bb114f4fb66",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "070c8feb-09e9-4f57-9be4-6b1f303f5a89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a8bc5e6-64df-4732-bf63-4dd3062844c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2428dd98-17e1-4a69-99fe-933d2dbdea59"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d2da4d1-d5a3-4ee8-ab6e-e59e22962d39",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "834d312a-2496-4dd1-bd3b-808ec7035797"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a9314b5-3ac7-4ca6-92b7-40fed1cc72df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f58d9321-3a04-4e67-9b6c-b22a56c5caa7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0f09f0f1-7038-448a-aeca-5220cc5a1d71",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "78803833-7b3d-4d00-9076-54fe5e457220"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cff53fb4-3a9a-4743-a5a3-2ebeb24a8690",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "06a0e89f-31b3-4d8e-9075-cf7ee2f5fb1b"
            }
          }
        ]
      },
      {
        "id": "23307d50-9469-44d7-ad65-31069a3c1768",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ffd3cd8a-9ea7-41aa-94e5-f9d674445441",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9d49790d-4d8f-474e-be85-22f5024db97e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "10f0b8ed-3dd3-4591-96bb-a7fbcc2576af",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e565d46-2151-48c3-95c9-f4a1919fa2e5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30119c67-941f-498e-a845-5afeb18a6696"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a0a28dd-859c-43ab-b5b0-868221ab2fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3fce827d-fa50-4273-bb47-400bc7fd1a6a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "86dc7110-d108-42a0-af9e-5376c1773cf0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "67f7673d-fe6c-44fe-b243-541cc2dd814d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "68172ffa-c0fc-4dc8-a52d-7178b5f59e61",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5b0744f8-4e5b-4911-95aa-da963f0ea2ee"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "22fe606e-1e89-44ec-a483-fe1c4ea48a8a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4a56b955-b1a7-48ca-9198-8308dfe155de"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e5fee6e8-a17d-4b8a-9c7a-1e7d9561b7f7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bd721cf3-96f6-4a3e-b0e3-3e76c0bd846c"
            }
          }
        ]
      },
      {
        "id": "0fc12ee5-c0c9-443e-9650-d63f44069d05",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "33082943-a108-4572-9489-57aea6856c5b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6b9814d0-d536-45e4-9edf-ef7a762a861c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b4358996-5e95-4688-abd6-739d4a270e13",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7a751902-bb49-4298-a3f9-ff2af8ba9e0a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ec1ae4d5-8c39-43a7-9083-8c7551a63526",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 306.23412698412693,
      "responseMin": 9,
      "responseMax": 9292,
      "responseSd": 1371.4665235955595,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1719621463660,
      "completed": 1719621549157
    },
    "executions": [
      {
        "id": "6b97f5b1-104c-43ad-a4de-2c60e6d1a1c8",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "86b2e168-6c5a-4acd-bc8d-c66f304836e3",
          "httpRequestId": "7b8be7c8-efe1-44fe-a125-f83597518147"
        },
        "item": {
          "id": "6b97f5b1-104c-43ad-a4de-2c60e6d1a1c8",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "81f9e92e-a2b3-45cf-8509-da3d7485b028",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 0
        }
      },
      {
        "id": "4f07797a-6616-4574-a496-ae5f611f421f",
        "cursor": {
          "ref": "6f5406bb-9b84-49b3-977d-783f3ed09a49",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "eb6cf55e-7f78-45a6-998e-fa64e868493c"
        },
        "item": {
          "id": "4f07797a-6616-4574-a496-ae5f611f421f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "466aede0-525b-45f7-97cb-ed839b73be2e",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "279cb813-08ca-4367-89ba-df3ade4dab2f",
        "cursor": {
          "ref": "cdcce3f6-57f7-4cae-b2d9-7ff1cdf9e401",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "c6f25693-befc-46ff-baee-68f2672479a8"
        },
        "item": {
          "id": "279cb813-08ca-4367-89ba-df3ade4dab2f",
          "name": "did_json"
        },
        "response": {
          "id": "e88df3e2-12f6-46b0-86c0-10e90529aadc",
          "status": "OK",
          "code": 200,
          "responseTime": 312,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63f87d62-b7bb-4a07-9273-c9638873f0a7",
        "cursor": {
          "ref": "58627b41-17dd-4d6a-abf3-da58d50988b5",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c05efd82-a7f3-4050-8a8e-86dda6b55505"
        },
        "item": {
          "id": "63f87d62-b7bb-4a07-9273-c9638873f0a7",
          "name": "did:invalid"
        },
        "response": {
          "id": "45bcf6be-36c4-4ad3-850f-a9e34785cee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2051,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63f87d62-b7bb-4a07-9273-c9638873f0a7",
        "cursor": {
          "ref": "58627b41-17dd-4d6a-abf3-da58d50988b5",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c05efd82-a7f3-4050-8a8e-86dda6b55505"
        },
        "item": {
          "id": "63f87d62-b7bb-4a07-9273-c9638873f0a7",
          "name": "did:invalid"
        },
        "response": {
          "id": "45bcf6be-36c4-4ad3-850f-a9e34785cee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2051,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d706b3d9-e5bf-49fb-a82f-7f0eeb550aaf",
        "cursor": {
          "ref": "bba8d4a7-e61c-49ba-9fde-c8c9541d84cd",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "29612c67-fce3-4532-8894-69064925e028"
        },
        "item": {
          "id": "d706b3d9-e5bf-49fb-a82f-7f0eeb550aaf",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f35e6b28-59a1-4b45-b9f3-1954fc47ddfa",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2507,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b96912e3-c419-4ccc-adae-fdf9af8b8923",
        "cursor": {
          "ref": "04d4a8c1-fdfc-41aa-a89f-42d4018c74f1",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "7c9871f4-d0f1-4feb-be34-dd8915079a65"
        },
        "item": {
          "id": "b96912e3-c419-4ccc-adae-fdf9af8b8923",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c17fc04e-3411-4a30-988d-e08a58af5164",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2322,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef978da5-f653-4ee1-a44f-e62e9bd9f538",
        "cursor": {
          "ref": "2f306196-989e-49b5-915e-4a8e302527ee",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "c4be480d-ace1-4f32-b605-0f6f9db27c6c"
        },
        "item": {
          "id": "ef978da5-f653-4ee1-a44f-e62e9bd9f538",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "010b9c56-8d90-483b-888a-f0afaaae994b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "371b806d-4f13-460b-8f2f-647f3f71c5d7",
        "cursor": {
          "ref": "51a95565-ef77-40f3-b822-7dcf8e4135a6",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "db03cac4-be3c-475f-890e-a8565f216f66"
        },
        "item": {
          "id": "371b806d-4f13-460b-8f2f-647f3f71c5d7",
          "name": "identifiers"
        },
        "response": {
          "id": "4d83bb92-d462-4ac9-9e7b-8a495288aca0",
          "status": "OK",
          "code": 200,
          "responseTime": 2182,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1146213b-da06-4bbc-8249-bc178064a146",
        "cursor": {
          "ref": "aa9f8855-73d8-428c-86b7-ed5ee776df85",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c6c90aca-184c-47e4-a60e-dd54a5e55531"
        },
        "item": {
          "id": "1146213b-da06-4bbc-8249-bc178064a146",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "eeeb17cb-8bee-44fa-a205-27b6b0f27b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22033a2f-703f-46a7-9c99-d3f115c8bd90",
        "cursor": {
          "ref": "f25ac630-be5b-4e3b-a080-8f5248351aa2",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "743bcbd7-05de-4789-8f2f-616c573b8e10"
        },
        "item": {
          "id": "22033a2f-703f-46a7-9c99-d3f115c8bd90",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f05f16f9-27ea-4a00-8543-d85c0172b0f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b5c1b67-a0d6-4e8a-8c0a-3b1ea80a52a3",
        "cursor": {
          "ref": "465a825e-8118-4967-b65e-d28f8a1c2d91",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "dccddddc-a0b0-4a2d-905e-db8f5927dd51"
        },
        "item": {
          "id": "5b5c1b67-a0d6-4e8a-8c0a-3b1ea80a52a3",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "e0d3ebaf-8e46-4fc0-9ff6-72103d79cbbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "539a8f71-266c-48fe-b520-3962ba66520d",
        "cursor": {
          "ref": "41d056ae-6e1a-4cf9-85ab-1f925ae5c814",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "c25b2b49-99dc-4ca4-928a-805cca4d5788"
        },
        "item": {
          "id": "539a8f71-266c-48fe-b520-3962ba66520d",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "1fa91338-be0b-4852-8131-9c5dfb2228f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d80787-87df-4701-8160-fec94d7f6579",
        "cursor": {
          "ref": "d079f2f3-d57a-4916-a994-e69cdd643090",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "03daae32-e351-4535-baec-5537c6a20ff3"
        },
        "item": {
          "id": "46d80787-87df-4701-8160-fec94d7f6579",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "11159d3d-32ba-4d6d-a284-82aafc466df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8585a704-0581-4ec9-9bf5-66a1635a0b13",
        "cursor": {
          "ref": "41a005db-c340-468f-9c3c-5241cd370293",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "104d2459-8f2d-476e-8e86-cb11d3f1363a"
        },
        "item": {
          "id": "8585a704-0581-4ec9-9bf5-66a1635a0b13",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "dd26e8c8-2af3-4b4b-928f-0aaf8712879c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5798f0b4-8c9e-4a99-a6ee-81b325172d65",
        "cursor": {
          "ref": "cf084403-4469-49cd-80c2-a2357830d76a",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "dbf4716d-96ab-42c7-832e-a27009be55cf"
        },
        "item": {
          "id": "5798f0b4-8c9e-4a99-a6ee-81b325172d65",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "8197be41-3b74-4731-96fb-3cf07d5b301f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b64f43-4323-49b3-802e-4d13041b73de",
        "cursor": {
          "ref": "b386a17a-1cd1-4624-b3d3-a6aeb7e72e43",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "7647d8e1-9dd5-4f52-964a-9ed8e027095b"
        },
        "item": {
          "id": "c9b64f43-4323-49b3-802e-4d13041b73de",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8225c383-d21b-4421-8de4-2f9d66ea76ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99cefe04-11ab-4f94-ba53-d7a0dbac90b6",
        "cursor": {
          "ref": "2b4a9ead-58be-4989-afac-86cd5c821740",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "d10a07be-1b76-4406-a1a2-3552416d9f6a"
        },
        "item": {
          "id": "99cefe04-11ab-4f94-ba53-d7a0dbac90b6",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "1eae91fb-7ef6-426e-969c-001691e1f66a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "069928c5-ee9b-4da4-8684-4a845483062f",
        "cursor": {
          "ref": "74079ce8-c5ee-4236-8a3e-ce7bf0acf584",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f2f4fd9d-12d9-421e-8b63-5ddc09787296"
        },
        "item": {
          "id": "069928c5-ee9b-4da4-8684-4a845483062f",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "b830abd1-871d-47bb-91fd-74903a57232a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "124bcc6a-1b14-405e-8b23-2516cbf53635",
        "cursor": {
          "ref": "7dc34351-0d65-4210-88fb-69b67143cb30",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "d6d1e71c-5325-4006-a4bb-9b9e642abac9"
        },
        "item": {
          "id": "124bcc6a-1b14-405e-8b23-2516cbf53635",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "2573ccf1-327c-48d2-bf93-f822be05d948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35985d2f-4bbe-49c2-9e32-c0edea1e6d30",
        "cursor": {
          "ref": "f5b01e58-e83b-4b48-ae7d-f1ac70b23a27",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "9a6cd018-0fc4-4a85-8907-7a344d4c8cf5"
        },
        "item": {
          "id": "35985d2f-4bbe-49c2-9e32-c0edea1e6d30",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "09aed8ff-77f1-4a4e-9f99-180971e20cfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48699343-19f3-41c4-9fee-8d1fa2e54750",
        "cursor": {
          "ref": "55beeba7-dcf0-41ad-ad63-19f2ee7c1731",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "1c2a681a-b098-4957-9c8a-a40cd2170882"
        },
        "item": {
          "id": "48699343-19f3-41c4-9fee-8d1fa2e54750",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "11226ec5-f1b8-4e8b-b8de-3218f3826fa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a6bff4-fbb3-47f0-8c77-fa984915d51e",
        "cursor": {
          "ref": "9862a5d4-9ec1-4b07-8b16-9fa2af4529fb",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "1d853480-e384-4f8d-978f-78b47f9b6bcb"
        },
        "item": {
          "id": "76a6bff4-fbb3-47f0-8c77-fa984915d51e",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "748df1c1-ec3a-487e-9bd4-e8b19bd6cf79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d24551b-af44-46e6-8bf6-a5f5cc228cb4",
        "cursor": {
          "ref": "59d50583-5e86-4a7c-abfb-104908d8adfc",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "fb92c4b4-9de4-4528-b937-8328b1d1bab7"
        },
        "item": {
          "id": "7d24551b-af44-46e6-8bf6-a5f5cc228cb4",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "bb456e45-5444-4f52-a676-880c19f5868d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02aeb16c-82cd-46f3-9318-ff7b4fe1dfb8",
        "cursor": {
          "ref": "d2f1eb89-4007-437a-a562-6c08d3d8843a",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "fbd04e18-8a92-42a2-9d28-eb7f6d75fa11"
        },
        "item": {
          "id": "02aeb16c-82cd-46f3-9318-ff7b4fe1dfb8",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "f5d55327-4136-4c0d-aa4a-2947f7f4c56b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9023c04d-8038-4ba6-bf7a-ef9d5a52dff8",
        "cursor": {
          "ref": "f67d1c6c-f098-4420-bb25-8863bd7656b8",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "8f9911ee-88bd-4589-b2f8-89e0f0bec5bf"
        },
        "item": {
          "id": "9023c04d-8038-4ba6-bf7a-ef9d5a52dff8",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "6e2d74f2-fd93-4ee2-8fe8-7707a1863ac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5433252-3a1a-4a5a-8b1e-38e396057b54",
        "cursor": {
          "ref": "576cdd56-6fd5-4772-bcb1-eec53988baad",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c9717cc9-815f-4171-95cc-6b8b680f34c4"
        },
        "item": {
          "id": "a5433252-3a1a-4a5a-8b1e-38e396057b54",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "1d6d25e6-f5bb-40f6-b50c-c85bb12b0fdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f059a9e0-54a1-4377-aae0-425bce5bb759",
        "cursor": {
          "ref": "2b6d2ced-1d52-4419-9fb8-382814045a12",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "7dc4e105-465a-4410-9bdd-971004d7bdfd"
        },
        "item": {
          "id": "f059a9e0-54a1-4377-aae0-425bce5bb759",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "eabb1334-1eae-4213-900b-1553f54e2c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "698456d2-84b2-4360-8993-9372db9f1417",
        "cursor": {
          "ref": "bed361e9-f6a4-428d-a6e0-fe8296fe18b8",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "51b7cad1-a36f-4cfa-9b82-cfbbb3108838"
        },
        "item": {
          "id": "698456d2-84b2-4360-8993-9372db9f1417",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f9032dd0-c835-4069-bb71-f745e2dbe76b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a78c43-d420-4b50-81e4-c26741577921",
        "cursor": {
          "ref": "28ff2e6a-7171-431e-a392-bb6fa083a6b7",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "8ecdd0b5-cbb5-452e-ac5a-b824efbba241"
        },
        "item": {
          "id": "15a78c43-d420-4b50-81e4-c26741577921",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "8349f197-b91e-4e9c-b770-21ff26b3ab6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca6c2055-dd08-4c33-b659-f85cc20123ac",
        "cursor": {
          "ref": "0062c8cb-5015-4a14-ab96-b8d4e21ae59e",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "34f491e5-453b-4331-9ef2-bd07e599f116"
        },
        "item": {
          "id": "ca6c2055-dd08-4c33-b659-f85cc20123ac",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e739e722-eb91-4a79-9822-8360bf7cf80a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0faa5d55-b7b1-4c69-baf3-05b37199913c",
        "cursor": {
          "ref": "57bade8b-7ce4-4b9f-9913-765bd88e138c",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "29484ece-2859-40ca-91ec-129ebe2685cc"
        },
        "item": {
          "id": "0faa5d55-b7b1-4c69-baf3-05b37199913c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "370816ef-588a-4c03-8d7b-01ad2142948e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "147073c6-2850-4bba-8d5e-30c439af7bd9",
        "cursor": {
          "ref": "4e7c1187-68a9-4db2-8711-289380c23338",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "dd5b762b-c821-4b40-950d-61330b43a8aa"
        },
        "item": {
          "id": "147073c6-2850-4bba-8d5e-30c439af7bd9",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "172ac4d7-a760-496c-87ea-0c549def22c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b48584b5-72e5-486a-965d-1543c8ccb457",
        "cursor": {
          "ref": "36dd6e5f-6f95-48a3-9408-e450f0d9b5ff",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "b05d4757-e2d7-44e5-8d83-2f1d7b44b636"
        },
        "item": {
          "id": "b48584b5-72e5-486a-965d-1543c8ccb457",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "cf47d81e-8870-4f8d-9ac3-b228304543b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "127c8500-5fdf-4008-be13-e82061c5ab5b",
        "cursor": {
          "ref": "8b261778-742b-424e-a37b-2e530b07bb0e",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "312ad953-d24d-4d45-ba7f-ea379aecb725"
        },
        "item": {
          "id": "127c8500-5fdf-4008-be13-e82061c5ab5b",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "9e264d96-9233-493d-82c0-aa6c416c66e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d0bc41a-13f5-4b77-aee7-540f6d2f49f0",
        "cursor": {
          "ref": "880038e6-0d7a-4ce4-8409-709c8ff974d2",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5fdf8f31-2c19-47c4-b191-1f1510230119"
        },
        "item": {
          "id": "8d0bc41a-13f5-4b77-aee7-540f6d2f49f0",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "60273091-0acd-4bf4-bbf9-1e2381bdf117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c286a41-64a7-4e72-8b60-39ec958e3a9a",
        "cursor": {
          "ref": "81df6de1-7225-42b3-815e-bcecfbb1a954",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "49aa206f-bf6d-4422-9007-0454ab297e31"
        },
        "item": {
          "id": "4c286a41-64a7-4e72-8b60-39ec958e3a9a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f34049de-c26e-44c1-986e-e2c90957dbab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63dc2f06-e03d-47ba-8c69-e052c009966b",
        "cursor": {
          "ref": "ef735b54-541d-481c-9a7f-e86e76abdad7",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "b753859c-a4bd-4094-aac5-7e0ed4d14f38"
        },
        "item": {
          "id": "63dc2f06-e03d-47ba-8c69-e052c009966b",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a0a86806-2046-42de-8669-ea209c75afa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d5ad00f-6a6e-4592-809e-6731a7fbd6a7",
        "cursor": {
          "ref": "c2d9ab68-d9bf-46f4-82ff-6ae8dd7b0465",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "1e4c45b5-ade1-429e-ad38-19905b059927"
        },
        "item": {
          "id": "3d5ad00f-6a6e-4592-809e-6731a7fbd6a7",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "95e0d3db-9015-49ad-8f42-d1f1cde16c6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea063d6-1fae-4fea-b9f0-545f8213e669",
        "cursor": {
          "ref": "e2c8a30f-ff28-42f8-869b-efb3ce7e2b00",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "02cbdf01-b576-4d7b-9a4b-bb461fe4c027"
        },
        "item": {
          "id": "cea063d6-1fae-4fea-b9f0-545f8213e669",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "aa2c6a95-ca11-4d10-862f-21d007d030c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dab3704c-514a-40b5-b5b1-1963e81e436e",
        "cursor": {
          "ref": "e2e19894-a835-40cf-a801-a13d9b8313b1",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "75dfee60-035b-4684-86c4-25ae021e1bf2"
        },
        "item": {
          "id": "dab3704c-514a-40b5-b5b1-1963e81e436e",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "e5c3bca8-60e0-4302-8d24-5457ae4cf03d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54fdca01-b8fa-411f-8c1a-7b3ab4d6400c",
        "cursor": {
          "ref": "b9106b51-2154-4997-b382-0390144f417c",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c0e009db-67fa-4bb9-950e-a591d5237384"
        },
        "item": {
          "id": "54fdca01-b8fa-411f-8c1a-7b3ab4d6400c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "a184163b-8bd5-45ee-99b7-6a0f3dc96bef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "936d5837-56a1-4944-bc76-b34ebddd081a",
        "cursor": {
          "ref": "c015785b-8ede-480c-8bac-a1385a152ab2",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c20ff16c-5e7c-4c1f-8e3a-d3d32ec8a4e5"
        },
        "item": {
          "id": "936d5837-56a1-4944-bc76-b34ebddd081a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "3943b9c1-a5b6-4a10-be95-92d0656f37eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f478c3eb-6fc5-4177-bd5f-efe93c0e1482",
        "cursor": {
          "ref": "97383e19-dcb8-493e-aa58-0ac394c04e89",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "10949607-cd50-4842-8a28-c7733a108d3a"
        },
        "item": {
          "id": "f478c3eb-6fc5-4177-bd5f-efe93c0e1482",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "72e70eff-2673-41e1-ba89-db3a9eba64dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba3e3f6b-385f-4034-9900-eec84d0d0c63",
        "cursor": {
          "ref": "a417c658-cab9-40f9-9cfa-9e51fee500e1",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "6affbfed-f8b0-4416-941c-7afb9a5ff9ca"
        },
        "item": {
          "id": "ba3e3f6b-385f-4034-9900-eec84d0d0c63",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "71cc9d6f-512c-4d9e-b556-be744769f4fa",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 34,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a35f3a5d-ce95-4a5b-abce-71c88f31c451",
        "cursor": {
          "ref": "121bca70-ba00-4c83-9950-840340447449",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "cff0a039-c661-46ca-b8c7-ab8a00b65129"
        },
        "item": {
          "id": "a35f3a5d-ce95-4a5b-abce-71c88f31c451",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "99c80204-5cc1-4f2f-8504-4bb499841d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d821a8f4-237b-45db-9685-1f2beab74047",
        "cursor": {
          "ref": "9f520303-5e67-4a8c-afb6-841dccf081ef",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "6dee0717-7105-4667-9545-052a4efecc01"
        },
        "item": {
          "id": "d821a8f4-237b-45db-9685-1f2beab74047",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "cc643b3f-b51d-4ac5-abf9-985c03382c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "111091fe-2090-4e99-94a2-688d05310f16",
        "cursor": {
          "ref": "b452d564-3e5f-4797-ad39-e209cc9accab",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ddfdc278-8d3e-4cba-bc3a-cdec1299ae56"
        },
        "item": {
          "id": "111091fe-2090-4e99-94a2-688d05310f16",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "bae13f6f-5c8f-4002-bfe7-9f9267ac6aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac201d04-f5a7-45ec-8de2-23c2ecf3b252",
        "cursor": {
          "ref": "3eaf11f4-be8d-4c57-b91b-69aff9669dcc",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "1dc992a4-ddac-4df2-bc16-3d480a36b17d"
        },
        "item": {
          "id": "ac201d04-f5a7-45ec-8de2-23c2ecf3b252",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f66b4c06-0b3a-43bc-b573-94c5be4c5f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c20bdd-5e24-4032-becc-ac68b2a57233",
        "cursor": {
          "ref": "2e41bb25-999a-417a-9ece-b7d866bcd988",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "59f9fefe-db12-478c-9744-d4461b6d1627"
        },
        "item": {
          "id": "90c20bdd-5e24-4032-becc-ac68b2a57233",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "7b7316a5-b830-4ee3-9e8a-499981658b71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "761164fd-1202-4a3e-a11b-b94f5d7a3ba6",
        "cursor": {
          "ref": "141affc1-1cbc-405c-88bb-88018fd29d19",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "57232ba5-a3db-473b-aadb-33c5465eadf5"
        },
        "item": {
          "id": "761164fd-1202-4a3e-a11b-b94f5d7a3ba6",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "b2dcd1a4-07ee-420d-a569-15edca1117e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a11d96f4-7c6a-4833-824d-b1cc04e794e9",
        "cursor": {
          "ref": "b3c15eea-1ec4-4f73-9e6d-a4f408dfaca9",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "9ac6dff6-76cc-4e01-92a7-c77809e711ab"
        },
        "item": {
          "id": "a11d96f4-7c6a-4833-824d-b1cc04e794e9",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ee0a32a4-5a8b-4e1b-890f-5c7686f3df03",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 37,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48bd96c0-34d6-4fdd-a0b3-33dfa474c96a",
        "cursor": {
          "ref": "c484ddae-57c2-463e-8759-5e2ee2ab2fa5",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "cef59b76-810c-46a9-9dde-e5b103d7efb0"
        },
        "item": {
          "id": "48bd96c0-34d6-4fdd-a0b3-33dfa474c96a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "db00d6ea-36d6-4bde-b01f-ed0c11b5a393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "515e9cfd-adde-4212-b9a9-f50fcfd27d6e",
        "cursor": {
          "ref": "bfa2b8ed-65a0-478a-97e1-e8bece88fcfb",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "52221a1b-6f94-4f2c-b5d6-813be2285ab9"
        },
        "item": {
          "id": "515e9cfd-adde-4212-b9a9-f50fcfd27d6e",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "3a7646c1-fc3f-4c43-9416-e987bdbc92fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a83423b6-d6a5-4220-9c2b-61bfa4beeec3",
        "cursor": {
          "ref": "d5e6bd47-703e-4013-80b4-0816cc43f3e6",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "dbad9882-6132-4095-adec-1fa00ef6b2e9"
        },
        "item": {
          "id": "a83423b6-d6a5-4220-9c2b-61bfa4beeec3",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "bb4814cc-404e-4420-bf61-0496ff106bcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8902b05-c1ca-4f70-ad3d-688b09f3fe4d",
        "cursor": {
          "ref": "f02d5456-8089-447f-b962-2c833526c1eb",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "836d7049-aa71-4992-b79d-66df340c42bb"
        },
        "item": {
          "id": "a8902b05-c1ca-4f70-ad3d-688b09f3fe4d",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "bbac2033-81ef-424a-9a5a-d38324902dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41273b92-4812-4c41-9f9e-1d551919d4ac",
        "cursor": {
          "ref": "7a0a1bee-50f1-4eb3-b988-cd02662e7240",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "5743798f-8df9-4719-b13a-4c90495927f2"
        },
        "item": {
          "id": "41273b92-4812-4c41-9f9e-1d551919d4ac",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "3bdb2e1c-1b7d-42d2-8e71-3a9fe80d1747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78da3678-f1a0-4c7d-a818-f21308d80736",
        "cursor": {
          "ref": "c5960417-748b-43c8-986e-b97fc9a73f32",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "c2785e15-09c7-4470-a5db-4520f7789561"
        },
        "item": {
          "id": "78da3678-f1a0-4c7d-a818-f21308d80736",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "bc68fc0d-5481-4ca6-a8df-2bab7bda24d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ed01ed-c7ce-4639-89b4-cc266320d94a",
        "cursor": {
          "ref": "f225f3ca-e977-4e06-a6da-52729900614e",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "2709b404-a06e-464d-a93a-1f756e38e884"
        },
        "item": {
          "id": "77ed01ed-c7ce-4639-89b4-cc266320d94a",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "6a582bcc-32b0-406a-91d7-7f0e5a275dd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa35ad80-f7c2-4dc3-9cfc-4ff8bd709af3",
        "cursor": {
          "ref": "f02bd79c-afcc-45fa-805e-be1572362830",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "b058b0c7-04d5-4d1c-b778-0653bccf13b6"
        },
        "item": {
          "id": "fa35ad80-f7c2-4dc3-9cfc-4ff8bd709af3",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "730c8da9-a70e-4ed3-9eb2-c7f29ea945be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbb49320-5029-47f3-b095-c498e9798e77",
        "cursor": {
          "ref": "df54d767-7dbf-4e08-a317-6464e08c55ac",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "15dbc821-1581-4dbf-960e-d60902b6752d"
        },
        "item": {
          "id": "cbb49320-5029-47f3-b095-c498e9798e77",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "9df799c9-ef8e-4d8d-8740-50c31ff607d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c34753-0290-4bd3-ab59-1fde7913d9ff",
        "cursor": {
          "ref": "69df680a-5641-4c0b-aa06-47d43652a970",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "74786df9-684f-49db-b053-24eb26ec684f"
        },
        "item": {
          "id": "71c34753-0290-4bd3-ab59-1fde7913d9ff",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "37a95878-d469-4f66-b837-8a82b6a05c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d27b484c-27bc-4e1d-90d4-93056f8440a3",
        "cursor": {
          "ref": "216989ca-f461-481c-a531-eea7a04313bd",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "334813cb-e8d2-4319-a628-f4cc58d4451d"
        },
        "item": {
          "id": "d27b484c-27bc-4e1d-90d4-93056f8440a3",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "78bcadbb-abb9-4cf3-a146-e9125c6239b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3162169-6cde-419e-a332-9f8b839e5010",
        "cursor": {
          "ref": "3538d864-48eb-448b-84e1-0a68618029f2",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e3be2e68-f64f-4cd0-b9f6-955140cdb700"
        },
        "item": {
          "id": "b3162169-6cde-419e-a332-9f8b839e5010",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "dab1db5d-9565-4831-b0d2-e5b10e1a1613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71446444-28b8-4965-a433-0c987cc15b2f",
        "cursor": {
          "ref": "dc43eef8-0d01-40e3-93de-9f187ea7cc3e",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "9b957356-83df-49ab-b357-ce03c78dfbd8"
        },
        "item": {
          "id": "71446444-28b8-4965-a433-0c987cc15b2f",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "654edacf-981c-44dc-84a6-b9f056236a71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe689fe4-cbd8-4b64-98ad-55ca27009128",
        "cursor": {
          "ref": "c4ccccc7-05c3-4140-a27c-366a78185b8f",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "d49c2a4f-47c1-48d6-9c9f-dc8690faee41"
        },
        "item": {
          "id": "fe689fe4-cbd8-4b64-98ad-55ca27009128",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "f35c1192-b87e-4899-ac73-d88b28575606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0f6a3b0-ef48-4660-86b3-831e1148feeb",
        "cursor": {
          "ref": "d37552bd-331d-408c-a7d9-cdf30d60f8c8",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "19b587c2-a977-446a-87f7-921f55e347ff"
        },
        "item": {
          "id": "e0f6a3b0-ef48-4660-86b3-831e1148feeb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "1662b148-0878-4591-bfb7-e8b948edc693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f11a280-d2c0-4883-a1f5-2c99442b8037",
        "cursor": {
          "ref": "12bd0ee5-0710-48ec-81cf-26fd8a2f74c2",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e1c82107-0633-4f19-8852-6e24cc743ed0"
        },
        "item": {
          "id": "7f11a280-d2c0-4883-a1f5-2c99442b8037",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "38e45724-4550-4f25-aad6-d66e3e23eede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69112936-3285-42b2-90da-bcc7dc3270e9",
        "cursor": {
          "ref": "b314e890-acff-40d1-8271-531c3bc79bdc",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "25e5a77d-c4ea-45e2-be2a-de72931c5222"
        },
        "item": {
          "id": "69112936-3285-42b2-90da-bcc7dc3270e9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "19f6b63b-d5f4-43fc-8db1-f34e8a9d6997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c859ccc5-d07a-4a4b-b6ac-aed14e64a89e",
        "cursor": {
          "ref": "98c54382-ac5d-45e8-a13e-aa131a969121",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "2da2434d-8432-4719-bac1-d0159968faaf"
        },
        "item": {
          "id": "c859ccc5-d07a-4a4b-b6ac-aed14e64a89e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "59b15390-6730-4cbf-b7a7-68e1643ff104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2fb10f5-3bb4-4912-8343-a26684021942",
        "cursor": {
          "ref": "36314305-7b4b-46db-82f1-20b366166868",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "6884164b-0007-4cf0-ac91-ada5269a4dae"
        },
        "item": {
          "id": "d2fb10f5-3bb4-4912-8343-a26684021942",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "2c9c4f45-f03d-4f85-9eb2-5434865bf762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a5201b-e0a1-403d-a9cc-cf2bbe21f799",
        "cursor": {
          "ref": "99a46271-e55c-4fd8-8bc8-d000c3ab190d",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c44cf2d1-b0f9-4997-8acb-6225f7ccd8e2"
        },
        "item": {
          "id": "39a5201b-e0a1-403d-a9cc-cf2bbe21f799",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f85c6892-0ecd-4637-b3ec-b48765168e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "118141c5-6362-45b9-bbf3-48ce36260bcc",
        "cursor": {
          "ref": "3fcf35e7-9eca-47d7-bde6-7f9b7057f8e9",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "5676ec38-43ea-4f13-8029-18089b7fccb9"
        },
        "item": {
          "id": "118141c5-6362-45b9-bbf3-48ce36260bcc",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "bf77ce62-c182-4ad4-b746-26a6278d3c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af8b6172-c895-4fe7-9a5f-e0330015d823",
        "cursor": {
          "ref": "8091011c-425a-4400-be08-454aed6b6421",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "13ec0e35-cf12-4c32-b1c8-394d5eac497f"
        },
        "item": {
          "id": "af8b6172-c895-4fe7-9a5f-e0330015d823",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "9664cfb3-2893-4397-82b3-f13ec51ecb40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f96c5f9-4120-4d65-a3b4-af329530d966",
        "cursor": {
          "ref": "911c49ac-7228-4432-93f8-a0024f49530e",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e1eb1ee6-ece2-4bae-b0d6-a9c0829ea5b0"
        },
        "item": {
          "id": "9f96c5f9-4120-4d65-a3b4-af329530d966",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "e4d66a7e-6d58-408a-9188-17c454690749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a586a9e8-dfc5-4c37-b322-c40564791a5b",
        "cursor": {
          "ref": "d04ed3de-e2fe-4cfe-a67e-48b1a65fc543",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "7175a7af-fce5-4777-aa55-4b60a22be38f"
        },
        "item": {
          "id": "a586a9e8-dfc5-4c37-b322-c40564791a5b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "8b8fc367-7853-44b5-857c-074e59a61729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b3728d-ea38-4576-adc2-ece6f7a8713a",
        "cursor": {
          "ref": "e59b7798-0959-424d-a6a3-2efe8c7a883c",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "fe54e3fb-0d35-49ea-8bbd-85d3adcf59b3"
        },
        "item": {
          "id": "88b3728d-ea38-4576-adc2-ece6f7a8713a",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "fba2f8dc-ccc8-45a9-a093-685552501603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a756b349-5479-4ab5-a835-47388f91a9fd",
        "cursor": {
          "ref": "d9ab0559-e90c-4761-aefc-b0e87559cae2",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "2179c8a8-09dc-4431-9e57-209bac2da078"
        },
        "item": {
          "id": "a756b349-5479-4ab5-a835-47388f91a9fd",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "5900b04b-bf97-4353-8ef7-0bcc45dd9926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b042ce8-4443-44b7-8e44-b3d6e895d36c",
        "cursor": {
          "ref": "28ec6125-5aac-45d5-a429-32fc517af368",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d2ed6f5b-12d0-4f29-a008-f46b6cc1bbc5"
        },
        "item": {
          "id": "9b042ce8-4443-44b7-8e44-b3d6e895d36c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "60d79347-66cb-44bd-bcf6-5f0d9661dbe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "421d74d1-7acc-47a0-97cc-01c5cf8f2e90",
        "cursor": {
          "ref": "848d4925-84bf-4713-bdbc-6843b2bb3f1a",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "1af1c129-db07-4590-b80c-fea61d89cb37"
        },
        "item": {
          "id": "421d74d1-7acc-47a0-97cc-01c5cf8f2e90",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "4b0ae245-ccdb-40c0-852d-2ee61f1a4932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d383dda-34fa-4e6d-b411-af39b9dbd14e",
        "cursor": {
          "ref": "0038f0e5-2905-4d7a-b2b0-caba2851e259",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "99a6c3f6-04fc-4650-a9f3-4f2c18b7a915"
        },
        "item": {
          "id": "0d383dda-34fa-4e6d-b411-af39b9dbd14e",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "c897b9ad-2b5c-46b4-b482-231126a41f67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8947792a-e67a-4092-a4e0-bef0599713a2",
        "cursor": {
          "ref": "e26851f0-ac82-453d-95b5-d231a539619e",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "4df45960-7927-41de-8cfb-2a575a8dfbd8"
        },
        "item": {
          "id": "8947792a-e67a-4092-a4e0-bef0599713a2",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "38d16c8c-cc72-4b4a-a4dc-57f8a4d9b7bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96c90018-12e5-4a72-9ce2-2d1f7793d863",
        "cursor": {
          "ref": "0aac9019-05c4-47e3-8f59-7e8c23727dbd",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a75acdcf-6902-4e90-bf26-26df3516584f"
        },
        "item": {
          "id": "96c90018-12e5-4a72-9ce2-2d1f7793d863",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "75912d44-7149-442f-b3d6-40cb8dca6ada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3808255-27b4-48a5-872e-fe507acc602a",
        "cursor": {
          "ref": "02d6949a-fd77-4a05-b307-cdaf773e30c8",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "2db69115-da14-4b8e-a97b-488ff1162b6d"
        },
        "item": {
          "id": "a3808255-27b4-48a5-872e-fe507acc602a",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "8258a1b5-27a7-4a1e-add9-a970a336882e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f97a438a-7a04-4918-9695-0c9440fc8ad2",
        "cursor": {
          "ref": "a83c434c-5e8f-42c8-bbf6-d5c314360134",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "48d95074-55a0-4822-83f3-987fbf54d9b1"
        },
        "item": {
          "id": "f97a438a-7a04-4918-9695-0c9440fc8ad2",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "d10e9cd5-b023-4415-91b5-17edaa0d9982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5705abdd-d944-4e00-952d-386c519e3ff0",
        "cursor": {
          "ref": "339443b3-45e7-4cb2-8cd2-74bd5ca38745",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "6e623894-b5a8-4e7c-a2be-3e0982c734b7"
        },
        "item": {
          "id": "5705abdd-d944-4e00-952d-386c519e3ff0",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "a595f6a8-bd74-43e6-9f92-0c8389784234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b8df1f-9a3e-4d96-a1dd-be8b83b925b1",
        "cursor": {
          "ref": "d5b90cd8-ee2f-4a78-b680-37a745545fea",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "ae1f1c5b-67d3-40cf-95bc-3d27d17c26d1"
        },
        "item": {
          "id": "c7b8df1f-9a3e-4d96-a1dd-be8b83b925b1",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "7cc4739f-a73d-4330-a3c1-39d67404bdb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e90e201a-6ab2-49be-92e9-26822d1ad72e",
        "cursor": {
          "ref": "4405e561-8a0c-4723-8a1e-7cdcc0f209f4",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "890660a8-b780-4c7a-8142-544a63fdfb2c"
        },
        "item": {
          "id": "e90e201a-6ab2-49be-92e9-26822d1ad72e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "51a85795-2da2-4d8c-aa0a-0b275982d4a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "183ff448-22cc-49a1-a7a5-55eb3ec2b38e",
        "cursor": {
          "ref": "24143584-2861-40ff-9d67-1a82f2de3e34",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "36322302-2c8f-45bb-9b38-e04b8d0dd51a"
        },
        "item": {
          "id": "183ff448-22cc-49a1-a7a5-55eb3ec2b38e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ef6c69be-005b-44f0-8fda-61d1bc2e0c04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6a93696-45b1-48f0-96d4-85056eba6a26",
        "cursor": {
          "ref": "6b9ec997-2b8c-48f8-a929-757a8eae8489",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "9fb15669-155b-4237-a4d8-94b08f4ec4f5"
        },
        "item": {
          "id": "c6a93696-45b1-48f0-96d4-85056eba6a26",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "cd971176-45bb-4acf-be2e-8a866d2a2904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c328a67-ea9b-414f-bb2b-e662d0ff39cb",
        "cursor": {
          "ref": "48c8c8e4-91c9-41d5-b545-434dc73a62f5",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c8d12ce6-99d5-440e-b4fe-b1440aa572ac"
        },
        "item": {
          "id": "0c328a67-ea9b-414f-bb2b-e662d0ff39cb",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "0b16225c-9426-4544-916b-576af79a9512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "693c8fa3-f52b-48f4-8019-54bdd07b0710",
        "cursor": {
          "ref": "aa4f83a0-6c45-49a4-813c-a93c3afe692b",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "af54c903-7446-4135-a82c-71ffa1c338eb"
        },
        "item": {
          "id": "693c8fa3-f52b-48f4-8019-54bdd07b0710",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "2bfc48f0-6d58-4e4e-9652-443eac6c40d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d277c0ae-7981-442a-9196-b16f291673a7",
        "cursor": {
          "ref": "96379b77-04de-4726-b3d0-46af2e9a3148",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "623289be-15b9-43ec-a88c-c2a6b757b210"
        },
        "item": {
          "id": "d277c0ae-7981-442a-9196-b16f291673a7",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "f3b8fd0f-866f-4626-bf59-4da62284e817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fcffc04-26d6-48ad-a59c-e9da9180c05e",
        "cursor": {
          "ref": "517df819-3808-4f47-8c6b-6e23024cae74",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "47f4decc-f597-4079-87ef-c9be716d8698"
        },
        "item": {
          "id": "3fcffc04-26d6-48ad-a59c-e9da9180c05e",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "1d688473-fcc7-4743-a098-340468f22a43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6bdd06b-bd95-440a-9118-d7f50b42c93f",
        "cursor": {
          "ref": "54bdfba4-bc55-4532-a2c4-7f4751a7c079",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "b3e388b8-b4a2-4c34-afeb-503388b6842f"
        },
        "item": {
          "id": "e6bdd06b-bd95-440a-9118-d7f50b42c93f",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "27b7ae3f-bf4f-4c7a-9d62-c73f487180f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82b6ca41-7492-4b61-b67d-4145ed350bc4",
        "cursor": {
          "ref": "bc6d1312-5801-4e78-a006-dfe29ff45fb9",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "35fb5057-d112-4337-bdf2-546fe9a01ef4"
        },
        "item": {
          "id": "82b6ca41-7492-4b61-b67d-4145ed350bc4",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "3e0223d3-ca06-4887-bb30-7d68064b3ad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f90de30-9af7-4e5f-a215-6066bd883e4a",
        "cursor": {
          "ref": "2259fc3b-8e31-4033-bb04-1c71aa646705",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "36cbde31-3a54-4091-9bdc-1fd9ad5408e8"
        },
        "item": {
          "id": "9f90de30-9af7-4e5f-a215-6066bd883e4a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "4122f97f-1c96-4b69-9c6f-5ecac883dff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcd3e4a3-ede1-4907-8deb-9dcba02a9684",
        "cursor": {
          "ref": "2c6f58aa-55d2-4ec5-a184-216160b3a45e",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "8f0f2736-39aa-4e39-a5a5-f32ba67a1ce8"
        },
        "item": {
          "id": "dcd3e4a3-ede1-4907-8deb-9dcba02a9684",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ff78a4e2-617b-45da-b7e7-448ae33540e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9ad28e6-f928-4a7f-9502-fa4cb4adaeea",
        "cursor": {
          "ref": "43fed020-4067-4238-9660-6cb46af2cd44",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "7fe857cb-4732-4c9a-b2c4-be34e477855a"
        },
        "item": {
          "id": "c9ad28e6-f928-4a7f-9502-fa4cb4adaeea",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "5c3508a8-55da-4694-8176-89068f57ddba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e967d51-81cc-4159-a324-80982c81e25b",
        "cursor": {
          "ref": "f7e78676-2f3e-447d-bcb3-9d7e863e9d78",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "9211ac3e-1ef8-431f-8fab-7d06333162a4"
        },
        "item": {
          "id": "4e967d51-81cc-4159-a324-80982c81e25b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "4e7298d4-2317-4590-8c0a-7db19b15bfe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c43565a-38c1-4859-ae5b-50507de67c7a",
        "cursor": {
          "ref": "6623a998-4771-4158-a667-ba0257f786a1",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "8b01b5df-7ea9-4a03-b51c-67f35450b719"
        },
        "item": {
          "id": "6c43565a-38c1-4859-ae5b-50507de67c7a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "6747cb62-05eb-47ab-b1af-84cf9831f54b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a190dac-2aa0-4b10-bd1f-093355b2da7c",
        "cursor": {
          "ref": "f1c50a53-cdb0-4f5c-bed4-a3889c161bb1",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "f1f219d4-e463-43e2-bcc1-55c8cdb536c0"
        },
        "item": {
          "id": "2a190dac-2aa0-4b10-bd1f-093355b2da7c",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "b384782b-ddaf-4ed7-8272-0430583fd03c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a10ae9-995b-4c38-837c-8e035b4efc5c",
        "cursor": {
          "ref": "9b9cb6c5-6a7c-4406-bf30-f25f8569afc3",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "8c366936-9d70-4fe6-ba91-a4a3ea8602ff"
        },
        "item": {
          "id": "e5a10ae9-995b-4c38-837c-8e035b4efc5c",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "93cf72ed-d003-4adf-910d-6141f1a7bde3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "15cb0e71-b3e8-498a-ab4f-19af980fca9f",
        "cursor": {
          "ref": "625f4107-9e63-464c-a18f-78b0d111c21d",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "568100f3-7b3d-42e8-93c7-9e69655e854b"
        },
        "item": {
          "id": "15cb0e71-b3e8-498a-ab4f-19af980fca9f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "4b917622-2c4c-4a79-b715-9a7751e49538",
          "status": "Created",
          "code": 201,
          "responseTime": 9292,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "410804b8-075e-45eb-90f9-02830c5c6901",
        "cursor": {
          "ref": "55cadf9b-2985-44ec-91e9-0fb0a53462b6",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "fc82a5c4-cb82-496d-a1f3-d770e70d2353"
        },
        "item": {
          "id": "410804b8-075e-45eb-90f9-02830c5c6901",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "40d319bf-40b7-416d-b28f-11c0035817af",
          "status": "Created",
          "code": 201,
          "responseTime": 8547,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f6f6546-5fb5-4253-819d-b2b07535b068",
        "cursor": {
          "ref": "9e983139-7015-4d67-a0cf-4be3b806955f",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "149b4721-99ca-4691-9eb5-1ab4c0d3697b"
        },
        "item": {
          "id": "5f6f6546-5fb5-4253-819d-b2b07535b068",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "76ee8107-5ace-4469-a036-c669939acf9b",
          "status": "Created",
          "code": 201,
          "responseTime": 8622,
          "responseSize": 1229
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb296ef-b034-468e-a478-d35775d93e81",
        "cursor": {
          "ref": "c994c5fe-1239-4941-82ed-4e53d3ea0272",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "7ae19063-5806-491c-bdf8-b4b9f6feb150"
        },
        "item": {
          "id": "afb296ef-b034-468e-a478-d35775d93e81",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "519ec6c8-c89e-4555-beb9-13b77868f1d6",
          "status": "Created",
          "code": 201,
          "responseTime": 8834,
          "responseSize": 1235
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "87f9b5c5-d01d-40cb-b3c0-5980d5c07cab",
        "cursor": {
          "ref": "7a4a798e-705a-4898-bd0a-089e2e7a9273",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e7dc6e6a-f4b6-467b-8b2b-390663a676f3"
        },
        "item": {
          "id": "87f9b5c5-d01d-40cb-b3c0-5980d5c07cab",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "0412d83a-9700-45e7-975b-6f805f357576",
          "status": "Created",
          "code": 201,
          "responseTime": 8741,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-06-29T00:38:43Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-06-29T00:38:43Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "fff68a93-8af8-476c-ad6f-7a0813a43994",
        "cursor": {
          "ref": "40383b48-db8b-4b21-9ff4-2d2f00a69f7e",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "4cec857d-ba02-4d90-a3be-103ab7bdfdc2"
        },
        "item": {
          "id": "fff68a93-8af8-476c-ad6f-7a0813a43994",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b84f60bc-2bd2-4edc-8f6a-19bcab232f7e",
          "status": "Created",
          "code": 201,
          "responseTime": 8369,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c9c8c25-55d0-4d88-bf8d-efae0c32a2ce",
        "cursor": {
          "ref": "a48d32ae-21ed-4371-91d6-72431e09a259",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "5f617adb-d30e-40df-ac31-c45aa93cb98a"
        },
        "item": {
          "id": "9c9c8c25-55d0-4d88-bf8d-efae0c32a2ce",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "16415e6f-821d-4c7d-9427-4f9e2c18edfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2fdc61b-37f6-4012-8670-75fd3ec0c463",
        "cursor": {
          "ref": "b820f90b-e07e-4df2-9c55-90c7aae025b1",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5482d682-4cc2-439a-ae3a-6ba03edfa4fc"
        },
        "item": {
          "id": "d2fdc61b-37f6-4012-8670-75fd3ec0c463",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9bd8fa8f-61e5-47e7-afe6-15ca25d5e7c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28938a77-c84d-4e1c-836f-e7c3890f4999",
        "cursor": {
          "ref": "2ffcae82-8a52-46ae-bc32-0bf9f2d91cd7",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "09c27709-1846-4af8-b7b3-ee6b6da93d39"
        },
        "item": {
          "id": "28938a77-c84d-4e1c-836f-e7c3890f4999",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5e288fbd-c22a-4338-988c-52069fa03617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af8b9a66-a9f9-43d5-b818-1e044a5ba62b",
        "cursor": {
          "ref": "4004ec59-96c5-4a5b-9615-a9c197c9b6b7",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "edb43827-941f-4c2f-89a8-720ebe6275bf"
        },
        "item": {
          "id": "af8b9a66-a9f9-43d5-b818-1e044a5ba62b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b5ab0e3f-1f18-42e0-9a5c-4e23aff16dff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a1a95e-9764-4271-9023-e0c4ecd6e8fe",
        "cursor": {
          "ref": "e7927b25-8d96-4145-8ccd-00125d4a5269",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e825cf28-31bb-421d-b476-57c09b3a13dd"
        },
        "item": {
          "id": "39a1a95e-9764-4271-9023-e0c4ecd6e8fe",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e28c5001-df65-40fe-a767-3174703a37fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b85546a-3e28-4204-b269-31e76d6c8882",
        "cursor": {
          "ref": "19d3c51c-7282-4609-a667-af4698d6314b",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "58b2eae7-9108-48e9-b45e-3cd3fa04a78e"
        },
        "item": {
          "id": "5b85546a-3e28-4204-b269-31e76d6c8882",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "22841b02-dbd8-4634-99a8-a632b39236f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb9a6e76-6391-4a12-addf-4e1b806b1fa8",
        "cursor": {
          "ref": "1bc7fd90-8d2c-48d2-ba43-70a35cfe1ad7",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "67c3a214-239b-49f3-b98f-9283756c6e4e"
        },
        "item": {
          "id": "cb9a6e76-6391-4a12-addf-4e1b806b1fa8",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "24607c3a-90a1-4a4b-a55c-0ef3f4748a8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c930b8-7b0a-4f66-a9cc-d08288d6e13f",
        "cursor": {
          "ref": "d95313bf-f1b8-4009-a754-14f14ab616ae",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c4a401db-4a4d-4d24-8387-fd279d1e9584"
        },
        "item": {
          "id": "00c930b8-7b0a-4f66-a9cc-d08288d6e13f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "447e0b14-d517-476f-bcdc-80f02d7f455c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b936af-12f0-45bf-940d-9b262aa09137",
        "cursor": {
          "ref": "359c2e72-e881-4488-be8a-ceeefef6bc14",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c678703a-ec99-4d3f-8357-d17114002c20"
        },
        "item": {
          "id": "01b936af-12f0-45bf-940d-9b262aa09137",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3dce63ca-1c2f-472b-9db9-55ec7760d4d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7eac605-852a-4cea-95a2-f203ee03d481",
        "cursor": {
          "ref": "97a17646-0073-4c5d-8603-f98034f49a22",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "bc82f66c-b013-44d0-b30f-cbbf4e5feff2"
        },
        "item": {
          "id": "e7eac605-852a-4cea-95a2-f203ee03d481",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "514ea2da-d031-4ba8-9964-5ca5d84ee205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bbd0805-f2ba-4683-92ce-ccce439ba214",
        "cursor": {
          "ref": "0d950726-115b-48b0-8649-aa8c0b31f36d",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "29e01be1-f3ae-48b5-83d4-8f15a49c7ef3"
        },
        "item": {
          "id": "7bbd0805-f2ba-4683-92ce-ccce439ba214",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "4e493c62-64e2-4216-ac38-959e2f211f19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfad7c55-8f46-42df-a603-260b0e53e37d",
        "cursor": {
          "ref": "87bd5ccc-29cf-4d2e-a4b3-a15ea2948543",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d934951d-4ffe-46e2-a9ab-771a6e86debf"
        },
        "item": {
          "id": "bfad7c55-8f46-42df-a603-260b0e53e37d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "38721084-5dec-4f77-90bc-ec4d75f5f73b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bcab13b-4488-408f-9aed-b16457dfe376",
        "cursor": {
          "ref": "a78ba3ab-ea29-4dba-b8ed-eeaba1070a66",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "573d5970-6496-41e4-a020-063ea12cd90a"
        },
        "item": {
          "id": "1bcab13b-4488-408f-9aed-b16457dfe376",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f0719017-e03b-434d-95c9-5765f8eb748c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4cad2ad-42b2-4b3c-b703-96100e73497a",
        "cursor": {
          "ref": "e56d988e-53b4-4d03-ab08-148cb769d0e1",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "0469c461-3aef-47a1-be7c-96dfb01ffbda"
        },
        "item": {
          "id": "d4cad2ad-42b2-4b3c-b703-96100e73497a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "46448f97-e4e9-428c-98c2-458efe7bcf29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b39426b4-68b2-4155-93aa-40f52a656e2b",
        "cursor": {
          "ref": "ea2f85af-7826-4504-b124-f3a4018ff8f4",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "99afbcbc-be09-4c82-a4cb-2f577f83de82"
        },
        "item": {
          "id": "b39426b4-68b2-4155-93aa-40f52a656e2b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7c6c1229-11e3-4c7d-9f84-c0eb1c342eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8180bc0-20db-4e26-aff2-476f6fd3d2ea",
        "cursor": {
          "ref": "911ca821-dd53-4d4a-ab06-ec22cc771f6c",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "02516e80-b478-4fd9-a834-3ee354888193"
        },
        "item": {
          "id": "c8180bc0-20db-4e26-aff2-476f6fd3d2ea",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7e402f5f-3b60-4829-a0f6-a9d6c43e91de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "309ce135-2151-4c95-b0ef-c92068014c3c",
        "cursor": {
          "ref": "76f5a2cd-7cc5-4848-8886-7b3691ae1b58",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "1964bbb5-f8ea-4d9b-850d-68aafeb5d764"
        },
        "item": {
          "id": "309ce135-2151-4c95-b0ef-c92068014c3c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "be950210-3d8f-4dda-a4ac-c6cdcd6bee1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f8b1d20-5fa2-4e19-ab72-4563d03f28ef",
        "cursor": {
          "ref": "ff55dc45-527f-4d33-85c0-b727713f4ebc",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "ea4b5884-097f-4fc8-acef-7cef3eaf7ce8"
        },
        "item": {
          "id": "0f8b1d20-5fa2-4e19-ab72-4563d03f28ef",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "14c865e2-23b4-4136-bcd9-0b01df1fa014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cc06f62-7d9b-46ee-b43c-bc41458ef02c",
        "cursor": {
          "ref": "7aec4da6-c6ab-474d-a493-30989da11ae1",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "fe7c0515-c48d-4a7f-a195-c79c1883993d"
        },
        "item": {
          "id": "6cc06f62-7d9b-46ee-b43c-bc41458ef02c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "74f2b9d2-345a-4613-93c7-95abc936e2f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df03b69-ffae-4667-adf7-7502443f1723",
        "cursor": {
          "ref": "504b0ca4-7342-425d-af8e-f0ba52f0097d",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "75d6c74f-2508-4b71-9bc6-1ca8899895a2"
        },
        "item": {
          "id": "5df03b69-ffae-4667-adf7-7502443f1723",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d690b0b6-69d2-4fbc-acfe-5d8af80c4f38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c49d6bdb-2f1d-4092-862c-aeab5cb49729",
        "cursor": {
          "ref": "71f1feff-a835-4b05-ac76-71063c6c111b",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "a9fb490b-8633-43a6-bbce-4bbc827773e6"
        },
        "item": {
          "id": "c49d6bdb-2f1d-4092-862c-aeab5cb49729",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5dfd654f-8075-429e-b809-10805b80d6b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3427b2a9-1639-4ae3-9e00-0154e2fe6e33",
        "cursor": {
          "ref": "63045ebb-54b1-4ec3-8d22-856ed9a4e502",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c375d9fc-f352-47b8-b5f0-4ba6f711d5b7"
        },
        "item": {
          "id": "3427b2a9-1639-4ae3-9e00-0154e2fe6e33",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3ecec846-7b90-433f-9db6-216e2c9b6d64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d38d1d5-c3ab-4ac3-8412-6c8e8f12f727",
        "cursor": {
          "ref": "46e0b161-6df0-416c-a49b-a1fb45f79260",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "a319c3d8-5c78-4175-8ac8-eaacbe40a22c"
        },
        "item": {
          "id": "7d38d1d5-c3ab-4ac3-8412-6c8e8f12f727",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ff279b23-3a73-47ce-a787-f7a816afb330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d80ef8da-2465-4519-8452-655bfedbbb2d",
        "cursor": {
          "ref": "70a90200-385f-4a2d-b8ad-33d5d1487ea9",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ecdcda2e-f0c4-482c-98c4-04742fdbca74"
        },
        "item": {
          "id": "d80ef8da-2465-4519-8452-655bfedbbb2d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "874808d5-1239-4053-8f93-bc530e2c3907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "579336ac-db4e-482e-b0e4-700eaa7bcf95",
        "cursor": {
          "ref": "1ae1bced-632e-4ae2-bdb8-2e12183e4755",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "3ea04c3e-96c3-4c17-93c0-6c919dd2815d"
        },
        "item": {
          "id": "579336ac-db4e-482e-b0e4-700eaa7bcf95",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d60887d6-8180-4ab9-b680-b81045d0b11b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fb571cc-4340-4d94-8ff7-4d6295c608f5",
        "cursor": {
          "ref": "fe8b3959-a3fb-41cd-8663-25467ce3ed09",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "77dc14e3-c0a1-4f66-b43b-4ff9cacf6164"
        },
        "item": {
          "id": "2fb571cc-4340-4d94-8ff7-4d6295c608f5",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0ab5a2bd-08d9-47f2-9b00-b9ac7c44fbf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80fff7d5-87b5-41cd-b320-cae2b6c58fbe",
        "cursor": {
          "ref": "e125b1c0-8f04-43a2-bad0-89721601d058",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "3c0c8bca-e6ff-4379-b951-e0153bdcfb0a"
        },
        "item": {
          "id": "80fff7d5-87b5-41cd-b320-cae2b6c58fbe",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5ce43be0-6cac-449b-aae9-198bbcc4b096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22f72622-a3e8-4fab-a922-78eb15edbea3",
        "cursor": {
          "ref": "e99fca5a-f8e9-4614-96de-3191f80e21ab",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "1f72546b-c915-4aa8-9cda-c92f3b6fcfe0"
        },
        "item": {
          "id": "22f72622-a3e8-4fab-a922-78eb15edbea3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9d91eca0-c740-4aa7-b43f-7257429be833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a22bda-6adb-477e-be7f-a873709efe84",
        "cursor": {
          "ref": "e8b8d008-a1ce-4d76-8165-2a7cca100fb4",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "9b8d2b04-262b-4204-b325-b96236489069"
        },
        "item": {
          "id": "e5a22bda-6adb-477e-be7f-a873709efe84",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0c4fa04b-29b2-43e8-b80c-25079c1f66db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0f3c768-db67-48de-9aec-efeda86c8045",
        "cursor": {
          "ref": "3f2ee1ca-1685-49a2-8291-3d9984f1110c",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "66d839b3-b622-4851-996c-cb6df251d1bc"
        },
        "item": {
          "id": "e0f3c768-db67-48de-9aec-efeda86c8045",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e0592c3a-e5fa-4ebf-8573-bdb880a75a64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c179ae5a-693b-4a9b-b33e-a42ab3f66e5c",
        "cursor": {
          "ref": "004e46cf-d80d-4fe8-8f9b-c4cc69f30f9f",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a0960f09-f999-4bc5-a334-6d9eabaef32d"
        },
        "item": {
          "id": "c179ae5a-693b-4a9b-b33e-a42ab3f66e5c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d3229857-20e2-4028-8ff7-1d18b91e24e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "198a41fa-8190-48f3-8d93-38875a5d7cde",
        "cursor": {
          "ref": "39663d25-bda8-41e8-a4db-981caca3e723",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "131b7f4a-7818-4632-9d7e-8ce9a1e33b92"
        },
        "item": {
          "id": "198a41fa-8190-48f3-8d93-38875a5d7cde",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "319ebaa5-d3c3-4deb-943f-41a15cfecfdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "598c06cd-08ed-41bc-9972-01954d608125",
        "cursor": {
          "ref": "9cdcc391-ca08-4a6b-9a08-d781f42f47c0",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "2c4c1a92-6659-4509-98ec-a0bc0a815309"
        },
        "item": {
          "id": "598c06cd-08ed-41bc-9972-01954d608125",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "4d5290a0-dad9-486e-a1d0-aed7b2485ea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a5c937-2f97-416e-bea8-047303c7afbe",
        "cursor": {
          "ref": "64d53519-1321-4a1e-b528-fb10f8b6c098",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "be770d56-83c5-48d5-a103-e9bb4aacd62e"
        },
        "item": {
          "id": "60a5c937-2f97-416e-bea8-047303c7afbe",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "ec547c0f-960b-407b-856e-6e76d13540cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fcf0538-67b2-4e12-862d-3bbe3e7cb7d8",
        "cursor": {
          "ref": "3a6cfba2-9f09-40f4-adcc-bd8d1e84f15b",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "546df0ff-f5a1-466c-932c-c95bb02f4f79"
        },
        "item": {
          "id": "5fcf0538-67b2-4e12-862d-3bbe3e7cb7d8",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "d641b5c9-863c-43e9-8ade-6538ffeb159a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1321ba6-ca06-4291-b782-62787162ecb8",
        "cursor": {
          "ref": "e034eb95-7a46-4209-9af1-f6046a4661a8",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "95844077-1633-4c61-8f3f-c9f2185cda02"
        },
        "item": {
          "id": "d1321ba6-ca06-4291-b782-62787162ecb8",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "3e02e7c7-d4f6-41b1-859f-9965706b2062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1edf0c7-c827-4ee5-a769-2fd58afbd695",
        "cursor": {
          "ref": "54c35afa-c92a-4f41-b7e3-f2fb2afeb7bf",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "8a1a9820-a340-49e0-85e8-aa536930f3f0"
        },
        "item": {
          "id": "e1edf0c7-c827-4ee5-a769-2fd58afbd695",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "cca3d4fa-2f0a-4380-b577-1a9c4a645086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "391b28f4-12d1-4226-ad64-0778202d0116",
        "cursor": {
          "ref": "2dc5bd6a-f535-4b12-be90-8404bdfdeb89",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "3d66ba8b-28d7-4382-a475-dbf996cca0e5"
        },
        "item": {
          "id": "391b28f4-12d1-4226-ad64-0778202d0116",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4b883a82-abec-432d-9011-e1eedffb825c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b32b57-4e11-4799-b68b-74b0ca5efc0d",
        "cursor": {
          "ref": "099a7bbc-bea5-485f-836a-37eef9082552",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c3d508d8-2ad6-4bbd-8adc-25c2f274d3ad"
        },
        "item": {
          "id": "32b32b57-4e11-4799-b68b-74b0ca5efc0d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6189cd70-5c8a-404c-988a-a3e91a0359ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67fd5d94-ddd4-4093-a33e-a086ec7e6010",
        "cursor": {
          "ref": "6dbf7929-00d9-46b5-942b-caba79f7bd77",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "cd711d76-0234-4c21-9152-348bb2606cad"
        },
        "item": {
          "id": "67fd5d94-ddd4-4093-a33e-a086ec7e6010",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "3b4ec7c9-4d0c-4803-a559-c773d1043658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afddc583-ad5b-40bb-b358-0dc4ed1537ed",
        "cursor": {
          "ref": "9d31811f-0c83-4a6b-927c-42bdff04beb0",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "1337aa32-e41a-43d1-a95e-955bf12c1dd1"
        },
        "item": {
          "id": "afddc583-ad5b-40bb-b358-0dc4ed1537ed",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "dded2da5-97af-47bc-8357-4bc1f74364fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdcb6da7-6b54-40ad-a06b-8301d8b5bb3b",
        "cursor": {
          "ref": "3b9f6405-dee7-4214-8d22-9c4da5a9f7f5",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "33dffce0-773d-451a-8e35-255982b60630"
        },
        "item": {
          "id": "cdcb6da7-6b54-40ad-a06b-8301d8b5bb3b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "3dd0a6ac-fbd4-4a5b-a94e-e4ef2b4da9fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5238faa2-3965-4549-b7b8-7d0dc52b4f1f",
        "cursor": {
          "ref": "4c62f70f-73d2-435e-be66-47a3b0af6c04",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "77af3f72-d89b-4c8b-b232-013ae1541b53"
        },
        "item": {
          "id": "5238faa2-3965-4549-b7b8-7d0dc52b4f1f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "7dea4108-9c4c-4eb2-a2b8-b7ecf90af55f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d82a000b-a873-4147-b3bd-8e11df8a6363",
        "cursor": {
          "ref": "dbdbf9f4-2abf-452e-9a46-92a4de035971",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "311b5ce5-67ca-4b85-85f1-881482ffc380"
        },
        "item": {
          "id": "d82a000b-a873-4147-b3bd-8e11df8a6363",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "11ee053d-ceb0-4600-b07a-519b7c229efc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d55d6a83-9b97-4b6d-9099-14ba774d38b9",
        "cursor": {
          "ref": "967ee02c-fbb2-4719-b97c-3dac6dc0e47d",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a24af74b-cb75-4c3f-a144-86b842b29417"
        },
        "item": {
          "id": "d55d6a83-9b97-4b6d-9099-14ba774d38b9",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "cc0c5731-1984-42bd-ac0f-61ff2e1c08e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1673dda-fdbc-4e54-9395-131332a45a86",
        "cursor": {
          "ref": "c70d7804-e067-4e8e-a6f3-1c658de62b43",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "8da5cb6e-7924-4549-ab18-4c9f8888a14b"
        },
        "item": {
          "id": "f1673dda-fdbc-4e54-9395-131332a45a86",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "6d4f74b1-bf9e-4bc7-ba29-593590783256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcee3a12-d076-4507-9822-2e8c13e5895e",
        "cursor": {
          "ref": "5cec8de1-a08d-4ead-bb29-323be1afa465",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "e6e6b1c2-6817-4f7f-8d9e-87b3c8801f33"
        },
        "item": {
          "id": "fcee3a12-d076-4507-9822-2e8c13e5895e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b695dbdf-8e47-449d-8d98-b4017a5d9c16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e138e4-4e99-4f3e-85ee-12845893ae42",
        "cursor": {
          "ref": "d6e56a69-1dfa-408a-b249-5c19928e0c38",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "0cdc8d53-c1bd-4c48-a429-6ee53468a9ec"
        },
        "item": {
          "id": "67e138e4-4e99-4f3e-85ee-12845893ae42",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "5cc3374b-e5cb-45cc-98c9-f093945f69b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25976aea-9227-44f2-b1c7-601648f28b80",
        "cursor": {
          "ref": "84761fc4-0c99-45be-af51-d6de0850654a",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "5e03d4f4-8b25-44a4-a985-68f8f0be2201"
        },
        "item": {
          "id": "25976aea-9227-44f2-b1c7-601648f28b80",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "cbd0e4d4-5333-4af5-a7d0-b1a7169c0c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50b2aeaa-3cae-4029-8190-fe0e5ea65f05",
        "cursor": {
          "ref": "70649989-a5ca-4ec4-8f66-9af27c741874",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "265fb2ed-dedb-4ef4-ac46-43f3dcca6f4f"
        },
        "item": {
          "id": "50b2aeaa-3cae-4029-8190-fe0e5ea65f05",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "8075280d-d85e-498f-8b52-cbde069cda4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa04a955-261a-4f09-a653-2ed079f25149",
        "cursor": {
          "ref": "8ab0ae67-a75d-4bdd-956f-5a55925b4fb0",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d11f1d83-3d0d-4ec3-8b5b-69e26217f578"
        },
        "item": {
          "id": "fa04a955-261a-4f09-a653-2ed079f25149",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "4ec96749-5fd5-4847-99df-3cfc79c9c76a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbba9d6a-37d6-41d8-81b1-08dbbed2461e",
        "cursor": {
          "ref": "fbc50f71-4829-4700-bfc5-95f6671519c2",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "70f490eb-551b-4e8d-9e40-18158166184a"
        },
        "item": {
          "id": "cbba9d6a-37d6-41d8-81b1-08dbbed2461e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d811a9f6-29bf-4ab5-8c08-9f304b6c7a1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e57c916d-b57a-408d-8db5-fa1a95cc1d35",
        "cursor": {
          "ref": "06f14ee5-7a4a-4be2-b402-679ee80553bf",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "408333f2-176b-4a27-aaa9-4bd19a7ac799"
        },
        "item": {
          "id": "e57c916d-b57a-408d-8db5-fa1a95cc1d35",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "8f14c289-6a58-471f-a61b-8f35129e67a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dee0e3c-f2c2-4523-9589-61a4d90bcd45",
        "cursor": {
          "ref": "1b1f9df8-b5b1-4920-9d65-29ca3701e194",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "fce26ffc-1969-4176-99f6-a28590728883"
        },
        "item": {
          "id": "7dee0e3c-f2c2-4523-9589-61a4d90bcd45",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d9961bd7-8a0a-41d0-9b1a-9f1339c6be21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d282d8b-32db-4828-a064-1da1b6fe6651",
        "cursor": {
          "ref": "cd35bf87-4199-4c74-8d83-199440b68a80",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "14a7c1db-ffb3-48a3-8e81-f58d3f687f82"
        },
        "item": {
          "id": "3d282d8b-32db-4828-a064-1da1b6fe6651",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "d136647f-a0f7-495e-9a3e-a958c3900b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bce2b49b-ff3b-4b12-84fb-2541b408f2fa",
        "cursor": {
          "ref": "c09b729e-9080-436e-b5c4-c17ea0e8e8ca",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b3957311-3e43-48f9-ac5f-544e2d0f41c5"
        },
        "item": {
          "id": "bce2b49b-ff3b-4b12-84fb-2541b408f2fa",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "17bd0b3c-0fce-407f-aa29-a00bdf181aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e6250c-18fc-4395-96c2-cb851ded4394",
        "cursor": {
          "ref": "2c41f684-668c-4628-bcfd-bdb07f0f4fa1",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "78233643-9584-4071-8a4a-d65aba1d8486"
        },
        "item": {
          "id": "b9e6250c-18fc-4395-96c2-cb851ded4394",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "4808c3e7-d2fb-476b-afa0-68f90a4caac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b50a1a0-dc2a-4924-8c11-6ad3f0b6c3b9",
        "cursor": {
          "ref": "fa84d6f6-3f5d-4a9c-8b8c-e5e4f3523da8",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c86f3b9c-60f3-4357-9440-9e4c8acf628e"
        },
        "item": {
          "id": "0b50a1a0-dc2a-4924-8c11-6ad3f0b6c3b9",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "4c4cc18b-fb5c-4336-953f-c8de4a3704ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4cef616-8b6d-42f3-b851-be378b28be7c",
        "cursor": {
          "ref": "decdbcd4-11f8-4a34-a711-730b74b4c502",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "832b9540-eb56-4098-babc-87b5b3f497a8"
        },
        "item": {
          "id": "b4cef616-8b6d-42f3-b851-be378b28be7c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "83e57fa7-3d61-4e15-af47-a2368f9654cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd51fbab-693a-4298-a11e-c9bd3939acb9",
        "cursor": {
          "ref": "26ddc657-a0da-4fda-ac3e-0449ae606a16",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "aa05f447-32f8-4a16-8009-5c82ccdd9c46"
        },
        "item": {
          "id": "cd51fbab-693a-4298-a11e-c9bd3939acb9",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4295a766-c9d5-4a78-8e78-9f7dd6d02c7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ca29a74-b256-4494-bc3a-9b1ba6365db4",
        "cursor": {
          "ref": "f3510b6c-e05a-407a-912b-d8c2c57f361d",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "c159124b-4ea5-46d2-bd51-9fc6ed8cfe91"
        },
        "item": {
          "id": "4ca29a74-b256-4494-bc3a-9b1ba6365db4",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f39fea0e-e1d6-454f-ad22-45288adbe1b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f7b1826-21f6-4618-9c65-395af1da877c",
        "cursor": {
          "ref": "a70632a8-f61a-4c4d-ac40-cec4f4e13adb",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "75a2d25d-f04f-4a41-9e0a-fe5045953d6c"
        },
        "item": {
          "id": "0f7b1826-21f6-4618-9c65-395af1da877c",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d37e5814-bc6a-4385-a910-4b3e7b2fd543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f007a32-8b9e-42c4-9793-e193d649a8fe",
        "cursor": {
          "ref": "37a7a76e-3244-42ff-b6e4-4a7a85c7026b",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "6250061f-7c1d-45ba-92c3-4bcc18bb2366"
        },
        "item": {
          "id": "2f007a32-8b9e-42c4-9793-e193d649a8fe",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "c6b0793b-b8da-417c-80ad-140395718830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "626e676e-d14a-4111-8362-71f77d483b3a",
        "cursor": {
          "ref": "1fcd2667-a796-42dd-8e4d-505b2147a163",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "1cb55401-4494-47a7-b0f9-3873af776d32"
        },
        "item": {
          "id": "626e676e-d14a-4111-8362-71f77d483b3a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "6fc0f9c7-8393-458c-a61f-3d3245e1e021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07833892-c981-4237-87e8-b095219afd71",
        "cursor": {
          "ref": "e2af562a-a2db-4858-b308-23b4a6ce1db2",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ddd597c3-e4ea-43fd-b4fc-f6245f5689d0"
        },
        "item": {
          "id": "07833892-c981-4237-87e8-b095219afd71",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "4f9c1c38-e2a1-4097-80da-baedfb6f7762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecc6cfd1-3999-4438-b5f9-636b70d00277",
        "cursor": {
          "ref": "7771501d-2524-4ace-aa60-0b18e2ca8d57",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "0c316c6f-c188-4623-be82-c5c19be9b4da"
        },
        "item": {
          "id": "ecc6cfd1-3999-4438-b5f9-636b70d00277",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "5e8be583-b76a-4005-94f5-fde9814099a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6510f062-e921-449d-a086-cee77610a2bc",
        "cursor": {
          "ref": "7f0d9c39-41fb-408a-897c-43ea94feec26",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "242eec70-3b9d-4bec-896b-a3bd1fbf998c"
        },
        "item": {
          "id": "6510f062-e921-449d-a086-cee77610a2bc",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "fa007ba5-6b63-42e1-ab10-299c1622bc2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41e925b2-0b65-406c-9e31-a0986cb4d6cc",
        "cursor": {
          "ref": "4e3f49a1-f2d8-4f92-b44d-925436248a8b",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "fb083efb-5aee-45b8-99bf-64e809603dbb"
        },
        "item": {
          "id": "41e925b2-0b65-406c-9e31-a0986cb4d6cc",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "76569229-5edd-4dbf-8217-13bb980b1132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d8b513-c691-495a-99e4-b48b4a80dde6",
        "cursor": {
          "ref": "ad72decf-8788-4f4d-963f-a5b7c77704b3",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "d97dad23-145f-422d-b187-8492a077ae92"
        },
        "item": {
          "id": "47d8b513-c691-495a-99e4-b48b4a80dde6",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "606bcd61-4c11-4488-82e5-aa2f4ea8c4da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecddf0f4-58ca-47c1-a953-a200d3f575ec",
        "cursor": {
          "ref": "fde77e66-2437-47d4-83bb-63d7b7e9bf54",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "08456458-3f7a-43da-a75c-1b100cfd8875"
        },
        "item": {
          "id": "ecddf0f4-58ca-47c1-a953-a200d3f575ec",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "4b32a959-8d01-4967-a9f6-ef2cde30916a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b043fcf-4034-492d-9d2b-c21773e65d8c",
        "cursor": {
          "ref": "fa19a961-0830-4d1d-98bb-fece6e675d62",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f34d09d6-c021-451e-861f-0da869976711"
        },
        "item": {
          "id": "2b043fcf-4034-492d-9d2b-c21773e65d8c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e9b4f22b-ade4-41d5-af55-e84eb78cf93d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1339ef5-d48f-4fec-8f09-8cf22c2121c7",
        "cursor": {
          "ref": "b7267d73-64c1-455c-b693-0e0717441071",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e3e67b96-0a0b-4014-bbc5-ff7fda5be10b"
        },
        "item": {
          "id": "b1339ef5-d48f-4fec-8f09-8cf22c2121c7",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "0516540e-8ad7-49df-9011-19d79d370625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeeeae8e-2057-4f80-994d-7294482de9d1",
        "cursor": {
          "ref": "5897d1c5-9c38-4e22-b563-8bf72ea3289a",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b0fe4e8d-63bc-4965-9586-b0057ab4fffa"
        },
        "item": {
          "id": "aeeeae8e-2057-4f80-994d-7294482de9d1",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "5bd1e6c1-0504-4a6a-82c2-9252faf6aeba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f1fbc9a-3304-474b-9fc8-0ab05d5d2813",
        "cursor": {
          "ref": "fa328197-2fc1-439e-877a-9641340996f5",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "7d8637a2-d14b-45ee-accf-91848bd21a04"
        },
        "item": {
          "id": "6f1fbc9a-3304-474b-9fc8-0ab05d5d2813",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c3b2b5ce-7310-4d19-ac26-379e018e748c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec5de12-89c7-4b5b-9d1a-378be9b5cc11",
        "cursor": {
          "ref": "905173ef-ca65-4466-80aa-c96da5145cbf",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f639256b-2367-4179-a30d-53a2a75f977d"
        },
        "item": {
          "id": "aec5de12-89c7-4b5b-9d1a-378be9b5cc11",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "fcef1610-b062-4640-8b4d-374a82a5396b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca952426-b5e1-4631-9b78-92529a58caac",
        "cursor": {
          "ref": "4e7936b3-ca2c-4c44-8946-9aa94071c871",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "ebba22d3-12f4-4145-87ac-56f2fd00b5c7"
        },
        "item": {
          "id": "ca952426-b5e1-4631-9b78-92529a58caac",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "58c10fb5-0212-4128-b822-49996cc2f864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb6ae40-eb33-4dc3-b825-82eef78c334f",
        "cursor": {
          "ref": "5777ae2e-5682-419f-aa0d-1be805ff8b93",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "cf09a45f-fa68-4f7e-8350-076b7c8a9d8b"
        },
        "item": {
          "id": "edb6ae40-eb33-4dc3-b825-82eef78c334f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d3299da4-785c-484d-b5c2-15550d69df31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ee424a2-80bc-4019-aefa-5e350a657265",
        "cursor": {
          "ref": "229556b8-2ad7-4e6b-a9b6-b817d95d2c40",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "5fe36ef5-da3a-437d-85c4-34134bf75af8"
        },
        "item": {
          "id": "8ee424a2-80bc-4019-aefa-5e350a657265",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "bcf07a61-2ea6-4f38-ac6c-36eb0f00e563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb63c59-3642-482b-a056-f3ae9101dfc7",
        "cursor": {
          "ref": "edc5ddb2-ab0b-4e71-8cc6-729c9c6b529e",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "25b26def-9439-4bd3-a200-a2da942e2719"
        },
        "item": {
          "id": "fcb63c59-3642-482b-a056-f3ae9101dfc7",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "6e083667-b7de-4a2c-997c-71cdd00a404a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff89813c-b46e-44f4-9002-51626dc78c7a",
        "cursor": {
          "ref": "4cc96d1d-77fd-48a8-8ee6-3d75a993413b",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "6694d684-83f9-47c3-a6d3-2e56c356d89d"
        },
        "item": {
          "id": "ff89813c-b46e-44f4-9002-51626dc78c7a",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "005fbb3a-4379-44da-b65b-c6c788da0b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d547b2-c8ec-4161-83b2-96609b69a548",
        "cursor": {
          "ref": "ec455e96-bcae-4dd6-bb49-949ef2320023",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a4957ca7-39f8-4f77-b872-a037e7f3ec9b"
        },
        "item": {
          "id": "78d547b2-c8ec-4161-83b2-96609b69a548",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "e830daa9-164d-4955-b8f0-e928cdc4a4a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb549cbe-a648-4703-b1d5-d4fd388ce00f",
        "cursor": {
          "ref": "bae03992-7e34-426b-a29d-057a530d2266",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "68d3b3e3-e593-4cf0-97df-651a75103411"
        },
        "item": {
          "id": "cb549cbe-a648-4703-b1d5-d4fd388ce00f",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "64acbef1-0a88-4dbd-bd34-c9056844c309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de127e6a-1cc0-4eda-8629-7e7db04bfc7f",
        "cursor": {
          "ref": "f60f7db3-c121-470a-ba66-86d31eb01281",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "7178d246-bb39-4fb7-a3aa-dd7d4d877e1f"
        },
        "item": {
          "id": "de127e6a-1cc0-4eda-8629-7e7db04bfc7f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "c087428f-c7b4-4e14-af27-7a3e57c78034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f33e4778-e729-4d46-9f6d-734001df4a51",
        "cursor": {
          "ref": "1e84af1e-d7a2-4cbf-9684-5ab4d089879d",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "a5aac117-1dd1-4627-ac2c-bdf4e7336361"
        },
        "item": {
          "id": "f33e4778-e729-4d46-9f6d-734001df4a51",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "ff2a12b4-7364-44aa-b9c1-e0884830fef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "642a36b9-8b00-47db-af43-499f634a1748",
        "cursor": {
          "ref": "17136f97-a5cf-4ed2-bd07-e64f7a9e4ffb",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "1d8c8cb8-9a97-49fa-a8b1-526016f678ab"
        },
        "item": {
          "id": "642a36b9-8b00-47db-af43-499f634a1748",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "08edce51-8474-4c56-8d3e-c5f4149f209a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a83629-6782-48e4-b81e-d23953127cd9",
        "cursor": {
          "ref": "68885f54-0f8a-423a-bb88-1f236ed2d8df",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "499151db-3b37-4d44-a4bb-c7f9a1696319"
        },
        "item": {
          "id": "c3a83629-6782-48e4-b81e-d23953127cd9",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "276868fa-3c87-432d-91dc-5342873333a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc82131-8a65-4826-996b-40c643e276e6",
        "cursor": {
          "ref": "d93573f7-f345-4602-a6f2-6ce5b6aff7ec",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "fbec0b91-baff-44d6-95aa-79e2f3636a49"
        },
        "item": {
          "id": "3bc82131-8a65-4826-996b-40c643e276e6",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c2155cb8-b461-4fc5-884a-79cf05311409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd8f34ce-ee07-46de-963f-fdd5110a85b1",
        "cursor": {
          "ref": "94c6c790-3adc-4295-a949-454a82b7d1a9",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "1bf940d8-15ba-4bdf-aede-227181441a0e"
        },
        "item": {
          "id": "fd8f34ce-ee07-46de-963f-fdd5110a85b1",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "4ca4bc14-00d0-4a38-97a7-46e846ab0c5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c6569f2-a920-4772-867a-1efc9fb648c0",
        "cursor": {
          "ref": "a9c10c74-a062-4a69-bb5d-4a6cc01500d2",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "fb8e20db-9fa1-441f-96c9-5dbe18f67c47"
        },
        "item": {
          "id": "9c6569f2-a920-4772-867a-1efc9fb648c0",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "cad3d4b5-b6eb-4ea4-8c95-f3ef989e434b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "931618a8-c90a-46c9-8405-fc8fc5902730",
        "cursor": {
          "ref": "592f17a5-8b83-4434-9ee5-62bb2ac22c2b",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d213831c-3e23-4481-ad17-e929f39d04d2"
        },
        "item": {
          "id": "931618a8-c90a-46c9-8405-fc8fc5902730",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "646a0ef1-c0a0-49cd-b5d8-1973730b5175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d7cb360-49f1-47ea-abec-b2947e3c1193",
        "cursor": {
          "ref": "fbe10fad-bcd3-4a19-830b-9410073139ab",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "057d15a8-b2d6-48bc-af56-417794319b07"
        },
        "item": {
          "id": "9d7cb360-49f1-47ea-abec-b2947e3c1193",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "db1691fe-6081-452a-8314-8309abe0ddc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3964b012-0c7f-42b2-9b2c-1c459b5c4729",
        "cursor": {
          "ref": "0dac3dd6-9d3f-429e-9e3d-962be6f7a9c9",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "83e096db-b374-4210-8603-fa32105556e2"
        },
        "item": {
          "id": "3964b012-0c7f-42b2-9b2c-1c459b5c4729",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "5a920a16-fad0-4981-aa99-9a04c5cc3d32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bb1913f-f3ca-424a-a243-de96f9d6335c",
        "cursor": {
          "ref": "05cba232-f0b6-4a35-9f87-18882fea61a3",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "56898599-bd74-40ed-9859-70dc0de636b5"
        },
        "item": {
          "id": "5bb1913f-f3ca-424a-a243-de96f9d6335c",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "28ba9bb7-7358-4067-b873-77503f82b754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4fdc39f-0300-4cc0-8e37-2786c200f963",
        "cursor": {
          "ref": "61385b50-d3cd-4e08-93f5-d079b4eee02c",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "ac62765f-148e-41b0-afce-735e696b1567"
        },
        "item": {
          "id": "d4fdc39f-0300-4cc0-8e37-2786c200f963",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e36302c2-5735-47de-9276-aca1cf2165d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ddc8548-7367-45af-8736-10c118a37928",
        "cursor": {
          "ref": "d1cee03a-8c89-47f0-8726-e507b5c89850",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "c6fdf89d-e011-4cde-b9fe-c43d88805949"
        },
        "item": {
          "id": "6ddc8548-7367-45af-8736-10c118a37928",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "59685021-4cca-4f0d-9611-cfa620b5ada4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6ba9a74-1003-4389-b254-350e3a589504",
        "cursor": {
          "ref": "978b8b56-db54-47e9-b140-236b4a1526c9",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "a8b127c9-f5c2-4ca1-929d-e6ff8a43154f"
        },
        "item": {
          "id": "d6ba9a74-1003-4389-b254-350e3a589504",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "aae30e7c-963c-4ce8-aa15-94978a2776b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ff219b-ac68-4276-9d40-5a148dc7c50b",
        "cursor": {
          "ref": "dafd8894-f7c2-4dc4-bbfa-8d54e57f7b66",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "9dc31399-2c33-49cf-99c3-e40c679e1023"
        },
        "item": {
          "id": "99ff219b-ac68-4276-9d40-5a148dc7c50b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "af81cf47-89cc-40e8-bab3-724a2c04e415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "740e24ff-2014-4071-af7a-bd6aa623a01c",
        "cursor": {
          "ref": "1f10155d-6a47-4146-a603-7f1caea95e74",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "eb88174e-34e1-474b-ada9-a9ecafa2091d"
        },
        "item": {
          "id": "740e24ff-2014-4071-af7a-bd6aa623a01c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "bb4ea1a5-6ed2-4a23-b41f-94f36dab5b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a3f8a18-8cf2-49cc-95a4-f11b89b43a31",
        "cursor": {
          "ref": "7e7c08dc-6ae3-4a20-b8cb-ca82b493abd6",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "38a4ab20-1c40-4bed-aa63-14600eb677a1"
        },
        "item": {
          "id": "1a3f8a18-8cf2-49cc-95a4-f11b89b43a31",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e2fe5e73-64ab-4082-9769-24024e70fcb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c4bfb5d-baba-44b1-a951-5be91f6a7aab",
        "cursor": {
          "ref": "e2f3abee-be7b-4c28-8e61-9327a13f6a34",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "e4a234b5-0da5-455b-b77d-aeb817c5f86d"
        },
        "item": {
          "id": "8c4bfb5d-baba-44b1-a951-5be91f6a7aab",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "eec9f817-318f-4dff-9f1a-9d90595404ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc9d92a-6ce9-48de-b0c4-bc6db8b6c745",
        "cursor": {
          "ref": "dd44fd91-1627-4439-9e0e-fac187304882",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "08b406e9-f7dd-4d4d-8bc7-36f9377c4959"
        },
        "item": {
          "id": "6dc9d92a-6ce9-48de-b0c4-bc6db8b6c745",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "42f7d8e6-89fa-40b5-9264-225041622ad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "104c170e-5752-40ed-bd8e-0dd573b80fbc",
        "cursor": {
          "ref": "1a7e0161-5a3c-4a74-a99a-11ccbdc5351e",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "841e15e5-0b15-47c7-91f7-65605ec51701"
        },
        "item": {
          "id": "104c170e-5752-40ed-bd8e-0dd573b80fbc",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d68f71dd-cb7d-4585-ae57-fc67eaac445e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0ccb2ed-d768-4368-adae-ed7db3ac9e17",
        "cursor": {
          "ref": "7cb1b799-37d4-4ac2-b411-62a100cb6695",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "952894e2-6c85-487e-adaa-628c6243fdfd"
        },
        "item": {
          "id": "b0ccb2ed-d768-4368-adae-ed7db3ac9e17",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "384836ea-97e3-4b19-ac9a-020d3d651a1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5b7df84-d71f-4ee2-a124-7fa284c125d5",
        "cursor": {
          "ref": "e42392f4-d71a-45ef-b34d-38753203da6a",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "1765e57a-bd7d-4632-abf3-1b0d9f7389cc"
        },
        "item": {
          "id": "e5b7df84-d71f-4ee2-a124-7fa284c125d5",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "1bd6dcb9-8486-48e6-88fe-c394d6a0f7a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b068fdd5-09d3-4df8-a254-f63a9ec1cae7",
        "cursor": {
          "ref": "f42b8c01-f785-4204-8b61-67c5dfda9276",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "74490d23-ed4e-4900-bc3a-175804b4f1e9"
        },
        "item": {
          "id": "b068fdd5-09d3-4df8-a254-f63a9ec1cae7",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "3e9f1f95-a7bf-42fd-a015-10e535007297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44118467-a637-4a2b-9b17-7b5972363a92",
        "cursor": {
          "ref": "943fc79a-ed6a-425f-8fef-db8f5b3ddc0f",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b49dfb22-ee24-4341-b33d-34fbb4ebcd03"
        },
        "item": {
          "id": "44118467-a637-4a2b-9b17-7b5972363a92",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "ca50e66f-c953-4507-9327-271da0d3544f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce4a005f-a8eb-4b7a-9eb7-4d2bf591babd",
        "cursor": {
          "ref": "6085ae3d-69ef-432a-971c-37115d3eecb3",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6d2e163d-fb47-4e00-b9a8-b7c317374681"
        },
        "item": {
          "id": "ce4a005f-a8eb-4b7a-9eb7-4d2bf591babd",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "7bf5a6b3-2d23-447f-bf19-16c24f60316f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa2abd0d-6dd8-4f48-a9c5-bb7a2ec3e36d",
        "cursor": {
          "ref": "49ee3fc7-c2da-41d5-a92e-b18a36c2482f",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "22254498-2b7e-44e5-983e-53a77c2ba681"
        },
        "item": {
          "id": "fa2abd0d-6dd8-4f48-a9c5-bb7a2ec3e36d",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "246d9425-af3a-4de5-8287-cee3b48fb540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3971b5ef-eba4-4432-b04f-8a540753c9c8",
        "cursor": {
          "ref": "3600fe5a-df6a-403d-b8ae-5594fc24c838",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "17512d71-59fd-4424-9030-99d6b7f3918c"
        },
        "item": {
          "id": "3971b5ef-eba4-4432-b04f-8a540753c9c8",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a6e1a367-05aa-492a-8a1c-6d08b79aee79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9acbd506-7813-414c-a9ac-37ea6e9deacb",
        "cursor": {
          "ref": "2fe5bb86-13bd-4abf-b033-83029019b1de",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "54faa3ef-9131-4669-8a47-21e91c1b71af"
        },
        "item": {
          "id": "9acbd506-7813-414c-a9ac-37ea6e9deacb",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3e25d266-0f85-43cb-a711-b73e4b83b104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c9c9901-3733-4d05-88cb-23b32b9f03bb",
        "cursor": {
          "ref": "81a674ee-fabb-426f-a321-02ecf012f840",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "5b37a3ae-5d7c-481f-a05c-57382b66e3dc"
        },
        "item": {
          "id": "9c9c9901-3733-4d05-88cb-23b32b9f03bb",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c4d94063-7b5e-40d1-b194-38d91a98fe08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff0c60f-e628-4bdf-8d29-c7a78d4eb3ab",
        "cursor": {
          "ref": "d6e62a9c-133f-4097-824b-f7bcb05ea965",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a2ccab40-4cdd-4b74-9092-57f4d28c790b"
        },
        "item": {
          "id": "2ff0c60f-e628-4bdf-8d29-c7a78d4eb3ab",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "4012a9d7-921a-42d9-858f-f9b380f6f888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a69919-70a2-47c9-a805-2a19382f7640",
        "cursor": {
          "ref": "85a15d89-9c26-4d4e-ad7b-2a8ad220bf79",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "369eb446-3f0b-4368-b9c2-d98f51bfd7fc"
        },
        "item": {
          "id": "a3a69919-70a2-47c9-a805-2a19382f7640",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "4ec3372b-800b-4c99-9c7e-a9c0bd24cbb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4530308c-a154-405b-ae28-929c7d10f277",
        "cursor": {
          "ref": "a318f750-066a-460d-a091-c1736550de91",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "9648f2a6-1c36-4f99-874a-267773c2ae34"
        },
        "item": {
          "id": "4530308c-a154-405b-ae28-929c7d10f277",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "fe8af2a2-9940-49e5-a3df-b77e8c01d125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa647754-dca5-418e-8efd-e6e8a8905a3a",
        "cursor": {
          "ref": "c8022923-cc3c-424e-a34c-9d96ca2abc94",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "f9905de3-8bfe-44de-89de-51803f564a48"
        },
        "item": {
          "id": "fa647754-dca5-418e-8efd-e6e8a8905a3a",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "0cbb6bf1-117c-4cb6-9d69-e338769618ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee6e4ee8-ba8a-452a-b74d-a94ff8950e1c",
        "cursor": {
          "ref": "3086361c-b3ff-4dc5-9a9d-7b7d515f4315",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "397becfa-2752-4cb6-a6e8-e884d1559afc"
        },
        "item": {
          "id": "ee6e4ee8-ba8a-452a-b74d-a94ff8950e1c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "4b284373-84c6-4025-9a20-ddcc88324767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c27bdaf9-646b-40f8-afff-4a12093ebc48",
        "cursor": {
          "ref": "ed6a61c5-1f5b-485e-841c-fed79fe8c8a6",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ba8a113d-5af5-42e8-b636-70ab787e2e0d"
        },
        "item": {
          "id": "c27bdaf9-646b-40f8-afff-4a12093ebc48",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "1b4c6886-bd70-490b-811e-a1724d09a360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e98c7871-eade-406b-8846-d96cd9be775f",
        "cursor": {
          "ref": "80b4a8da-4817-4f2c-bcb4-e73016424863",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "c1dc7252-4b45-4ac8-b81d-27316eb20001"
        },
        "item": {
          "id": "e98c7871-eade-406b-8846-d96cd9be775f",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "75701352-39ca-47a1-8ac3-25621c158123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0201570d-ce0d-459e-b12f-a10a466fdac9",
        "cursor": {
          "ref": "7cefb224-512f-4963-8471-1996a18a7e73",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "0745a487-04af-4da8-9191-8cbc185095cd"
        },
        "item": {
          "id": "0201570d-ce0d-459e-b12f-a10a466fdac9",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "67eaa486-002b-47c1-a6db-ab839e51c48f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bfbfcb3-a3c4-409e-8c76-08484663e77a",
        "cursor": {
          "ref": "ec109b25-6cd9-47de-88ed-8dfa5b2ad067",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4e0b3177-c99c-4fb6-97b8-81746ce2e915"
        },
        "item": {
          "id": "7bfbfcb3-a3c4-409e-8c76-08484663e77a",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "31180471-be25-4e12-8d01-e8062a08b3b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ebecd13-f833-4709-b427-5ac7788373c0",
        "cursor": {
          "ref": "b208fbb4-682a-4811-9a3f-3a8a3616ecec",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ba9a2a41-356d-438f-91d1-471e780f69c0"
        },
        "item": {
          "id": "6ebecd13-f833-4709-b427-5ac7788373c0",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "81c580c7-6caa-4f89-b36c-ed01208854b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a260e95-12b4-4408-9302-ef9f27371720",
        "cursor": {
          "ref": "5c7f0244-6971-4dfc-83ad-628eabbecd27",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "5e0a0964-1819-4a3d-99e7-4ec00416a568"
        },
        "item": {
          "id": "2a260e95-12b4-4408-9302-ef9f27371720",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "4c47aa40-b7e6-434f-8865-168742c65d54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cef3b462-f03f-43a2-9f0e-d9bf3ed0012f",
        "cursor": {
          "ref": "7651505f-12a0-43dc-a764-3ea489355af5",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "9a15b27c-cffa-4ba8-9420-52e7f5ae649d"
        },
        "item": {
          "id": "cef3b462-f03f-43a2-9f0e-d9bf3ed0012f",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e6a769e1-6682-492e-9c2d-bfdb1b7c8bfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c4763bb-949c-4581-b35f-b4c63f4f5080",
        "cursor": {
          "ref": "36d08498-bceb-47fb-b41f-7344470125f5",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "e68c447d-5bd0-49ad-82cc-48b07c9bd2c1"
        },
        "item": {
          "id": "4c4763bb-949c-4581-b35f-b4c63f4f5080",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "dae6cdaf-4e56-4c2c-ba84-2787495fd5f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9910b40-6941-44c3-886a-f19bacf8bee9",
        "cursor": {
          "ref": "088acf87-dabd-428c-870f-1e582e140c90",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "17ec1ebc-978f-479d-a3ff-9214e79b3300"
        },
        "item": {
          "id": "f9910b40-6941-44c3-886a-f19bacf8bee9",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "cc407869-bca9-4c58-9761-0496387de7bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "251d0aa3-631b-4bdb-bb98-3a24cdd2c4a5",
        "cursor": {
          "ref": "d7eb778c-9d2d-4a3f-963b-4340d51ab7f0",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "1b2f32b5-6c69-429d-8f7e-1cc40f72aaad"
        },
        "item": {
          "id": "251d0aa3-631b-4bdb-bb98-3a24cdd2c4a5",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "9bb8bf90-17b3-4e5a-b397-e232ca1749c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f185570e-157f-4eac-a2d2-93ca5e5f237c",
        "cursor": {
          "ref": "f43b9fcf-20e0-4e57-8537-986ecd02b7d4",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "9c3f65c7-ae91-492e-a778-46a0d5190954"
        },
        "item": {
          "id": "f185570e-157f-4eac-a2d2-93ca5e5f237c",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "cb935282-cf51-4ce3-8386-22063f8e8592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77183498-c46c-46fd-86d2-8e7e05d2caf7",
        "cursor": {
          "ref": "e4f3db8c-a403-4444-869a-2db7b867a582",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "61c3d377-6640-46d0-9d7f-77f7d8620508"
        },
        "item": {
          "id": "77183498-c46c-46fd-86d2-8e7e05d2caf7",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d27a1036-8fcc-4bd4-a525-bf016490343d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42aa14ac-a233-4f47-b9b7-b28e45d8e9ae",
        "cursor": {
          "ref": "c3006d70-90d1-4f9d-9dae-adfc8d9c163a",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ec420339-5a2f-43f9-b6dc-5e0c50ec5358"
        },
        "item": {
          "id": "42aa14ac-a233-4f47-b9b7-b28e45d8e9ae",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "754a6b84-58fc-4ea0-98c9-9b4f3626aab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bbd31d4-681b-4043-83a8-c369c0be4a04",
        "cursor": {
          "ref": "f267ceec-12b5-4da7-abfb-014284be3745",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b630f905-40cf-4261-ac3c-d61538558365"
        },
        "item": {
          "id": "0bbd31d4-681b-4043-83a8-c369c0be4a04",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "8fa3ed92-6108-4d5a-a4c1-b49bf0bf09a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f9ab5d-2951-4bad-9be4-1dfd12c314e9",
        "cursor": {
          "ref": "2fa21aa4-4449-4477-bc74-5150b76b5f0b",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "6227b4b0-c126-4da8-8575-3cfaf0a78101"
        },
        "item": {
          "id": "d7f9ab5d-2951-4bad-9be4-1dfd12c314e9",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "069e9e7e-cd45-43aa-a13f-8b727a97c880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "290164ae-4c3f-46d3-93df-71b14479a26e",
        "cursor": {
          "ref": "22ada0ce-6b30-4500-9d77-fe88683e896c",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "fcf4c289-2df8-42e9-ba98-b6bc209a06d8"
        },
        "item": {
          "id": "290164ae-4c3f-46d3-93df-71b14479a26e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "2d2dad5c-661a-4342-a434-59ea5d205bf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1107208-15ab-4b34-8538-ab088900cedf",
        "cursor": {
          "ref": "b609e782-93fc-4af6-b95a-cd941a498eb1",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "02aec93f-aa14-47e1-893c-7d3a00344609"
        },
        "item": {
          "id": "c1107208-15ab-4b34-8538-ab088900cedf",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "c5c4e5d9-f0de-406e-af70-d92e95f81227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf25b3f-cbff-4996-8fb7-f61a4af49ff6",
        "cursor": {
          "ref": "21266be0-796f-4709-a5e0-c0d9dc095812",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "77850597-5286-41e9-afc6-950ceb95e99b"
        },
        "item": {
          "id": "bbf25b3f-cbff-4996-8fb7-f61a4af49ff6",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b653b079-2e23-49a8-9085-51c489660af4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cdc4857-b60e-484e-b09d-d59ab9a38c09",
        "cursor": {
          "ref": "1baf9bed-13cb-4984-89b6-54011190d129",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "0426c953-9ffb-4f5c-9db5-b7fed572e0ba"
        },
        "item": {
          "id": "4cdc4857-b60e-484e-b09d-d59ab9a38c09",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "8290f002-71a5-4c59-b76c-3e11c2afe8f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2dcd8e8-5a11-4785-8135-d9d9189c5e38",
        "cursor": {
          "ref": "c78ea470-7424-473c-91fa-041e928bc106",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b3ad3a56-b047-4ccb-aab3-ba886ebbcc15"
        },
        "item": {
          "id": "e2dcd8e8-5a11-4785-8135-d9d9189c5e38",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "53f78e42-70ea-4e18-985e-aa5b546c5d9e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98eb9e61-c53b-4256-b3b7-fc77ddb8f690",
        "cursor": {
          "ref": "105e0c62-695e-49a2-bce9-443e10fead5b",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "685bef79-730f-47dd-86f9-823cd1ad6082"
        },
        "item": {
          "id": "98eb9e61-c53b-4256-b3b7-fc77ddb8f690",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "dba25314-835e-4e19-bd91-e5277c986124",
          "status": "OK",
          "code": 200,
          "responseTime": 2201,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ec86fb-43f1-40dc-9b90-6fbabe4feb10",
        "cursor": {
          "ref": "018e2bfd-e986-4f63-b677-7deaaf4d2e45",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "466767e3-e200-4be1-9159-5685fbcc266d"
        },
        "item": {
          "id": "08ec86fb-43f1-40dc-9b90-6fbabe4feb10",
          "name": "credentials_verify"
        },
        "response": {
          "id": "996eaca1-16ce-456b-a5cd-c3a456d73e1d",
          "status": "OK",
          "code": 200,
          "responseTime": 2607,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a9d795e-6e5f-47bb-aaed-cc77ec0ba3bf",
        "cursor": {
          "ref": "dfe45bd7-3d86-4fdd-a5aa-ae99a3a9557a",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "77ae232c-05ad-4496-a075-601e99d8534e"
        },
        "item": {
          "id": "2a9d795e-6e5f-47bb-aaed-cc77ec0ba3bf",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "39dd6f63-29b6-4e44-8fa1-30a3e065917e",
          "status": "OK",
          "code": 200,
          "responseTime": 2596,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "82e71f65-bc92-45d0-b19f-5a37ff8c3404",
        "cursor": {
          "ref": "38494e32-3b2b-471f-bf0a-4a0a181019e8",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0c589a2f-3b97-4f5a-b694-f3c329776acb"
        },
        "item": {
          "id": "82e71f65-bc92-45d0-b19f-5a37ff8c3404",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7e7f6e74-8c29-4ed4-ac4c-053f7014df64",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82e71f65-bc92-45d0-b19f-5a37ff8c3404",
        "cursor": {
          "ref": "38494e32-3b2b-471f-bf0a-4a0a181019e8",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0c589a2f-3b97-4f5a-b694-f3c329776acb"
        },
        "item": {
          "id": "82e71f65-bc92-45d0-b19f-5a37ff8c3404",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7e7f6e74-8c29-4ed4-ac4c-053f7014df64",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13d4705d-70c4-459f-b3f1-5bda817e2ac4",
        "cursor": {
          "ref": "efa25b06-3947-4919-a1a9-67d05d3a9bf9",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "6097cca6-eb69-492a-8ca1-c96c943ceffa"
        },
        "item": {
          "id": "13d4705d-70c4-459f-b3f1-5bda817e2ac4",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "160739eb-daeb-4cc9-bbf6-260567554264",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 102,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f0b8ed-3dd3-4591-96bb-a7fbcc2576af",
        "cursor": {
          "ref": "1bdb4378-ed02-4c7a-8bd1-d6bf4524b801",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "73ce6e82-69cc-4b3c-bc77-c58d43d25cb6"
        },
        "item": {
          "id": "10f0b8ed-3dd3-4591-96bb-a7fbcc2576af",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "0789db01-07c8-4a8a-b1ec-03f4cf64bdab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}