{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e1b72fe3-ee31-4596-98bc-e1675b500506",
        "name": "Clear Cache",
        "item": [
          {
            "id": "8c16298c-c2e8-4685-a158-5ad8bcb308e3",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b6a59be0-a8ac-4b47-a493-a47687ee1f47",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0a16758a-51dd-45af-9d24-c7f72812cc09"
                }
              }
            ]
          },
          {
            "id": "51272ea5-ce7f-4fac-a0f1-970151d92e44",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "27011093-6cbf-4a1c-967c-3ddea36ef044",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d9fb9d3a-234c-465c-8ad0-d980f86293a1"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c6ebb795-0165-4f06-bebb-b8125b1c1ef0",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "92c8275b-f7c7-4ae8-ab44-fe2fb4a9ec31",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b56b825f-978a-4164-91ab-7af08f10f436",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c841bd9-6a19-4509-8173-e15153b9365f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7bae7616-d986-44a0-bc38-20f94d64b2f0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "59d153a6-0179-4ba3-95d5-68416ddb0892",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1743aabb-29af-4334-b0c1-7378aa8ae29c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "912d8247-ccc4-48b7-b21f-7d00c14148f2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "192127cd-bf3e-45b8-aa11-e9ec42299f41"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "672549dd-c07b-4af8-901b-3bd1e92f02e9",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "293f8773-e35c-4b34-aefb-7f224af7ee16"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "01e0da41-8cc6-4f10-af5c-fd3e600d0528",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "182bd2b3-5a32-4ade-b2e7-bd3d269a6d3f"
            }
          }
        ]
      },
      {
        "id": "f25f6b5b-41ba-43b3-80bc-8f1ef47e53c0",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c612a61f-d753-44f5-b27b-2798ff835bb0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5deaf19e-240e-456a-b760-da03e91fcdcf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "49a13058-ef1a-4b9f-bd9b-3509a0915c25",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "931a9321-5a58-4c3b-b0be-a20fd107e87a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3a5fff7a-3db3-4831-a546-79026d6f6ca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5374c12-ae07-4b2c-a536-1cfee53ea310",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7371806e-accf-482f-aa18-dfb99d4d1777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "745d5481-1aed-4987-899a-af8598be3db6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "511af58e-d065-4585-b44d-3c5520fa3e37",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "affb899b-90fd-4298-b705-e305cc3afd23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6c2af56e-e1f5-46bf-b4d2-8c97df9dcbce"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ea7c49fc-a123-4898-8e57-3d26ee582f9d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "670b7ce0-f256-4954-bc2f-8121f6e468f5",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6d06bd1-3dab-4a22-b857-f5192fd01b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8583df66-3ff2-4911-b216-729845a4f4fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaea9969-9c27-4069-96ec-8414deb403bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b68e67ee-84ed-47ed-8ef0-cfe384bff174"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "db45a973-a358-400a-bfdc-81b71d9b1143",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fada43ff-9042-42a1-a50e-20c5465d0126",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "22a0a1c2-2783-4c32-8703-532c1bbf106c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "f817e2cc-83e5-42f8-bc5b-f092cbeba5dd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8da34b09-0242-47cf-a953-6a9c607ba80d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "a337c2dd-4add-4166-b43a-1d601838b645"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e629450e-3d64-4072-a61b-67cf08a14303",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e3fac2a8-97a2-49f5-8927-90cb1cf422e8"
            }
          }
        ]
      },
      {
        "id": "670358f1-dd9b-4a9e-87c4-64ed0d7d0e6f",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "486b7c6d-c615-4401-942c-3b36f8f36e11",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b0c82cb8-d7b8-4ab0-8504-84de814bc3e4",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "6f964184-6f73-4fc7-b7f7-500c5814f0ba",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6948d211-b0bd-4dbe-8a6a-1df6715f07f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53ecb026-d123-4ba1-a946-6348c28daa23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c8a3867-8b7e-4bfe-b5b5-abbc057e3f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e62c18b0-01f9-4a99-88b7-fc74a5af59e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2400d33d-5d4d-4ff0-b2c5-75a655a94844",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce3d6923-4ee9-4292-932c-b3a040795aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "541d4c7f-ddab-4923-baed-d71be0e61504"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad5f9ad2-2da3-417a-a812-f30de8c2b6c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "95f964f9-0239-4fd1-a06b-39702ee0eb4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "694fc0c4-7679-4493-8757-aa627382aeba",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c8cbc5c-9c45-4cfa-a6bd-2579ac53f400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7494d189-c0d2-4855-9067-d187fda06b4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e7130ab-9e83-4fe7-9e40-1969e9fc5cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "522a5e38-bc23-46eb-9d16-818f53bb1c3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb570cb5-bc36-442e-be9c-4266f0873163",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b73fa659-a18c-46ff-955b-410fcc88ab95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49b1f920-00be-4c76-9eb7-9092edbe504f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ccfa82c-cc66-4c14-a24b-c6321ffb7bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06c8ace0-6bbd-4039-81cf-8c33992a06c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92014dcb-5713-4751-94c1-525f33755b73",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "237c8a34-54a2-4517-94e8-cd3d1d1c7df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53c60e66-b737-494d-9639-b6b7e2c18e46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1832ae80-22e8-40d0-b8c8-a20cd9db1d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0bf4d1bb-b812-4d82-8ba6-6c7f4b2f3c17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a95ea94-98df-4875-845c-f5aeea3e74e7",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fedb2195-090d-4921-86a8-2af789da09f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f1b571e-10f8-4cda-bf59-f6e40d5eb4f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81f33f75-7776-4dad-8a5f-e14fc9fb9bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a36858b-466b-4ec9-b9b5-182964038e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a374380-dd87-4ffb-9a5c-b94c8de732df",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "185e7bba-bc28-424b-8416-eb71c06f8dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e43fe5fa-693b-406d-94d7-3480e6ae22b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4c5a5da-c371-4a10-9032-b55dcd77422d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "32bed7ec-6273-47ea-b26d-4c9defd83a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36fa15f4-6546-4be1-92a4-56da58ccecf7",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acdd1255-e39d-444d-b711-5c074b5f7ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b088822-9051-41d2-acfc-3d2f40bdee0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52e9ef11-9300-448c-9060-04877848c2ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9af2944d-6bd2-4e3a-af44-4c13d115dc85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e73400-3c18-43f0-82d4-346742375364",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c46f63c4-5b5e-4c11-947d-37beef1583fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bceffd4-4f09-48f3-a8eb-c9af428c228c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c0d25ef-4a67-4821-8a02-3bf44b9b482f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67be4f8a-e382-47b2-b889-ca0768b38c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6b1c6e8-1137-4f23-9be4-4a816767fc4b",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9077181-1d17-44da-bf39-180d46840055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6ba8845-ec66-4ec7-ae4d-506f4efddec9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e86a18c-f8de-4f1b-817b-65faba2bf149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b8025cb-cea8-4ef7-84ce-520dec9b31b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5561b629-6397-49b0-89b5-f24f61745d2c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5474e965-89c9-4b63-8946-7e3c48b987ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5c47bc4-321c-490d-97e5-ed50718c86f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14360f4e-9cec-4bc0-be34-0886c4cde237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "98aa45b1-e9bd-4c3d-b253-9c5f4fa34e68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cf63b90-6720-4b99-bf39-a930ca7f7e2e",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc8e7e5f-f187-439d-a9d6-3b3f471e4076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37defe05-da8a-4c72-971f-1a59e9def744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e0a27c5-4413-4f82-9cfe-8823384e6b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "350875ce-1800-446f-bfe3-5cc357e083f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c728a546-5714-446d-b56a-60578163145c",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fea11e7-6d0a-4728-8e40-a9770cea77a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f3d04e6-a99a-4545-a3af-4b33801c38f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa9e5473-fcab-479f-ac34-09e095352972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "296adb04-b139-425b-b3a1-59184b7ca3a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceebb912-576c-4588-a34a-1b049dd631e5",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "426df22d-40b0-4d03-9e76-b630b6d8fba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6350ee48-1ad2-4c77-9ef1-9d1f03a1153c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4315c8b-f471-4b4c-8210-05d02d0bd0fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33cf0439-6139-481f-861a-2958221be633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1574e11b-fba2-4f66-8db6-c4715694e60e",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e45b82e6-d4ff-45d8-9ddf-c5eadb1d39f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9d5820e-6071-4035-846c-85dfc2e07ffe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdeeac1f-87ca-4fa7-bdff-ade008de881b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d15b992-7bf4-4df7-a432-3de2ecaf00c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5499c734-40df-45dd-9b45-3acbd17c3e78",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea23cf88-9fb8-4db8-94b2-5415eaf880e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f33519bd-f7f4-49f2-91e3-d549dacb2af3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17f80fa8-013f-46d7-aae5-ed04c73e0783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ed685e1-3b9f-4c0e-ac5d-b9229f4b3e7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e533f297-56e4-4bf7-93fc-c93022476f41",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc7ab8d3-7465-47bd-a32b-581b4975628c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5997e6d-b602-4e17-abd3-3744a1901851"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab442f7-e607-4d5b-a4de-1389df789109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "38a93eb1-dd92-4ce8-bb8a-b554e1432341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "033ba019-5648-4f6c-9627-3717715546e6",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee00a47-b8df-42bf-a2a7-9ff689900443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c5e6307-0bf4-4b3f-a0a2-19ae53500d8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b4453de-b6a5-4144-b387-6022a4ebe119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d5a7d84-e302-42f7-8b35-0ff5c7c4482a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84871721-0900-4cc5-9a74-b29d9cf8b316",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47568d94-a565-4fae-8ccd-daef88236831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e009b5c2-d0a7-417b-a5a9-5cdd38b1d193"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c615e80c-4ab4-45a4-ae2d-20e0dddeaf4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fae0723-fafe-46d2-93e1-8de79abdc4ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63f1fb1e-e352-4116-9752-a12cb3891696",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68fb33ae-d130-4689-9904-22e4b34686dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48248f5d-5cc9-4bcf-85a6-ae1bbb4f131c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbe06b81-4c4c-4a25-a5ad-e398e68250f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "98bde2cb-4359-4b7e-806c-d48a0bc73817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "231bdbaf-8ccd-4958-b4e8-bb006f383779",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae19f123-e5da-4d7b-bfe4-fbf9a83e6abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40855af7-e3b2-4ef9-a6d0-c2a971d46d3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c9ec9f7-6c8c-44e8-a292-0ad3d9329715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6044389a-55a0-4230-9c68-3e5e845295ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a7d4c23-661f-4e9a-a800-0d2b17af3641",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca88eed9-096d-47e4-97c5-3873d04f2b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e08b13d5-e2e2-48e7-8c7b-8e95a3e70219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cd3a995-b476-4c0a-ba1f-6b642a7df71b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "76f491c4-100c-4b99-a1f9-a50288bf0171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f6e8c1a-91f3-4488-8749-c5724036ef2d",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bff6e6c-9f74-4e12-8b79-4f12c803ee50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5c1694a-6f61-4084-a58c-c4279f48e2c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "093a6740-909b-4b1f-a959-bf11ed51612c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "83541d54-453b-4422-9833-6159765fb872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df31e52b-32f3-415e-95d3-b41cd8f22c0b",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e26e8dad-c176-443b-bbd1-ceada744d719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07bbc63b-5527-44ec-bc0e-b27eb592331b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa293c06-0b6a-48c9-9c79-ec3991d29e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa3a78dc-4de5-4f81-8456-b6ae0ec760e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feb39c9b-96bc-4671-8d97-71fa76d41c8e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c07d239c-4ea7-4a1d-8178-bdd3a9c2c9fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9263706-23f9-416f-94ce-40b094b2a8ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f7f95b3-66cb-45b4-97e5-bef36fd6f179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2955e425-6dd6-4f48-b350-d91dd7014a67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3685baef-9e6a-4c1b-9651-f9c53cd7b100",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe52d42e-2378-4264-956f-c11347e8bd0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54f2f4ac-3fde-4f5d-ba1d-e0c528866c57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0f73202-9fa4-40f4-8188-d06e7ce709fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "11cbcc11-bf38-477c-977c-9c791eaf1956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91d648a1-4fbd-4537-96a8-cabcdb5e312f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b2112bf-06d1-431c-85cc-711d70f6cb37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2dc7a23-fa48-46e8-9f39-a6adc1aa8b9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a024f9-0606-4c3c-92f3-ed9a26284a95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a87bf78-7d58-4af9-affc-86405ae3be50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ad302c0-fbae-4815-a872-1ae5b6659878",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca35bead-c957-41f9-904c-d03dd7650639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65b71b4b-387d-4d57-a10b-665f06bc2d07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41ab74b3-361e-4e1e-b265-b8a72447b9f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9aa57d1d-04ec-4bd0-beab-360a00cb2fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a1acdd3-9180-4f75-bdd8-345652a1c894",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b52c8942-b83d-4609-b5e6-d434d2e2017f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fa285c0-f40c-4d4a-b147-41265a617c1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b2dda5-0fd3-425c-9625-347c2f66d32c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3a28acd-d88c-47fd-bce8-231cd4bdd554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4ee6079-1164-48c6-8fe3-ded6c98ebb9b",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa59ea0-c0c9-43d2-9cd0-fb8fffd650ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6cd34ea-6ca0-4e90-8030-96413706f6ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bacaf2d-0bf4-41d9-a09a-ef4298114f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "52a50b27-c3aa-4864-a55b-8ac73333704c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0152bdc5-67b9-4dee-9d24-9cd665f42f35",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dd2408f-9f28-4d5e-8e5b-2d073fb22186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57bdb450-da72-4e9a-a452-6fd205ce3bff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f091bb0-fa55-4263-b63e-d2d99395b207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4e0d8f4-0783-425c-a365-76a0627f1fd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "448c9282-160a-4cba-b524-9d6d73a47372",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f63362f-b1df-4441-812c-4f10044f963a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47f73be2-17f2-4669-a66d-909b40e239f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55aed143-a0b9-4561-9575-5634b265a937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "61dfa9c6-060b-4eed-9d2e-4523f7625a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c48e175-06df-4599-9dc5-0585263908e2",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c310de-1a3b-45ad-b325-bc1946ecc680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58bf7329-89d2-40b3-a41a-15ca58924cae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd916f3-e9b2-4816-8db4-f8f29e013b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a9f50db-97c4-4923-9052-35e26da5d1e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40eb9078-ebf8-4d0b-a643-e142e4c5c1cd",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74da9648-4e3f-495e-8b2c-c9570d1fed3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4d08b8e-d6c0-4d28-9ea5-a45987ea496c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0f9cf8a-efd8-48a8-b8ef-920a6dffe1ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac5da9c9-d6a6-4c34-a84c-9057a0942f3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26969ad2-f369-4022-b305-0f6fce87f1fb",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89d82f76-3cda-4a53-8b93-b0cb333bb4d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6899aa74-3060-4284-b3f6-7a1830e3210a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c85061c-c9d2-401f-98ee-1f16611d78ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "dfc8df03-d6bc-4f6f-9a65-dae12ca8b1a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07782b5b-59de-48e1-9368-a29605d984d0",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56202764-e04c-4569-bace-4fe18e59c581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "77af6dae-b90f-473f-9682-19a3fddbed8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d586a70d-5d09-4ed4-b8f5-ed2f40b7f6ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f935db28-aa23-4a87-b499-8c0a174d1563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c46d2b61-ab63-40b1-afa9-84581786c559",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e558dbc0-089f-421c-a33a-ce0d9655c5e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e05c9b74-91af-4ccf-bd46-2ad4aa54d4ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "270b15b6-1d89-42c5-947d-5ad9ed5abc6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "356595e7-5a34-4b23-8085-7640c076b240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed8b4d28-a249-437e-a24c-8f0a3e2fdccc",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "337c4b1c-8c8b-4097-a86f-783cc348f3bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a7eade5-0b10-4699-9282-31b07b9a681c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63acdc51-f1d9-413b-9e55-2aa5b5667e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "935e953e-8a9b-40ef-bf56-2a9843a93526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "056dd128-694d-479d-8a49-22cba0e89b72",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "035fa1c2-8da5-475f-b307-55dea48790a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e57d93b-db52-41ea-803e-825e706e073f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66b955e0-4c86-40f0-adaf-2e10f9ce50a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "86e39e3f-b3a1-45f6-837b-093f7029a104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b31087ab-bb15-434f-9c4c-fc2d10b42d8d",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad60a0b4-c3b1-45aa-aabc-fee4928ac1a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77255928-38f5-484b-bbc9-8d525cb13004"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "056e9335-41a5-43cf-bc86-90e027c867c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4af7edbe-8056-4dd5-b2cc-7507455daeae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c181ed9-f988-414b-a7ed-45f6a8035a49",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e9c32e7-0d98-481d-9618-a2fe435e815a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b359fa2e-58d3-441e-8e21-38730b763fab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf6c2ac-5049-44bc-8025-bc9b3708221a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "81915273-244e-4a7b-bb47-2c2857298f16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ad6378-f680-4be3-b0cf-4e9f69237987",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2dc7bd-8e4f-4bef-968b-ce9b65acdf51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b85fae0-70a0-4b52-bfe4-807b2396babe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf04affd-2b90-4508-b73a-7570041909d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "39585d8b-0c01-434f-bfc6-063dbceeddad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bc35ce4-f565-4b57-b13f-d4b312b68113",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aabf8fbf-3181-49fa-95f3-c942e1207838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "850c71c4-f38d-42d5-a415-2d69dcac88a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc300482-db8b-4c21-b1a5-ef41c35e40eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a910495b-0542-405a-9ddf-b15d55b80944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f814d9a-b32d-44b0-83a9-ac19bbaf1c6c",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7c814c3-4d73-451e-9c70-092d1a8b057a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4d75fba-e295-4dcb-a405-a6620b182527"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb4de73d-1383-4479-871b-a81827a9e2cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a95bbfa-b24b-4d67-a4ec-f02403d6f0aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2cc0a90-582d-4de0-89a3-c59f2c5e637d",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "348a1800-36e2-4ba1-b778-35876f5d80db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7446821-92bb-4517-a4af-605ab5b8c3d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2628593b-3bbf-4620-9cd1-ee68e209f5e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "822fc575-c5da-4a4f-b434-51ecb9dee2b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9c07b39-5d07-4662-a2af-042e5f6fb69d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3aadd6f-ea8b-4ef3-a4cf-09a7e6a07388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "130f5fc1-b8b7-4a14-a115-398bcd1c21c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a13a34-376b-45b7-9dbd-8d0412dc3dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5070aecf-0456-43ef-87d6-811d54395a51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c824a962-0080-45c3-a327-0de171330b2d",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e631f9-8023-4e18-bab0-1bb48d6fa2a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e07305ad-d58f-45ce-b32e-787799b83307"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd6e386f-f986-4d94-a3fc-b88f722712fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e76f52c9-f11b-41d7-a830-ba7d0fa06f1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05c2dfc4-5128-4967-9f5c-9142651c0132",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce1163c-f40d-4870-a1e4-8405b6e266e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7eadd2c-556d-4556-a532-d7ac7f05886e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b3f1f3-e9cd-4639-b6f2-360f5090a541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc407035-8b14-4083-a336-5bc4b7c8dcc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc4a943b-30ef-445e-97fc-eaa3938978e3",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3599cbb0-460b-412c-9a23-fc1a95fc5a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9174e55-7219-429e-8668-7df73c1a775f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c7e33dc-2001-472f-ae29-094f4816b0c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f89a811-245c-404a-93af-bbd397d64ab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35ac300d-ba1e-46cb-8ea6-41f3f4c2e9d7",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34abad8f-4d5a-4023-b7ea-497d4111e995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a99e9fe-498b-4e84-9b73-657fc5c9d941"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d2f2182-5cae-42c8-a264-437df8a24060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4723bfec-cd96-4649-8f9a-0147f33012a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b23961e3-9deb-4263-bda5-0b99968342ef",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91280a2e-564c-462b-88a2-bcf4bf5b6e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f41e210-3018-4762-a24e-cb85bac7e091"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25c72413-1503-49a3-b249-35846af3df12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "447297c5-58a2-47f6-b4ce-35b3d2cc5f09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "577eae09-3440-4963-98e9-9a6416ca2e05",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d7c3e4-c86b-4331-a439-1bd23e7da088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "590b5e3d-0fb6-4344-8abe-764d39b657a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9d1fa62-82bc-4c89-bc68-6e2fcef602f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4b35033-c127-43f5-82a8-e8dc4c35b3fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ff63d4-75e6-456e-9484-3df544b81ea2",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e6dc63-e583-4a1c-8d01-f05e99cbca33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "762fd579-c427-468d-9b74-03126b434269"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3778ce9-52d9-441c-ad43-6b9fb24cec2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c28d134-06fb-406a-9b7b-a1e953fe5fd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34e628a8-5830-4366-9b93-07302f793964",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe12ad0-4621-491d-b28a-565dedba0ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c08f2b9c-5fa4-4840-81c5-fc1d96cb9ac4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0ed5b06-e4df-4ba3-ae1a-5b8b40d49dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4dc27fc-80fe-41aa-9d0c-736ab98d84f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97181890-98f8-44b1-a6d8-c748df1080d8",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cbdc2f9-545e-4f81-aa7d-4e6305037b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c54d1d6-9a71-49ae-a077-8f89f2ba1c3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc446913-90d0-47bd-8c70-9723d6b3dd30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad961bfa-4322-43a8-87bf-9486b868fb5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "956c3dad-20a1-4c52-973b-760da2ad13d1",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b09ea03b-9a58-4a0f-b765-e86ed2bf07b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d6ab084-b889-4463-8812-a2387ae7cdfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "250482b4-8d5c-4979-b622-48e9b0c3573e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "3b0a3374-9f09-4463-8483-ca99a81d7f3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e740da2-663b-4b73-8069-d4e34015278b",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58e6b99e-134b-466f-896f-a0479866ea31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "014f10c7-483b-4a4a-a4ca-bf4e11c0f0ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6baa5378-b9ed-4d8e-b297-72409df8f2d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "eaf821b3-a95f-4f89-8682-49b4582ecf70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab1ec997-ea64-459d-aa8a-2698633a6da3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26c30680-42bb-4b3e-9302-fe18d535d2cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0904566-a405-4942-ac9a-d447f42d2f86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b7c46b-f64e-4806-9973-f7c1cd6c63e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c3fca4c-7c69-4c99-8cd2-3a4c3f5903c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77026fb1-0366-4f5e-83f0-da087e5ebf8c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "346f6927-bf3e-438f-8f11-510dfa81412c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "898935d8-f2bb-4ba3-a7ad-64f7f3b5457a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a35e626-9816-4f73-bdc3-c525794ba362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4eadc9bb-b1fe-45ad-95e5-ffce03328d2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f8d4fc0-23bd-441a-bf45-cbae11630c1c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da2d15a1-d614-40e1-bcc4-30993a074cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02381317-5bda-4024-beea-a182f772aa50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e288beb-3111-4d74-a8e9-510e8f4f06c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd894f3e-046c-485d-9441-e442b3b6df53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dab2ed21-4b04-426c-b618-96debd037c24",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c334d17e-1ed1-4e79-81bb-0100dfd31359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24e6f8b3-fef8-4a42-996a-19664e0c0312"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4649bc10-ca67-4720-8d3f-7a413ed2d36c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f65d3959-5e34-4fc5-9eef-99a657476023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0ea573c-b74b-40a3-ac4a-d3ec78502090",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8940c2a1-f949-4db8-b66f-3e745d971fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "174210fd-7cad-42d8-94e8-c8570335d447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a9c4cf2-3b26-49c1-a42f-02fe244891e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "976ef045-f505-4bda-86eb-197d2967e159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "329e9864-8e66-417c-b2c9-beb00f247d65",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0672e566-b314-4f72-bd02-3d8d0b4ca307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b16e493-a063-4df1-9921-a04c33958b42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ada3ae3d-367b-406b-9c12-4a3f4b084fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4063cf6-5641-42d0-9544-346493d5afce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ef8f890-33e3-467d-8557-87c73b6247b6",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b95e0c78-94b0-4e5a-97be-5da5ddd3e3f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03145661-c74f-4a53-ba65-1b0c2ba86964"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "498fbe8a-335e-4eaa-9b87-cacd4e8770cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1572271a-3063-4966-8d5f-9c6ea19394e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03c5b321-ada2-4eb8-8856-6d00ff99b5a1",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1451fdec-a838-43c2-b7c8-bf0e2e5defa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edf6cf38-c745-4248-89e9-e59f4dac3f03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82dc72dc-7429-48a7-bb00-b20cb17d9ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eef4077c-c67a-4613-801b-e5d9d8a8dbad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "183419e4-6728-4f48-afa1-68623b82e463",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "152d0b75-b757-4a9d-bccb-27882b309e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e9a9890-df6e-438e-b8ea-36048088c14b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9b8e615-404d-477e-8da7-409f3b693d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5372f22-56de-4d4a-9445-8b37b7c21ed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "448a0e87-2aaf-45ad-b0d8-6ee837abbeeb",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7ecfd9e-2d19-4851-a483-8e9415f21089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "367b33d0-8f32-4fbc-96ff-c49994e619b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba5334a7-4d3e-4b6b-bee4-9dd592d1563a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0bfa15f2-1bb3-4785-80d5-7d263608196b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35f8023a-3784-47fc-9000-a455260e98b3",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "032d8060-524e-48ef-806b-bd834d0fdb3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67c16046-cbf8-4561-87a8-56b2a08a2712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "515d5c92-2725-447f-a4d5-1e4b3aeb2266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9d96322-a4e7-49c0-b4c1-68e7a0f37664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bc39e92-a165-4de1-bed0-6d215e860a65",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4bd1f4e-4d6a-4e17-9185-1358d1765fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9de46b28-e8db-424e-bf3b-c7f3fcbdd48e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f610cb28-7adc-4af5-9855-5ac365082818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "144b2351-a475-406d-adde-ecdebe93015d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "840f4a32-f868-40cf-b795-a530c41f1fb1",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "889d2687-565b-48de-a9e9-b4104afa7375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9df630d-5f52-4171-949f-29dd31b2bff8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c98a634f-7dd4-4710-a642-3c35686b5b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "27d6aafe-90c9-43ba-8747-02821446a9ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f130314-ae9c-4207-8903-52092a8ce615",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c317f3a-ccb8-40f1-be96-1650fe39a4e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c7e2a66-f0a2-4cd7-9fdd-360b3ab1efc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1857cc98-7576-4d85-b807-9be1024ee380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad2a6849-51f7-43e7-8631-d0b8ad8fbdf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a679f8-2586-4cf8-bbfd-d77ef5ae2b46",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f64a5bcc-08e0-45ad-95d9-ec2bb16e6509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3588c2d-0d3f-459e-ace4-cd08703b183d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd40bd7d-ef43-4f8a-97ee-13b67177f456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c82ef58-9e9d-4e98-9e37-e22e95078675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "013de1db-d92e-4d56-a946-efe10f2f1567",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73b64426-fa8c-4d4e-a815-a99039d91721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be6b496f-9380-4f56-bb4e-7bdc696ee18e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "583232ab-1ee6-4ddc-a89d-0bd227ae2034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e9cc3da-5bfc-4a8c-bc80-99effe863599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c6ffd2-ae95-4a9d-8da3-137223f4b9c1",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69b7a462-4dbf-4595-877b-17897f14fdeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8e16e50-9d15-41b9-b1b7-2f575c3781ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be91958-8dfa-4324-aa77-333931d93737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ac9029f8-27f5-43c7-9e59-f54a79420257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b879f22-b5a5-4588-b19e-e5986b42f95e",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e7e20eb-d8f6-4979-91a6-4c486b74cc9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7cc995f-28bd-463e-9e5e-dc69c26057c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e57ed778-223b-4aa8-8de1-3106a4e8c044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "87316b01-19ba-43af-b95a-d40c3c362115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "220ecdf0-8552-476f-97d1-ea93b66fa423",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b8808f0-5a28-4e36-912d-bd83c54cf296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e90fa7c8-163a-4806-a708-f1420eabdec0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58c88d5d-f8b6-4338-b12e-ffda309594f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "080ca740-f6b1-4623-a1cf-a3de1ac7281c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1fad609-a1c4-4c24-8aa1-04f6587a05d4",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42a45639-4489-4b9e-8420-6c4392194f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6822c72b-286d-491f-8344-6a8c06867457"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d120f0d6-cbbb-48d5-91c6-b871fa72dee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb33ecd4-85db-4010-8ff5-69e711a4a423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1cb7dc7-b333-4533-bc0f-a515eea9feae",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29252b8d-594c-4b4a-8c22-20c69f0aeb3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ebf3647-dc0a-460f-a262-87f848c4b843"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df1bb76-cc2f-4928-aa06-ee5d3a341515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bc4e5af-1572-474a-9ed2-cee097dcdfdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "239cd412-2302-4133-8ffd-f537ebb34bcb",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4901abe9-8736-4357-a73a-b5719bee0726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0043afe8-05ca-4553-ae08-e26e867d664e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e80b8dd-6876-4c5e-bb36-138459ee6fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe601928-b4eb-4dfd-93f6-9276ef98a1ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f4217b6-f306-497d-aad3-67a6ddbdd877",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0272fb7-3759-4949-87bd-16cec74ccdab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69fffb31-b62f-4d10-aa59-2692024c2fe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5700cee8-1e31-4b56-9389-e055b2a6348d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "903614a8-3ba8-41af-9001-ec81232c7d4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69d90c28-f65b-4ce1-8f56-e4cd19281015",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "570c1a36-7fff-4d4f-be4a-db136349f651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b330731-c4bd-476c-83c7-efb4c41ff485"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54072299-2bf6-4403-98b2-f1d27bb2e622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bdf4f6b-5801-4132-bd31-848514932167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f248a748-f35b-4191-a8ee-0ff2dffa1cea",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f779f96-5c6d-4c03-95e3-b6d036b0213b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab541406-7d03-4407-bb71-16d5e7e2f978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4bfebe8-c6b8-4e8e-aac5-e361586610b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "29f7dca6-1851-45a3-9c04-43c2211b0862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6b5bb8f-8375-4233-8fc6-dae085cb83af",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c9701a1-d157-408c-9613-80112abf2737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8e21bfa-9cd2-45cd-b3ab-b5ce7e5a97b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c462d7a-7b1d-4f2a-b856-85cfd40f93c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d395325d-6e41-4eb2-8369-3b4e25ed6cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1449bf9-9e52-49a3-bf47-a0fa9c619a51",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d82790b3-f9cd-424a-b3dc-14d2f230848e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e3ef803-783b-47f4-b11f-d2c57fa12d94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a825f6fb-cf56-476a-92ca-ef253cbd155d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ff7dbb6-1c61-4dcc-ad2e-32bd566cd735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b0fd887-39c8-4a9f-ba2f-05ca06bcb2a1",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9553c0df-b3ec-4357-8c0a-b47b1a6eab22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d045bdb-dbf8-4c44-9e8f-143667d7d7d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "208b603c-cfde-4aaf-a504-28891e2bd715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "af2a90d6-d412-4af1-941d-a90a5189cf34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "427bd5b9-2590-4175-9dda-805ccba12acd",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "400a3b7d-1617-4f79-b807-7296ba7e77ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c691a4c-59ee-4a92-ae92-ae0787c83a49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "394ef81e-b4c2-446a-a6f7-736398fe06c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb72e6e3-ec14-439f-88d6-e66af5777869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26bf16cd-5555-48a2-b113-22b7453fb257",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "025cb259-abdb-4a1a-8e6e-c39027357a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86aa26cf-c20c-4f48-b712-3e40bd3dcee5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4901744-bc29-41fd-86c5-82e1f731eca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4147461-edea-4a5c-bd04-189ba3dc635b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f93b278d-96e0-41b2-8f66-509653d51f08",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09bdaa5e-dc16-408a-bce6-f316e38c9248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60cbb8e4-30c9-4c60-b2f3-fd5f292a40f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55d35125-59b7-4a0d-979d-149649c35603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb470a7f-f84f-4508-8708-3d9b47bdf06b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c05b1951-3a9f-4750-965c-70ca8d15cd7e",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a1f88d4-a347-4fda-ad36-16ab7e859026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e03f62d-cf78-489e-8e45-85ae98f49a63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d51fa099-46d0-4f5c-bd0f-d2371ed0b21c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "417dbdd9-a7b6-424b-9815-4974d86afeb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa96ac28-a82d-41e3-87ca-6a207dce9c0c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9e2ec4-2091-42c4-8052-54dba5087799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37270c36-b45b-462d-a632-bc0443cdf8db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b3deaec-839b-4b18-bf4a-d45d5c50fd8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4f7804f-f05c-4b51-a236-c141173bcceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95adb940-676f-4a12-8a59-b4ac2ba4d616",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd13236d-56fe-4a92-bbf7-0cad97bc4f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "556221e1-550b-4a78-87fc-ab23fdb4cd0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9748ca47-bcca-4583-90ab-01332ed25b80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ff2bfac-e000-430e-a960-cb446fc7f291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abd160ac-c619-498f-b4da-8115632369e2",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ecd43c1-b185-49e3-8447-e5972e469927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0bd51835-8621-47b1-9b02-85990c465ad1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ee84a45-6aa1-4e72-ae09-915d1a05c4fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4fca9068-9643-46ea-9a9b-8f1f480ed6a6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a82697f0-fcd8-4e1b-9207-757409e937fe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b579d24a-c4bc-4611-9284-f668e9b5f89d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ac3d14-8adb-4183-a346-da35aa7bf053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7faaf2ac-4db3-4919-885d-565784f158d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8596dad-7c38-4421-9a0f-311780095f01",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7dc8a70-168a-4761-a562-f96e06815d89"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a7a7d289-e878-44c7-a358-5f79058d84a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a641238-5552-46c6-bb0b-1f85473683f0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad494a76-482a-47d0-a57b-325f89dd3885",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "41236ded-5ce8-43b7-9c54-7262b2db122e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "67a5e166-b07c-4748-bc2d-701e2fa9abdc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f928cb6c-38a0-4ddf-8ee5-ddd229b9b625"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d055753a-9b2e-4ab6-a1bd-a1ca0656ead5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7477e779-0447-4028-9592-23320c09dcc6"
                }
              }
            ]
          },
          {
            "id": "5bb4a82d-52d3-4d66-b751-cf11ca7afb7d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5e469147-e70f-4401-8cf4-021a1d7642a1",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "b5ad1506-5732-48e7-8c68-16ee068bb822",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ddd69b4-282a-4fdf-9ee6-3a10a38420ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "31f31be5-9c92-4d9e-a8d9-51b2fc96ccfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f370534f-a6ac-4c41-a57e-7bfa6057eaf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbc8f144-c78a-4bae-be30-bea20a82cda7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "689bd848-0a7e-4622-9b8b-258d79fd5e5c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b0deaa4-c172-4768-a8bd-91c1f8e020f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a421cbd5-4905-474c-b106-6fc62ec28f18"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "99121eeb-c736-4489-821d-5717fd4047a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6cd441a8-2cf9-43ce-82c1-861a7fba7c38"
                    }
                  }
                ]
              },
              {
                "id": "ca0e4918-1605-49f0-a1e1-ccd761491c0e",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aec4b01a-2dc4-4750-a1e2-a7aa852ec869",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4a3dd8ba-a954-4bc1-b8e8-b5afdf365740"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03d951cb-853b-46b1-bc2d-5d21d608739a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a97cb11c-5b1a-4db2-bbe8-b91d3df788fe"
                    }
                  }
                ]
              },
              {
                "id": "c40d0b19-ea92-46e3-afc8-b279a1bfd865",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a4e8e6bb-fce4-43e3-96ce-502cfb1b7324",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "59c9d2b8-e606-4f45-bac8-e275c8b9d4b7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b133b825-3e7a-43f3-8cad-85543c811028",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9a9009d5-74c2-468e-89c5-aa6d1aa10c41"
                    }
                  }
                ]
              },
              {
                "id": "ccbc64b9-fb94-4d59-9e69-c63c13ebe49d",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "32920a48-f8b4-4742-a5ed-472579d941a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b096ed5c-96f6-4da2-aa5a-c0edf07d765e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ed816dd-71fc-426e-8e9b-d756a6741aa6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "b53a3f0b-fede-45e4-9c49-0f8cfee705e4"
                    }
                  }
                ]
              },
              {
                "id": "35aaea29-e0ab-419d-bda3-9021fa5a63d2",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a0463147-ac87-442d-8a69-e30a3e4c63c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1e43b5d2-fea1-4a78-8f08-3ae40e371deb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "86ac3b47-f5fa-41d1-a708-50f5c50fe2ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d9906288-74ab-49bc-8e2e-057a5466a44b"
                    }
                  }
                ]
              },
              {
                "id": "b1bb0c2f-756b-4d3c-b4c8-e34cf915f013",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8ad63f0-c5b2-4cf7-b1a2-f4f6cdf6a4a8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a29b6080-64c1-4212-b41c-b6e0c0a1d08c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bad552af-02f3-4cd5-81d2-0663fdbb0286",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4005b796-61e3-414c-9631-7c2865b9a117"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c7da5524-b729-41b3-9501-63d4851a3151",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c3990266-b7aa-4114-b5e4-9e42bd482105"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "915ace76-20fa-4341-a9da-4669842e212a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dd786658-e258-41b1-b113-59ca5f8e80e8"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8805c5d4-c014-4eaa-b152-10927cf9ca04",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "fcfcabdb-f488-4a5b-b38b-ddb0a3dacbd2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "274bf089-a079-4298-bf48-b2daacc9fdd1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "72653020-5dde-415a-919f-7858b9ef36dd"
            }
          }
        ]
      },
      {
        "id": "6ec10061-fd09-445b-aef0-a911100f9831",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "5c155e04-2240-4844-82a9-b230be1b3e4a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2e86a79f-dd6c-42f8-8ff3-f35cddc770b8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a38fef9b-128f-499d-b60a-abacdea57602",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd533438-550a-4a2e-9ba9-29bfeabb672c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25bedf9e-e47c-4e8e-98b7-3ca0db4b9bca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4da13b2-1109-48b4-a524-03a7df30d20e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cd7d481-5972-4fb4-8752-e43a79ca02e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "babafd4a-8588-43c1-912d-0041d2e1a75e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52b5773b-ad6c-438a-b96e-d21cdeb34294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b03caa8-3a03-4612-840a-0fd879b1fca8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a1d37a-76c6-4de4-9232-329246f725b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "84e704e0-b7bc-47ee-a921-00e9dfab2cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "436bfdd8-022d-4fe1-bc1f-ecfc6596271f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c9c6b57-f4ca-47fb-9a81-ebe74ee4e201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66c6c5c3-25fd-4ce5-ad68-41d1d3d2d9c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b7543a3-0651-48d9-a0e5-a6fc79bcf7da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c65d822c-b7ee-4777-a0a3-350f5e35f08f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0605e0a8-b2cd-4c21-9c7d-e234e73f973b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba110030-175d-486b-8201-55b457808b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea85ea24-f8fc-48d1-8c8b-133a86b9a10f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca1b608a-14fe-4541-95df-903320b92932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8c07852-0b4b-4b31-bc6d-575ea61b1e32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "000ded02-cad3-4b08-9823-dd0e1b79e294",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29de6204-5457-4a5f-9c56-3f72c3f595b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df585414-de29-4287-8181-8bdc3e9d5fe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d04305a-c7a2-4e59-b70f-e429ececbf43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a6744ab-301f-47cc-a835-853cb127df3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38371503-0d06-41a5-8f42-972e8b7f1070",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b30fa254-9ffc-491e-b040-649f044c58a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c150669b-df91-41e7-89bf-2ebd62c06bf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf105788-228b-45a8-964b-29706dfe175e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "41776973-287a-44ff-95c5-d7aff091b11b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8d908ae-0420-49fb-8d89-344132233575",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f067976-65c1-4f8d-95f3-5dd50795594a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0386619-8c38-452f-a6f3-d490f9cf4f92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0540726c-ee56-4918-ab2b-f9f08119f976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "88c16a2e-0363-4e9c-aeca-74297e918ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fcbf17d-db06-4975-993c-ce0557b2d99b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d355258-aa74-4013-ad5f-7d05ed5fa379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9f9c971-4c2b-4628-90cd-e867d37e8f74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c0f8921-fbc0-4d42-ab10-0d278e0fda57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6080d13-103e-404f-a097-6f81ec37a394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeaa25af-97b4-46ae-9bc0-c4b4733b9cb9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ed4eb0-c351-4fea-9082-576d1450c49f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99612a8a-eb57-4a10-86bd-a3f538788a67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cde2bb3-cb82-4034-bbbf-e5de62451fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4380bdf2-6570-4573-96ff-53be338e6076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a21fdaf3-ceb1-4732-8d06-0249458ca6b7",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8467745c-8ed0-42a4-a8ea-405603a37ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c64ce92-7d7e-4fb8-b5fa-dbb5c1dc7b8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "964e405e-44a4-41a6-8424-6aeeedd5c0ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fceee55-60e8-40cd-8dd1-f9ac59e8198f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cafe9aba-6730-4ee8-8d63-ea522da9841c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f714a624-f310-4e5c-8d65-737831aa5637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6ec700e-c1bf-4128-a6c9-6edb18d1f95c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d9a7528-ab02-483a-9c8d-0581951e5f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d45d7d02-4737-4ebb-8927-dcf7854cc30e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f83d5267-16b7-4856-8dce-2c1922529c0f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6882fd64-50f3-4da0-bbfa-fce4e792a0ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "febf565c-de2a-451f-9c7d-dfc0ca419445"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45dc4b7a-a125-420d-a0a1-acfee9df4997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aa516bd5-c991-4039-bf37-e624712d5a94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d24b143c-6d95-40c2-89ed-24d4abe4b0f6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fd38d66-2b74-410f-a6d7-d91e4ebe960f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bb3652b-25ba-4bee-aa75-2ab7bd616b73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "264bb015-f1a6-454a-bb9d-181fd570c73a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "388305a9-b0b5-4d39-8930-b604c9f6334d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca0f899-c239-4bbc-b7fb-9bb143dfa7b9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fc83051-7598-418f-9b4d-9e7d34807ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26fc79ed-ef39-41d6-9f3c-9d355d75f788"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a611ac47-792c-4c20-a49a-16dc42299750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4eaca1b8-dda2-47d2-bc08-e3d048129e68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3fe947a-af20-491c-a089-33911a15d27c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1638bae9-e383-45e4-bc5a-928fe021e8a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b8e5db6-e7bf-430b-bb17-1402cd7277f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c379c276-bcbe-475f-9222-32d085b4d021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "788a78fb-30ed-42f6-a19b-bbd03eb6e3d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2149cb64-e603-4458-9805-e8ceba07894e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aef9395e-0768-46bb-9d8e-473774b9464a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "546f4148-de22-4bcc-861a-bb8da5c99afe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5b1c950-b0ba-459c-8758-3757e8153930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb345ef5-3aa1-492b-9783-0d62623ec228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b5ce33f-9c50-4144-8e03-8eada2e4a0ea",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "817cd61b-e84f-4aae-b557-38d8d5ab9696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eaab276-f379-409f-a1db-5d2eebddf646"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "900d6cfd-c513-438e-afaf-3718d5230a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b142d5c-9cb7-4e60-aad5-fd77a0c74581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91433f24-e43e-42f3-bbea-654cb5442b9a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4363ba97-77b2-4b28-82b7-1cf29fefc120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9259a0ee-4267-42c2-a282-b0b7d8056101"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df312c6f-2644-433c-9a02-3982d5aeb98a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "85249c8e-df3b-4544-910d-e03e4e83392a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c130b84c-696e-42a0-bd61-0b85c6863b9a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db2f43f-fdec-4ff6-bb49-c93362766643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6dc262f-18bf-4b7a-84f7-3c0b0a72c86a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af59926-69c8-4303-abff-345f7b453113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a3002f5-93eb-46d4-b1a1-593a2cb32f86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64814ddb-5f5f-4cf3-8305-eb1069c95ca0",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04982212-2a10-4dac-b8b4-fb59187435b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89bfd27b-dcca-41b4-ad52-1055bb2d76e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36b4fcf2-bc11-43bf-8bdf-4f72c5ce03d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fbd72b6-f8b8-405a-baa6-43589c1987f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5368e429-bf83-4f1b-b81e-a617bd3ed859",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8281d245-9cbe-42b9-8a42-1ee8df3330e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a370ae1-6000-4f33-9e26-37d11e4b5226"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc518a51-7ff1-4251-94d8-cb7d88b14a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34e87495-ef87-4c29-b746-72953b028965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "909f7b05-247b-4fe1-9f4e-e65316dcddf6",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32fb6fee-abe7-453f-b36b-3e8be7b2b274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "858df66a-162e-42a9-b9fa-ad3777cfe2cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8100b846-573c-479c-a55e-2d7f7c7d6a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f09ec80-d0a1-4004-a632-dbf9894e0868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76a3de86-5a59-4b38-8423-0e3d3e1d8db9",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0452de9d-1f37-4dc6-929c-82a862d93a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaaea3c5-abb6-4dc9-94eb-3ec5dd8eca5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16230c4f-22b8-4b9f-a373-263e07dbe6c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2475254-939e-4db5-8014-ae0c47e01768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3f55eaa-1caa-454d-98ac-738272fdf055",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8abc746e-904b-4054-8099-f5deaccbc644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56eb00c1-dba7-4140-a077-2c2d2c6f1c8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0277b9f-457e-44ee-9aa0-093bcfc42de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "247e2b32-642a-4243-8dc6-1ec4e7e102af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b7f29d4-bf78-468a-93c4-22d29eb2ff75",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c3bae2f-e83a-4b3b-8e82-d5a2f803ffe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1af6e842-2ea6-470c-9295-d256de7863fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ebcee03-8c9a-47e0-a940-f6b500196cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2622210-1a23-44e9-88ea-63f5bdfff66f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96037e22-fc73-4786-b963-08cdf2384b69",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "214fedbe-1475-4011-8e6b-397f664dd4d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a92f836-d53b-4e48-9579-40d330a87b64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13fe5cfb-a7df-4a13-a712-f1e692284626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ca73885-832e-438e-ba04-1824d7c077ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7155f5dd-c78a-45df-b19d-50958429aff7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41a284e1-43c7-43be-bcdf-653fa0daa7ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "936c5981-2c5f-4f0b-8141-6bad7af1b851"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfbbb589-1beb-4092-add3-44e47bf2da6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61f70728-6eef-416d-acc4-17c6f790b417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1a2fbb1-a4e4-4a44-867c-a8cfd9d05539",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30aaddae-6e00-4138-9cd7-dab6a8c5b620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d94b000-a83c-4c6c-a43a-e7ad0dd33536"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec2756b7-4177-466c-a2f0-d30423ee85bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16f2977a-d131-4d3a-b86d-27f0cd3fc3b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9d1fa4f-4127-4af5-9f70-b912ef574354",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a6ec81-e8fc-4bf0-bbfe-f304d1841163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "468dddf1-9363-4aee-92c6-1312c141c5e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "936a8d3c-ebcf-46a5-8be8-ea7bbe078977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1749a3c-180a-4db5-9a48-ae6d7baf7407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4331e693-2fb6-486b-b4e1-15214160d99d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da0c9ddb-35bb-4cc8-b953-601303aa6768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c890fe8-09e4-4239-92b9-7c19f436f38a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a7bad4-3db4-433b-9a30-9e0831639bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf4ed448-77bb-46d2-98b0-939570b47754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01a5dd5a-a122-4b05-816c-3c649cbf7764",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a39b8c8-0182-4e3f-8cc4-7af142ca93a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4555ab59-abcd-423d-a15a-726427b6b0fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c55f2b6a-e4c3-4f19-a621-31201b34efc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1546408f-3df6-4884-982d-cc63df99f0b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91725d12-e5e6-4507-9b38-4ae6df0153c1",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "215fe99f-e3ca-4b45-90b7-cc636f8882f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "310c5d09-5425-4e76-9c2e-5fddec4e3443"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da64586-1cd5-4703-be37-7bffdea83f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce83af87-a531-46da-95f3-e82d8e727f34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e11a01-57b8-4b36-9b42-77ef863d4af5",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "740ba733-4189-4549-8cce-98e11d0788e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c1df549-d14b-4248-afc2-236b9ba8ffa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "784fa9f4-56da-4b8b-bbe5-6a7f7622ad4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8d38d12-e7dc-40a3-a500-d554297ca57b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b92213-6cb0-486a-a236-ad3961922742",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d124e70-2e16-42bb-9767-b325bdb15025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "680864fa-34de-4d9d-b2fc-a2b542521345"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "042c5f69-4a6f-4085-b42b-d3d2e7495289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68095933-664a-49e7-b873-0689c3a7fa86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4807f87f-61bb-446e-a944-933ba62878df",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72ceac98-338e-42e8-bda9-3b4ac15a1529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1266a90-36dc-44e4-aa78-28d05d268ae7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4df87133-92ff-4e73-8fe3-9a134cee7ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1369ae9-9d07-41e3-a43a-183570e647cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c97c3747-b61a-4e82-a580-562c8cfd0a14",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baa4fb04-5fba-4ff2-8fdc-e1494cf726ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a886ace-dfaa-4c78-9266-7ad552839597"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "705a9189-d302-4437-ad6f-7002549825e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c608106b-8350-4dc4-a9e3-58074cccac17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43fb14b7-96d6-4602-a197-7968284fb36c",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a4bc94-554b-43e6-b500-4357c157658d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d94d64f-a051-481f-87fe-b1badbcc361b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee915cf1-c6de-4b3a-b5eb-cd767207426a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b621d81d-6fbf-4c37-8c68-15e3d5da5150"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5ce95ca3-84db-4acb-a269-ac9c4390d66e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4f0cbbcb-dcfc-4437-85f7-38578ed95ec3",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84420dfd-ec40-4ba9-961f-1caebdd09f19",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "531eedd4-85ca-45a5-90e4-43e17c8352c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1075384-a92d-418e-96d8-81ca08614bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6f73fce0-1782-4dd9-97d0-1bdb91be27c7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f3373c6a-1123-4e73-a701-cf7fefe80fdc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "387dea1c-e8bb-41dd-aabc-24554d23fa41"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d486bf1-e51f-40b3-b811-478cb3d7db90",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "606219ee-92a8-4592-9b1c-1413205b8a34"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2b746d64-5ea5-40cd-80e2-e8cd6d35483a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "207c818e-11de-48a8-b0c4-0648ab07f815"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4ad03416-f7d9-4836-85bc-f215b9bd257a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0af4d3f5-e3a0-46d6-8444-ad7c63eec712"
            }
          }
        ]
      },
      {
        "id": "e6c08406-1da6-489b-85a6-cbe0e028a397",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "27f5470a-f55b-4eb7-a75a-f8fc8d7e4f7c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5cf7cb49-77ab-44d5-a495-89b9e2023d79",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e4dbeb18-815b-435f-b225-ec51cc78075d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67e5eb55-760c-4b40-85e1-1e3fc4c2f0fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d269b10-7aeb-4ccb-8728-1f628426a06a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e709b126-5595-440e-b9c0-cfacf926f599",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6be6dbd-139d-44d9-8a41-b3224bf0290e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e0cbf03-34cd-416e-9645-7762e537f9c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a063ae1-5f1a-4d56-8366-7942e19f7d17",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a930ce75-31b0-433d-877e-f0ebaa92783e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6049719d-d67c-4d35-92bf-3f950c8e0a53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24ccd741-c4a6-45d2-96f0-24f9fecbd0f9",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "086d5591-321e-4a8f-a727-e2e478677339",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd1b8d29-f104-4616-8b43-fccdf54d9082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90a9e99a-0f71-4b8c-a6de-c87a6969d520",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf86ee35-24fe-4209-bb41-eb86b7299cee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de7a4698-c3ca-4aba-8d3f-4b7e477ec75a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b988c56-031f-4fad-a826-b044e388eba1",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83dd24b4-0b4d-4f77-9d8c-e3ce6866385a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07365d50-0d4e-4206-9ca4-76a955951c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eeab585-66ab-4694-959a-81169c92ac71",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "144e5594-3fde-43b3-8d77-17a9ed36f8a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f8417d1-7c35-4e6e-b344-c9fa6de0f690"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31821f4f-67ee-4678-9561-18d6d0167fd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9014da31-89d5-44e7-9bd5-587260b71248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d11b0672-22be-4088-bab7-71cf74d10d6a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14ec351c-046b-41ec-9a64-4f293f1c6514",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1d323c6-0719-4784-886a-7fe93edfb625"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b5498a2-c0dd-4176-9bbc-ba4d1dda0486",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e96f57e-2959-42c2-898c-9c6bee97cda8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "530d8891-3a51-46f1-9f9e-717ba48a3bcc",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ab4649a-e12e-463b-8b32-34deecfba414",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88c32363-2794-4f99-8df1-bb80e1cab658"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7161564e-e3ca-4719-89eb-33ef55a183b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d5f1e8e-fce8-4c5c-b5a3-2bbc22665987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a730b6-9354-4cc2-9cfa-6b107bc3da6e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7ca5b0b-814e-4b39-853a-d1670b326d3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c54f1d37-4cbf-434f-980d-82857d411466"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f874f32-d5d7-4fab-a972-901b1afa6650",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e8c1047-360a-4cd6-9746-1cf539a9063d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a88085d-d2af-49f1-8652-b064f2773c7f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf085be0-f222-4716-b359-6332a1a4ae80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f68b16cd-a081-4f6a-b65a-c8be7eab7a49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a12da0e5-8682-4f8d-ad76-f4bb68aecffc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3eba062-1afb-4a6e-9911-0f4c90a6f55e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ae6900a-9665-4e72-9a8d-3d573956a016",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "880d957d-ee3a-4f9d-b604-b2de5bf7ae8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "453ec206-a9fb-4521-90d4-7535176c64f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33c7e449-fd20-4744-be5e-d4cc161ccfbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2be7465d-034f-4e65-91b2-00c792dec6bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e53da1-3f65-4a63-8c15-fdd07e61113d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ba21800-448c-4de2-b168-99e2f1204d55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e8195da-ce91-4404-a068-23fe5caad2da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31210ee4-cd20-430e-81c8-99ec25bb241e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9fa8ee8-5cd8-4b38-bd81-dbb01c754195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b14aae36-58d1-4014-9f5d-b341d982ecac",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "352c9522-0776-4ba5-b355-ae6755b59256",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c686f367-547c-47cb-9b99-a92777680f34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4403801d-546e-4422-ac60-602ae50b58ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dd897d4-4a18-4d05-80d9-9ac758aa17f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d757af50-4082-4580-b30c-cb0eb3917a5a",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ce02162-c957-4dd6-a32e-bb7301f32942",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44ade22b-389c-4353-b82b-0dd3a8c7649c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29831dac-30e9-41de-8da9-9627c7abd5da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceea86b4-fba1-4d35-9ff6-b350825ea979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27f592d1-8213-4c10-b67b-0e48ce48f935",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "645262c7-38ed-4fa0-87e8-62a42f8b17c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c991eb8-99ba-48a9-9af8-f69890e5d86b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "688288cc-3885-431f-adcb-a0322be71079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d729f780-3a6d-4dc9-a1c3-ebbac895ae5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67f3ebd1-45da-4b1d-b12b-4009e19715ec",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a89d912-c527-469a-a975-49e61d6091b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7eb9663-86f7-430a-a943-dc2117be47b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db8b000d-29ac-4b43-bfd2-e8057c35e6fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e05d0091-1e71-4057-a6a0-9755fb8e450b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dafa7e9-6800-44e1-9221-a00fb3d54481",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd4af369-ccb9-4b9e-a53a-be4465ca3458",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2780f6f3-6a16-4ea3-909c-38b98c31ae73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c06e6186-6ff6-4af6-bbbf-7bfbef7a4ac4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfcb593a-9d00-4797-8ffb-95797ac19f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ca120b-501c-4d9c-8917-8911012b051c",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a7fd4c7-d806-4b18-8c95-0a451c43a373",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43b32f70-683d-41d8-8a35-33863dec5d52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90cb31ea-eefc-46c0-aa30-afec9d168e67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2522d387-d40b-4f02-9198-db98fce77990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da14ac5e-93b5-4d6c-9a52-c9cad35a7f63",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0cf0b6d-763a-49d1-9f36-76680902977c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "370b5743-1319-4dec-bf18-74037efc23d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6def1e1-5259-4258-a96d-d4a936d09184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0314347d-76ea-41ff-afdb-602df9ffec3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e1caf11-0810-49e7-9eec-bad3405b7b5f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69700252-e313-4747-80df-e740ee676b66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "147887b4-eafd-438e-bda6-50ab73b046d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9b1942d-c8a1-4b79-85d7-a1f3aa429cbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41937a77-cfc7-46aa-975a-ebff8830368c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "520604f6-eb81-4763-b646-5b83c379852f",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad6c2bad-f9b4-41de-9219-2c0a26b37097",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a6a9b25-efa4-4d28-9e19-4f184c9bb0ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "188c24df-33a8-4c51-ad15-2521a4eb830b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdf8bc53-9cb5-4944-8128-efb4e3394b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f6ebe8-26f7-458d-87cb-1d6f8fb19ee3",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d14baff2-29af-4780-9ce0-944fee9ad378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8483de6a-5225-40b4-9f87-f282aa7bfca8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ea8739-9002-438e-9f26-76412cacd2c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5ec3e36-4e74-4211-acb5-387f118689db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ca632c-3a17-47b6-9c2e-7bc579a4aaa0",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f48fda8-6053-41ec-a149-2a36b6c96e14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "579b0dd5-a31e-4a33-9d87-1a6fbf1fff43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03be37d7-4029-4d58-9c1f-5ac42e93c3cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "200bbe86-a254-4b07-b65b-de31fa18eba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfc8770e-562a-42dc-897a-1d15fbc0e762",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff1233c-e774-408e-a68e-1767a279a8b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7610c525-04eb-4cf3-9814-527a52489ad5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b959b57-5186-4e49-b37d-427bbbf8e67a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5a892fe-a1c8-4b6b-a153-cf5c0efdf975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6fde271-3ffa-47e2-864d-267eb2d2ad0b",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb6c9884-d49c-44d4-b756-16bbe7f95e85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "432de91d-29dc-44eb-9034-f765298580ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9a9b27-bf6f-4b24-b37b-73e7b4b47402",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd7be1bf-d273-4a7a-986d-cc7c54fe7a5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "075f9ec4-8362-4000-93cf-7b25391d52d3",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cac40f5-4ecc-40eb-a6c2-e6d33c3f05ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "769fb395-b715-4e5e-9ce5-82a78e134827"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7634fbd4-693b-4c9f-a2d9-5fb3e8fa0193",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cb190d1-a5b7-4fa1-9003-812fb5b50b2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8d5c7d3-981c-40ba-a16b-bd1b4335b33d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "188d93f9-b439-4d4a-b31a-53f77eadaa17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5937fa5b-b0b5-4197-b37f-4a26f40e3452"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "421be068-497e-47f4-8ce5-13408b26f3fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5bc972a-140b-4934-b645-59283c5925c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c900c4f8-40c5-4450-9117-710bb0415e5c",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac174629-ae08-4f02-b124-010d252cca64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18e3f189-a196-41f0-9972-db2273ff9a69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c554d79-3f7a-486e-8c0b-781e2223d031",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44a3ed5f-bbe3-4747-855f-2dc10f048d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69293579-644b-47b5-bcd9-94d0dd33c24e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe95b76-8df9-461b-bc9b-dc4cffdca97d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9307c31-bf05-4f46-beba-9022bcabe27e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9df042ae-f781-4d54-bf4f-40c5480f6420",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aea761f-721f-4332-a5a1-6e67f1f9d240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad94a888-a2a7-4f5a-b96c-bc171a3015d7",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8df86dec-0d06-4607-a2f9-d4df23770435",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61bdb20d-c1ad-4979-b625-a7af152dccac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a730a9b4-7f97-4319-aacb-a022530982f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ab44668-45de-45e8-8892-9bd8998c074b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc55e596-7f4e-4df6-84f6-1508f1a4dfe7",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b2f71a-6c17-4aa6-8a12-c8ca12a27265",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d6ba5c2-0943-49a9-b9ef-038c478e0fb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b606a6fc-5056-4acd-b3ca-768c4f501675",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7ffcbc2-c6af-4dd5-b1b5-0fc4fd7158a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b2567f3-2fe5-4ef2-9270-1873b5be97b6",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9e89838-b1c7-47ce-9b7b-c403363f8f3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab680883-f6f6-4edb-b5b1-a33ac3442478"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f959e123-5df1-4bc3-9e77-663ad37d4fe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "661d21a1-2697-4ead-af73-69ff4566a879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e14923fe-8eb5-481b-b513-781351dfd096",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a012b38-42be-49f9-82a7-af6e47415777",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8802a5b5-da46-4ecf-875b-042370e841f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01dc2c92-87fe-45c7-9c87-588c204e2a54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6472653a-9580-4068-afee-64662ef5b24f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee1b1ae0-0e0f-4ad8-96fb-9896e58abfd1",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b266730-19c0-49c5-a52b-0f96fec259a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ce18b62-a1cd-4b7e-8b98-16622bbd6f02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bdf8e13-3c2a-42ec-b6bd-e30cdde2e572",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f90da5e1-ce23-40c9-9fae-69367a34de99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd7cbb40-6d00-4f52-a52b-1597862d0be2",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94be0475-1a85-44d0-83de-af9e30f01d8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c4a78b6-77a8-45f0-96af-3d242d3c8120"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fc5bdf5-0fc7-4159-bbf6-0e2e3493d0f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ca9cce9-12b0-405f-a86c-9928e5a624af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2168c9f-e0c0-472e-abaf-420da754a9ca",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "811eff6a-1687-4167-b126-ae5bc46146da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53a4e9dc-92ef-4f81-ab33-0163a18d0b0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebb69716-aee2-4c32-a980-aa13574b8e7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83f4fc78-a69c-4ed8-bc5d-726b5d8e28a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0f72fb9-c9ee-4fdd-a5b0-0c22ec12c06c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6731fda1-f8e0-465c-bfe2-b8cac8bf2830",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b80d953-45ba-425f-9446-4f367aab1c32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a5bd950-3d35-4059-be8a-226cf1d4f0d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be4d9795-5b5d-46dd-846a-d43e34d52252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f8223c8-94bc-4314-baef-e6ef2b060e1f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e55cdea1-708a-4081-abf4-800bab4afff5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "921ed353-73b7-4cbb-9378-f336e3d7d8d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd5f2fbc-0621-42c3-8737-cb70c49ead94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9b95d40-6751-41db-9de5-9a50a13f53e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a0a9840-1bc5-47d4-8a9c-00bcc77c4e6d",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48481ec5-e4b2-4ca1-8980-bbe997b98b43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08ffc8b5-3ce0-4edd-83f7-cd684ec15542"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed5901bc-1afd-4837-924d-09e6f4da0505",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41ad3b92-1335-4cd5-8883-83c94221da7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1178a923-c39a-4a4b-8bc7-7c38950fd7d3",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7986fa82-6e6d-47a6-9d25-518005248476",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07c05aa7-9741-4514-a2a0-ec5bb2e449ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b10f31f-eae6-4d12-a2e6-520b63ea8112",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9b0458d-e9c9-4fbf-8a31-49b34bc45844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9980f090-fa2a-4120-9707-bd0d6577d32d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e41daf80-7137-4902-9c4a-847fa4b345ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea536dec-bae7-401c-829f-bd70ccad91fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6315d1be-021c-48ee-adb4-369fb359738a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b851128c-e579-453e-84e4-42e20c446dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "034a994f-b938-4d04-9f61-a75019cc772c",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45345f4b-4ef1-47d1-a250-edc82744ac6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1cc1ff8-2573-42b2-a724-dd54a2f42760"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b17c8873-fe25-45c6-993d-fa464bb72f39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b190f5b-be53-45cf-9eb7-24e91b7e5c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b6ecd1-d47a-47b9-9d6c-6dae3ee13b6a",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f0ae8d-5fd4-408f-92c3-c3696cdb9f16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38a35c79-23ef-48e3-9ecf-11c0d3646554"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b24e6d4b-55e9-4b52-9abe-f53af0677853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92a3e51a-8d9b-457f-9e98-e97980a0a6b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bbae42b-7874-4561-aa72-14ec03fb2010",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d37f3ff-48f5-46cc-8637-bda47124f3cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1401fec-0ff6-4ced-a07d-037e947f9b08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4afb4222-a710-4963-9ba9-17df91e07f44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a40e0ad9-70b7-4385-b227-db20690a6a42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8c526cc-6733-40e5-a25c-85c50ead02c3",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6ddc42-52be-4edc-a28c-9d1deea14d38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ab0d106-af49-42fc-a579-b06e0806b905"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cca719c8-cdf4-461a-935b-b6d52d0cbc0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9828fbfe-2d64-443a-89f9-c693fb6d26b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c71e1b7-f29c-49e5-9905-db786cbb04f6",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad47d2cf-5fb3-45fb-8390-24397248f21e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9785293a-b035-41bf-acc8-97f20df82816"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b6f41c4-5bec-413f-bc4e-4b7e4912e30d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "212dbfa6-7bea-46da-ae57-34453f128d8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40371e31-1c31-4962-a826-26f65093ccee",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "249b4797-3275-48e6-9ee9-e4958e4a884b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81254525-cb3a-4c2c-9f1f-47874be34714"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39699e10-0c14-4930-9a4b-a914c5071d16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c21dfe4-d385-48b1-bbff-0fe24b1acb0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c62ccf88-a648-4629-ad6a-3017272fb285",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8df172f-9ee7-4ad8-94ca-1247ce400e64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "667face5-503c-424e-97af-24820fa0202e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0cb425f-efd0-4e26-83dc-033e4379506b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff739ad0-4409-44d3-836a-29ae056903a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d15f97c2-be47-40ec-9536-6be0ede19333",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cdab971-0575-49cf-add2-1acec1fa1e2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28def19b-3e1e-4c32-ba0e-6b430ddea26c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "450d8b71-c897-4d4d-b160-c1aa7a1d4766",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10977b23-a293-49b2-bd4f-0f11f8955475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eda60f15-ded7-4269-a609-bacb33c4703b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe0a20d8-ee7e-40d9-928a-ad990ff13867",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a72fd64-6533-4993-9018-7e6950125b0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bbd612b-446d-4983-94ed-f72ab7bdeb14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bf16969-755e-40ab-92c6-ece99fd5959b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbbbb2a4-aa3f-4e50-a8eb-18731931b953",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea8769b1-ca04-4dc9-ac8c-3b0844ab5ead",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acbcef35-166d-4edc-984d-494882f230cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b98926b9-723e-4de2-acd6-8af6ef5b1bf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c239cf35-597c-4c00-8189-73c2a4ada822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91d66fc8-c189-4e97-9685-2b669a388efc",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e3b7044-1e03-4566-8e9c-eab49b63841a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9c5f2f8-a299-462b-9fe6-0a6015d4e947"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d850d6e2-51e3-41cc-ba87-31b3ec7daff1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a397da69-c3cf-41dc-9b5c-2a85eb32b32a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8baa65e4-1feb-405c-86d8-51be62186062",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dab706f9-0bec-4c22-b1e5-d7ec8a090fc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4336db4a-bb5e-4a7a-8744-f3e5100802b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51bbc6f4-c00f-43ae-ab54-ed34aaed6ec0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f590df69-b445-45d8-a3ac-8efe42903931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a745acc-4524-454d-ae82-f8a0f548f761",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a509bfdd-86cc-4d77-ae2f-4c61aa10a2c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f812ee29-9fd1-4bab-98b2-106f65ef5773"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "600b97e6-9171-4c24-bd8d-464d0facb35d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86afe880-4fc4-4a32-a17a-28d0dcd6ca56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4c2eb98-3b01-4a1c-a43e-4c9278ca73c7",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1df26246-97aa-488f-9202-30ce5ca8ede5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fffa59e8-09ea-4c10-bf8c-da0a4253fc72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "892c5dc4-aa66-408a-8e79-08caed675dad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7422ca41-49a1-41e5-b726-db1b039bd145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "686d6ebc-bcc7-435a-a700-5c0b4d57c37e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa5beee-cfc7-4b8b-a5ce-7135446ccbbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a986361-341f-4f9b-94fa-082cba508a55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55396750-29ae-4795-9615-1025bb1addf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "676b1e60-03b6-45f2-933f-2e5598a9c433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c113d99-4b0b-4f12-969f-a3c689968269",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3947b62b-afc4-4898-b665-c56908a49a4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c132e1a-ec1f-4d7c-9f47-e16ce572fc23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04b2b827-3473-42cf-a4ee-7797ffccda21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66abebba-f7b6-4007-8612-bb191ed74764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3abb53f-517b-410a-ad66-e68aac1f847f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a08c5b-d5ce-44da-bbb4-011b60b1b041",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fc60efe-bbf4-4861-8143-3cf0a55225eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2cad49a-738a-4e7c-bb00-4dd4892173f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b833df9-04c2-447a-af1d-2df10704bc82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9a8dcbf-42a1-41f1-b8a9-d044a370bd09",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33f7610-91a4-4616-a2ff-0816b8cade8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26bf7cc0-4562-46b1-81b1-90e74556adcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc87241-6fd4-444e-9759-45debb98a8b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "326d906a-93b0-48ea-a2a9-1a6948bbb3c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eca443d-fefd-44fc-9e4c-4cf81d5114c3",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12bf3b47-63a3-4a76-a745-8810c65efd8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "584ef8cc-2fc4-4bab-b8bc-d58da145b038"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac66e51c-e8ff-4d73-89a0-3fea2c7b5a16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3c05fe1-66cf-4d64-83ab-00869e322b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c5e28f1-272c-418b-9e6c-3b0fc9f07095",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b528a32-69b4-41b0-a8f4-7df85b7761f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af671e62-4ca3-4829-8adb-5179c62c0a85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2efb9aea-76f0-4783-ad4d-b51c86752667",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ded57a8-cfab-4838-acfe-781d3409d7fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b962188-73da-41a6-9dc8-9162565d33ab",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077a6012-33aa-4e0f-bc4f-e9a91af62b27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8945182-c0fc-47ef-ae4f-392c2cff7c72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82091bef-4b55-4a68-a2b6-204bea65fbfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc4ef097-0776-42e1-8c7d-3b1e00c671a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77739056-eed3-4665-b121-fafbfc29fff9",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc91fb4c-6642-4d80-98f8-1ca47e2ad643",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "245e5999-8493-4249-8fe0-ce146b9ab03d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc0dd7d-342b-4d85-adf1-6354626c3a80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1907ba00-1fc4-42d2-b102-0825b110e263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fab222d7-7878-4ad3-b184-2a208fee1bb8",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d4ff8a2-9865-47c1-b9cb-55de42d59549",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10929f04-991c-40d7-a593-2511e4c1f56f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ea782ff-b4af-48e9-9491-46f71a751ca6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eac53156-9f57-47c5-a0c9-e35e3827a367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf6205ff-6e55-48b3-9038-35e70e32e996",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c696154b-c07e-4dbc-a854-cd9092da074b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63b96e58-8fcf-44a0-9692-86aa10b06f55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c56c0dd6-830b-46c5-a3bb-f8b3a0076362",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e3d009b-fe34-4114-8566-14ad53166cf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f2619d9-133e-4398-8ff6-d11cd5ae0ef3",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f8f6368-d473-4b28-940d-69e6ae9fff6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15799c90-ee8c-49a6-8cc4-2cffead4a2a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34686d50-7cf2-4b87-a089-c701e49c44f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8db608aa-da4f-4fe6-9ad3-a24883dd9cf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00d8350d-de04-4478-937a-bd4b307b3995",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f43efb2-bf44-43da-9c2e-828362b14430",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed4af278-7941-4a1b-9e32-56cf48fb1a3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3509d811-bd0e-4ef1-a490-5767091c677f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb297cb6-389a-49da-98c4-4e4a92e5ef1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c51e16b-1da4-4db8-a88a-d79c2c886535",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "258fe2d2-6a95-4bd8-94ad-0b727c625476",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a91a0ad-9d64-4022-8994-138969c9aab8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfc5a25b-27a5-47f2-8b27-5745a59e9c26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19134719-e626-4587-8030-9afe53327ddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1e3157d-1c5a-43c5-9992-ffd74ef64057",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b8ae76a-fa1e-41b6-b5f6-d9c108aae11a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b023258-1279-46e3-b743-5a4d654b6044"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "179e9b00-95be-47a0-98f2-eeaaf44c1600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea780e48-b3bf-4675-a345-95cfea3938cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e106a50b-86be-4e6a-96dd-3eb6886f18ef",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f34d88da-0c03-4403-9f27-787ef1df1ce2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ce13102-fed2-4fc9-b1f3-ac37d1439917"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "548c143e-52c4-4a7f-8d68-562c7bc45e1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a967537-e514-4843-857a-9683e2488902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1579f05-29cf-43d6-9f4e-bc86871ab28f",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0bddec5-af0b-4151-8de4-42639dbc6850",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4f87a51-0eb7-428a-9f8a-f1eaf18e88b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb4d391-fad3-4e20-a9dc-01c0044cb8c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f45fef66-52f4-4514-bc2c-309931183100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d299751b-5c2e-4780-aa18-2da7eadb5c16",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd56cb38-7edf-4273-b576-d0518dce884f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09e382d9-5094-44e1-9246-3a28138a6d44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e744d45-9ab9-47c2-859c-5dc298ff43a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19b9ddf8-4f7b-4828-81c0-f446b16bfbb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee55912d-e355-4741-bad7-0d88fe914dc7",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe463f67-9c0f-4902-a432-5e65701f985d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb11ccda-e9ab-498e-b7d5-34f092657bb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eee8cc51-2205-4d8a-bae9-722bb58029b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d02ff27a-90d5-4790-91a8-ebe123614a69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9708769-f5b7-46c2-93cb-e4407e532d45",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff3ddaea-0033-4466-8bc4-6179c34cc2e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4e0ec3c-9adc-490b-b171-1f44672aff89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb97c738-af28-49f0-a2e7-87391d5f7e05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a8c52b4-71d4-46a8-98f9-1ff82312e42e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "091ca56b-8e4e-4ab7-95c0-91fcef71284b",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14184e16-f870-44ad-8a0b-bdf6e7023f17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fb4ee45-6b77-4e03-91e7-0203cc140678"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7871d639-72b2-4d21-8c5e-df5392499ab7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "985522df-08d2-4772-9071-00c49d71a686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f65f4488-aac8-4509-951e-959c31479794",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d251f38-c043-4e4d-bca4-f0f11bdb8780",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8233315-739b-4181-b98f-bdc189d7899d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "190644cd-d13d-42a9-959b-cb39e952da31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7769eefd-3543-436c-833e-f02b8193579c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b5659ac-4eab-4840-b20e-d6114b526b8e",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da80ea67-620a-4023-97f7-d16aa022b24a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24b44439-eacf-4741-8f1f-723c7ad3847a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ede8e5-9a70-420f-a408-11896ad0a64a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7db000ed-c190-4cbd-b7f3-8d8bbaa5eb35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14aeed5f-cf23-4561-adc0-89183da44d3b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a9f0885-8414-486b-9886-b3037aca5e6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "430230b3-fb6e-4692-8143-04251075799f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e404af46-2b06-4bc6-bfe7-b69a2a519cb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e26e496-fa91-4005-acab-5a8fef1aa09e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "008fa2f0-08d4-4c5b-aa74-a9746a143c26",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e00eb3-8942-41f3-ba4d-7b4410b959a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76e5bb3c-ebbb-4060-a521-bf4f8276371d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2245a310-0829-4001-9074-78a3336896f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "855fa2f6-4bd2-47a1-bd11-d3ba4b3e946a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d73c3152-922f-4665-b2f4-c16342b03749",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f81d23f1-2459-4673-9fa4-dac2b07948fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60e03f2f-74bd-4af1-bb75-859837c4af07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbfe3c22-71bb-4d85-86d2-6c1e3838d82f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be44bd7c-beb6-4a79-b07d-3f1ad2d9531d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46fa4ebd-385d-4958-b2a7-90b3a242e2a0",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4c6824e-f41c-4c83-886c-dd4d29961bf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99db2254-ed69-4dcd-8c36-ae2a00eb94eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc6721f9-4101-4b56-8f89-d6f298f0667d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dca165d8-0631-40b1-849e-fda36e5de59c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe9f895-c648-4f00-a80f-ec54193bb0fc",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74c32f83-0905-4752-92fb-de5799616625",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44a5a29c-4ebf-4a6b-86df-8dc85056a654"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7118c774-580e-4fb0-a682-9eed9ab95d76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e4f673e-5efb-4f8f-a690-2733554ccaa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6df866c-c677-4a91-8d44-103b32c5016c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d75566-9b8d-4489-8525-1697b3a0f755",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "159278e0-7226-4b0d-9aa2-4fbd3f8c4060"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32172be0-2845-429d-9ed6-25885f72e6f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1762590d-c43b-4f67-8cdb-aa6b3be4cb27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "224bcd53-209e-40e3-b1ad-32302d112ee5",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2437ec98-6572-4995-8a6f-cdb2c7d4ae50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e24ac50b-90f9-487e-b066-8d7feef4a53d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aef5475-8ea2-4268-be2c-0d59a9fbb959",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d009d50d-f68d-496a-b203-587005dc698b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c8926eb-a31c-4914-84e1-41355c68fd6e",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5f5daab-7c17-4f53-83a2-c89c16a35e0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7bf8719-388f-4519-84a5-2615eddaeaaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22ddb1e1-e221-4c7f-a43c-be6c00b7a341",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5eb581a-5a51-41a6-8904-dcff64ce982f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe456d1b-7983-4317-b042-37eff4ca3895",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0befaae9-d556-4e39-96c1-4ed3499b5bdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6eb2447-9fba-4c9f-8901-011ee39c6565"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac9d2c5c-72db-44d9-bcfe-c31c1705bcce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2df4b90-b1a7-4fed-ae98-21a8f26b1a83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "306432b5-a0b5-48f7-9749-b40ca23398fd",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba485149-13bc-4ae7-93a1-86038933460b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39a1b263-e646-4b12-9560-da97618ee7e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "107e0d05-774b-452e-8f28-7e53349e3c08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04bc2ce8-1c6d-47db-951a-fd1622d36e95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5bec36f-cc5b-45ef-87dc-565bd276bb15",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "044127f8-9a0a-4c7e-8757-263b694039e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8eaf817e-84a2-46c9-b174-10aa57f61742"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f5c7c5f-5cd0-42a9-b0d3-0f4172781bb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ca69225-0b7f-4480-bfcf-07b5c11fcae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e2afdf3-5e74-46b2-9aea-9f305dfbf39e",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeb1a4c3-728f-48d9-8d9e-e70cd2ff00de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0ffe260-76f3-4fb0-98a4-af9240112a16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b88cbd3-08fc-4570-8e0f-45c8afc65df8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8f943ba-9176-471f-abbe-5025e9ad5c71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7f786ef-3714-4406-9023-2dedc183b862",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6621935-c094-489a-a9cb-c9097b8b53be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a0f85fc-1e76-49dc-9f08-9eea76d75a5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e8b458b-14ca-457c-bcb0-053ab2b77098",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b112e26e-5e82-484f-8c53-069716a34857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb59cb35-6c7b-4404-a0bb-01c667054b09",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bebb5d3-a86b-4c3f-a449-3cb66311141b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "959a04fe-ad9f-4fba-8905-2dd142033b0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c820abe-d967-453b-af79-4b6661fb4a8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "756b906b-d286-4d93-bff3-78026ac60cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b5643c5-ab69-4c85-99f6-60af75390bc3",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aef38ed-f3ed-48e8-903f-7436196c75fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89b8861b-d922-41a9-9305-8bfbaf5ab0cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad71fec-7f5f-47df-9100-985fcf7fc680",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63d6a677-9291-4005-b01d-b9cc9627001e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e5f1fbc-4d07-4b1d-a441-aa4788f8a7d7",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1adc92c6-ed5b-4339-9e03-1c7c210845af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1492ce1a-4c0c-4f4b-9c0e-7e3af402e5bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdce4ca3-7c06-4b97-8819-5d4a279b5952",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b733a25-c0a4-455c-aed0-cdc32b70e0d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acdc146d-72ff-4c08-b0d9-9182da13e8b7",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23e3c516-ea9a-46d4-9be4-b99acb468eff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1764600a-7439-4903-ad52-3a1f1d33ba33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a24b624-5788-4d00-a705-ad97ad866c9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fef7abd-5ad2-4fcb-ad5a-0e84851cee39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8140069c-213f-4239-9b36-4d069058b9ee",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa4a544a-32d4-4437-8f6d-7c2f484a0ed5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7182bb1-7f0d-4e84-9b0f-ea71cc5f9ef4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a8913b3-e626-4c8f-ace5-ca3ce791b83c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18178bd5-7711-4c8b-a5cd-66c39910275a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a8cae00-ce52-4e1b-86a4-29dac170897d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4669ddee-b536-41c9-a4d4-22457a0670a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7593b6b-debb-46b2-8f9e-73e9748599da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f029785-65bb-423e-949f-7072ea7d64de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "875b5675-9d25-4b48-a06d-1dbe11800f0e"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ede07c47-8d2e-4054-a018-24887971bb2c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "912ea06c-b1f2-446f-a1f9-f0c271e31b09"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a9c4b7e-0786-4438-9ac3-8ee5f8ddaf60",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "592e2c14-bc3e-4153-81da-f47094dae855"
                    }
                  }
                ]
              },
              {
                "id": "e4f3f3e3-0c42-4df3-80f9-e00cd760d971",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ec40dc04-eb14-43fd-b713-0c1f013f6b15",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "629bb755-6273-48f8-89ed-73b4c345d8f9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "10a25534-9bb8-4478-bd85-9d1c0e2b8212"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b1abd55-42fb-45a8-913f-c25d08a25a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e9361265-6a7e-4533-9ed7-9bcd8744e025"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2c9ab86e-6745-447d-835f-4f3fb8d47653",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0c5bbf13-f2cc-4cdf-98a6-e18396963219"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b2fd94d4-1381-424a-9642-766cc7ff1204",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8628cc03-14be-4503-b4e1-124c52e0aff4"
                    }
                  }
                ]
              },
              {
                "id": "18ec08a5-3075-4e50-a281-607016289fb9",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "369f088c-cced-420f-8113-d01973d41d1a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1959589-6ecd-44ef-bd06-8a826d65172e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "4950c0fc-d37c-4c2c-901f-010f0888b6b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe900dd-4036-434f-bcd8-7e3cb699cf37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5cac30c-fee2-4457-b808-cc6fab1e3273"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "29a4be83-8325-4566-99ea-b6d88ef04ed2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "abfc7b1e-78cc-4109-b7a9-bbe65453dfc9",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d3f6f865-fda4-4f5c-b48f-4ce14230266e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "52a8fa8f-c9f0-4ac4-a15d-1640d8818e5f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d20d38ef-caf2-4e9e-afad-5ad624e42890",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ed9acaa2-81d8-49a7-8c18-837ca6f38763"
                    }
                  }
                ]
              },
              {
                "id": "ee066914-3404-4f4c-bc78-4334aaaf253d",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "374cf19c-bba7-4ad2-8cef-f504cdc61949",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ae523166-4b13-4e38-b7cc-f160baaeff9d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2d6614c6-c873-4e3d-9cd3-7761f4598a06",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e10e3aee-ed0b-431d-b4f4-67e59aa7b078"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e43275d4-b704-4a29-b700-004697b303e2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "d7979897-92eb-4817-8d33-eed6ef0ad76c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c32dd3ad-8d4a-4c92-bf79-6f408841162f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8ea7c8b9-b0c9-4ba3-917b-b9fd6b21de72"
            }
          }
        ]
      },
      {
        "id": "23c202f8-7adc-4f4e-967a-be8abbad7ba8",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "595ea01a-fa16-4e68-95ef-7e04c17b9197",
            "name": "Negative Testing",
            "item": [
              {
                "id": "78025005-0863-47b8-a544-7558436d77fc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6b7ae8a7-15ae-4653-be6b-2092829a62d0",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0b51c48-c30a-4399-9c4f-83a0f9057c28",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d0ee42f3-5950-4f12-a0cc-bbb30b9688ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27eeaceb-0efa-4959-a40f-c54d2660f551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "748f433f-185c-455c-88c3-b9d20ac5dbec"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b2340ef8-ea64-447c-bfb2-f75b807b175e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "056ea04c-1f73-48c4-83d4-6f26222b1ec8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9bc260a1-f5b1-464e-9ae6-92402d250db2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2df85d61-67b9-4d8d-ad45-e5fb5ee24347"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "844257a4-b158-477c-bee5-3109df30f6f6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "75403fdf-055c-4cf0-87d7-9f01bd8ac45a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8da1e26c-d70c-4b18-ab32-278ba5e7d60d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b47a2f1b-dd6f-4987-9ad3-c404a12d25f4"
            }
          }
        ]
      },
      {
        "id": "1488d133-1b3d-43d6-a626-3c04acecd257",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "5930d063-7aed-4318-b095-9fa96812aac0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2d056071-9efd-4d04-938b-ee4369f8166a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c2c474f6-2146-4316-9ee5-0ef5530865e3",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f026b66-f99b-4177-99dd-8c24629b63d1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72d56a69-7829-4230-b447-123b8c7a7343"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d86236bf-cb6e-44b4-9ba7-5b788853ad0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c6db6786-e535-4e93-b446-22df675589d9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b2225ece-0d81-4529-af28-130124fb9ec5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e4658ad0-2f87-486a-983a-a6d64e91f21e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "93991c06-0e92-48c3-ad1e-c4f9a70d20d0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "56022575-face-44d7-8dc6-49fa5656e9fa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a903d0f8-c83e-46f1-9ca6-ff7ba091b118",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e852161a-3105-4f46-a869-ada897d69caf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c889f9a9-71f3-4466-a15f-2925b9bdcf1d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "922b8236-37c9-49e8-a398-56e9f18ea561"
            }
          }
        ]
      },
      {
        "id": "e7e5f384-01b4-4240-9c43-3e571d652bf8",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "50304901-35d8-4d13-b497-ee7becac2b8b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "70ca6068-3c88-4ddf-9062-f6bb7f34d320",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3b735659-4d4b-4bd9-bee4-d9863b849654",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71e39aac-0970-44d6-8bbb-ae4662dff2b6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bac9ec81-5884-46a4-a837-327001a2f216"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d019422-c7a0-4cec-b6ff-32f06ef54863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "88e70fb7-ad6b-4bd4-bcd9-2de6ce08141c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f4503862-c102-4692-a914-10978f1f2dc5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ece01d18-b79c-4316-8aae-68af68042b81"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "235183c2-3c35-4a31-897f-9e47258afd2f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "80a50c51-30d3-4ffe-9bb2-d22261c49f5b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1709d403-53d2-4c92-aef7-3edf81bfa23e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c1926c3c-d657-4c20-9f05-ce2c930f03f2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f892c40f-5fec-4259-ac6f-2eba362d7105",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1259ac0d-a24f-46ce-9e70-4cd415d756c4"
            }
          }
        ]
      },
      {
        "id": "9e985c64-fe1d-4acc-9bc8-f48d3d6399b2",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0a5beb85-1a08-4ccd-b5b4-0ad2e9cf8c61",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dbb4bf6c-9a3a-41e8-aa35-893099c70af8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "3e84f340-3fca-4464-82ab-c949986a1af5",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f09f4696-49dd-4d2b-8a83-9646097be195",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4e99b778-f333-40c2-96ae-749b30dfbf9c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 33.793650793650805,
      "responseMin": 7,
      "responseMax": 446,
      "responseSd": 34.17144390767234,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1719621460218,
      "completed": 1719621476786
    },
    "executions": [
      {
        "id": "8c16298c-c2e8-4685-a158-5ad8bcb308e3",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c142100d-fc53-444b-84ba-79fb7de67621",
          "httpRequestId": "c9fd1177-caac-45e2-9cc7-66bd6ac7234a"
        },
        "item": {
          "id": "8c16298c-c2e8-4685-a158-5ad8bcb308e3",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d3b71e1b-f6a0-4fd4-984e-d1e0db21632d",
          "status": "OK",
          "code": 200,
          "responseTime": 93,
          "responseSize": 0
        }
      },
      {
        "id": "51272ea5-ce7f-4fac-a0f1-970151d92e44",
        "cursor": {
          "ref": "a907efcf-c02a-4902-af0d-17fbf8e22562",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f1b4f804-58fd-4d60-8348-0a67dfe283c8"
        },
        "item": {
          "id": "51272ea5-ce7f-4fac-a0f1-970151d92e44",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "20984a74-c128-4e3b-a971-7fceab947fea",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "b56b825f-978a-4164-91ab-7af08f10f436",
        "cursor": {
          "ref": "4948d4b6-8772-4c5e-8085-3a3f4ed104d2",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e532d663-a6a8-4609-9f3f-265a67577bb1"
        },
        "item": {
          "id": "b56b825f-978a-4164-91ab-7af08f10f436",
          "name": "did_json"
        },
        "response": {
          "id": "c6b544ac-09bf-418f-bd04-a140786a1eaa",
          "status": "OK",
          "code": 200,
          "responseTime": 272,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a13058-ef1a-4b9f-bd9b-3509a0915c25",
        "cursor": {
          "ref": "c2e28c2e-8cfe-4137-a4d6-cc8a4685c7fb",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c308081b-8291-4bf2-a81a-e92ff87c850c"
        },
        "item": {
          "id": "49a13058-ef1a-4b9f-bd9b-3509a0915c25",
          "name": "did:invalid"
        },
        "response": {
          "id": "05fd12d9-8dbc-4bfa-8908-c0dedbda553a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a13058-ef1a-4b9f-bd9b-3509a0915c25",
        "cursor": {
          "ref": "c2e28c2e-8cfe-4137-a4d6-cc8a4685c7fb",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c308081b-8291-4bf2-a81a-e92ff87c850c"
        },
        "item": {
          "id": "49a13058-ef1a-4b9f-bd9b-3509a0915c25",
          "name": "did:invalid"
        },
        "response": {
          "id": "05fd12d9-8dbc-4bfa-8908-c0dedbda553a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5374c12-ae07-4b2c-a536-1cfee53ea310",
        "cursor": {
          "ref": "1736d412-9058-4451-95d2-75865933bec2",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "90451719-f36e-495e-9154-dddc00c5c876"
        },
        "item": {
          "id": "e5374c12-ae07-4b2c-a536-1cfee53ea310",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "42ce99f4-c6f4-4955-895a-168c524b639a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 69,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "511af58e-d065-4585-b44d-3c5520fa3e37",
        "cursor": {
          "ref": "e4c9e884-4696-4503-99e9-2627b77c2541",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "07d9c56e-8eb0-47ec-b059-4b78f3d84274"
        },
        "item": {
          "id": "511af58e-d065-4585-b44d-3c5520fa3e37",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "b4dc0ba0-b5eb-4851-af91-2b7bdcd5c1a4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "670b7ce0-f256-4954-bc2f-8121f6e468f5",
        "cursor": {
          "ref": "17c6e68d-ca39-42cd-b212-3666fda50dbb",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a91638b2-b281-4613-b5d3-8c3d0326cb82"
        },
        "item": {
          "id": "670b7ce0-f256-4954-bc2f-8121f6e468f5",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ad34fbfe-5664-4742-98e3-06864bedb7c5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fada43ff-9042-42a1-a50e-20c5465d0126",
        "cursor": {
          "ref": "e98fcee8-83b0-4068-a316-8b5263d017fa",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9f6a5771-d8a5-4f45-a790-16732ff51693"
        },
        "item": {
          "id": "fada43ff-9042-42a1-a50e-20c5465d0126",
          "name": "identifiers"
        },
        "response": {
          "id": "28f3de68-293f-46b4-9a5b-0cee7e2e2eb2",
          "status": "OK",
          "code": 200,
          "responseTime": 446,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f964184-6f73-4fc7-b7f7-500c5814f0ba",
        "cursor": {
          "ref": "2622271a-4142-4eff-a3fe-81de36b86139",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b98958a4-c9a5-47d3-a766-e5c2636d6599"
        },
        "item": {
          "id": "6f964184-6f73-4fc7-b7f7-500c5814f0ba",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "c13d7bed-46a0-489b-9319-d787b5ee20be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2400d33d-5d4d-4ff0-b2c5-75a655a94844",
        "cursor": {
          "ref": "94182d94-2bf7-4504-aa5e-6004f74543fa",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b3ea0efb-9996-449a-a81e-5747d6b811c1"
        },
        "item": {
          "id": "2400d33d-5d4d-4ff0-b2c5-75a655a94844",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "9f155cea-d92e-48eb-9ef6-dccfa34aadf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "694fc0c4-7679-4493-8757-aa627382aeba",
        "cursor": {
          "ref": "212bc7d1-fca3-40d4-9c77-340063d7f6d1",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b427c04f-0886-426a-b74e-04a5f9087b37"
        },
        "item": {
          "id": "694fc0c4-7679-4493-8757-aa627382aeba",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "cc175c08-3525-43e4-82b5-dc754b3ac3b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb570cb5-bc36-442e-be9c-4266f0873163",
        "cursor": {
          "ref": "9c69935a-e53f-4085-92dc-65ca237d3aad",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "5aa1f143-c334-469a-b72c-2e3c6808ef7e"
        },
        "item": {
          "id": "cb570cb5-bc36-442e-be9c-4266f0873163",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "52e0be03-dd34-4119-b560-ebec7fde4ae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92014dcb-5713-4751-94c1-525f33755b73",
        "cursor": {
          "ref": "dde7d7b7-6f4e-41fe-bdac-1ade71bb34ec",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ae800803-db20-434a-a986-d342e83ffc8f"
        },
        "item": {
          "id": "92014dcb-5713-4751-94c1-525f33755b73",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "9ed02bb9-dbc1-4f28-8b1d-ea78c7ac94a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a95ea94-98df-4875-845c-f5aeea3e74e7",
        "cursor": {
          "ref": "bea9b812-546b-4235-b13a-215298a08871",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d4c39d61-2ccd-4c2c-a407-89d14200def5"
        },
        "item": {
          "id": "1a95ea94-98df-4875-845c-f5aeea3e74e7",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a1149a72-299f-4bd1-a98c-c18d0a7def20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a374380-dd87-4ffb-9a5c-b94c8de732df",
        "cursor": {
          "ref": "fd8ab006-d198-4966-bd68-d97caf854d44",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "4a210ef4-11f0-4cbf-9813-2cd818f7baac"
        },
        "item": {
          "id": "5a374380-dd87-4ffb-9a5c-b94c8de732df",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c3a98b09-7835-4b74-a242-a93e00476638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36fa15f4-6546-4be1-92a4-56da58ccecf7",
        "cursor": {
          "ref": "0d7e6210-9dc1-49f1-ba31-1d7ba8d03f44",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "69ad0a0d-4118-408c-803d-dd94ce468eb2"
        },
        "item": {
          "id": "36fa15f4-6546-4be1-92a4-56da58ccecf7",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "339d7652-87bf-4ed4-a50d-060543936e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e73400-3c18-43f0-82d4-346742375364",
        "cursor": {
          "ref": "fc7953c2-a465-4aa7-a27e-9a470a7d9313",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "748cbf98-16cf-4de1-9f62-b19eef4f80f7"
        },
        "item": {
          "id": "31e73400-3c18-43f0-82d4-346742375364",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "8bdcb96d-0540-48fd-8298-8179f93a22a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b1c6e8-1137-4f23-9be4-4a816767fc4b",
        "cursor": {
          "ref": "d779c8d5-0e37-48fa-98fe-d34f46dd20f3",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "72ad3b5e-b8ed-4039-90cf-cfb180b501da"
        },
        "item": {
          "id": "d6b1c6e8-1137-4f23-9be4-4a816767fc4b",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "4978ae7b-eb80-464b-9530-024b2a6ab94e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5561b629-6397-49b0-89b5-f24f61745d2c",
        "cursor": {
          "ref": "e97bdb3a-59e2-42bf-8db5-46047479ab25",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "33877341-69c2-4bf0-9037-a08b4e5118ec"
        },
        "item": {
          "id": "5561b629-6397-49b0-89b5-f24f61745d2c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "3354a57f-5706-4aac-b1df-b8f89cd58146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf63b90-6720-4b99-bf39-a930ca7f7e2e",
        "cursor": {
          "ref": "540b2423-17b9-4538-bdff-568a9b96e612",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "ef827a17-8f77-4938-9c2e-259db7e35a55"
        },
        "item": {
          "id": "9cf63b90-6720-4b99-bf39-a930ca7f7e2e",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "078a7e9c-04b8-4370-8b5a-24264e6edfa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c728a546-5714-446d-b56a-60578163145c",
        "cursor": {
          "ref": "7dc4b3e4-dbc1-4aaf-99d8-23c52ebdab46",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "73d56be5-465c-40c7-9ace-8b73ea6fe98b"
        },
        "item": {
          "id": "c728a546-5714-446d-b56a-60578163145c",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "fe31f0e9-ec8b-4250-bd60-cf3129d01eb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceebb912-576c-4588-a34a-1b049dd631e5",
        "cursor": {
          "ref": "2725bfbe-e566-421b-a1db-d76cbac80510",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "38cb969f-383c-486e-ad2b-9311212b28d4"
        },
        "item": {
          "id": "ceebb912-576c-4588-a34a-1b049dd631e5",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "fb6c002c-8643-4118-8301-6a8004dd3249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1574e11b-fba2-4f66-8db6-c4715694e60e",
        "cursor": {
          "ref": "d229eeb0-fdc5-4444-942c-7b16090097c1",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "822800d3-163b-4db6-8375-dd60790d4f8c"
        },
        "item": {
          "id": "1574e11b-fba2-4f66-8db6-c4715694e60e",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "6d4836b6-6034-4750-b62c-229c2616883f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5499c734-40df-45dd-9b45-3acbd17c3e78",
        "cursor": {
          "ref": "1b46e69b-c430-4ddc-81fc-d8c39c07a79f",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "9f917948-1d11-479b-ad77-67efbc5aedd9"
        },
        "item": {
          "id": "5499c734-40df-45dd-9b45-3acbd17c3e78",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "262ec106-7bba-40f1-a637-50c42a7fbd71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e533f297-56e4-4bf7-93fc-c93022476f41",
        "cursor": {
          "ref": "552e1d86-e671-4831-8d76-816601bfed88",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "d255edc6-821f-4411-a8ec-5e2cc8840d5f"
        },
        "item": {
          "id": "e533f297-56e4-4bf7-93fc-c93022476f41",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "3b3ea7f0-13dd-466f-a42e-edcebfc5e2dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "033ba019-5648-4f6c-9627-3717715546e6",
        "cursor": {
          "ref": "a8a66acc-e54d-418b-b6e9-c2287c153509",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "9009af7a-0db7-4c4d-b5b7-6e2efb974474"
        },
        "item": {
          "id": "033ba019-5648-4f6c-9627-3717715546e6",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "2f769bf1-5595-4906-ad2c-99f8b1a89f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84871721-0900-4cc5-9a74-b29d9cf8b316",
        "cursor": {
          "ref": "8efbc3d7-2863-4bf3-a12f-3f245880ee44",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "162bab94-ae18-4f8b-9b56-f0193daed7ab"
        },
        "item": {
          "id": "84871721-0900-4cc5-9a74-b29d9cf8b316",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "db8d12fd-4c33-4fd2-b879-e67047e9798a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63f1fb1e-e352-4116-9752-a12cb3891696",
        "cursor": {
          "ref": "5ec4861d-1733-44df-b9a8-93e625ef8ae7",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "4ea6801e-be9f-407a-88ac-3a41e08301c5"
        },
        "item": {
          "id": "63f1fb1e-e352-4116-9752-a12cb3891696",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "584e2d24-6f53-4e47-b6ed-ea94a5293225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "231bdbaf-8ccd-4958-b4e8-bb006f383779",
        "cursor": {
          "ref": "998eb2c9-227c-4d57-8aab-6f803d068f28",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a4e74b95-989a-42a7-aefd-bbabfad38291"
        },
        "item": {
          "id": "231bdbaf-8ccd-4958-b4e8-bb006f383779",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "38735335-705c-46bb-a291-295c321ab63a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a7d4c23-661f-4e9a-a800-0d2b17af3641",
        "cursor": {
          "ref": "b212e737-cf76-4ee5-b676-0ea8fe33ad28",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "ccf70875-6500-446e-9033-522b8af76399"
        },
        "item": {
          "id": "8a7d4c23-661f-4e9a-a800-0d2b17af3641",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c56fc8d5-3d2d-4bca-b20a-a9ef783fc1cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f6e8c1a-91f3-4488-8749-c5724036ef2d",
        "cursor": {
          "ref": "79804199-c6fa-4172-ac30-d58ac7044513",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7a040369-a847-4e1a-8d55-c084399375a9"
        },
        "item": {
          "id": "7f6e8c1a-91f3-4488-8749-c5724036ef2d",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "dbd4e1fe-396b-490c-8092-5832edd4c84b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df31e52b-32f3-415e-95d3-b41cd8f22c0b",
        "cursor": {
          "ref": "64badc50-4faa-40b9-b92f-df5f7bb69a63",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "3f1d5779-3622-4d49-ae5c-64f7a556de63"
        },
        "item": {
          "id": "df31e52b-32f3-415e-95d3-b41cd8f22c0b",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "43ba2607-fb24-4612-a01b-200c8bb41551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feb39c9b-96bc-4671-8d97-71fa76d41c8e",
        "cursor": {
          "ref": "1cffc4b0-95fc-4271-a40d-78d01ef6512b",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "52ff6b6e-4516-45c2-aa17-d3a191b6ed5f"
        },
        "item": {
          "id": "feb39c9b-96bc-4671-8d97-71fa76d41c8e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "69887dfd-a717-464f-b5ee-fac6d22352b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3685baef-9e6a-4c1b-9651-f9c53cd7b100",
        "cursor": {
          "ref": "c9aaa4fc-d3dc-46c2-969b-a05b1f0e199e",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "2f7efb63-01b4-4542-bd8c-19f41ee99b21"
        },
        "item": {
          "id": "3685baef-9e6a-4c1b-9651-f9c53cd7b100",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "c6b7af4b-8efb-43fa-98b1-af268a2ff00a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91d648a1-4fbd-4537-96a8-cabcdb5e312f",
        "cursor": {
          "ref": "59a04134-5184-45fd-bd42-f572da7b0293",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "9d1dc896-e4b2-4594-ae95-ebc89eb00ad6"
        },
        "item": {
          "id": "91d648a1-4fbd-4537-96a8-cabcdb5e312f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "8ff4a933-6c6a-4676-b949-cb82492fbaff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ad302c0-fbae-4815-a872-1ae5b6659878",
        "cursor": {
          "ref": "fbd524d8-a212-4552-b969-70d19626673b",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "cd88c8a6-5d27-40c0-8ee0-971b8d085a0f"
        },
        "item": {
          "id": "2ad302c0-fbae-4815-a872-1ae5b6659878",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "d6e92a05-eb15-43b1-8e4e-7dff065da4c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a1acdd3-9180-4f75-bdd8-345652a1c894",
        "cursor": {
          "ref": "8a313599-f69b-489e-be35-836d00b7211a",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "4bd21b33-0b01-4100-9871-5a3b9926010a"
        },
        "item": {
          "id": "1a1acdd3-9180-4f75-bdd8-345652a1c894",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "10b3da0a-1f30-4d6a-9db1-72879c6850a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4ee6079-1164-48c6-8fe3-ded6c98ebb9b",
        "cursor": {
          "ref": "9a2f2bec-d0ce-4a0d-9e6f-c493fd0abd00",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "4267d6a9-5e7d-4634-8574-e0d35b7deda6"
        },
        "item": {
          "id": "b4ee6079-1164-48c6-8fe3-ded6c98ebb9b",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "0aa3add3-c125-42fd-a212-d7d42ab2aa8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0152bdc5-67b9-4dee-9d24-9cd665f42f35",
        "cursor": {
          "ref": "6255f112-4a1d-400d-88f2-af5b485f943c",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "e5c2919a-f400-472f-8794-4b00165f6fc6"
        },
        "item": {
          "id": "0152bdc5-67b9-4dee-9d24-9cd665f42f35",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "edc202ec-1e18-47eb-afc1-83c093f24e47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "448c9282-160a-4cba-b524-9d6d73a47372",
        "cursor": {
          "ref": "c2bba097-7601-444c-88b1-967c10461133",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "9337af1c-0152-430f-84ea-d63c24094f2c"
        },
        "item": {
          "id": "448c9282-160a-4cba-b524-9d6d73a47372",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "adb9bc4f-3433-4b6d-97fe-7556a160e61a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c48e175-06df-4599-9dc5-0585263908e2",
        "cursor": {
          "ref": "3c5d5eb3-9aa6-4cd1-9c5d-0fec0d174dbd",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "339ee630-fd34-4249-8663-b2a9a3ffd203"
        },
        "item": {
          "id": "1c48e175-06df-4599-9dc5-0585263908e2",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "c6eaffd9-42d6-4825-8df3-d27b66ceb156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40eb9078-ebf8-4d0b-a643-e142e4c5c1cd",
        "cursor": {
          "ref": "e3eef207-745c-478a-b51f-0623a135712e",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "911f8114-3153-4245-b8b6-1c6ed42e6db6"
        },
        "item": {
          "id": "40eb9078-ebf8-4d0b-a643-e142e4c5c1cd",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "2d782228-6a71-468b-8c2d-fb461e602ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26969ad2-f369-4022-b305-0f6fce87f1fb",
        "cursor": {
          "ref": "601b432b-11ad-4147-820f-2a9c08f8c3b0",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "8364280a-a7a5-4706-9072-0f79f3cd2b5d"
        },
        "item": {
          "id": "26969ad2-f369-4022-b305-0f6fce87f1fb",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "23e33fb8-b88b-440c-b3dc-dbb4b8231dbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07782b5b-59de-48e1-9368-a29605d984d0",
        "cursor": {
          "ref": "66d0fcbe-74d1-4280-ba97-98488e06e66e",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "713e5865-ca16-46b9-a4c9-de3d0eeabcb8"
        },
        "item": {
          "id": "07782b5b-59de-48e1-9368-a29605d984d0",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "7355284b-9c08-4f1f-90ec-7c638a7251a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c46d2b61-ab63-40b1-afa9-84581786c559",
        "cursor": {
          "ref": "bc448f0e-85b0-4e2f-83fe-67e86609f15d",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "d8f22e96-5fc2-43d9-9702-432f97720437"
        },
        "item": {
          "id": "c46d2b61-ab63-40b1-afa9-84581786c559",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b8e67261-e62a-4c37-8ea2-f5ee71938ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed8b4d28-a249-437e-a24c-8f0a3e2fdccc",
        "cursor": {
          "ref": "f4aab740-dfa2-4baa-928b-9c9d490f1898",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "5b930d17-c4ef-4341-9926-1559c9fcd959"
        },
        "item": {
          "id": "ed8b4d28-a249-437e-a24c-8f0a3e2fdccc",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "99807587-8160-464b-9df4-cffe44ef0b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "056dd128-694d-479d-8a49-22cba0e89b72",
        "cursor": {
          "ref": "3a63f229-9246-496c-9350-7348f764ab71",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "cdd94ebd-1b7d-4689-9987-6492f9c75fd7"
        },
        "item": {
          "id": "056dd128-694d-479d-8a49-22cba0e89b72",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "30e16776-6361-4fc9-b942-94852643fd1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b31087ab-bb15-434f-9c4c-fc2d10b42d8d",
        "cursor": {
          "ref": "7c35bd82-8968-4e77-a2e4-d25d1f66e9ff",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "752abb90-7464-434b-bb11-f067deae95a8"
        },
        "item": {
          "id": "b31087ab-bb15-434f-9c4c-fc2d10b42d8d",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "6bfd64a8-c8c9-4160-b474-4e4439f107c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c181ed9-f988-414b-a7ed-45f6a8035a49",
        "cursor": {
          "ref": "d7931edf-885c-4fd5-a4fb-349eba5204a7",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "1e95017f-7226-4a16-a700-4265768060fc"
        },
        "item": {
          "id": "7c181ed9-f988-414b-a7ed-45f6a8035a49",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "fb74a205-baa4-4d91-8cf7-1104702a1847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ad6378-f680-4be3-b0cf-4e9f69237987",
        "cursor": {
          "ref": "0ef31393-5776-43f2-b47a-d69a8de0999b",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "14a0f9ba-3aa2-45a1-a0fd-91ec3f41404f"
        },
        "item": {
          "id": "c3ad6378-f680-4be3-b0cf-4e9f69237987",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c7a2ef54-65b1-4506-b026-18bfb1efe703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc35ce4-f565-4b57-b13f-d4b312b68113",
        "cursor": {
          "ref": "e3949bd3-d982-422a-b1f9-339f41b03744",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "38e708fa-ade2-4314-a2d9-cc078e40e964"
        },
        "item": {
          "id": "1bc35ce4-f565-4b57-b13f-d4b312b68113",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e5c44f5d-6590-40ff-b2ba-ba4b41cdbf95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f814d9a-b32d-44b0-83a9-ac19bbaf1c6c",
        "cursor": {
          "ref": "da12500c-ec5d-4c5a-9a78-d0c6fac8c378",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ca9a3b6a-55e8-40c2-a099-68d91033ebb3"
        },
        "item": {
          "id": "0f814d9a-b32d-44b0-83a9-ac19bbaf1c6c",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "946cd85d-1b8e-4fb5-96d6-73bd7c1e2201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2cc0a90-582d-4de0-89a3-c59f2c5e637d",
        "cursor": {
          "ref": "4fb9664e-5f9d-4c90-961f-79e0d6af25f6",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "3344e701-55e3-4fcb-ae66-f3b91aa49f09"
        },
        "item": {
          "id": "b2cc0a90-582d-4de0-89a3-c59f2c5e637d",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "1363d3ad-1aac-40f8-aa0c-0e1e24f324d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c07b39-5d07-4662-a2af-042e5f6fb69d",
        "cursor": {
          "ref": "dd6603fd-6710-40c2-a6a9-1f22fe3557dc",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "6da04953-216d-4cc3-a53c-150bb58231e6"
        },
        "item": {
          "id": "d9c07b39-5d07-4662-a2af-042e5f6fb69d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "f671b31f-2411-4fd6-beef-4b8a2c67d257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c824a962-0080-45c3-a327-0de171330b2d",
        "cursor": {
          "ref": "27ee0d10-6f47-4efc-9c06-ffde8aabfe64",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "6032a1aa-9170-4b17-8ed6-817f3c2eed8c"
        },
        "item": {
          "id": "c824a962-0080-45c3-a327-0de171330b2d",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "25fe0386-9b8c-40f6-aac3-f03e76c4c967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05c2dfc4-5128-4967-9f5c-9142651c0132",
        "cursor": {
          "ref": "3bca1204-c68b-4fa4-b9d1-213e70d70877",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "2463f99d-4d8b-464c-8959-c066bbff1beb"
        },
        "item": {
          "id": "05c2dfc4-5128-4967-9f5c-9142651c0132",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "40aa1fad-a53d-40e8-942f-c7d939ad3a7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc4a943b-30ef-445e-97fc-eaa3938978e3",
        "cursor": {
          "ref": "3f11d0ef-5005-4489-90ea-10d46fff791c",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "956243ec-ab82-4bf5-9d2f-ec13cf38a6cb"
        },
        "item": {
          "id": "cc4a943b-30ef-445e-97fc-eaa3938978e3",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "e99f6060-9349-4f90-892d-f4c299c44406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35ac300d-ba1e-46cb-8ea6-41f3f4c2e9d7",
        "cursor": {
          "ref": "89c862f9-cf00-4448-a3a7-95b543ea6f94",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "9ef63be6-7175-4dae-ae83-ba81681445f3"
        },
        "item": {
          "id": "35ac300d-ba1e-46cb-8ea6-41f3f4c2e9d7",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "2c48ae7e-f3bc-4286-8667-1a6b3d18e944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b23961e3-9deb-4263-bda5-0b99968342ef",
        "cursor": {
          "ref": "6a12e8e8-fd57-4983-8228-0a0687339a65",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "950d2fc4-fe8d-4a55-af74-0d5bd7768ca6"
        },
        "item": {
          "id": "b23961e3-9deb-4263-bda5-0b99968342ef",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "3851284f-fa1b-46e8-b169-3feacef88c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "577eae09-3440-4963-98e9-9a6416ca2e05",
        "cursor": {
          "ref": "76796653-97c8-4edd-92b8-e9f1d35ca1fb",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "8288186b-0fea-49f8-905e-d39c9f8dfaef"
        },
        "item": {
          "id": "577eae09-3440-4963-98e9-9a6416ca2e05",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "0dd77983-019f-49e9-b4dc-ae40c6850793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ff63d4-75e6-456e-9484-3df544b81ea2",
        "cursor": {
          "ref": "454300a3-77f0-417e-b5a1-8c46676b01b5",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "aecfbf37-ad1a-4788-8e69-a0c635a4663b"
        },
        "item": {
          "id": "c6ff63d4-75e6-456e-9484-3df544b81ea2",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "a65eefb7-9006-4218-ae62-650cb54b9ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34e628a8-5830-4366-9b93-07302f793964",
        "cursor": {
          "ref": "13df0e93-11a7-4d78-8ebb-1c261fd5c94d",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "12581dcf-8709-4863-863f-7608d90ae6ae"
        },
        "item": {
          "id": "34e628a8-5830-4366-9b93-07302f793964",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "08f1ef58-2807-492d-8856-c38f619b5083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97181890-98f8-44b1-a6d8-c748df1080d8",
        "cursor": {
          "ref": "a18c9efc-fb47-4d9e-8a23-e72054a3c515",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "7f4d7d0c-ae39-4f49-95c4-6f2b9328ab34"
        },
        "item": {
          "id": "97181890-98f8-44b1-a6d8-c748df1080d8",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "485e52f5-5d54-4c42-aff1-bfdb7995a476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "956c3dad-20a1-4c52-973b-760da2ad13d1",
        "cursor": {
          "ref": "27176ca4-4181-4a0a-9a5f-543af867fe3a",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "078ff711-762d-42ba-abc8-0591a9dd8b7f"
        },
        "item": {
          "id": "956c3dad-20a1-4c52-973b-760da2ad13d1",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b806d1f1-c21a-4658-945a-7bc891d4c21f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e740da2-663b-4b73-8069-d4e34015278b",
        "cursor": {
          "ref": "f995b5c1-cc52-448a-ad3c-fb1a40bd5f41",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "22dd0389-54ec-4a24-859d-f48e2bda6677"
        },
        "item": {
          "id": "6e740da2-663b-4b73-8069-d4e34015278b",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "97c984bb-f987-460f-9d10-79b241a28a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab1ec997-ea64-459d-aa8a-2698633a6da3",
        "cursor": {
          "ref": "db8722c4-a91d-4cea-86ee-f8eb19b3aa62",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "9babfcce-6997-48a4-abf5-62a01501b73f"
        },
        "item": {
          "id": "ab1ec997-ea64-459d-aa8a-2698633a6da3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f948f08d-be74-4b7b-8207-98b7a76f0fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77026fb1-0366-4f5e-83f0-da087e5ebf8c",
        "cursor": {
          "ref": "4fa220c9-4e0b-4f51-8abd-8afe921cc153",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "8fbd7917-d42b-4263-a446-c3b8e370053d"
        },
        "item": {
          "id": "77026fb1-0366-4f5e-83f0-da087e5ebf8c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f4a16608-7938-473a-a9f1-c8383fee9912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f8d4fc0-23bd-441a-bf45-cbae11630c1c",
        "cursor": {
          "ref": "a29ed0ba-44d6-4cc6-9264-23be01135419",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "80001164-5e8b-452a-8bc9-27cbc1aebd3f"
        },
        "item": {
          "id": "3f8d4fc0-23bd-441a-bf45-cbae11630c1c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ccca3315-b348-45f8-9283-5eda0fffee04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dab2ed21-4b04-426c-b618-96debd037c24",
        "cursor": {
          "ref": "efb4ae29-7905-4616-bc22-dad5e2e70746",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "e2329327-f922-46c6-8e63-2c089463cdbe"
        },
        "item": {
          "id": "dab2ed21-4b04-426c-b618-96debd037c24",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "2911180b-2687-4d04-9418-f87164c0022f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ea573c-b74b-40a3-ac4a-d3ec78502090",
        "cursor": {
          "ref": "ee863ed0-e961-4fd7-809e-aa20861919b0",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b8977017-02aa-41a4-9834-62c7e9d7c77b"
        },
        "item": {
          "id": "f0ea573c-b74b-40a3-ac4a-d3ec78502090",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "4e0fabcb-6dcc-4bf8-bc03-1eb6aaa4c460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "329e9864-8e66-417c-b2c9-beb00f247d65",
        "cursor": {
          "ref": "23d7e97b-67f6-4d1b-8092-8e684f6bdfcf",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "39ce2501-f475-4f1b-9642-6df84e1c77ee"
        },
        "item": {
          "id": "329e9864-8e66-417c-b2c9-beb00f247d65",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "0b4d357b-d7f0-450d-900a-26262af53391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ef8f890-33e3-467d-8557-87c73b6247b6",
        "cursor": {
          "ref": "6110a21e-9d66-413d-84c6-c854a72ecc46",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "03a92005-998c-4be5-87ad-9a0ca03e4df4"
        },
        "item": {
          "id": "0ef8f890-33e3-467d-8557-87c73b6247b6",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "6069c5d9-773a-4be1-a3cb-28deaa178124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03c5b321-ada2-4eb8-8856-6d00ff99b5a1",
        "cursor": {
          "ref": "31d09d98-80b1-49ad-a95f-1f5b8ec32249",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "63576028-b1fb-491c-a3bd-9e227a691d6a"
        },
        "item": {
          "id": "03c5b321-ada2-4eb8-8856-6d00ff99b5a1",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "2b3f0eac-d982-4994-b8f3-8f1bb0966eab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "183419e4-6728-4f48-afa1-68623b82e463",
        "cursor": {
          "ref": "34e3a385-f906-4d70-917d-1b839106c0fc",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "79ebccd0-7c4e-44f3-9421-7dbca46d46be"
        },
        "item": {
          "id": "183419e4-6728-4f48-afa1-68623b82e463",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "92957faa-de4a-44e8-afb0-55ff25438cc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "448a0e87-2aaf-45ad-b0d8-6ee837abbeeb",
        "cursor": {
          "ref": "b716d7c9-8af9-4d64-a587-d100349b172f",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "5da6450d-568d-45d7-b7fb-089086f41200"
        },
        "item": {
          "id": "448a0e87-2aaf-45ad-b0d8-6ee837abbeeb",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "63db3c19-acb9-425b-afd4-731861b852f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f8023a-3784-47fc-9000-a455260e98b3",
        "cursor": {
          "ref": "6eeaa1b3-0f14-41ad-b030-76c2a6701953",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "5331846b-ba33-4785-b528-4656132e36fa"
        },
        "item": {
          "id": "35f8023a-3784-47fc-9000-a455260e98b3",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "50ccbc38-ef24-4e23-ad17-0bd5693b2412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc39e92-a165-4de1-bed0-6d215e860a65",
        "cursor": {
          "ref": "a877cc76-3868-4847-b7d7-4aad445cc24d",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "13945f91-d6f2-4372-b1e8-42cdbe72df78"
        },
        "item": {
          "id": "7bc39e92-a165-4de1-bed0-6d215e860a65",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "04cfa169-e9dc-45d4-bd55-6e1606caa228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "840f4a32-f868-40cf-b795-a530c41f1fb1",
        "cursor": {
          "ref": "1a14e502-82fd-4f48-aaf9-0cf2696e901d",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "7e5b7bdb-efa4-4d37-a23b-0b604a0e698a"
        },
        "item": {
          "id": "840f4a32-f868-40cf-b795-a530c41f1fb1",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "9c2cc48f-fe92-4e5b-a461-e16be507ac47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f130314-ae9c-4207-8903-52092a8ce615",
        "cursor": {
          "ref": "5c654244-86be-4b01-8d4a-02626dd38516",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "8309290a-1e0c-4305-ae07-1ed7be57211b"
        },
        "item": {
          "id": "8f130314-ae9c-4207-8903-52092a8ce615",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "cc108a57-9b05-4357-9b10-b0c3664e20bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a679f8-2586-4cf8-bbfd-d77ef5ae2b46",
        "cursor": {
          "ref": "5997062f-d6ea-453f-9df4-338a11d56999",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "61be7859-e598-4353-b8df-ef493252ad31"
        },
        "item": {
          "id": "52a679f8-2586-4cf8-bbfd-d77ef5ae2b46",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "2066d56e-ec24-437c-885e-774e748afb5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "013de1db-d92e-4d56-a946-efe10f2f1567",
        "cursor": {
          "ref": "ac27ce62-95aa-4f0a-84bf-e35c8856a2e2",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "fdc71cfc-6b67-4396-8d99-9cd9a2760217"
        },
        "item": {
          "id": "013de1db-d92e-4d56-a946-efe10f2f1567",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "72df6122-8978-4a8c-b1fb-0b036205f5e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c6ffd2-ae95-4a9d-8da3-137223f4b9c1",
        "cursor": {
          "ref": "d15f04d6-4933-4dcf-8e99-c92474eba606",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "631d993c-7bdd-4695-815d-0eb548563a47"
        },
        "item": {
          "id": "07c6ffd2-ae95-4a9d-8da3-137223f4b9c1",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "99c4c54e-4727-43e8-b547-474db3a59b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b879f22-b5a5-4588-b19e-e5986b42f95e",
        "cursor": {
          "ref": "50459260-46c5-4f73-ace6-6f662439ad18",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "f79ebbaf-3ce0-4402-b7f9-24eed69d88dd"
        },
        "item": {
          "id": "6b879f22-b5a5-4588-b19e-e5986b42f95e",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "4f1606e5-cc65-4217-9541-bdee6d1105fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "220ecdf0-8552-476f-97d1-ea93b66fa423",
        "cursor": {
          "ref": "354ca4bb-4509-410d-884f-0a9011a99cda",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "7fafdde8-59b5-48de-a80d-edc982674bcf"
        },
        "item": {
          "id": "220ecdf0-8552-476f-97d1-ea93b66fa423",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "3a9cb3f0-0327-4070-bcf6-c14963b03f97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1fad609-a1c4-4c24-8aa1-04f6587a05d4",
        "cursor": {
          "ref": "f34f87fd-f35c-45a9-a07e-ffa1d42d9858",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "066ad6d5-bf92-4aea-b551-3bb0613ad08b"
        },
        "item": {
          "id": "e1fad609-a1c4-4c24-8aa1-04f6587a05d4",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "d5bc99e7-b898-496b-9b74-35e39faba5d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1cb7dc7-b333-4533-bc0f-a515eea9feae",
        "cursor": {
          "ref": "106d8213-f5be-4ef5-bc75-077f6ffd00fd",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "42300fce-7bd4-4135-85a6-43aa25d61760"
        },
        "item": {
          "id": "f1cb7dc7-b333-4533-bc0f-a515eea9feae",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "6572ddfe-98bd-451c-8f2b-f9833a4375cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "239cd412-2302-4133-8ffd-f537ebb34bcb",
        "cursor": {
          "ref": "e7654ff9-c30a-408d-ab30-6c191ae43a13",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "50eb48c3-8cfa-4736-9693-1f1032420dfb"
        },
        "item": {
          "id": "239cd412-2302-4133-8ffd-f537ebb34bcb",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "2bb02f40-4030-43ba-a606-4cf2e6574c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f4217b6-f306-497d-aad3-67a6ddbdd877",
        "cursor": {
          "ref": "47350d41-89ac-4835-8556-bbb8f78b99fc",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "ba24674f-03c0-4e3f-a7fd-6aa639e2b66b"
        },
        "item": {
          "id": "5f4217b6-f306-497d-aad3-67a6ddbdd877",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "6b19d8d4-4724-4746-97c7-51199c9f265f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69d90c28-f65b-4ce1-8f56-e4cd19281015",
        "cursor": {
          "ref": "e2ee4899-7318-47f3-9544-8db017319d02",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "1c19c0f4-f11e-4dae-9d1b-928cff89a3fd"
        },
        "item": {
          "id": "69d90c28-f65b-4ce1-8f56-e4cd19281015",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a5f5517b-cadb-4927-bf17-f97c621b079d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f248a748-f35b-4191-a8ee-0ff2dffa1cea",
        "cursor": {
          "ref": "5ca6e440-87c1-4a81-9193-f9bd409e10e1",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "17715f41-042a-4b2d-91c2-a7ebb330735c"
        },
        "item": {
          "id": "f248a748-f35b-4191-a8ee-0ff2dffa1cea",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "2b85b430-f908-4e20-b9c8-6f474acc276d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b5bb8f-8375-4233-8fc6-dae085cb83af",
        "cursor": {
          "ref": "2a566273-5084-4a94-a568-cb86dd827568",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "ceb801f7-4d3a-41e2-8808-1cb958a4b429"
        },
        "item": {
          "id": "a6b5bb8f-8375-4233-8fc6-dae085cb83af",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "97a092fb-8d40-4bfa-a913-abf37e4abc36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1449bf9-9e52-49a3-bf47-a0fa9c619a51",
        "cursor": {
          "ref": "dbc7c9d5-f845-4555-948d-42b4e159fe38",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "af87b3f3-4fe1-42c5-bf37-fab573c2842b"
        },
        "item": {
          "id": "f1449bf9-9e52-49a3-bf47-a0fa9c619a51",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "71eb6d7e-5818-46b9-a1de-c4c49917a7ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b0fd887-39c8-4a9f-ba2f-05ca06bcb2a1",
        "cursor": {
          "ref": "33d700a0-ebbe-4e15-aa3f-83f6f028aade",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "ec1dd244-95a4-47ed-856b-ecb27f63b593"
        },
        "item": {
          "id": "7b0fd887-39c8-4a9f-ba2f-05ca06bcb2a1",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "26f72159-a07d-46c9-837c-a2ee7b4783e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "427bd5b9-2590-4175-9dda-805ccba12acd",
        "cursor": {
          "ref": "a5204b59-26d9-485b-bd8b-9736b7c5c3e5",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a7a148a1-6ad6-463e-9c95-3fd4c2f938c6"
        },
        "item": {
          "id": "427bd5b9-2590-4175-9dda-805ccba12acd",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "0e16d6e4-991f-437a-8fe8-4574d59a409c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26bf16cd-5555-48a2-b113-22b7453fb257",
        "cursor": {
          "ref": "e3b547b1-81db-488a-96ee-f3dff5fde3a0",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d15584b8-4c1b-497f-8af0-b4417bcdd0cc"
        },
        "item": {
          "id": "26bf16cd-5555-48a2-b113-22b7453fb257",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "1cc477e7-5b79-426e-9698-e6c2bef73154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f93b278d-96e0-41b2-8f66-509653d51f08",
        "cursor": {
          "ref": "0e24bdfd-a4b9-4275-8aa2-cdc581cc78e1",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "468e6098-5ab1-40bf-87cd-a6779fcfbce1"
        },
        "item": {
          "id": "f93b278d-96e0-41b2-8f66-509653d51f08",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c39eb5ac-8d14-4808-9cdb-8694af27de18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c05b1951-3a9f-4750-965c-70ca8d15cd7e",
        "cursor": {
          "ref": "95a584fb-ef63-465a-8d3f-578f801efadd",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "bffd82d4-6877-4d58-9dbf-100c432d13f7"
        },
        "item": {
          "id": "c05b1951-3a9f-4750-965c-70ca8d15cd7e",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "58f09331-99dd-4b51-8720-250584b9cb03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa96ac28-a82d-41e3-87ca-6a207dce9c0c",
        "cursor": {
          "ref": "bf4e6aae-97cc-4d55-a080-e31d732a8cb5",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a948f197-0519-4f9c-a552-0eaa2a229e38"
        },
        "item": {
          "id": "fa96ac28-a82d-41e3-87ca-6a207dce9c0c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "c2c27f27-e51d-4a4b-8901-45e4ff75e78b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95adb940-676f-4a12-8a59-b4ac2ba4d616",
        "cursor": {
          "ref": "d1f34c99-4771-45ce-9b27-c848d2495d39",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e6944aac-471c-4ef6-8324-5010e46189b8"
        },
        "item": {
          "id": "95adb940-676f-4a12-8a59-b4ac2ba4d616",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "0134b7fe-1026-4631-ae2b-d9a00ef7a09b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abd160ac-c619-498f-b4da-8115632369e2",
        "cursor": {
          "ref": "6ecfd5d4-57fd-4590-8919-dedbf4e61813",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ff749ac8-56b3-4681-b8d2-6d772ba8e41c"
        },
        "item": {
          "id": "abd160ac-c619-498f-b4da-8115632369e2",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "7440947a-58b7-43f7-99df-0724e02885ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b579d24a-c4bc-4611-9284-f668e9b5f89d",
        "cursor": {
          "ref": "85b7dbd9-c1f6-4313-8da0-7dd4d7e64200",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "a377d749-bc00-4def-9fc1-a2c39b2ceeae"
        },
        "item": {
          "id": "b579d24a-c4bc-4611-9284-f668e9b5f89d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "693c658e-3bc9-42ca-912a-d063dd1d1fb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5ad1506-5732-48e7-8c68-16ee068bb822",
        "cursor": {
          "ref": "379f0b28-3896-4175-9c5e-eea403c5a2e8",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "ca58a9ae-0c71-42f2-a2bc-1bf3a9f3c227"
        },
        "item": {
          "id": "b5ad1506-5732-48e7-8c68-16ee068bb822",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "ebadc277-6656-423c-a3bd-98c37f58546d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "689bd848-0a7e-4622-9b8b-258d79fd5e5c",
        "cursor": {
          "ref": "7fcb065f-f346-45d5-9f3b-504ad2c37ac2",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "d59b4951-4038-4a58-bc0e-6a408839bce3"
        },
        "item": {
          "id": "689bd848-0a7e-4622-9b8b-258d79fd5e5c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "bd6e2c53-3268-48ad-9167-9649f8c70b9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "ca0e4918-1605-49f0-a1e1-ccd761491c0e",
        "cursor": {
          "ref": "59a21d1a-dc14-4737-854c-6b3cb5485f81",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "1f0ee6a9-9844-4375-a77c-5a0bf57ef63e"
        },
        "item": {
          "id": "ca0e4918-1605-49f0-a1e1-ccd761491c0e",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "b3e706b6-d4f9-4c89-ad10-1de72b4b3097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "c40d0b19-ea92-46e3-afc8-b279a1bfd865",
        "cursor": {
          "ref": "6b1385b0-68ce-4ed2-9aab-a66bc47df252",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "94e70ea8-f697-4fbe-ab80-4b82f49e96c2"
        },
        "item": {
          "id": "c40d0b19-ea92-46e3-afc8-b279a1bfd865",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b4c77f0e-631f-48c5-9458-2b5ad85f925a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "ccbc64b9-fb94-4d59-9e69-c63c13ebe49d",
        "cursor": {
          "ref": "26f98a42-4635-4d2f-b51e-3f8a28916a6b",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "586ab5ce-4099-4b12-bd49-6fbd3df5a614"
        },
        "item": {
          "id": "ccbc64b9-fb94-4d59-9e69-c63c13ebe49d",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "13994b24-da31-4558-b19b-3903d88e8780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "35aaea29-e0ab-419d-bda3-9021fa5a63d2",
        "cursor": {
          "ref": "9a7be565-2f59-4175-9bfb-b1bb4156569b",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "55e1d1b1-9b5d-4fd1-9107-b5b6d865a85a"
        },
        "item": {
          "id": "35aaea29-e0ab-419d-bda3-9021fa5a63d2",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "5e74b6dd-6757-49a8-86ae-395d61c5aa04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "b1bb0c2f-756b-4d3c-b4c8-e34cf915f013",
        "cursor": {
          "ref": "15ea197a-cb2a-4891-b7b3-ca1eb142f40a",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "2f919070-1994-494f-bd1d-b33a5d92e5ad"
        },
        "item": {
          "id": "b1bb0c2f-756b-4d3c-b4c8-e34cf915f013",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f16eeee2-0735-4cd4-a18f-3d3700d2c990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "a38fef9b-128f-499d-b60a-abacdea57602",
        "cursor": {
          "ref": "47470951-0df6-4d93-bade-44b5389d115f",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "8a30be3b-ed1c-41b5-a94c-040f74a3d80d"
        },
        "item": {
          "id": "a38fef9b-128f-499d-b60a-abacdea57602",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f5e65146-d9c2-4f5f-8fae-644254b8b332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "babafd4a-8588-43c1-912d-0041d2e1a75e",
        "cursor": {
          "ref": "39fea598-04e6-47ff-8b83-991f7e6f15a0",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a1295bf7-461f-4b7c-8ce7-6faa42937eb4"
        },
        "item": {
          "id": "babafd4a-8588-43c1-912d-0041d2e1a75e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a2993637-84f4-4267-8cac-47207c9e3200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "436bfdd8-022d-4fe1-bc1f-ecfc6596271f",
        "cursor": {
          "ref": "d4546484-019a-423f-878c-6e29ab279eaf",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "d70356ce-64b3-40c0-98d4-f0c086c55941"
        },
        "item": {
          "id": "436bfdd8-022d-4fe1-bc1f-ecfc6596271f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c3d62611-07c3-4c05-9587-f6f045642e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0605e0a8-b2cd-4c21-9c7d-e234e73f973b",
        "cursor": {
          "ref": "125129eb-d038-4e96-a731-6ef6710b649e",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "743486d3-ec13-40db-968f-1583b4e697fc"
        },
        "item": {
          "id": "0605e0a8-b2cd-4c21-9c7d-e234e73f973b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "732374aa-130a-4645-ac38-75bb9724292a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "000ded02-cad3-4b08-9823-dd0e1b79e294",
        "cursor": {
          "ref": "6b961f35-1e61-452e-b628-d42d3ea00a33",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "01821cbc-c85b-4b0d-b556-c18cb96d6ab9"
        },
        "item": {
          "id": "000ded02-cad3-4b08-9823-dd0e1b79e294",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1278b4aa-25ef-42b2-8b21-b06025158e85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38371503-0d06-41a5-8f42-972e8b7f1070",
        "cursor": {
          "ref": "ce18bb54-d3ed-4cea-b4a9-838ecc65a845",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "d1092929-6f65-4ada-aea9-b80785c5616e"
        },
        "item": {
          "id": "38371503-0d06-41a5-8f42-972e8b7f1070",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9226854b-90ee-452e-b450-aaae9eebb152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8d908ae-0420-49fb-8d89-344132233575",
        "cursor": {
          "ref": "aa25c846-1c2c-4d1d-995d-ec8b806968a9",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "d910ab7d-0eba-4e82-a2b3-108b13893d41"
        },
        "item": {
          "id": "a8d908ae-0420-49fb-8d89-344132233575",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1bd53deb-5ce2-4275-913a-e694149904d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fcbf17d-db06-4975-993c-ce0557b2d99b",
        "cursor": {
          "ref": "ccf6a724-5ebd-4059-baae-f7eeb04ae4b9",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "23d65eeb-9524-4fb9-8b5d-d0665bf934da"
        },
        "item": {
          "id": "2fcbf17d-db06-4975-993c-ce0557b2d99b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0b0106df-fa04-46fa-9683-372b8f65ddb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeaa25af-97b4-46ae-9bc0-c4b4733b9cb9",
        "cursor": {
          "ref": "15278ab0-0fac-4590-bdca-564a568e8a11",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d158fc5c-9459-475b-a595-ae6cd18bf871"
        },
        "item": {
          "id": "eeaa25af-97b4-46ae-9bc0-c4b4733b9cb9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2a1e1a54-086e-416f-b970-56fec9a7d82b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a21fdaf3-ceb1-4732-8d06-0249458ca6b7",
        "cursor": {
          "ref": "2e748252-73ba-461c-b7c9-3874a04f9365",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e439a52a-9c05-4dbf-ace6-c95ec8757af6"
        },
        "item": {
          "id": "a21fdaf3-ceb1-4732-8d06-0249458ca6b7",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "49099ef1-6e96-4187-84c0-f5116e166357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cafe9aba-6730-4ee8-8d63-ea522da9841c",
        "cursor": {
          "ref": "2798434f-c861-46e6-be8f-82ad979bc3e1",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "4f21ae88-7bab-4b6e-aa63-771b6f768f2d"
        },
        "item": {
          "id": "cafe9aba-6730-4ee8-8d63-ea522da9841c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "250f38de-d229-4a1b-a592-80620e766a34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f83d5267-16b7-4856-8dce-2c1922529c0f",
        "cursor": {
          "ref": "71905d01-3269-48ad-bf69-028a415481b1",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "670f44b9-9098-445e-a890-73f7e9ab2663"
        },
        "item": {
          "id": "f83d5267-16b7-4856-8dce-2c1922529c0f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f4783f7c-68ab-4aa3-a256-60d070466ab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d24b143c-6d95-40c2-89ed-24d4abe4b0f6",
        "cursor": {
          "ref": "ac0fa0f0-4f82-4227-a0e6-cc1b8a826b77",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "61ee465c-629f-495a-a7c3-2f3e2e16b2be"
        },
        "item": {
          "id": "d24b143c-6d95-40c2-89ed-24d4abe4b0f6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "61e422cc-18e6-497d-9ece-30fe152e68bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca0f899-c239-4bbc-b7fb-9bb143dfa7b9",
        "cursor": {
          "ref": "d57d7dca-b848-4b49-9680-597326ea91f2",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "74c93b04-02f7-476f-a68c-39e50309afc9"
        },
        "item": {
          "id": "dca0f899-c239-4bbc-b7fb-9bb143dfa7b9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5b41848d-55df-414d-b13f-6963e95c6117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3fe947a-af20-491c-a089-33911a15d27c",
        "cursor": {
          "ref": "ac3f5d34-6f92-4f94-9f72-1b6c3f793be2",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ecf8cd8c-770d-45b4-93f6-11a93509e558"
        },
        "item": {
          "id": "c3fe947a-af20-491c-a089-33911a15d27c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d512e298-81da-422d-9b84-c65d8f4e427b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2149cb64-e603-4458-9805-e8ceba07894e",
        "cursor": {
          "ref": "0e43f10d-d39f-41e9-a759-0abad7a8ef89",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "0eb460c9-f176-47ff-9bcc-f0a6e4fd18df"
        },
        "item": {
          "id": "2149cb64-e603-4458-9805-e8ceba07894e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d4096acd-0854-4c4f-ad47-463e4c7101ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b5ce33f-9c50-4144-8e03-8eada2e4a0ea",
        "cursor": {
          "ref": "3d0db102-dd24-41c7-9771-6bd78af53259",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "a2ddc00f-071c-44cd-85a6-f128886d6cd3"
        },
        "item": {
          "id": "0b5ce33f-9c50-4144-8e03-8eada2e4a0ea",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e7a9ffc0-e4dd-4680-a110-84808f2ceffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91433f24-e43e-42f3-bbea-654cb5442b9a",
        "cursor": {
          "ref": "5e1f5f77-892c-45d0-a4b9-7545ebdfee8f",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b6b774ab-904f-44aa-8cbb-516bccd849c6"
        },
        "item": {
          "id": "91433f24-e43e-42f3-bbea-654cb5442b9a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "74a5702c-8461-4046-b701-de7be1350308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c130b84c-696e-42a0-bd61-0b85c6863b9a",
        "cursor": {
          "ref": "bb57c93f-125e-4adc-b8a8-fcf930a02401",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "7b7d0559-f2f6-4ab7-a670-2ddaf1cecdcd"
        },
        "item": {
          "id": "c130b84c-696e-42a0-bd61-0b85c6863b9a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "75c6ea91-ece6-4140-81e7-f2c54ef11fb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64814ddb-5f5f-4cf3-8305-eb1069c95ca0",
        "cursor": {
          "ref": "0f7aa58b-739e-46f8-a973-11fc92d32262",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "2be2d8fd-613c-4726-aa91-41980a13c776"
        },
        "item": {
          "id": "64814ddb-5f5f-4cf3-8305-eb1069c95ca0",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d399cde8-b2e7-46e3-8b15-487aa6e0a1f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5368e429-bf83-4f1b-b81e-a617bd3ed859",
        "cursor": {
          "ref": "305a6456-058c-4778-952d-e4ef3f12da75",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "7c9127d1-20b3-4486-a8e6-a7acff733e12"
        },
        "item": {
          "id": "5368e429-bf83-4f1b-b81e-a617bd3ed859",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "360bb556-a9d6-47cf-a574-40c58aae2dff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "909f7b05-247b-4fe1-9f4e-e65316dcddf6",
        "cursor": {
          "ref": "399f2ade-4775-4418-ab72-1ef042ce0f0d",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "fc6ae102-966d-4650-b465-ddd6e323465d"
        },
        "item": {
          "id": "909f7b05-247b-4fe1-9f4e-e65316dcddf6",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "dbbd191a-fa5c-4d65-b947-e215377d8f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a3de86-5a59-4b38-8423-0e3d3e1d8db9",
        "cursor": {
          "ref": "9cebad50-e3cc-45f3-bad4-2e9983634b9f",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "808c2074-83b3-4f01-85d4-46151cc74feb"
        },
        "item": {
          "id": "76a3de86-5a59-4b38-8423-0e3d3e1d8db9",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b0765cdd-fd88-4afd-aad2-97e23840afa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3f55eaa-1caa-454d-98ac-738272fdf055",
        "cursor": {
          "ref": "e68bce80-f04a-4a39-a569-dd0fd015b2d4",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "dcfc31aa-c66a-47fa-b307-fdc8072df902"
        },
        "item": {
          "id": "c3f55eaa-1caa-454d-98ac-738272fdf055",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e5ebe7f7-2e47-4f1b-8863-63fe5abcf8dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b7f29d4-bf78-468a-93c4-22d29eb2ff75",
        "cursor": {
          "ref": "486f6f24-e670-49b7-83de-9b8ccf71b047",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "8fa4f9c8-ab61-4de2-964a-7c6f61aeb1ce"
        },
        "item": {
          "id": "3b7f29d4-bf78-468a-93c4-22d29eb2ff75",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "50a18208-16b5-4c0e-8ed0-dfe0e9ccec7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96037e22-fc73-4786-b963-08cdf2384b69",
        "cursor": {
          "ref": "7268c99d-b6e5-41ed-b0c3-6e96737bd4ab",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "deb79b57-1772-4f52-a4e3-de4ea408749f"
        },
        "item": {
          "id": "96037e22-fc73-4786-b963-08cdf2384b69",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f59e6782-4635-4a1b-9f5e-5aafd000e91d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7155f5dd-c78a-45df-b19d-50958429aff7",
        "cursor": {
          "ref": "4dfabd7f-08ae-4b44-96d0-833c66d9a4ab",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "ff61b445-5b70-4402-9dc1-29ef14aac522"
        },
        "item": {
          "id": "7155f5dd-c78a-45df-b19d-50958429aff7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "362e2514-f8ff-4402-95db-f043ee610705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1a2fbb1-a4e4-4a44-867c-a8cfd9d05539",
        "cursor": {
          "ref": "217eede7-5447-4957-8d02-96b36847c8b4",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "6d29a1fb-d0f1-46fa-b8ea-973f8c6d527b"
        },
        "item": {
          "id": "d1a2fbb1-a4e4-4a44-867c-a8cfd9d05539",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9878a289-bc15-419d-a7c2-b25dd2d31c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d1fa4f-4127-4af5-9f70-b912ef574354",
        "cursor": {
          "ref": "8de68c43-784d-4a73-bb82-76e8c9a80b3a",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "04ec1990-93d1-406e-902b-cb3cb2a4352a"
        },
        "item": {
          "id": "b9d1fa4f-4127-4af5-9f70-b912ef574354",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "93eb8719-58b3-4982-8e81-967499cd7648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4331e693-2fb6-486b-b4e1-15214160d99d",
        "cursor": {
          "ref": "6990c205-71ea-492d-bccf-2356fb82f4ed",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "02423c91-d65a-40f1-986e-f1e23b87230a"
        },
        "item": {
          "id": "4331e693-2fb6-486b-b4e1-15214160d99d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c5b655c2-adca-4d8e-91d0-d6e80295058c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01a5dd5a-a122-4b05-816c-3c649cbf7764",
        "cursor": {
          "ref": "42c1f1f8-7738-4cde-b2fd-b91c8d6544a6",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "16bf5dd1-c5d6-4475-b917-8988e970f71a"
        },
        "item": {
          "id": "01a5dd5a-a122-4b05-816c-3c649cbf7764",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "869730e1-dd8a-439c-8866-93e674bd79bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91725d12-e5e6-4507-9b38-4ae6df0153c1",
        "cursor": {
          "ref": "7a565e52-81fc-4a53-897e-eacd4a5b3ef8",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "37f6f4b7-a2c2-4432-9225-243f04c9fb48"
        },
        "item": {
          "id": "91725d12-e5e6-4507-9b38-4ae6df0153c1",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "81dfb1b5-a50f-489b-ad55-fdf548a49eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e11a01-57b8-4b36-9b42-77ef863d4af5",
        "cursor": {
          "ref": "fbd0487a-985f-4f4d-b402-f7582b47ea28",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "24096925-ac27-4fdf-b1f1-8479b320c326"
        },
        "item": {
          "id": "33e11a01-57b8-4b36-9b42-77ef863d4af5",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "b86fa4fb-89d6-4841-a30b-e9516047e253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b92213-6cb0-486a-a236-ad3961922742",
        "cursor": {
          "ref": "5761e4c4-dfd8-49ea-a1ff-cccc14b4a556",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "f359f61d-f8f6-428c-ad84-3193ca5aa7a8"
        },
        "item": {
          "id": "32b92213-6cb0-486a-a236-ad3961922742",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "8db64027-d66e-4767-8a0c-a159c240e6fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4807f87f-61bb-446e-a944-933ba62878df",
        "cursor": {
          "ref": "857cf903-0f92-48f2-bf71-79e0d9d7267c",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "4e15446e-6c06-4431-93d9-bf54b6fe2033"
        },
        "item": {
          "id": "4807f87f-61bb-446e-a944-933ba62878df",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "1108ca79-ad19-4222-bdcd-dc1a1a3d0c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c97c3747-b61a-4e82-a580-562c8cfd0a14",
        "cursor": {
          "ref": "250b77d8-313a-4228-a637-3aa8dfa80f2a",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "47043a09-d703-4df5-aea8-c6ced4dd07cd"
        },
        "item": {
          "id": "c97c3747-b61a-4e82-a580-562c8cfd0a14",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "34e41e2d-6aee-4b46-82cb-dd2d1a437a2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43fb14b7-96d6-4602-a197-7968284fb36c",
        "cursor": {
          "ref": "c7eee0d2-4e9a-4e54-8663-49c44fd9f706",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b1c6c78f-363f-4dc8-882b-6db3253aa2e5"
        },
        "item": {
          "id": "43fb14b7-96d6-4602-a197-7968284fb36c",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "1e204243-b0e3-4f70-9228-35be4d87351c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f0cbbcb-dcfc-4437-85f7-38578ed95ec3",
        "cursor": {
          "ref": "6b9a02fc-868d-4129-b9ac-13dba16de7d9",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "e0177dd9-0b80-40f9-b110-7aa6751f1bfe"
        },
        "item": {
          "id": "4f0cbbcb-dcfc-4437-85f7-38578ed95ec3",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "fc1d5db7-26dd-4e6b-b89c-435cab7c70e1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4dbeb18-815b-435f-b225-ec51cc78075d",
        "cursor": {
          "ref": "e641c214-bcfb-4af3-bd41-2abd8c7883e1",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "cc7a10e1-bfe4-40f0-ba6a-99b925788939"
        },
        "item": {
          "id": "e4dbeb18-815b-435f-b225-ec51cc78075d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "79f77384-98b9-4675-bd3c-a494f14e92fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e709b126-5595-440e-b9c0-cfacf926f599",
        "cursor": {
          "ref": "d7f1950e-f07f-4afb-9d36-9000e3382ace",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "1d2a6663-d10c-4f8b-89f7-addf1c557a50"
        },
        "item": {
          "id": "e709b126-5595-440e-b9c0-cfacf926f599",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "ab8a9404-3d0b-40e8-b267-63d4f86eced1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a063ae1-5f1a-4d56-8366-7942e19f7d17",
        "cursor": {
          "ref": "af707eb8-630d-44dd-aca2-a8c0360f2ce9",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "471494b6-36f4-4f32-8754-9ac525fa12d9"
        },
        "item": {
          "id": "7a063ae1-5f1a-4d56-8366-7942e19f7d17",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "e37e6169-5000-41c4-90bf-b50bc17dc845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24ccd741-c4a6-45d2-96f0-24f9fecbd0f9",
        "cursor": {
          "ref": "c376376f-2064-4828-8ec2-0c101a3ba089",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "48ec778a-dc2e-4b70-9dcc-80fbf03ce800"
        },
        "item": {
          "id": "24ccd741-c4a6-45d2-96f0-24f9fecbd0f9",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a4b94e6d-27c4-4458-a390-b3f767f7772f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90a9e99a-0f71-4b8c-a6de-c87a6969d520",
        "cursor": {
          "ref": "f7a18cd4-7284-469c-88be-c58056930e11",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ff3497d3-4001-4e65-804a-09c0f461feb1"
        },
        "item": {
          "id": "90a9e99a-0f71-4b8c-a6de-c87a6969d520",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f46e5be2-32dc-46a6-be94-91fd5916f0e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b988c56-031f-4fad-a826-b044e388eba1",
        "cursor": {
          "ref": "c3ace5e8-c91e-4d7e-97de-638f10acde68",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "d20f0a94-3536-4970-a707-5d4b218d1d42"
        },
        "item": {
          "id": "6b988c56-031f-4fad-a826-b044e388eba1",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "29ee28f6-18e8-4eaf-8a9c-04f571123dc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eeab585-66ab-4694-959a-81169c92ac71",
        "cursor": {
          "ref": "11025e89-a39d-44e0-aa1f-8c2771962cad",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "34cbc968-7110-461e-89e3-0c6f5791bb34"
        },
        "item": {
          "id": "5eeab585-66ab-4694-959a-81169c92ac71",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ebb2441f-fcc3-4ec8-98c3-c1c82e6ef77d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d11b0672-22be-4088-bab7-71cf74d10d6a",
        "cursor": {
          "ref": "edd1ae90-0f4d-4363-837a-61ca6eae4ae9",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "1aa592ee-db54-4e92-96b7-3f2dc61668d3"
        },
        "item": {
          "id": "d11b0672-22be-4088-bab7-71cf74d10d6a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "441d52fb-8708-40ba-9dc4-75054a2370ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "530d8891-3a51-46f1-9f9e-717ba48a3bcc",
        "cursor": {
          "ref": "e4399df2-4def-4917-bb8b-60be156199b2",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "4f35af08-03e0-4af8-94cd-85bdc975caa1"
        },
        "item": {
          "id": "530d8891-3a51-46f1-9f9e-717ba48a3bcc",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "cf08c75d-f222-4c66-9375-dd1f9f901d18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a730b6-9354-4cc2-9cfa-6b107bc3da6e",
        "cursor": {
          "ref": "a2e41ddd-756e-44d6-b618-b8c9f3a3a7c0",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "b52decb1-f136-4d70-b0af-848b3248f008"
        },
        "item": {
          "id": "29a730b6-9354-4cc2-9cfa-6b107bc3da6e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "1d0606f8-52ef-48ad-8490-a5d9eadc88ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a88085d-d2af-49f1-8652-b064f2773c7f",
        "cursor": {
          "ref": "39ea39ee-3da6-4597-89a6-39be5923e50e",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "6bef29ba-f8bc-4585-849c-0ffcc9aecef3"
        },
        "item": {
          "id": "1a88085d-d2af-49f1-8652-b064f2773c7f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "630e8901-ff58-4174-aef9-dc30a632e094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae6900a-9665-4e72-9a8d-3d573956a016",
        "cursor": {
          "ref": "4bbd9616-8de9-416a-80dd-dd7735d0b5fe",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "38e928d0-a708-43fc-afb2-482831833a64"
        },
        "item": {
          "id": "8ae6900a-9665-4e72-9a8d-3d573956a016",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "5d78a12c-6d60-4b4e-9455-7581542f1242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e53da1-3f65-4a63-8c15-fdd07e61113d",
        "cursor": {
          "ref": "7489b616-6bf9-4c55-8322-2a89d583b74a",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "386ae898-fd18-414b-a168-8f1583d13098"
        },
        "item": {
          "id": "b9e53da1-3f65-4a63-8c15-fdd07e61113d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "5b5d8ee4-c89f-4fe6-ac17-31a025fe0cad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b14aae36-58d1-4014-9f5d-b341d982ecac",
        "cursor": {
          "ref": "302b6fd8-ba40-47ed-a555-c3fc3e38ee12",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "bcbf782f-5d5f-43b3-9f21-7c42e4537a57"
        },
        "item": {
          "id": "b14aae36-58d1-4014-9f5d-b341d982ecac",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "1f0ebc23-71f5-4c34-a3ab-a8bd1167c0c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d757af50-4082-4580-b30c-cb0eb3917a5a",
        "cursor": {
          "ref": "f8459f19-03c9-4da6-8417-5b21817f6199",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "afa7341f-7300-48c4-8547-b8ae658fd40a"
        },
        "item": {
          "id": "d757af50-4082-4580-b30c-cb0eb3917a5a",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "67d2b910-ac8b-45ec-99d5-9d72a19b0789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27f592d1-8213-4c10-b67b-0e48ce48f935",
        "cursor": {
          "ref": "7e72e0fe-1a62-4270-a239-17f5e4b2902e",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "7e8004bd-6df9-4b11-8285-b9fe595a4d1a"
        },
        "item": {
          "id": "27f592d1-8213-4c10-b67b-0e48ce48f935",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "c793ed55-f6e0-4429-932c-76df28ee433a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67f3ebd1-45da-4b1d-b12b-4009e19715ec",
        "cursor": {
          "ref": "559ef0c8-b79d-4e3d-be79-1802f4065878",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "b1b9c467-f74b-452e-9f02-174c24611f22"
        },
        "item": {
          "id": "67f3ebd1-45da-4b1d-b12b-4009e19715ec",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "09ced989-1320-4f38-b3e0-b0b9bd5723ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dafa7e9-6800-44e1-9221-a00fb3d54481",
        "cursor": {
          "ref": "ec9d255d-883a-4421-94b9-2e06a4793d1c",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "bc9b527c-66b9-4856-b095-1dfbad39419c"
        },
        "item": {
          "id": "8dafa7e9-6800-44e1-9221-a00fb3d54481",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "5ef17447-2c62-41f0-883d-cf5f543ba38c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ca120b-501c-4d9c-8917-8911012b051c",
        "cursor": {
          "ref": "54235383-6080-4d5a-942e-3aa60ffaac4e",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "0d7d5cc8-e36c-4f4b-8249-515cb0eaecae"
        },
        "item": {
          "id": "90ca120b-501c-4d9c-8917-8911012b051c",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "cb6abb5b-9146-417c-86b0-fc1cd13a95ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da14ac5e-93b5-4d6c-9a52-c9cad35a7f63",
        "cursor": {
          "ref": "de3d967e-a73b-4041-86e8-5ddce08eb376",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "8a85bb89-117a-434c-97d3-c223e27b54b3"
        },
        "item": {
          "id": "da14ac5e-93b5-4d6c-9a52-c9cad35a7f63",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "d806de90-4813-426f-963d-b750acf38b54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e1caf11-0810-49e7-9eec-bad3405b7b5f",
        "cursor": {
          "ref": "86c6e4f7-d22d-4022-a25d-e766914fe591",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "778892ed-02f2-44af-b895-874d84b8b7ff"
        },
        "item": {
          "id": "7e1caf11-0810-49e7-9eec-bad3405b7b5f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e5f5f2f7-ca8b-4eeb-a583-b5fd6ae16f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "520604f6-eb81-4763-b646-5b83c379852f",
        "cursor": {
          "ref": "34e62177-5aca-433d-9f00-ca521788a386",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f9101462-8d1b-422b-975e-0cfd1d6d6a43"
        },
        "item": {
          "id": "520604f6-eb81-4763-b646-5b83c379852f",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "fd6d5687-11e4-4918-93f9-eee3cec6d95a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f6ebe8-26f7-458d-87cb-1d6f8fb19ee3",
        "cursor": {
          "ref": "f4eba4ba-440b-436d-81aa-a5e676700fe9",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "40226ec2-070a-481b-aa20-c9a979bea14b"
        },
        "item": {
          "id": "73f6ebe8-26f7-458d-87cb-1d6f8fb19ee3",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a221cf03-c18b-4286-bab8-c10fbef6c1b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ca632c-3a17-47b6-9c2e-7bc579a4aaa0",
        "cursor": {
          "ref": "92963411-92d7-4549-bee7-396e18bcb8cf",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a1b7ebe4-248d-40cf-9858-2d0c6a7801f9"
        },
        "item": {
          "id": "20ca632c-3a17-47b6-9c2e-7bc579a4aaa0",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c1683218-9704-45e0-97fa-61c93cc0ce1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfc8770e-562a-42dc-897a-1d15fbc0e762",
        "cursor": {
          "ref": "829d3aca-8269-4027-a425-b5ccc0bf661e",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "93c42aef-12dc-4b6a-a34d-d98fd1084eab"
        },
        "item": {
          "id": "cfc8770e-562a-42dc-897a-1d15fbc0e762",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "a9ceced2-1883-44f6-85c8-69bfb8a5b825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6fde271-3ffa-47e2-864d-267eb2d2ad0b",
        "cursor": {
          "ref": "42b97408-9668-4d1c-9884-2caf1e07c7cc",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "4c93be38-5664-47da-9aa0-95a3bb9649db"
        },
        "item": {
          "id": "e6fde271-3ffa-47e2-864d-267eb2d2ad0b",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4f149719-3a8a-4d4b-9c5c-d5672877e512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "075f9ec4-8362-4000-93cf-7b25391d52d3",
        "cursor": {
          "ref": "9d512529-9107-4ac3-a8fd-a66907972ac2",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "2e31fd4e-a863-4e11-85ef-6cd5e4c6901c"
        },
        "item": {
          "id": "075f9ec4-8362-4000-93cf-7b25391d52d3",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "08be3551-68b6-4bf5-8823-01c58acda9c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8d5c7d3-981c-40ba-a16b-bd1b4335b33d",
        "cursor": {
          "ref": "afe9d21d-951c-45e1-a2f5-696983abd974",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "eb295705-cfaa-48f1-bdcf-545463d6204d"
        },
        "item": {
          "id": "a8d5c7d3-981c-40ba-a16b-bd1b4335b33d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "bb6233fc-c5eb-476e-9358-c8455b024a41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c900c4f8-40c5-4450-9117-710bb0415e5c",
        "cursor": {
          "ref": "c23c7139-9fab-4e78-9dd0-55717d2488d2",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2077b72e-081f-4d63-ac7f-5d26d269961a"
        },
        "item": {
          "id": "c900c4f8-40c5-4450-9117-710bb0415e5c",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "75d0691d-1c70-4e44-ac38-5c6de9b4f0c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69293579-644b-47b5-bcd9-94d0dd33c24e",
        "cursor": {
          "ref": "2c0f003f-d8db-4ee3-9ab9-722db56d2391",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "465b04dc-d046-4169-8f56-b7be45c9770d"
        },
        "item": {
          "id": "69293579-644b-47b5-bcd9-94d0dd33c24e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "bb06f094-f820-48f4-bbc9-4a94d4db0089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad94a888-a2a7-4f5a-b96c-bc171a3015d7",
        "cursor": {
          "ref": "f6091b57-27ce-41ea-87ac-8d4f0310c8b0",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "9fdc9658-82ed-45e8-a648-6c23d9cbc8dc"
        },
        "item": {
          "id": "ad94a888-a2a7-4f5a-b96c-bc171a3015d7",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "c758d9c8-0e54-4b15-bd98-788b605953c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc55e596-7f4e-4df6-84f6-1508f1a4dfe7",
        "cursor": {
          "ref": "7c20f174-b8e2-41cc-9033-ca3ec2c261fb",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "3c04386d-abc3-402e-bb9f-8b318ce242e9"
        },
        "item": {
          "id": "cc55e596-7f4e-4df6-84f6-1508f1a4dfe7",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "67a78894-e777-4525-ab78-52b1ab0793ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b2567f3-2fe5-4ef2-9270-1873b5be97b6",
        "cursor": {
          "ref": "944a504b-93cb-48e8-a4b1-cacadd15bbc7",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "8bc35975-7764-4152-890d-d063569663c0"
        },
        "item": {
          "id": "3b2567f3-2fe5-4ef2-9270-1873b5be97b6",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "335351b8-0914-441d-b96f-310fa0e77946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e14923fe-8eb5-481b-b513-781351dfd096",
        "cursor": {
          "ref": "c56bb73f-3180-4931-84d6-e68f565f98f2",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "85809731-3e87-45c2-80ec-f6b9e7629389"
        },
        "item": {
          "id": "e14923fe-8eb5-481b-b513-781351dfd096",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "4e1fb6e5-63bc-4f04-8534-7388ca36b4cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee1b1ae0-0e0f-4ad8-96fb-9896e58abfd1",
        "cursor": {
          "ref": "95debe07-ded4-4da2-a6f4-327951155ae5",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "dbaef1f9-ab73-45fb-9c39-2d2b5776089d"
        },
        "item": {
          "id": "ee1b1ae0-0e0f-4ad8-96fb-9896e58abfd1",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "113ba290-700d-4466-8aed-7a6f7b833ee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd7cbb40-6d00-4f52-a52b-1597862d0be2",
        "cursor": {
          "ref": "6614df44-43c2-4ef6-b41a-685f7863baa3",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "2f0cb530-e68d-4ae7-9b6a-5988a6864661"
        },
        "item": {
          "id": "dd7cbb40-6d00-4f52-a52b-1597862d0be2",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d4ab1ac8-5e14-4d86-abc0-5ec52064791e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2168c9f-e0c0-472e-abaf-420da754a9ca",
        "cursor": {
          "ref": "67521022-3761-4100-a916-ff3d89e04cdd",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f4fe8c9b-8d11-419b-b425-d39d648468ed"
        },
        "item": {
          "id": "f2168c9f-e0c0-472e-abaf-420da754a9ca",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "108fc4cb-2254-4d62-8f65-f1d1ee092609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f72fb9-c9ee-4fdd-a5b0-0c22ec12c06c",
        "cursor": {
          "ref": "bcb7e388-b465-42be-b07b-db1895250de9",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "7a7bcd95-05c6-49c4-ba41-a8c85c9d9dc0"
        },
        "item": {
          "id": "d0f72fb9-c9ee-4fdd-a5b0-0c22ec12c06c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "939a4404-0240-47fe-bc5a-6df24d7f2c56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f8223c8-94bc-4314-baef-e6ef2b060e1f",
        "cursor": {
          "ref": "e0d55dde-1415-45cb-a63e-0566668337c0",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "cdcaaf2a-224f-4977-8f89-19ca2fd695b6"
        },
        "item": {
          "id": "0f8223c8-94bc-4314-baef-e6ef2b060e1f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "4f890849-a003-4405-8715-b5e9be072ab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a0a9840-1bc5-47d4-8a9c-00bcc77c4e6d",
        "cursor": {
          "ref": "54f1f358-9487-49b8-b4cb-7fc48920f957",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "485e76e0-fcf4-4eae-b037-090ffe37371b"
        },
        "item": {
          "id": "3a0a9840-1bc5-47d4-8a9c-00bcc77c4e6d",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "08c9c980-ce71-4a5e-bb29-dc16408a337c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1178a923-c39a-4a4b-8bc7-7c38950fd7d3",
        "cursor": {
          "ref": "c2f52983-4ea4-4d7f-9387-baa0cd92cb96",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "bbfde8df-5f78-4f01-aa27-20d643172b66"
        },
        "item": {
          "id": "1178a923-c39a-4a4b-8bc7-7c38950fd7d3",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "2403722b-96bb-47bb-b8dd-dd8848b4d5c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9980f090-fa2a-4120-9707-bd0d6577d32d",
        "cursor": {
          "ref": "be0ffc60-4b48-425b-bca1-3ecec8d2f5f8",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "205059a4-3a1a-43ae-931a-fda6f5367d2b"
        },
        "item": {
          "id": "9980f090-fa2a-4120-9707-bd0d6577d32d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "554246f1-b030-4afa-b274-6ee9da3899c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "034a994f-b938-4d04-9f61-a75019cc772c",
        "cursor": {
          "ref": "d3f39598-6754-463d-ab0d-83cb134e9c62",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "42080772-9b46-4a1b-8a36-fc62369f49ec"
        },
        "item": {
          "id": "034a994f-b938-4d04-9f61-a75019cc772c",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "27f777a3-2492-4b75-ad3d-915fa35e2652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b6ecd1-d47a-47b9-9d6c-6dae3ee13b6a",
        "cursor": {
          "ref": "4d625326-3751-40af-b782-f5b5f53d1a74",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "f7fa84be-a5f0-43b7-9476-1714d81c4d20"
        },
        "item": {
          "id": "f1b6ecd1-d47a-47b9-9d6c-6dae3ee13b6a",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "5c69ca07-4c02-489e-bafb-49cb41ac2a8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bbae42b-7874-4561-aa72-14ec03fb2010",
        "cursor": {
          "ref": "20859392-9795-4042-966e-c8b55644ea6a",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "f2a598c7-1910-4914-b6b4-a9414e6dba6c"
        },
        "item": {
          "id": "0bbae42b-7874-4561-aa72-14ec03fb2010",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d36058bf-49d6-4ee9-a1a9-dd258cd866b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8c526cc-6733-40e5-a25c-85c50ead02c3",
        "cursor": {
          "ref": "72219184-de26-4154-800d-ad3d9e6ff9c7",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "f059487d-1a10-4ee6-9ab2-c154b740ee65"
        },
        "item": {
          "id": "a8c526cc-6733-40e5-a25c-85c50ead02c3",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "0c610651-2638-49b9-8b10-c21c829c31aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c71e1b7-f29c-49e5-9905-db786cbb04f6",
        "cursor": {
          "ref": "b8854e2a-32a6-428f-8de4-10182c5596a6",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "42e641db-4661-44e3-99cf-71f93b9b49e6"
        },
        "item": {
          "id": "7c71e1b7-f29c-49e5-9905-db786cbb04f6",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "09abd51c-4780-43a0-b1fb-a63e37cebe56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40371e31-1c31-4962-a826-26f65093ccee",
        "cursor": {
          "ref": "c76a3085-c5a4-45f7-a466-d2ba07a8935e",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "081b66b0-8d2c-48bd-8268-2971ea529a99"
        },
        "item": {
          "id": "40371e31-1c31-4962-a826-26f65093ccee",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "51fe6a2e-d4e5-4846-9917-9b10ea5eb4f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c62ccf88-a648-4629-ad6a-3017272fb285",
        "cursor": {
          "ref": "4b12ac49-808b-4c8b-a79f-62f3acf3838b",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "412e041f-421d-4401-82ce-444e3c0d2978"
        },
        "item": {
          "id": "c62ccf88-a648-4629-ad6a-3017272fb285",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "fb373236-cb66-4282-a663-36e26f42c362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d15f97c2-be47-40ec-9536-6be0ede19333",
        "cursor": {
          "ref": "abcc0bc3-a932-4751-8629-2214b224d878",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ee09d6eb-3aaa-4057-b762-20c0192adf13"
        },
        "item": {
          "id": "d15f97c2-be47-40ec-9536-6be0ede19333",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "52966f5e-daa3-4cdd-90e7-80f76f6d2379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eda60f15-ded7-4269-a609-bacb33c4703b",
        "cursor": {
          "ref": "267ff6a9-42c2-4d06-a4cd-631569eb8133",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "cf1add74-7196-44b9-bb1d-ac07e619d383"
        },
        "item": {
          "id": "eda60f15-ded7-4269-a609-bacb33c4703b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "bdb61236-16c4-4551-982a-23818e9291f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbbbb2a4-aa3f-4e50-a8eb-18731931b953",
        "cursor": {
          "ref": "2ca18f2e-feeb-4f4c-bfa5-74df78048e91",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "df160cdd-fc6b-4aba-9e50-80e1345632c3"
        },
        "item": {
          "id": "fbbbb2a4-aa3f-4e50-a8eb-18731931b953",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a11b5a22-834e-408c-8100-c2fa845a3c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91d66fc8-c189-4e97-9685-2b669a388efc",
        "cursor": {
          "ref": "20ce5624-ec92-4889-a623-38d61460ddf8",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "1d429614-9329-451e-a6d5-399303d87cdc"
        },
        "item": {
          "id": "91d66fc8-c189-4e97-9685-2b669a388efc",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c1e5d2a3-4c4f-4b19-ace4-1306806bd2a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8baa65e4-1feb-405c-86d8-51be62186062",
        "cursor": {
          "ref": "e41eeb94-7bda-4a31-a7fb-7c86f333dc65",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "889cd6cc-7d24-4a70-bfbd-36d3b0164514"
        },
        "item": {
          "id": "8baa65e4-1feb-405c-86d8-51be62186062",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "fe0f16ef-aabb-435a-a56f-8a37580d4a57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a745acc-4524-454d-ae82-f8a0f548f761",
        "cursor": {
          "ref": "f94d2667-79eb-4d95-ae82-c4d2d2b68f28",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "31388817-9a45-4999-afa6-6c6e916aa1b4"
        },
        "item": {
          "id": "5a745acc-4524-454d-ae82-f8a0f548f761",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ebbc21bf-f155-4bee-9d9a-54fdd651afcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4c2eb98-3b01-4a1c-a43e-4c9278ca73c7",
        "cursor": {
          "ref": "f8eaad1e-a109-4994-8da0-de457393c63e",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "924b53d6-a80a-48ac-9988-93b31f696ec2"
        },
        "item": {
          "id": "d4c2eb98-3b01-4a1c-a43e-4c9278ca73c7",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "81ae2a09-36d4-431b-98f0-9d2fa86d85fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "686d6ebc-bcc7-435a-a700-5c0b4d57c37e",
        "cursor": {
          "ref": "2a3ad8f6-68e3-4658-9d62-e7bfd6a95ef8",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "0718e7d7-4260-47c6-aba5-7e1bab2789b8"
        },
        "item": {
          "id": "686d6ebc-bcc7-435a-a700-5c0b4d57c37e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "37a9a04e-024d-400d-99b1-3a44d1140621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c113d99-4b0b-4f12-969f-a3c689968269",
        "cursor": {
          "ref": "8ac355c2-050a-4e24-af19-17ab3c060a4a",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "010c2eaf-3502-41e3-894f-e575d02a6247"
        },
        "item": {
          "id": "6c113d99-4b0b-4f12-969f-a3c689968269",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a5895adb-fd33-42d3-9a3b-c45cc09e49be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3abb53f-517b-410a-ad66-e68aac1f847f",
        "cursor": {
          "ref": "38dba23d-bd1f-499b-b568-be094c20474a",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "10708441-56f7-470d-bb17-ded906039094"
        },
        "item": {
          "id": "b3abb53f-517b-410a-ad66-e68aac1f847f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "ab3833a9-1247-4a46-90b8-82310ba77a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9a8dcbf-42a1-41f1-b8a9-d044a370bd09",
        "cursor": {
          "ref": "7d69b47f-fd29-401e-bde4-75f68a8ab762",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "b03bb6a2-5f21-4aa8-abad-e4cb9c3a9df0"
        },
        "item": {
          "id": "b9a8dcbf-42a1-41f1-b8a9-d044a370bd09",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "11c7de48-fa51-4179-a592-e6e4b35f5c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eca443d-fefd-44fc-9e4c-4cf81d5114c3",
        "cursor": {
          "ref": "8ea3b091-efc6-43e5-8b73-57178ab6b1a4",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "69f4dc2a-8de2-4d52-8a70-68fd4f567a5f"
        },
        "item": {
          "id": "4eca443d-fefd-44fc-9e4c-4cf81d5114c3",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "19d51d2e-69bd-410d-8109-6b192c931d34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c5e28f1-272c-418b-9e6c-3b0fc9f07095",
        "cursor": {
          "ref": "62b9e464-4240-4b59-8ed6-c38fa990dfba",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "49c99bbc-b839-4660-8250-a8b7537ac2f4"
        },
        "item": {
          "id": "0c5e28f1-272c-418b-9e6c-3b0fc9f07095",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "cfa2f4cf-ecc2-434f-904c-16f58318e36b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b962188-73da-41a6-9dc8-9162565d33ab",
        "cursor": {
          "ref": "dea0dfeb-11ca-43ce-8958-5100e3c8db1c",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "446058d7-5970-474f-a449-6c2daa06475c"
        },
        "item": {
          "id": "6b962188-73da-41a6-9dc8-9162565d33ab",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "95a1dc1c-5b07-4e8a-b5d2-e7786619b8de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77739056-eed3-4665-b121-fafbfc29fff9",
        "cursor": {
          "ref": "d0eb1ea1-c840-4568-bee7-26460e323755",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "9b911c17-d99c-4ac1-8bee-87290844cfd0"
        },
        "item": {
          "id": "77739056-eed3-4665-b121-fafbfc29fff9",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "7b12634f-e9f8-4281-8778-c8b32f64130f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab222d7-7878-4ad3-b184-2a208fee1bb8",
        "cursor": {
          "ref": "9dbae7cf-7d6e-448f-abad-643a2ae8ed6b",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ebb442da-32d5-472a-8f2c-65946d4a150b"
        },
        "item": {
          "id": "fab222d7-7878-4ad3-b184-2a208fee1bb8",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "d49e4136-5e55-40c4-9e6e-4d7e3abada20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf6205ff-6e55-48b3-9038-35e70e32e996",
        "cursor": {
          "ref": "4f14f088-0cad-4d17-9033-f6730671fa15",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "5dabfe5e-2ec7-4dce-88fb-b4592ff6971d"
        },
        "item": {
          "id": "cf6205ff-6e55-48b3-9038-35e70e32e996",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "9669b894-783e-4192-a33a-3778539a2356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f2619d9-133e-4398-8ff6-d11cd5ae0ef3",
        "cursor": {
          "ref": "f0cecbc2-7569-4c37-beff-38e985a9c257",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b0defd78-cc51-4f5f-89f2-8ded814d31c0"
        },
        "item": {
          "id": "1f2619d9-133e-4398-8ff6-d11cd5ae0ef3",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f3b00790-53c5-4801-88ff-f8fa243cee41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d8350d-de04-4478-937a-bd4b307b3995",
        "cursor": {
          "ref": "e98c9865-1e2a-4fe8-81e9-f5f224590c3a",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "4a9252ed-a8c5-4f69-9813-376480e43be3"
        },
        "item": {
          "id": "00d8350d-de04-4478-937a-bd4b307b3995",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "9f976b8d-c910-48ba-8917-c47559d0eaa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c51e16b-1da4-4db8-a88a-d79c2c886535",
        "cursor": {
          "ref": "750d48d9-3624-45f0-9be9-adf55f6e5ecc",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "9b637aeb-7ae7-4195-bd87-bf1ac3dc3d99"
        },
        "item": {
          "id": "9c51e16b-1da4-4db8-a88a-d79c2c886535",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "4b8e2d63-2313-400c-98f7-650520f635c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e3157d-1c5a-43c5-9992-ffd74ef64057",
        "cursor": {
          "ref": "f878ea25-3b13-4cdb-aa30-1f240547bf57",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1a93ec7f-c39c-41c5-a522-a9d44bc1d1e7"
        },
        "item": {
          "id": "a1e3157d-1c5a-43c5-9992-ffd74ef64057",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "6f6629fb-cbb5-448f-a9bc-25fb55fc273b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e106a50b-86be-4e6a-96dd-3eb6886f18ef",
        "cursor": {
          "ref": "3013a17f-6cb3-47b7-bb6c-65b0ec78c781",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "cc2749bd-3f00-46da-ae40-66de66e0e6f2"
        },
        "item": {
          "id": "e106a50b-86be-4e6a-96dd-3eb6886f18ef",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "069c0d50-8f74-40ed-be38-8ab457e62a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1579f05-29cf-43d6-9f4e-bc86871ab28f",
        "cursor": {
          "ref": "619c6df2-6f22-4b45-a5da-9880c9917e73",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "cbad6604-23d2-4c57-9242-ac17e5e6a417"
        },
        "item": {
          "id": "b1579f05-29cf-43d6-9f4e-bc86871ab28f",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "84fcb763-06eb-4b98-962c-5c1bb3e97f94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d299751b-5c2e-4780-aa18-2da7eadb5c16",
        "cursor": {
          "ref": "1e982e82-3c9f-4194-be94-20feb6a16650",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7f435c2d-89e7-4497-92d9-2cd3e5ae1b74"
        },
        "item": {
          "id": "d299751b-5c2e-4780-aa18-2da7eadb5c16",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "8cef9556-db52-45a5-94cb-3df20bb06990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee55912d-e355-4741-bad7-0d88fe914dc7",
        "cursor": {
          "ref": "e1e4c083-00de-468a-84c3-ec918d9856c2",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "b3be477b-befa-4fda-95ce-a86136a01a88"
        },
        "item": {
          "id": "ee55912d-e355-4741-bad7-0d88fe914dc7",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "bd5b7689-93cb-4083-9a8c-61737f7b8d12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9708769-f5b7-46c2-93cb-e4407e532d45",
        "cursor": {
          "ref": "fe283dad-3d83-42f8-a776-4757efa706c4",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "09963903-b468-4606-9074-c935839bf3d4"
        },
        "item": {
          "id": "a9708769-f5b7-46c2-93cb-e4407e532d45",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ce2a58a8-5b0e-4f8b-9f70-3b0553ae7fb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "091ca56b-8e4e-4ab7-95c0-91fcef71284b",
        "cursor": {
          "ref": "3f4a6580-43fe-4a3d-9f9a-452fd75189ec",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "d053c065-e595-45d9-9866-26f50c1cd339"
        },
        "item": {
          "id": "091ca56b-8e4e-4ab7-95c0-91fcef71284b",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "10a7c122-6c3e-4370-8463-d513cf6fe26c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f65f4488-aac8-4509-951e-959c31479794",
        "cursor": {
          "ref": "20444d12-e0c8-4e81-bd04-8bfece668a69",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "ab112a80-bcd1-491a-8157-394dd5a168b8"
        },
        "item": {
          "id": "f65f4488-aac8-4509-951e-959c31479794",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "be07708a-fc5d-4068-960c-9422d010200d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b5659ac-4eab-4840-b20e-d6114b526b8e",
        "cursor": {
          "ref": "e085495a-1b19-4352-86f6-e6e4966bd505",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "4db4e1d3-dfde-4f5e-af18-cdfb1aec73f9"
        },
        "item": {
          "id": "3b5659ac-4eab-4840-b20e-d6114b526b8e",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b7b4605f-aa65-4f31-b5aa-ecc9643faf9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14aeed5f-cf23-4561-adc0-89183da44d3b",
        "cursor": {
          "ref": "73d9287c-ef2d-4544-adbf-6d58e0d2a395",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "89190226-7edf-402e-99ab-7292739603a6"
        },
        "item": {
          "id": "14aeed5f-cf23-4561-adc0-89183da44d3b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "16a46cac-831a-4607-a67f-ff5d6f3e8327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "008fa2f0-08d4-4c5b-aa74-a9746a143c26",
        "cursor": {
          "ref": "f66baa60-df51-4ab3-ab7f-b5bed8169166",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "b5bd64d1-a626-494c-a146-fdaada05c341"
        },
        "item": {
          "id": "008fa2f0-08d4-4c5b-aa74-a9746a143c26",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "1a52d79f-2a88-4a1b-8432-f3bc0cb3e6f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d73c3152-922f-4665-b2f4-c16342b03749",
        "cursor": {
          "ref": "176c6f21-9048-4ec2-bf86-fe105c2494a1",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "109efb45-3d2d-47a7-a894-5202eb449725"
        },
        "item": {
          "id": "d73c3152-922f-4665-b2f4-c16342b03749",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "f3f954a9-dfae-4343-975e-397444c6cf99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46fa4ebd-385d-4958-b2a7-90b3a242e2a0",
        "cursor": {
          "ref": "64402083-5cf0-4956-9450-ab5e71f532fb",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "0a5ce522-6371-491c-ae93-424a7b2555e9"
        },
        "item": {
          "id": "46fa4ebd-385d-4958-b2a7-90b3a242e2a0",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "2087aa78-51da-45be-9321-4111861751b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe9f895-c648-4f00-a80f-ec54193bb0fc",
        "cursor": {
          "ref": "c1e6884b-d801-45e6-8946-f1d38be71096",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "5dab6010-867b-483e-97ab-adaf171fa9d2"
        },
        "item": {
          "id": "ebe9f895-c648-4f00-a80f-ec54193bb0fc",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "7ed1d2e7-49ec-4c03-b7b2-e12f77d6333d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6df866c-c677-4a91-8d44-103b32c5016c",
        "cursor": {
          "ref": "2a4f5add-4088-4535-a9b4-dae83c04dcf0",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "972086cd-5556-4d29-824b-69098d1f5c61"
        },
        "item": {
          "id": "e6df866c-c677-4a91-8d44-103b32c5016c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "c02c8f48-125f-4428-86a3-eca9e2cc8dfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "224bcd53-209e-40e3-b1ad-32302d112ee5",
        "cursor": {
          "ref": "80c1d804-0a7b-426d-862e-661ba017c179",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "6a5d58bd-096b-4aa2-9986-923b1cf5fae0"
        },
        "item": {
          "id": "224bcd53-209e-40e3-b1ad-32302d112ee5",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "48029a47-c61a-4024-b69e-a4c45e594511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8926eb-a31c-4914-84e1-41355c68fd6e",
        "cursor": {
          "ref": "34947bc2-2dab-4a6e-86c4-925e492946d2",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "69dff038-068e-4843-87b7-b9a160999f67"
        },
        "item": {
          "id": "2c8926eb-a31c-4914-84e1-41355c68fd6e",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "8914cc9b-b2fe-4238-86bf-e611a623c31c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe456d1b-7983-4317-b042-37eff4ca3895",
        "cursor": {
          "ref": "6e451d8f-be64-453f-9fec-a253467642e8",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "71843d8a-f24e-45d7-93fe-75d98731e6b1"
        },
        "item": {
          "id": "fe456d1b-7983-4317-b042-37eff4ca3895",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d0764935-44f1-4269-8595-d6aebcfc69fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "306432b5-a0b5-48f7-9749-b40ca23398fd",
        "cursor": {
          "ref": "8d7338a1-b829-4f22-8f0a-f2e55329ed17",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "592dadd3-3cae-45e6-b269-13be5db6e7ca"
        },
        "item": {
          "id": "306432b5-a0b5-48f7-9749-b40ca23398fd",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "3f3bf425-efe7-4877-b6c9-27d0e9766aee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5bec36f-cc5b-45ef-87dc-565bd276bb15",
        "cursor": {
          "ref": "f05f4fea-b936-4866-b974-02294c632041",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "5a8f7bf2-b71f-41e0-9920-c789ff4a1b2c"
        },
        "item": {
          "id": "e5bec36f-cc5b-45ef-87dc-565bd276bb15",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "826f5059-b12f-49d3-8301-835b20d874d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e2afdf3-5e74-46b2-9aea-9f305dfbf39e",
        "cursor": {
          "ref": "93baa046-86b2-4f74-9f38-bb3ecab50fa3",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "41854b8a-46fd-4f61-886f-21d91a3987ec"
        },
        "item": {
          "id": "8e2afdf3-5e74-46b2-9aea-9f305dfbf39e",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "dec6823c-d43a-460d-be96-b7e7d56ef105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7f786ef-3714-4406-9023-2dedc183b862",
        "cursor": {
          "ref": "5ce839ee-84f9-4075-914b-a9057a1d3f33",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "040c366d-b5c8-47ec-9508-2eddbdc84f63"
        },
        "item": {
          "id": "e7f786ef-3714-4406-9023-2dedc183b862",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "7825c0b1-fa7e-49a0-a9e4-a99a0e4b558c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb59cb35-6c7b-4404-a0bb-01c667054b09",
        "cursor": {
          "ref": "e6b55635-5e9c-4425-9ea3-75931fbc63e1",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "6b6ba5f0-7485-4c0c-bd85-0274f7b2ecf3"
        },
        "item": {
          "id": "cb59cb35-6c7b-4404-a0bb-01c667054b09",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "0ebe41d3-705d-429f-8fe0-51b1719a6921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b5643c5-ab69-4c85-99f6-60af75390bc3",
        "cursor": {
          "ref": "0fc326bb-189c-458e-9991-e515f0cb6966",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "04c450f2-faf9-4ef4-bde4-f91540e7d69b"
        },
        "item": {
          "id": "2b5643c5-ab69-4c85-99f6-60af75390bc3",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c06df9d0-050e-4876-a25c-1376a77f727a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e5f1fbc-4d07-4b1d-a441-aa4788f8a7d7",
        "cursor": {
          "ref": "8554cfc4-f3ac-49db-911f-eb5720f9f547",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "6f4e7766-7730-4c15-8e99-e6c64d0c7a76"
        },
        "item": {
          "id": "2e5f1fbc-4d07-4b1d-a441-aa4788f8a7d7",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f0a53b09-091c-4230-af22-e3d66a0978c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acdc146d-72ff-4c08-b0d9-9182da13e8b7",
        "cursor": {
          "ref": "455d5ce3-e39d-44ca-bed7-cd49f5c118df",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e0696f10-2371-4c81-a39a-d49470c09ea0"
        },
        "item": {
          "id": "acdc146d-72ff-4c08-b0d9-9182da13e8b7",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "dc55170e-e069-4e52-8ee4-2a3ab18e3862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8140069c-213f-4239-9b36-4d069058b9ee",
        "cursor": {
          "ref": "7d7bfd22-35ee-4f8f-96b1-cf7391e2cb98",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "1dba44ff-a2dc-4b4a-9df7-3185264a159b"
        },
        "item": {
          "id": "8140069c-213f-4239-9b36-4d069058b9ee",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "62b3aafc-c968-40a8-8b6d-1a67a50b06fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a8cae00-ce52-4e1b-86a4-29dac170897d",
        "cursor": {
          "ref": "b29d7094-e2ec-45c8-8715-ebad4724ffb2",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a32adcd2-6361-46cd-9649-a1fc8da6f80a"
        },
        "item": {
          "id": "4a8cae00-ce52-4e1b-86a4-29dac170897d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "d1a1e192-19c7-4a89-ab60-a098990ffd4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec40dc04-eb14-43fd-b713-0c1f013f6b15",
        "cursor": {
          "ref": "062c526c-02a1-4190-8bdf-20f941f1aed2",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "008d03db-1748-44d3-a904-808793c88d12"
        },
        "item": {
          "id": "ec40dc04-eb14-43fd-b713-0c1f013f6b15",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "fc739342-5cf0-415c-a0b5-c63a1067fcbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "369f088c-cced-420f-8113-d01973d41d1a",
        "cursor": {
          "ref": "77993c74-fb74-4775-be58-bdc21ca93633",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "3c16d8e6-a6e3-434a-ae12-867e39872896"
        },
        "item": {
          "id": "369f088c-cced-420f-8113-d01973d41d1a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "d68c8258-4c86-4352-bd23-8591bfa7be72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "abfc7b1e-78cc-4109-b7a9-bbe65453dfc9",
        "cursor": {
          "ref": "eb06d8b8-a6ef-479c-9e88-3f66f0ce767b",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "788a11cb-c22e-4a51-8b0a-5326359fa800"
        },
        "item": {
          "id": "abfc7b1e-78cc-4109-b7a9-bbe65453dfc9",
          "name": "credentials_verify"
        },
        "response": {
          "id": "f4c36172-f7b5-4ef5-8bca-5d7e72d53418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "ee066914-3404-4f4c-bc78-4334aaaf253d",
        "cursor": {
          "ref": "e8985d08-afaa-481e-ae9f-b25c19f5478b",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "02194612-09f2-43fa-a966-fbd0438ef48a"
        },
        "item": {
          "id": "ee066914-3404-4f4c-bc78-4334aaaf253d",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "eee7de90-23a4-4260-83b6-f2c8b0b33142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "6b7ae8a7-15ae-4653-be6b-2092829a62d0",
        "cursor": {
          "ref": "4b585e03-57a1-4219-bc8e-7e8475228d75",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "63a21205-229a-46f8-8e4c-e59d53f1a387"
        },
        "item": {
          "id": "6b7ae8a7-15ae-4653-be6b-2092829a62d0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "793285ee-3193-4d83-be4a-c6d879d1c025",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b7ae8a7-15ae-4653-be6b-2092829a62d0",
        "cursor": {
          "ref": "4b585e03-57a1-4219-bc8e-7e8475228d75",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "63a21205-229a-46f8-8e4c-e59d53f1a387"
        },
        "item": {
          "id": "6b7ae8a7-15ae-4653-be6b-2092829a62d0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "793285ee-3193-4d83-be4a-c6d879d1c025",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2c474f6-2146-4316-9ee5-0ef5530865e3",
        "cursor": {
          "ref": "4ebdb2ac-5ca5-4356-89ba-3bc88a4a595b",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "1ac29e7e-a130-4a3c-834c-1c83186a585a"
        },
        "item": {
          "id": "c2c474f6-2146-4316-9ee5-0ef5530865e3",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "1ee8dce7-2018-4e23-90d3-e7dc82ece41b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b735659-4d4b-4bd9-bee4-d9863b849654",
        "cursor": {
          "ref": "67948e3f-db9e-4272-bda2-5867c6121a03",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "8c41385e-4ac7-4f1b-b9bc-798461e29dfb"
        },
        "item": {
          "id": "3b735659-4d4b-4bd9-bee4-d9863b849654",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "52541a15-c38b-4abf-a825-a876d63a4f46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}