{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "bf68b77e-c1f1-401e-b8d1-e49b35f6d009",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d93fe808-5cba-4a3b-9acc-12f28796b3c5",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "215008d1-f64c-4135-acfe-eb3eac258921",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "aac909b3-c38a-4e92-aa50-6437aaaa1dac"
                }
              }
            ]
          },
          {
            "id": "e3fc8f1d-907a-47dc-b693-29162f0ef2fd",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7accdb91-1af7-476f-aa77-b4b114ae5965",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a849482a-1616-49fe-85cd-778c61afeb77"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c697839d-3a24-41d4-a88f-7e8bffe75aa7",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "1f8969d8-ae67-41bf-83ba-fbeb65ef3581",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ac61f173-255c-44f9-944a-db13d67ed782",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f7f2073e-bfd9-4158-a183-81724542efb5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1638d20e-3f29-4f9f-9671-f25d6f4bc702"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "57dab29b-6def-4380-9455-f6c1c548f731",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1cb9bf60-42eb-47fb-9f6f-56fc08c29a87"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7390abd3-55ae-47e6-ba24-c2f2c24033a9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "44b2d3a5-1796-46b1-9d3a-6f6afcbc8fb3"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b4823ece-d49e-4193-9535-ef9b08ee0c7f",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "1e036eb7-9d39-4a13-adb8-4ca6ce54075c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c17b392b-c3f8-44de-a25c-592c026e42e6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6db0721c-c791-4676-b677-e671ba9616e7"
            }
          }
        ]
      },
      {
        "id": "9a5aab8f-3ea8-429e-80a3-8e8318498a07",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "110dc3a4-9e54-4d58-8310-6f523d2d4278",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4a796419-9de2-4540-9e06-48289fc16e73",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8382496d-34e4-4775-924a-d7e97d96ae3c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bd8b076-855f-40a4-afc4-f94aa26fdc25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7d65b240-06e8-4891-9bc2-105003cc91b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6710b1e2-462b-469a-8726-8515c3588cec",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fce5e84-1f98-4f18-bb92-2da09abdd85a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d14bf8c8-f21c-4934-ae19-cf19f5cd746d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d8e404d-1799-4b22-a42e-e1c665d9912b",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efa9c32d-6cd5-4359-ab48-9976abc02a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b3f66409-9922-4a68-84f4-86847088f796"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "deaf5921-375b-42f7-8e24-29bbc4c01d93",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bdc615a5-f61f-4376-9df4-ee90f68fd298",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cddbb66-40ed-48b0-a7f4-6ac8464d33e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1ae682a4-0c4b-4789-8ebb-cf29b4f2c4c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a32a34fe-fa55-41d7-a514-7ce5a05399fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85285e76-5efe-461b-bd09-6aa8ba6f6293"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a3779904-ba14-46ff-8b3d-09f4990f53f8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0d392694-9bad-4db6-a8a6-e9302ea66e89",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f461fa82-9648-4145-b9a8-004c6bfb2d8e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "fc168e7b-f7d9-4e30-b0ea-7ebbd859c455"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c6c66375-7ac7-4b0e-aa13-9c36fa984970",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "891f20de-7b6f-4182-a5c7-19f53ef70ab7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "37ed3321-9066-438c-8465-60e97f7ac63b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1046d66e-71e4-4391-bfbb-db8817d54512"
            }
          }
        ]
      },
      {
        "id": "19d04986-2635-4c69-9bd9-efc98818ae13",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "008a7730-f031-4911-99d4-5a60480c6c86",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8b1bf8a0-9562-4b3d-9194-7001d44821e2",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "51049e7e-9b91-4eb4-be7c-57c12490600e",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bfd660a-990f-43a1-8568-642088f8d4a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a49bca65-a23f-4be3-adf0-b9b9b55bed1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0997788b-e31a-400a-a5cb-1a17e66d1744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "163db803-022b-4325-ba02-72579c770ee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8f9f5cd-7e72-457a-b07f-adbdfa52f66e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1806be5f-0161-4f4c-a952-3cdcacb1bb3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "118ee881-5953-4eb3-bd06-6e0a3aceb37f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc62b68d-24ba-4fc1-8eac-54f66712d615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5720bbc0-de6e-4126-b298-504861834dce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cc068af-bbae-4e36-a7c1-0570f4698b9a",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0225d3f9-c762-48c2-b716-0002b609f0ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8851d308-0e34-4540-80fc-f7b0ccc38f9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da7691d-28d9-4d8c-90c3-076a7ed4e25a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f642fdd-3e72-4424-9749-fcd5f3245566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e101543-06c6-4638-9f7c-84a681e18f8e",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d304fae-80aa-418c-9801-213675a491f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "242d7492-4912-4719-8cd4-6263eabe650b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d5dfcd0-d1dd-456c-9224-1eb8fd9ab548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "188836ba-c6d7-40d9-9aff-70600bc2b10f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d15d55cf-50a1-407f-a0e5-5d3850fe2fca",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd2c334-7a89-4515-b1da-3506971f771f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95a4d7eb-8882-4dc4-bb5e-1c37a9490d87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30f138f6-a81a-4297-bc44-e6f7e14e9222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0106510-bdde-489f-952f-bc5f86e7d6a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8960e209-e208-4962-9e31-fda913306585",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "396c135f-7bb4-4a48-bac8-537886e0272d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0585523b-c49b-490c-a38e-acf56abc97bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeceb430-681e-4cad-813a-dfe30630886b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6c897d8-cb7c-4f68-832e-cc39d81b96dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41c549e7-2aa6-462e-a582-9afeec85d6ef",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdfcd15d-614c-4780-8cfb-5210b4f28a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a27ce986-3133-4643-a27e-1ec7f4532321"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0763d683-dadc-44b9-bb52-f7da509dbfec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "74e2d8b0-9c3b-40a6-8878-435e433007f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79339848-d660-4824-a246-ad12b5599c9a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4efa8bf2-c9e4-475c-b395-00f7670de1ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb381093-c869-4f10-938a-cd90a589a074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff7e218a-6fbe-4e67-8a34-84f3a320870e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3833b1a7-f7fe-492b-a9a3-1aabbb6ee69f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2f61d15-50ee-43c8-85e7-4b609642f099",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21ad87a6-e1d4-4293-91c5-f59d065052a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "204888f9-324f-40ed-8c22-8e788757d532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b0060cd-1968-4935-b914-48ccf60780e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c5b16f60-c8e8-4da3-9b50-1cf17757da59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f166d86d-8a4f-4bd0-b97f-a4ac1dbe8633",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "458fb504-e99d-4802-b301-52ed2ba477c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "476c607b-1f62-40c7-ad53-b0587420eaa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32beff7b-2576-4a07-a33b-7d10f478a0a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82e38284-ba3a-4b70-a961-46dc7dfc72b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5312611f-9c7e-4b0d-9aac-55a724eb9f09",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32ad6501-c856-4b49-b7e9-0adf776dcacc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d16ced3a-c39a-48a3-8194-f5759c4dda34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed7968d4-cb2a-492f-a75b-ddb7897f387d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6e871ea1-39a8-44d8-8dc3-cb44ec3ed6c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb42933b-c5c8-48ed-8c7b-b8c9119447c8",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "637a26f1-48f2-4012-b970-33253e554fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b4966b0-0c58-459b-a330-0746ab6d3666"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "614c18b5-3977-4a93-8b54-36c7af2369c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03601d79-b6ae-4dba-b957-e2b21fcb40e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00b1f33c-b442-430b-8b6b-c709272533ec",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c015f2d-fa96-4518-8fbc-061459729790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9345a2bb-ec15-488f-9361-bb3755b1069e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba79b48-1271-40c8-9cbf-78cc93e30005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "507de2c4-1157-4b05-875c-a206f7438b53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f499bd2-0b73-4007-8c1b-ac8ac2b617b0",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad478b03-0c00-4dd0-b430-29bdb8dcff57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18cac93c-5abe-4824-bb46-a175724b6567"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e105a7f2-4fd6-4708-8907-2f1ca3d0bf50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f33f8b58-3e19-46af-b4f3-58167223ae23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "696e1a07-e95f-4aa0-ad82-fef623d53310",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88dd1a5e-357d-4d6d-8f9c-12d9bdf1b371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ea247df-b64c-4aaf-b49f-b144425dd9fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b532d401-4f77-4f6c-94a5-5636ef857f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "26de5c94-32be-469d-9000-a475099b2707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37f215ef-b4a6-48c3-bc11-08bed0e95d30",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac28f0ba-f63d-476f-8031-fc65a2bcfa84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bc759bf-6f17-44ca-8142-ad87466ee302"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68b20cfd-3239-4dc6-bd6a-448bcbf3cb7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b4ca17c5-8457-44bb-b76d-7e0ccf95ba76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7120a8da-b3d5-412b-b991-c69763611702",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d19a4307-f168-4014-bea9-97738c4e9853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8e26d7f-8498-4d5d-9722-38185bce2c25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04e51952-816f-4cb9-8236-7a681fdf07ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b96d514-f265-44f9-a39c-f59690ae7143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91bb79d7-6db0-41ab-aba5-046bfaed0ee4",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b8840d2-4d4e-43a1-95d1-c0b0802f1171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9d583e3-a17c-4d5d-a6de-8fc5fee31d42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d1c6f0f-0e43-402a-918d-9d0f2e85103b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "45a5ad92-ad06-4d31-b513-506655f98ede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39d4b289-cd94-4357-a19f-1adbabc87a3a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c574d6d-240f-4610-ac06-0fd1bb4cdc99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "695eac26-338d-42c5-a805-3b541ab5e7ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2387e36-f2bf-4881-b73f-6a7656b514ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "403f0938-3382-499a-963c-ae45dee4d17a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d58c71e8-2de2-47ae-a5c4-3642b59f663d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67b69d1c-6b61-46ce-af60-4ee9aff82437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "305595f6-4b27-43f6-9562-42764e6d7909"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93a84b8f-a394-4afc-a944-7bc957dd2288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "504768b2-d289-40e4-bf6e-08595dbde6d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b06fab38-3c2b-46e3-b9c7-90ed2aa22717",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a2881f-8a23-43c9-86ab-37a7cfef5668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67300c86-de71-4207-9695-4cb94f3f7505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93bccf9b-5161-4681-ae67-406b6791f63f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0007e8ff-33b8-481f-9a91-da6f75858208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ede01f31-252e-4c8d-867a-b57ba46c645d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd195e30-cdb9-482b-a2e7-daffe562fa9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1771c59d-5d34-417a-88c8-a2b1c39ee171"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "618a8d5b-1e1a-43c0-92b9-91bd971537b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d2cd1ef-d685-4036-a5b0-3de705366fbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df83d1ff-66fa-4605-82fc-5f0848f032c4",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d87b0a23-2fe2-48ac-a92a-f2ef6577379c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96d022c7-6f41-4c3a-97cc-c0fe030b85da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4702ef3c-d398-4fe1-9c1e-c62763c2f207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7b3ccd62-a9c0-403d-82c6-7eb10f606d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da256eaf-342e-45b3-9f3c-156ffce888bc",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec737295-96cc-4fd3-9f1b-fcd29cce69e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ab36cd2-3ba5-47f7-ad89-2b7ce5967c2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1dff7d1-d8cc-4852-ae19-53e847df56a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cd42e7a-a77b-416d-ab81-5e872a8adbdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "146ac375-fb40-43c5-9acd-5fb343d6c5b2",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9996ba64-d80f-4557-886d-949ee2066e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f0496ed-30e2-4778-bd49-7150b40fde96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbcfc391-64e4-4494-af9e-54908aa9c7e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "750cfb41-7db2-46d8-81e0-764d53323a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f5f3bdd-901a-42cc-962a-4ba7e6cf1d37",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a172179f-d14b-426a-b988-496a4dfa891e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5ab8207-c54d-46fb-a31b-0fd6003327c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7adc63d0-3a4a-4de4-92a6-961f0f6c1483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "916dfa28-4f40-4057-8d09-9da3a37c426f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e031708-442e-463d-8de4-69f6ca0b29b6",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03e4a139-60bd-4b5b-861b-03200e33b58d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2e04c47-f2d5-4017-a2a0-83d5b9701bdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0241a180-2e8d-487f-a438-2434538c1fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "39e81221-5a2e-4ce8-8817-693894cb4d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f781b96-e6cf-421a-8ec0-10d1f0cf77eb",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "938a24f3-a0f7-446f-92d8-a1691df78a3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a75e91bf-2b03-441d-b9d4-6d8f9d11346e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a80b1171-aedf-407d-a7b8-02c537c20863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d45111aa-e994-44c7-b806-2388c2059c36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "927c16f4-849a-464b-866c-a234ee36cbbf",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c40ec6-7253-4f8c-ba1e-27a47ed392ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02b81e0c-efe7-462f-8e38-8c70a26c4386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e92794b9-7db9-4a45-b85b-e215b6297772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a736a833-2155-4ec5-b34d-def2e9a6f3f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4cf2632-3f27-46b5-a746-298f91a470d9",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1025956-ca01-456a-8533-3a0b2650925f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35784e51-5341-4258-8237-d9434f5f8d25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0eddc84-1201-4086-9e62-da9abdbfae26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ce72414-d4db-48cd-9d95-639e7c6c3c2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb4ddcae-6eca-449e-b887-e5b0413be969",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8733abe0-b445-490c-b7de-45ef33978b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3865739a-b0a8-4c52-ba30-72b7102ce924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac6f73f-b4fc-4694-99eb-83ef36e05f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e96d4ccd-7632-4b5c-acf2-f26c43d5f542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c392d21-66fe-4f6a-bb05-5671b185004c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead06286-8f93-4d91-afa3-2415fce050b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3418d08d-e96f-4529-bfbe-6f80e6720384"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d61f32-9c95-4f49-9d5b-aec89fbfe739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2956a39f-9813-4a5d-ae1c-dffc7011036c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "251ff2b2-7991-49b0-83c8-418d47d3d3f0",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d4f713-8217-42a3-af18-2b4895d7429c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9b50d34-6f4d-47a9-a9d8-6bdfb23e1ace"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9b9b37c-0de6-4cd7-ad6b-820db1620b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ed69f66-09d8-4c02-9a80-4935421beaf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8649c01-5a3c-4f19-a3dc-3eaf03050b41",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77d8155d-8780-4a1c-a102-1cf8579642c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0df981d1-a3a5-4f1e-8cd6-2c6a9e4af226"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce7bef74-c116-42dd-8aa9-5c95eb98990d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c090e8d8-7c96-4513-b120-58b0af947851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b45c6804-f488-4fd3-bdc7-7fda42ded9e6",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56b2fec4-60ea-4fb1-8fea-f6b935b6f84c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "341ef550-bd18-4ae1-b933-5093b5d37d13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a946c7e2-7686-4b90-83b0-3c6a08c9fbd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "af1b775a-7e33-4c54-8c5c-7f469927cf91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f832cb-5a2b-4b49-828d-7b157d8d40de",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ea6560b-c1ab-47a9-9039-c8040bc9e17f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "30d16919-f2b6-4137-b730-f2dd37e9676f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f280c5-a6cd-41cd-8eb6-8dfcc3680f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dc2c81d0-a573-414b-b3e1-2f79ff75dd05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95a369da-431c-4c24-a84e-6ab09186c6ea",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bfc55fe-6971-445b-9c9b-5dc343c83f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a3406f7-f87a-4324-885f-620e5e548947"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de813115-2bca-4004-aad5-d69aee4c6f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ee8d808-f8f7-4f23-a151-69114e9eb4e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "785c8967-35f9-4b47-83b5-5804b0d504eb",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f70ace53-bbdc-4afb-8820-24b130baa759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39e56fb3-7454-4fb1-a3f6-787ed75ddbaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0febe1b2-14ce-4ef1-b1e6-877fe0def3eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "833c6c18-805c-4c06-b89a-496262506584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ac602ed-48f4-4cfc-b322-fc5cb861ee3a",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faff10ed-324a-4ae5-99c1-69a5b7954994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "575a8e82-3dfc-4ea6-8108-64b7f7bb3b8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a17b9f4-2baf-4065-aca7-f69ecbcd6fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b877419-b5c8-4fbe-b410-cb04a26b1fc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd085127-329b-447c-8134-c28f5a1fc169",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2066c359-3305-450a-95ed-63eb00d7e04f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c3942a5-32d8-4591-ab06-2d73c4467ae0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc659fbd-19e6-4177-8f59-f4d9052634a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bfeec2d4-e214-442f-8c37-e0afe15f8e04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d10b85-9c93-4b63-916d-8dfcf8d4c96d",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a2ed3a-007d-418d-96f1-7bb6e9ef2d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29a008db-f86f-4433-b323-113ed4e4dffe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d1d605c-b1c9-4b14-abe4-b3a60abb01d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3805a4ac-d162-4bac-96d2-81fd7cfada5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de57c37f-2c08-4558-bade-a1f7906806ef",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "478cf991-fa33-475e-ad87-c72c9a0a5b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f31457d4-0982-4723-9893-4887ff575f98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d1e819-9d00-477a-bc98-1a6ab9239796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "7b95b849-1bbd-4a61-9b80-4ded3c698453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c53ac3-8678-4f41-a598-889a07c98720",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5715cfde-8352-495e-b449-bc672a0b8cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e25cc73-d1d0-4d8a-8e1d-9fae711c3b13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e25c064c-8339-40d3-98cb-a8c0ccc72a53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4563f805-d6a1-4a0d-adaa-f9fdf61e6426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08226b40-2778-4479-9d30-52d038b6f69e",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e7901b-5900-42d5-97e9-31da18c112ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10ff088c-a72a-42eb-9304-bdef6b698bae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d048eb-5d63-4a2f-a202-fd386f806bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "98d2c2a0-2b91-4da7-9094-29b03aa11bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c716b95b-2174-49d4-81cc-ac014fa76c9e",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4aedd0c-18a6-4494-b43f-46a92777149c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffb108a2-5322-4f2a-877c-9c42217dc78f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd7c2919-192d-4d29-ab64-4446e63a89d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5ec399d-198c-4ecb-9a4f-7492541b30de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7942468-b76d-4f83-85ee-25e518880a42",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b73f7bbf-f1b3-4897-acc7-611c119220cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25a4d205-bb67-479e-b407-156cf942434e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b091173-48cc-4cfe-9999-5fa36f9a3153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0ec893a-4459-45d7-8312-e3c162961b21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6262bc56-8e0d-49c9-aa37-de03aa89fe0b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c324bd7-c95d-4be8-a216-0a3651414f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fe8046d-3732-45f7-845b-b411b36dae62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b346e361-f5e8-4a69-b142-0cde037bda27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f690c99-774c-4f83-b6f3-2b2489ea4749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3792125-3bc4-497a-8bd7-c7bfb0ea3a45",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47de1e1b-e13d-4f15-816e-8bb9c4d97a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10448771-5eb2-4e77-9608-c47a8e18af4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9b8e894-2d51-450c-afc7-816bfececeab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bb8f44c-0e01-4997-b0b8-1c59260282d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a0151f3-ff21-4f40-a0d5-c8ff088c3797",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f95ea13f-f2e0-4bcf-b255-016af884add9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b96ba9f-cf62-4da5-91d3-91be8cae8b0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34e18939-36da-424b-b86f-dcabdfa87966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a75d8ac-5d06-4481-8983-5c4978ccddd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa5849c2-3ade-4194-b576-89ac142e4d82",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c18b875-b06b-4d66-9817-44c14a1aaaad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64da1c2a-2787-42ed-864c-f2916f3ce5d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b376bfd-5ab9-40a4-b115-650981c582ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2eb26bbd-fa72-41d7-9ee9-b9bdeb1f4a2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d50d8215-4a77-406c-bedd-5ac91f4a6542",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91754bd9-a390-4f38-b294-c188361486c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12a57408-cb0f-4c79-ac37-24eb7844573c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ebbf44-bd3f-4c1c-9e8c-5180c8d5ba92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e88f34d5-d9f2-4c70-b463-53a767c06457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a23e17c-521d-4591-ab40-612a699ba7cb",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14aaebc5-9e75-492c-9d10-eea26b15c6a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95e7891b-d8ab-4999-8439-caeb4ab3e0ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aeba775-d094-4036-8b14-d69bbf460a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ccf152c-406e-4774-bd65-597039866883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e36f6e06-6960-40a6-b1fc-9b53b9ec30f3",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f3a973-b2ef-4d2f-9d16-e4e7ba4c0c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "975b6159-2029-49e3-a72d-a62cc08f1279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6bf2f32-2be5-43e5-a159-cbf26e028fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "12d8dcbf-4e75-4325-97e1-ded0f792fff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f24fd5f9-036a-40b5-b439-08eba50f97db",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e0a6a6b-b186-40f4-97ec-b54654036371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "181eadc0-8f13-4c63-a249-c50c0fa15415"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb5cb733-b498-4759-97bb-8b582edc0649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a70fb40-5b5e-43b4-bbd1-f227161a0d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14850af4-c01c-4bf6-8970-ab155f1fb65c",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a38669e-b65b-4acb-ba9a-a64a640a62ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f5bc1a4-8589-4494-967a-c588c6da03cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5b555bc-d1b6-4c40-a25d-9fc713c1e641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e301c7c8-7091-43d3-8794-b63ade7559a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "020428e3-284c-4489-b187-4a45d1d84847",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f6ab749-ab84-46c5-a380-db648762b653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "271848fb-9758-41ee-ba42-f212ebc5279c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6b0010b-0ff2-45b2-b2f9-adc9b2ba5f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "cc036cf9-268b-4bd7-bb97-23a5f75dae3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "805bfa9e-0f58-472e-9339-fbd8700708f3",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b450a700-dab4-4ae0-becc-55a2e5b2b224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e9ab5af-c8da-4d28-b84a-d56c1980ca73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0afdf551-d024-4f68-97e4-dbf15b159acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "138ac984-6ab4-454c-93ea-c60b9ead72a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8151d625-0ee9-4c54-8442-67c144f6cf15",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3c8b28a-ef12-4b8e-b431-bf713c5a7999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb8a046e-9df9-4d49-8c26-b8f67c33b91c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "453ccbb5-a7db-4399-ab98-069e6ddaf871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9739c9e8-5e1b-4f2b-8acd-5a53f37a3dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e133abd7-33af-4369-87d3-8bc89905bc0e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d143dc6-8089-4cd1-8093-22169c06e051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70eff0a9-df4c-4c36-b3bc-f6512826a4a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e77f3572-0b51-4f88-a564-8db2e6667d0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "de29dea6-a642-440e-8a9f-17bda1baa8dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c96ed2a4-d3c8-4085-b0da-f5eb726cb3af",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a08708-c1a9-427b-8cd0-1666743e6663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae171e76-9102-46cd-99a3-da1c7cbef738"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e4c09fc-2bfd-4ed5-aa32-996df5b7bcae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "092be489-e303-441b-b804-1ae9557f9c45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd210a57-bc09-4cfb-9caa-0bdad060c0e5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "139ae909-5b41-4e15-93cc-7dfcabb00646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f90394c6-a315-490f-9af7-c588d96c7a98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4d9b382-66fa-4109-81b4-b04636601161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "53ec50ed-d3ad-412f-89e4-3c26325befc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27d9e71e-3cd6-4cb4-a7a4-692d95106ce5",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bcb25b7-961c-4b99-bb84-bbd1e3dbc64d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28cba1e5-a95b-4757-9aab-8f12048a23ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a93033f4-d0f8-4726-8249-6942a6199194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e7bb7c8-9d38-4881-8627-498c962816de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a227bc-cac2-4605-b70f-15043f3b6d27",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "817f139b-d145-4f11-a349-6457d96b8b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5771cc86-b478-48c8-a589-b2ed9da6d609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eab1d75-feca-4d73-bec8-0a3535ce9f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "18393aeb-ad2d-427c-bdb8-b75756e52eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ffde95b-9a9b-499f-b7aa-e56a3879bf38",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e03ae59a-1307-4ab1-b4ea-3450f6b9d307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30cc0b41-65c4-4d4d-9e89-439b2454a7ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0909e993-99be-47d9-9202-1bb91fd81693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae062c61-2e4c-4759-be1b-8b3b540e162b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a22abe1-490e-4091-be9a-a109072223e2",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e380b22d-cf65-4346-937e-d25fddf5268b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a5cfc2b-ca32-48cf-829e-72e0bed67f57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7250cec0-3466-4d82-97c3-5f62db74a2fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fb4c43a-6d6a-4463-b63c-c505ae25c152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "005d2ac4-50a4-455a-9a72-a8c84c18163c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60149707-7f6a-4eef-bbb3-a46f837f8cb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adac5db0-d279-4b06-b99e-3092cc5c9b3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90913c39-5f2a-4e17-805f-7e052e79df87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc3f7b03-9327-428d-9b34-c658cce9e938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b7af80d-f3b1-4de0-80c4-9277c024310b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8604bec6-0c7e-4ec9-8f53-6847b681dd57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1568d903-0e90-4fa5-a858-11ecf2c1af79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "716232e1-1423-4aba-aa41-4ce0054b156d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "25505ad4-4508-41ab-abd1-045f4d22a406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00ea6c63-9c8b-4c15-a91e-1ea9c6716620",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fcab30e-a36e-4f78-8d0a-d7712d01b3b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "babf2989-126d-472a-9775-d4f5952476ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6b402cc-9765-4d4a-8d49-d6dad73aff0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "da0d0e97-ebae-4373-8a9a-358120ec9640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ce53308-5771-4e37-ad32-90afbcdad156",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50cd7807-bb0a-4364-87b3-17e2b9dad93d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2275a6d-c8d5-4308-a966-bd9a17f7c9e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e8bed87-2154-4636-9ee8-b49280f04588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7dd2483-b736-474e-923d-0ec59f4c6760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c947c82b-f5bd-4f9c-baf9-ef6ffffc360e",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f182267f-a691-466b-970e-b0d79e3c36b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e96eb93b-c7fa-4b3d-836a-181bd7c667d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e55150f1-bf46-48c3-9686-035ac6e9b599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea25139f-7af1-4484-a8c0-896d5a8b2889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "562cce70-d2a3-48dc-9bd2-16db9409137d",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29f3fd75-0cfd-401b-9228-a2170176a0c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "716a53d8-cd5d-487a-b155-2166e4347523"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab44add1-cd96-477e-ac59-3679beacbc27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "adefc486-805a-40f8-98bf-af48e1237559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2e9216d-52a2-4961-a448-e6a489ae66d3",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f73657e-9970-434d-ac0d-78427959eb88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16eda7d5-e741-438a-89ce-d1949ae3c5c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63dd8645-6d80-4c05-9ebd-a8f4c2f38071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7c827d0-e459-460b-87e7-85e5d88544c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5defe223-f4c7-48c0-a1d4-b71cbb2bfeff",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d2ad4f-2148-4174-86bb-83434071a946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c69e119-ca64-4544-a77f-5854278c9a58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20533873-24d8-4dd1-9522-ff5a947333f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "14efd157-947d-46cf-89b1-8dfa4bc754ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e69b2465-dbf2-4979-9c9c-d18cbd44b1ff",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e786a7d-8f07-4b06-8aa0-650817ef668d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf2b5d0a-7fce-4e74-976a-a00ab25d087a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "667a2334-f36f-440f-b0ba-ddc44bb99a7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dc1e4f2d-fb9a-4947-b97f-c081e3540efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7c88e68-490e-45f3-ad68-0ae06917dc89",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5db7039-6846-4a96-9912-4b1c2cd81560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3065e1a-b0b7-44d4-8e31-7e70ac269920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdcc31b5-3142-4df9-b29c-c017a008e33d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f0515b5-c762-4c00-b191-b20e0c604491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f0e09de-75cf-4e18-9087-5f62d65bb79c",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac49a630-aec2-4509-96c4-80f33de812c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ca04470-d913-44c2-a766-11422e1198bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91e3a1ce-6656-4306-9fba-fc0317e504ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "562a138b-3806-48c8-894c-fa606fc0d57d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2dc318d-35d9-4ded-8a29-3ed6273e8109",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b46feee-068c-4ec5-a60a-77b746282a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb531da6-bfd9-4fda-8292-cbb2556570d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66de917f-b6c9-4c36-afbd-540db2d01149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "22d538de-977f-43e0-959f-912e412def54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e070b862-35e2-4622-91f4-577e2cc00e17",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e33b22-b6f7-4c24-a165-23540967d91a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "122bfbb5-6a7c-4066-9fc2-008626471cf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5b1408a-8e84-4d2b-9c70-fc52f0c3d8b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "45401a15-12db-422c-896c-3ea7ffef9704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9d8b62c-94e6-41bf-8a2c-9fb403315f4b",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b8d2dff-2f3f-4ce8-b3f1-8a13fb1bc759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebc87a6e-d542-41b7-b356-ce303c5efe43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d69930b7-317c-4923-9295-2c5dbdd2e647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "304b7e95-6a57-4cab-a8ab-8d5f2573640f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdd8b187-9666-4e93-86f4-d2413b5ca073",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f18c3cd2-6538-40ab-9dcc-06ae43554b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba2ae5d8-b756-4d1b-ba22-2d41b5f04c69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eedd58a0-a9f3-47c4-84d2-eaa306048221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "674ae20a-d945-47bf-9ef5-af4bfb7df718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81941816-f257-4076-b5d6-dc29e86b93fd",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20fb0f3a-b033-4178-8fa6-7378bf34cbea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b981e19-1f3d-4550-ab19-04c0451014b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a47822d-c9f8-439c-860b-b38279d0f437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "18f3b59f-85c1-4f25-8dda-ca220d96affa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "275b4bb0-9cdb-4e22-a88e-2aca76f7ed37",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "339ae0cc-d088-48a5-b051-3c4979eb8415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a484c847-b000-48f4-8f9a-3dc64885a1cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fe2c6d1-ace1-4d50-83cb-1a20d3343668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bdd5f12-724c-437a-bb9a-1772ef7f5ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56be4388-9c0f-4a6d-bce0-037419a76992",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c22aed16-78e1-4ac7-8fec-718d4be0a8a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9134bea-1c82-43a3-9a09-e87970cc96d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e8771f8-c657-4a70-9305-af630229aad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9687b00-3506-4ec4-a654-4e69132c7909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c22f1d8-6e50-42b4-86bf-b7fc985c1f96",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2baab010-c2a1-4802-bc4a-763c8c07f8c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "565fc386-604b-4527-9eea-1818c3093a2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1661d923-3cf7-4c66-a41e-fee8e57ff7dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6284bfa5-ed7a-48ea-b346-48f4a51f2c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08bfb1fd-9780-48f1-83d1-eae1681f9a3e",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff2655d1-28cb-4cec-ad5a-910f8ce350e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "609a27cd-8ca9-4312-be95-e0eb4f708cad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a950c772-96e4-444f-915f-790f6e6fa390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "27774620-0df4-47e9-ae6b-c8c83dea2be0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d653c8-0d24-4b53-b466-8b91ee863222",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f6b125c-0758-4a31-afaa-9e1bcb16abec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9123cb11-df29-4512-97f5-0e9353f7e75f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c260d536-9f68-456b-9ca0-d930a15a06ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "99b3be85-092f-43b0-90d5-3a5c64d4c9c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7025aeda-6552-4b6b-9ef0-c332f4dfc415",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7326b2e1-30e9-41f9-98e4-929a9092ace9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8bc7c9b-b34d-43be-b9a7-9516f362a970"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7204f7b-2043-4f65-855c-fbd15ed89383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc57feea-15f2-4d2b-8057-dcd63e996c5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf340e75-0dc3-4c88-a624-c4ae2c19b88a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "998d370a-7224-4013-a987-5d1874f6e2e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e8ab5b8-4421-4b22-87ec-4ed94c606df9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07806582-1d44-4c70-a11d-defc24baed04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "da6f10b0-5b80-48d0-af18-36cff995a44b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71ba9506-54b0-4cde-bf49-66d8a9f21758",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32115d52-1e79-4c1a-bf38-8927602141e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "893cdee6-60e9-4c3b-b19a-554b8afa099e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c53b540c-9f60-4014-a01c-ee172c540f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "649b662f-d145-4135-8264-d9734924334c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f32f6b1-665b-4336-af0f-ca1e4d389cb5",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a40868af-d3b8-4417-9f7c-7bd6504c3f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a225cec9-ee98-4da5-8890-63f53e7ba746"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d05c952-9ab1-4f5e-95a0-b27e7b602b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd6532f6-3eed-460a-9d66-fc3ddfa21597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "701ae2e6-3a41-44c8-9abe-204c7ac3aa16",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6933110-c066-4d42-a415-9eb645824d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d267ebce-d1ff-4266-94b1-25e5191183a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98e286d0-dd63-4c72-a0f4-24f85f1b075d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "86c574a6-0023-4457-b5a2-2be3133f86aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aad6d7e-2f97-4780-9297-6145933e59ac",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ef6fb7-a5a3-4c80-aed5-1dd0085c77d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e7ee55b8-2367-4e93-a01e-d091a257c47e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91751b6e-4c74-4c1a-8330-fb39c424e8de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c71d4529-7f02-4343-91b1-cf93adc503d5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6a5a470e-f46c-4197-b1ae-c6f98b97b5da",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c228e950-a113-474b-a56d-27d40a71aec3",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd13af0-2ee7-4482-b1bc-b98826bcfc1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "87281613-6b8c-4aa2-82ad-33ff6c271788"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "378b72db-0793-4b30-afd6-18dc9f46eed8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ff3e25d-47ba-4be8-940b-2b797627ebe6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9e9926f0-e613-4ae3-b498-844c853d2b47",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "acd7b6d2-299f-4894-9038-82190b8d2ce5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "517b71cf-bdb1-4e7e-98c7-2e92b57d6b2a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b638abf-c317-47bf-b587-a027d671633e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "548d8c99-1a56-4073-b980-61d8fc182a53",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "48796722-f5d8-4d08-982c-4a48b90dbf9c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c69600cc-61eb-4b4f-8242-2a167a18a895",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8abb20cf-50cd-4ff1-b61a-f0d584af30d3"
                }
              }
            ]
          },
          {
            "id": "71d96447-c501-4b55-96bc-14aa0bd0dd70",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9fc4dc32-9ce1-4f4a-97dd-6f9afca0500e",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "8f4ec4e2-3070-48b8-8f88-a848833afdb4",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ed810e-db57-4986-92d5-c532e847cf69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1b6edfb9-69d4-404f-9ea7-f2a0b02c46a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f27db49f-9636-4047-9fc5-c35ee028cc88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19797875-9838-473e-8fe6-3e7940b9c712"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ee66e6ef-9245-4726-8715-597f9b19b97a",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "84e7c32f-30d8-4647-8cd1-533f3becbafb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "88bcb3ed-591b-4a01-9368-156ad1c1f4da"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "601e695d-4e8e-449a-b524-6c49d604e144",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5bcf10ad-8323-4f0e-a29c-8f44c64e4ea0"
                    }
                  }
                ]
              },
              {
                "id": "93e878f5-6e27-4027-b4d2-d2d491ad0e19",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0a8373fc-dad7-45c4-9e27-441f5cfba5a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "19a4c268-696b-4479-8fa1-6993e93caf64"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5e030814-2087-4a8c-aeaf-08dbe445e0c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "81ac22ae-638e-4513-a5eb-462f070e189b"
                    }
                  }
                ]
              },
              {
                "id": "be5a11af-2548-4f79-b527-e8ad3fe3d90e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ddfca72-3b70-4c19-8440-1a8432bc17b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e58e7b3c-2570-448f-b89a-c4f27ee37741"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a6c5ceb0-50eb-4650-960d-0e6c453c008c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ff52745c-d0f0-43ac-8a98-ba9ee310de5d"
                    }
                  }
                ]
              },
              {
                "id": "26e91682-ecc9-4ad1-a6d8-9656ac089aef",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3d7ced9-bc87-4d7a-8063-32004cbde8dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fa96a242-83b3-40ff-94b0-acd154f5cb57"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9791165b-98a0-4c34-a769-9a646dde162c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "be971cb1-560c-4b41-b7f7-6d3b4f6124cb"
                    }
                  }
                ]
              },
              {
                "id": "70c0c6ee-03a4-4d79-be28-d5c3bfaba80d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a24697a-27c3-4fdd-b336-ba2ab4ce3958",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7b340dc9-a957-4d04-8745-ab94275feacf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5387de64-f89d-4a39-bad1-ccbac9ab615e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "61a4cdd9-0e32-4a37-a33d-a9e9c76a91f6"
                    }
                  }
                ]
              },
              {
                "id": "f766073b-6d80-4656-9c34-bead0865dbdb",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8796a79-daaa-4e9f-b96f-708f33d12a60",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c2c264e1-fb90-4121-b39e-c6bb1c18ff49"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8d412f7b-bda0-4dfa-b341-863880bd9f60",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bb2227bf-8b40-4c11-b417-09c7067316d0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "49f2eecc-546a-4238-a864-f6d99e5024e2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c9e0fa08-b698-4f1c-9498-6a3ee82124da"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b0357eca-c849-4149-9434-072ad995c4b1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "76d0f65b-6776-4fe8-9bfc-4a9e08b2951d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a20dce5a-f5ff-4e3e-974a-e30cbc0a1f11",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "cdfbedfa-258b-4dd4-b248-ec451e52a40b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0bda3cbf-72a1-471e-acc6-4eca9a217728",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "68b9196a-2ffc-485d-90f8-367b13e49a5a"
            }
          }
        ]
      },
      {
        "id": "038b1b4c-9b41-42f5-a811-3b7d411b4d10",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "31f5d658-2d96-4e49-b91b-69757b4130a9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1b4dae49-5b6c-40b3-97d5-1138f1870363",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5d7f9a5f-483f-4424-bc1a-c6af42df6978",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e4725c-f229-4fee-9690-65f808214cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "493b768e-2908-41ea-8f34-9c687e71c7b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd08759a-789e-4f66-8958-cba2be71f263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9477c87-2dac-4e4c-b43e-74c220b3fe06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e71d591-3f4d-4d00-b47a-a876c2c966dd",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5effaa5-e086-4e13-a6b3-9c5b52ab426e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0409f50-d7fd-464e-b7c1-a8ee95320406"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c351dab-ab43-4db4-bef9-0e2ec7127c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4a516e8-4b28-40c7-8a48-8270b4e434f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab88090c-e660-4d94-b713-ac51e831bbd6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "860bf9da-b4fc-4273-8a31-3188cc27b20e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "050de782-65c3-42f8-a7ee-fc001d207d7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22380946-1b88-48d0-ae9b-a2812c75db78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aef997d2-e51b-4d3f-8013-0beead129b8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7325507-e11d-4a36-a2fb-d9e1388dfa59",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03fe10a0-4f99-48d7-ae14-d77b8ec23f91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2f4f494-be0f-4d49-b121-da91ebf04741"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14390b51-7c2e-48bb-9db5-79ba57447f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "74f5ea58-f42a-4651-81f1-f647c90bde41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7129280f-0cc2-4d63-bb6a-80be259da517",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0854e282-b4bb-4ecd-a4c4-679d6f1cf2ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0951c7b-da1e-4811-be02-1eb29605d454"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d283e84-396c-4088-ab8c-95004c54cbc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "623022ef-e284-4f5d-8c72-72f27626359e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f08aab2-faf0-41a6-b2d8-5cdc3344d112",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd38eb3-e19d-4d40-933e-883f00a5cb67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad78a3e2-3a48-4f44-9f55-ea99316bb0a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d4c6bcb-740f-4ae4-92a8-62d0c64ff0ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce6e5185-572b-4d58-a904-3899c043e8a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69d7c8cd-e9d0-408a-811d-396b18170268",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7230d3b1-7656-443a-92e8-429f7a949075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76c30eda-e39a-4690-85d0-414ffd283e53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f9c8ee4-a4fe-425c-9ec8-909d2b257c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb4563db-7506-424b-9d22-6e353a8d730e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a266b1fa-f64e-4bc7-8c5f-7b81f8ecbdb4",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7521ea83-c19f-4547-a3b2-3987bf69feab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52b65c79-431a-449a-8d54-5967297c9269"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b0df17f-3533-488e-a8ec-e79771d26633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "01e79bda-4d2b-4184-b16c-6e178c6ab9f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "525cc481-93c0-4b70-a5ed-46429177cab9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98c47bcf-d3b8-4a89-b1f1-4bb0bd787cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f83ddc12-3eda-490a-bb26-0e24a11bf70a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d9800e5-2f67-4755-aa26-969cf81f0340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f895ae63-e477-466d-a342-99df596a8362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c21eda66-8b0a-481c-a9ad-8cde4d7d7e72",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f35cdcc-b815-4044-b36a-8a394ae26e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9735e80f-afa9-43e1-a78a-c292a026ae85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af466ddc-7aab-4c8b-b2fc-8142e0f35903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6da35d01-8cd6-4866-8227-36c6b7ba2f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d4261d5-ecfd-4828-8b7a-e72649926a9e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "416b69a5-44f7-4247-9114-fe79080faecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4716b433-5d66-4138-a3a1-2d84a198763d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a5b1a6-750e-4ae1-90a3-1c86e4c1b539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "12a9b98e-18e0-49a8-8e66-b6051b7cec2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d65e0302-a417-4fc1-aa1f-1a47b25ce99e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d09f3c98-7145-4664-afcf-d181be397f4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b87ad6dd-65c3-4026-acc2-5633c9b93726"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6203f936-bf61-49cc-907b-9560bea5d89c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fa77ed2a-e241-4102-a3dd-f26e9f5f68ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe48b7e-caf7-47e3-9132-b56b3c1f0af9",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "142e832a-3e5f-4bf3-b89c-44f903ee6ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d3a1017-07fe-4bf3-85d2-2abc59243f31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "681dab55-efc1-4d99-b50c-1efab7b7f9ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "24ed2986-ea26-4e53-8863-53e6e05ea842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a56ac6aa-d779-42e8-baf6-707a29a1a8a2",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2360914d-e382-408a-8ba5-a8ca6ac37e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58191638-624f-4501-8273-92c373f06e65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84a827e7-c762-4df2-9090-21b414dd9223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "01374f41-6f27-4799-9f85-f40056467f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7ab3fea-3acd-4006-a25f-5f6a23ac8742",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "181914db-d6cb-4f40-9352-13d9fb0df784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b83051b-a579-48e3-8fee-58d891a0417f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fbf6800-ebef-4c95-9894-b7bd08b6f8c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b17df533-d282-460f-b9cd-f4c0ea5d74cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78610b84-eacc-42bc-ab59-bae015e954ef",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad55438-d400-4317-9f7f-a92e2e678fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a6c2833-49b5-41b5-b80d-bd15bd2760c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04193e1f-ef97-4efd-8b89-a324003d80dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "698429cb-c4fa-464d-9089-de0f11c3c009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70b7a21f-1f8f-48bd-a18e-e6ffec5f8b4d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07f6c412-50e8-4510-bb3d-39321f2ef712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ddb7199-d150-4ca1-99fc-ae2fc9be891a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3b312d5-a08b-4ff0-875d-11ea26bde46b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f162472-68f1-40eb-87db-e56d58219970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd31888d-9772-4353-b29b-b374e9d2f152",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ec42fe5-fa58-4917-aeab-88368a36ffcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea92fa51-6927-486d-95a1-3e5baf788c7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06be3e1d-b337-4df4-8cbd-a9e810ea3110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0b47868-68e7-4276-9cf0-00bd43b6c761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d319dbe-c306-474d-8271-62eb7e26a893",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7e9b9c5-3bc1-45fe-b242-0211bfd271b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eac52c71-2cda-4faa-be91-c5f21e840ffe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6d84f0-4fe3-4303-b3e3-5b92c63d7f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd1c4a3e-5e96-49ac-a4fa-91c073a8f33c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4af782c-164f-4866-b167-9e795d04257e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2600b47-eb52-4f72-b7d0-a9356935866e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91a130dc-e316-425b-827c-4efc43dc7351"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56cfdf46-7d67-4c07-b98e-46d1c6821640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdefa8de-1262-48b0-86a1-386a0717a3ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2725102-efd5-41de-bd90-ecd38a886018",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b606c22a-29e5-4bbb-94ae-94a377a820ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "032e1c9e-2759-4b73-b5f5-1d7bcbf3a35f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6badb405-2572-4d88-8390-c19953fe8544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49b1bf4f-75f8-44b9-95c0-6c343b12f535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4febd4f8-86b8-4aef-9b78-52511f934dc1",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6019bd19-9772-4dc1-a0cd-2735dc04df5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dd833a8-c3bd-4565-86a0-d09d7ff4c041"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d61acc7d-7587-40f9-b5ac-aeebda3e1676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "849035ba-7d4b-4e92-8a56-8c162c652bbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd8a5eac-466d-4368-ac9f-fa54209f1d56",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e152c14-17fa-4668-8e95-ecfe88161741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83a82e58-65bb-4bd7-bb02-ed0cc8f04887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4acbec40-c4a7-4e9c-8697-94b47ecc9d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b44e9fd-0261-4b1e-b7e8-de17554fe272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d11838d9-924b-45d0-b838-2bea5ae6ead2",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "091b4ffb-2d49-4e6a-be88-10f48ad19c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2ff0156-6090-49ba-9607-513e5815e3a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0c25d0a-1b05-4c37-9580-3ab49309e0ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a09010d1-7abe-4390-bca9-201a47dcdf82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68a7eda7-f336-447c-acc9-a4d64ee0bf3d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0107f45-8797-45ec-a1d0-da830883b1fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e3f94be-951b-4f96-9ac6-f01fc5688399"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19669f3f-6e86-4f3c-b635-6696cfe5b0ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f48b5a8e-cc80-4e17-a639-a70434593101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55ecf9f-9c2b-4def-914a-db86a7681fff",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f464da7e-c381-45f5-a9ce-9f488a10995a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ab05003-ffd7-4966-abe3-77d43b58bddd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e1d1ea4-3396-4158-a25d-ff5cd07bbb98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76cd2de0-9ce9-440f-b6c8-793b2fe76e50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6aea77b-9e1a-4d9c-8a43-26b2a52c2c20",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9024f020-5f24-4a13-95f7-1602a6e5d867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "437e62da-fada-424b-9d61-102ab6a0173c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed3ef17-e0df-4fb5-bdd2-9a2d25004d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7e5d712-d984-40cc-ac96-a83e903477b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "798f2c20-6d4f-4098-8cea-008f8eedfacb",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e713b133-4a16-4ee8-933f-142a6a6cbdd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "259bc9c5-25fb-43f7-be32-2a75828d2490"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36cb0071-2569-43b7-8683-f6f793c54670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "201a6870-49d4-49e3-aabf-0c94e862eaa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f0b09a4-d690-4fca-836e-b07741ac7f7a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58428caa-cee4-42e8-96d7-3c387a95f588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec7e45ea-f182-4f26-ae3d-651ddb9ef5dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db6212c6-bf01-463e-a649-ca12034648d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23232b0f-e34d-4e13-b92a-cd9be5850bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0bbb677-8c7e-40f0-b718-33ed79c9484d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e905e4-9ce9-4dcb-9775-8d0247c2045b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd4332dc-4f4c-40f4-80f3-990d1c627acf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4714b64-ef33-4a85-ae89-25e03bad088e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79deb707-01b5-4ce2-8d9f-a542185d53be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d412777-38be-4988-b12b-0c9bb067f421",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba2028d-271f-433f-9bf6-0d1563d44677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f0df37a-f6ef-43f4-9022-408633d81dd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f83d889e-a37f-4bb9-9e2f-f492ce8905c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9accc9a8-cd1b-4b1e-af19-a546efc93832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d69a5841-5416-4df0-b1bd-c20e67541ca6",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6aa92d7-64e7-40d5-a4e3-6aacf8003ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a866a6b9-e831-45e3-abec-444cfbd67114"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e91e01-db38-4a29-96b6-41e506c40455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f2ed21c-281f-4804-b7ba-e2c6d8a35e29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14f58237-f478-4b4e-8333-d85b960c455a",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "899b5a4e-27bb-47b4-bac6-6c564cc5ac76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0973a1ab-81da-44a9-a615-12bb3796b073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "081cd639-012a-4f3d-be24-d900b398278d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac38c86e-6dfe-4652-a0a1-ac031b9f0647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c634d0b-40f1-4bb6-bbf8-224838902994",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b38d70d-6685-4a26-b6d1-78f065b50c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bd4de8a-42e5-4f90-9679-c53a5319ba1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3568162b-c7e9-4c0c-aa8a-c13c547c8309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdb2822a-f508-4d63-a08c-40f3aa77cb48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d749ebd5-f07e-463c-ac90-f089d2c630d3",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbedd944-b35d-41b2-8567-6ba562dc507a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31206bd6-aaed-4d85-a5b4-b9cb4ed1395e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c70baf2-26b6-4fe4-bc0e-7635cfc44d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfc1aa11-3a2f-4e59-8267-986dcbc346f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "271efbf6-3145-43ee-91c5-1b15382c0318",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8534930-0e91-4d90-aead-9ce6cfb7ef36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd740986-91d8-4f8f-b86f-479aec274e8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa74efa6-5427-475f-be9c-bb05c06bfac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fd0d27d-6602-47b8-86e4-4f6de82bce82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9398955-f1c0-498c-9946-67ef50e01a06",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea75620-d278-41e2-82d7-46df6f2fcac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5a51475-f2ac-4cc6-8fc9-3196a002f1d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf1e8850-cc41-466b-8fbe-d6d68ac3c78e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e508c68-289b-4cfb-911b-ad99996b2492"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "16f1319c-f64a-4e8a-b943-e2c8297b833c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "45604aeb-9dbe-4a3e-8514-32db69d72568",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abc96f92-b3a7-4b8e-b80e-f3eb092a5989",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c052f0cf-b3d1-4a54-9ce4-07598f039a1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "643b1070-d79c-4a6a-bfd9-c64f6e521ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4e67db28-cb20-4174-b678-d99ca490d951"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e6f9bdee-1561-48bc-8746-b5273c1e1998",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "15f68ea2-a8fc-4b4e-b101-b7faa5bca0fb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c19df94-c0cf-4e45-87b5-8fd088d9e30d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "89c561e8-c4da-4e0d-ad69-2983d3bebed6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0d7e5c9c-6f13-45b2-a264-fcb7cf0e77f0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "94c5d9ab-8998-4c81-91f1-df04b73f3aee"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "be6c73fe-f5b2-410b-8c73-3a7e9dcccb43",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e33d2ecd-d3fc-436d-a290-47faa553d717"
            }
          }
        ]
      },
      {
        "id": "798d1380-9979-4f61-a809-37a086b980ea",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "7ee5ea0f-d65f-40e8-9f8a-89a383794b47",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7d1881cb-bd04-47ed-a399-9178c8853232",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c06b05e6-014b-4850-a7f4-9513d44739cf",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a24cd65-9ac7-4c9a-b043-1b0cb4580a99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94410014-7da5-4f74-ba2f-a5ccb32de5c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0178c7de-cb90-4018-a8af-3888c3c250e4",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb49fa4c-6c28-471d-a916-614d1425e6a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08e621c5-7ab8-463f-9005-7e7ca26781f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d63ba21c-9968-4509-8c0c-ee5503fe72b4",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e64e9597-cb3a-45a5-8c69-50b9215d5c32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae64bc23-04cd-4818-92f0-32f0b6169617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18b9ae00-9ffe-4464-96be-3bf5a76d3f15",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20c4585e-9f4d-439a-83e9-0e12e8be1baf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0bd25c4-f3b6-4791-9d45-e65610560670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f2edb41-3105-42fd-a98c-77cb31046f61",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a8b3ca-47c2-4f15-bc48-7d006d545cd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "180b4e1a-956e-4d74-850c-21524e5fb10d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10eda139-9411-489a-a3e2-99d4097139f5",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c3b84f1-0dd8-46bf-8ba0-4a648ede6bf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc9e6d90-7257-4e5b-9c42-15b756de07df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7523c0fa-aa0b-4e86-88e2-e047aa12998c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c07033-8058-4890-acc0-f4ba760f091b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49536e4e-3473-4ba4-b816-70d279f36e46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57a6376e-4565-498e-991b-e9964c2a819d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cf15202-2abf-48a3-8550-73a35ddc41cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce4fd1ad-10ad-42d9-9112-b8a338d64ba5",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ab5c242-8690-40fb-b8a0-fd1036e8652e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7dc88cb-c7c1-46d4-93e9-d4aed53dfec6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec7c44c-60db-4e1c-b618-e50f60c3e1ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d15f8b7f-f424-4c87-a6ae-dbf03589a71d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a37a8fb6-8584-483a-9fe3-0299f55ec5ac",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a692f2-3057-42bf-ac62-57770f7d0bb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9dd5a6e2-cd0a-407e-b687-ccfb39b0f9e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef1d7a3f-7d69-468b-9685-580c11304884",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a196f84-c203-4c93-864d-aa29da8544f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70a247f5-291e-49c1-aa5e-f3da96188eab",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9cb928f-1358-4cb4-b554-0a283d53c747",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5f3ea33-c140-4048-ab2d-253158acef01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31788ce1-350d-4fe5-8eeb-457aa5ccf4f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83dbf9e8-aae1-48b2-bd5d-f8e4e59d2c1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f2ef0c2-7eb9-49b5-b2ca-9709f36aa27e",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e78f6a60-a132-415f-a775-eb1f0114ad1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbe373dc-8a90-4a58-90c5-e9abdf1768f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f65d9157-15f5-4470-9c39-801310903e66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ceb3a59-5201-4dbc-b750-5883ed59097f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2361e70-e939-4656-81b8-22eb51f1fa9a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd2419f-8c59-48d0-91a9-5c96e4754e16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d99600db-8e52-4c70-bc75-fadff88cbd30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86677460-fabc-49c9-a217-1da0817293f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14aec2d1-79dd-42b9-80d1-2f9d38f74667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77e2b3f9-7411-43df-9e86-10ed5adb4924",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c55dcaff-911d-425d-b277-9de238cf2ccf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "559d7328-85ce-4b1d-bbf2-85acfba4f6cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0e94d7-3147-4161-b4ee-0af606bc90b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aafeaaf-ba7f-4fd1-8ad1-6bf19a267fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acdf82c2-f920-4e08-aa02-77b2ea750055",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33266b4d-cc95-4254-a4f8-805c2ee21abe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d54e172-a1cf-4bf3-8162-bc1969143953"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bd188eb-134a-44a3-907a-678a1b9d2cd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21c5f4f5-9f59-4f69-aace-93fce993b97c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bbcba14-1331-4293-9d02-851d6c21defe",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a13d7ff-a3ae-4c74-9ff0-cfc57a3a32cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbe27b12-60bf-4ad1-b363-6401e603775e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "918c009a-a0fb-4c40-86a3-44f6c3ebe6b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3c6e137-69ce-4734-b067-bd1fa826ba03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "240f4503-f86c-4e1b-aaff-e7840165dc9a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff4cf8bd-e99c-488e-a635-f0921d89e32c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "995f2924-e97b-4b32-af81-b68b5b028a35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35d69280-b3d1-41cc-bd43-0972389b2986",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74ccc773-3ef5-43bd-999f-1080d164e371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94d746fa-6e70-473c-be57-beee4e33e6cc",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9fda32c-fa97-4226-be10-08310cb6e0ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d91fa07-563d-48df-ae0a-c77b089e5e71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5b4648c-e313-4440-be6b-3ce54a0d0e90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e63e01b5-f7ae-4869-9725-7f1eab4142a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d60a6f50-3103-45b0-894d-3048394996c5",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42ffc1dc-bde2-4fe0-bf45-7a243c53057d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ac48bfa-70ea-40fb-83f9-569de3118a6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b25bcbf-14e0-42a3-96a8-9cf9749872a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7df5a2ad-0fe4-413a-8c91-ec40ee573290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d561ab44-5ed2-4bce-8d20-2e51d23f59ac",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aebc09b-cf44-47bd-b878-fa5c06c030b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54095cb4-e06e-4dcd-9c24-6b17f44e8e0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d8af2e0-d39e-4f11-b806-f5bec9b599ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05d2f1ab-c2c3-48e3-9592-c09367a793ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ca87435-1370-4b0d-80c4-a3ea9debc6a7",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b4afba-a806-4e70-8795-f3176d710069",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7b45162-b2e9-446c-8572-62e8430e924c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "435e198f-e034-4997-9096-4a12baf4fb6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b84d0fdf-35de-410f-8697-a9d45931c35c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab26f9a6-2402-435d-babb-31fcca589b5d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3459221-112e-4483-9a98-31a57daecdea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45fc29c4-f42d-4380-b748-488c8cc6870e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c18e9c7-2ff2-4480-8b52-9718fb557151",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "396e75bf-4bd6-44ff-bb3e-ba6cc0c9f1a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db838c25-71bb-4269-8acc-87e904bdcb77",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52cefae9-e7cf-4fa1-bac7-2ae7e3eac7b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c13ca95-5554-4109-bb4c-ed208b95c6ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db3685ab-f6b0-4cb7-bded-5acf42277c5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd00cc73-03b9-4575-8846-cc0db478b679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9b2d9c2-e515-4c53-a7d8-e87c497b818e",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94219eff-deb9-46ec-b923-7496f35cf711",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1467beab-9dfd-477b-b492-a9c9dbe05c11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4c4448c-2805-497f-b818-cf0ece1cbe69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b10932f3-1213-4c4a-a7ad-c596f5060191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d533f7d-020f-486d-b82e-c5b36da975cf",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b37b98-e4a1-4a7b-8424-332f8ed3d3e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05a719b7-e7eb-42e9-8764-b5a4d3872b8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fcce52a-9891-49f0-9f80-1e803704fa11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd9dfbf2-c7c1-4ed7-9758-fed4b85819ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e41d434-1dcb-45dc-b76f-a5bfc44cd75e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "106fae0b-8c4e-472a-b561-15293c8634af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4235241e-fe12-4060-b861-eaab88e33ad7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "561b24bd-6075-4c94-94dd-f49950d4c061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f78eb92f-f622-4718-bddd-878b0bf9ab7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d73bf8fd-3ee1-4214-b803-c75c658e3dda",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12147d2a-4b24-49da-8dc3-8ba478131bc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4f17739-b0d3-4965-ae47-555c4d45c72f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7945362d-243c-4427-b3dd-b0b0a8adcf95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30433162-3a1c-4c33-916b-8712704baf71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e06a37e-509b-400c-b7e3-2383f4dc2f6f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d6a32bf-55ae-4e89-987e-19d6151c5a2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f31e63c-f0f2-4e85-87fa-70619bd4990d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "add6d8a4-fd5d-483f-a3ed-cd90a209424c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5fd9784-318b-4c6c-b311-014bb2752152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "135fc187-4b35-4b25-89af-4948564489e0",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd85d081-8e0d-43b7-9c3f-2ab894f7a38d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f90785ed-115c-4cb8-b301-c9c8317ca1ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfe17a22-cb9c-4468-a275-41088b96017b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0300bb53-0eb6-4a9d-a64d-ab181cdd8087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79d86712-68b4-44b4-a0cd-e13a9671dc2c",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dc14344-1239-41fb-8877-5842688b8233",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a7fb3ee-547a-43d0-adce-faf4d5aaef6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26082787-89bc-4d80-9e4c-5541a4d81f7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75a668ee-bf01-4b4b-b418-968bbc417cbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4163b5e-f5a4-47fb-8bf3-78379aea49db",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18d607fa-ef99-47e9-b4de-0f9a3ece471e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "658542bd-6f92-465e-a28d-6823efe35d12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f1217f-1250-4eb2-b611-73642e704118",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e243ce38-37a5-4a6f-8cfa-31fc83bd2790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58492125-eed0-45e1-a5f5-704fed693a43",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "036e9a68-f5fe-4b6f-9941-40da9ca73e98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b180f611-eeec-4818-a05f-0a648d3d947f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1554fb94-8bee-44d0-b6dd-c2ab077708da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f19bdf8-9f56-41eb-9572-f60938cb290b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71ecd04c-31a7-4077-8fe2-03e988fedeb0",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94566277-6c3c-4bdd-b786-3be16a33280a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66d68fa1-d710-41d7-ad8f-06d8f16a2232"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a22be760-f78b-47e9-87c6-d084ae54ce11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "502fb4a8-0e09-40b0-b081-03bd311b0a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "241510a9-db87-4a12-926a-074b42c04c51",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73ed6e19-b78f-43d2-a6b1-c8f610170406",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5015fca2-34a7-430a-92cc-70754fa4c10f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4afff77-f53e-4a06-a812-558d16c10a41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb337540-cc89-4351-9031-1391d4cc5608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de1a4cce-4ec4-4a99-9a39-c38e19d5f434",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d87a8c4-e189-463c-9354-988600eeb527",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea46346f-7708-4a4c-9ab4-40567933ec0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c8a7857-1927-4ec9-aa24-29dc0034a14c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b68f5818-a501-49cb-beac-0e3437abb9b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "932f87db-5d92-42aa-a9d1-6f162d290d87",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a334d52-a18e-4ccd-a863-79b6833bbc35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9d3e98b-3fb4-459b-9477-a01ab9c118b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02c4dc9f-28eb-4f78-9a35-1834115bca49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e695332-f7a5-4c29-a77a-10ca13d80b10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f89ee27d-7188-41a5-8a93-605c20472e54",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5094a64-0692-4d55-a4ec-3537ae8d9674",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "120a06cc-7143-4d95-b6b6-5cc2b7a52c39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e87e2638-87ac-472f-b705-88b515636242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "928be651-817a-46e5-9276-8a35d4583816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b674adfd-6d21-4d6e-80db-72371e60d76b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "221c6d53-3aa6-4009-8e36-9c8061cad041",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e3651d5-124c-48b5-a846-cac1bc5ea5cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9038cab3-3ddf-41e1-b5ae-15a887aae3a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f2bd57f-b4f6-4ebb-9e58-8b470d74dbcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9eee574-be77-435e-8b08-3e94fef361db",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6409c19a-9fd5-4a78-a6c7-e8fd2ab34434",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3359363-0f9b-4a6a-b8c6-7a9feed29915"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7d68472-9a7f-4441-a68b-e8d31eb9899f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ffeeeed-bb2b-4cc8-aa6a-4efd99e5b9c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2962023-81b8-48fa-b000-f8f077100368",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "453bf8f5-29bd-47b1-9c7a-29f768de6d1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3189f707-78e4-4f55-92f3-ffb55647a408"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc1de4d3-2c3f-48d2-b534-589ce2a97507",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3779aa26-886d-4fbc-93d5-eead7aa57f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "708370bd-3163-4fa5-aedc-b4ca68a68c03",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af2ac2f4-e811-4746-96a9-f39e023578bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5be7d494-3798-4bd4-ad56-f097eecbf8e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c412483-45f6-4344-bad0-5260824f0ea7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43985297-e356-40a1-938d-5c13a32bd166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3983b967-1e54-49ea-a988-b47bc130948f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3d4bb91-1566-446c-95ef-5c27703b4c11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07f82fbe-6b3a-4a6f-b241-a487b502db95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6da81895-89e6-4094-9374-3e4ad124134b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d3ab3c6-2340-4a62-8bd3-f9e9d8f9643f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "851a0e9a-1570-47be-9843-aceb2d46cd3b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39eb1195-394a-43b5-a760-10f9b6da2fb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b048124-97a0-4297-9845-9a64685f08e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed7c128f-5c9c-42ee-8b79-233aca4097ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82efe937-e01d-4b61-ab59-c3800ab91767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b3198d9-9dc4-4bb3-8559-e8446d6c7bdd",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e02413eb-de4f-4a8c-b6c8-6590b34eaa5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c556e054-eb5d-4036-a039-2efed368473a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcbb0291-4d5d-47df-8480-f982a12262ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc1f8769-7b97-4f07-9f2b-0e5061d59444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "319c24b4-8b2c-413b-b722-82761505c0f5",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7df49191-ffe2-4df7-9bfa-df9b444a082e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c38193c-d71b-4e67-b48f-4216bde54821"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a277ec7-e221-4a42-a681-6742da5c18c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "926189ff-5b87-4815-8f0b-c367985ca142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e2e24fd-8d37-46c8-829f-db8f53482959",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "915fd494-1199-4a32-a5ea-b7b716192ef9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6ce8048-c9ce-4bae-ae3e-e396c67b468b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78bc023c-b8ed-4772-9bb4-0a59345a2bcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dc00e54-b6bd-4ae7-bb69-c3527bd0792b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b0e19a5-60f4-4399-a708-ccd9bb910c8c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a55a074-21c0-4346-b22d-e3a25659024a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9059d70-1b81-4b2a-9fc9-1d50b5e9bef9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30c70e16-55b8-4f96-a304-9c3df184f1f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "368516da-ad57-49b2-aa24-0f2cca44c146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "278b934b-4151-41fc-8526-fa59026e9f97",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eed98c3-d13b-430d-b40b-b03e2645603c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c9e4612-60ef-4af8-93c5-5d02818315bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0460b35c-bfb9-47da-b844-e3a74fd1e3af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6499f00-f269-4518-b949-76b51789b328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "212ce32f-e22f-49dd-a367-2218a000efa5",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff683e26-d9bd-47e9-ae8a-e1dc99028290",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "964430af-a8a7-49ba-9a07-32c8289f5056"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26dd94eb-1caa-45fd-93e8-919c00f4f376",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64b08b18-ba21-4fcc-a97a-d75dadefbe89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1788761-6311-47a4-9719-8207039ebaa3",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e60a98d-a095-4a97-b5ae-493cdd977c67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3460eaf5-d5bd-467c-a54c-cddae63446ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3926bc3-c4fc-4da6-aa45-ea3b6134b9c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ebe393d-630f-43e9-9050-406f90657548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c1b7c9c-c6df-4274-896c-8d6ebb1d6123",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96314a62-dce2-4da9-8bbc-45dab47e6027",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddbf09a2-0cf9-43d0-bcd7-c9a878065765"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b61a8548-28f8-4559-af2c-1bed146e03ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61707355-db9c-4b7e-af13-408967ca3ded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a40de9f5-90d7-4d64-b647-805d5afa1c46",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e580b01-7f22-4ee5-b09e-0cf978dd45ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49ae2e43-6049-427b-a18d-35628f6e31fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff875ea-e288-452e-9dad-7497ef07e409",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09dc6169-0fb3-40e5-b3a2-33bb6df66409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e22fcfd-bc18-43c7-8f63-22b783e47560",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82013d4c-fc95-45c0-aa4a-a69bebac0aba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64d468c5-f56e-4b2a-98bf-a18cd5dcaf0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c56c4f17-405e-41ab-8b17-4c2f0d9d76e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edc3f970-f4cf-45a1-ab35-2e16c0818250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9a6810c-7643-4139-8431-6a6d5ccf5953",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfe4c484-0190-4fb8-90b6-3f325639f38b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c7f554f-2df8-44e7-b7a8-794082023174"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a72465-8ae7-41a9-a0a3-5b4f9e2365d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54a368c9-137b-4da1-a9f3-d8adec4f3edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f6f6bc2-4b6c-4ca1-b691-18f1f2cf368b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6750d531-483f-400f-9977-288704233a3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f0e609d-8448-462a-9417-24655e8d1bc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "245deae1-5666-4596-a105-cdb6c556b543",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a8d1d34-e7bc-4dca-a4fe-eeba239fa15f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcb57d67-55cc-499e-820a-46d7813b72d3",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa8709ba-bed7-4459-ad36-920302569e65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fb63972-066a-4ad1-97ec-e412e740e3a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf3dc7ee-ad42-4c70-8a66-9669e2de3936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97e7107a-4bd4-4a08-b129-545eb74a959f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f993e98-b426-4ce2-9cde-776e0df78829",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c90d640c-d4f7-48cf-adc1-21962859d070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f2bc1ea-1924-47c9-999c-de4b5d598207"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3133377c-b5d3-44ef-8557-d445b5b46e5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb4cb3ad-3fee-4ee1-8726-5cd7f24786f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d08fd4c-3b0c-4789-88ff-b2c4370a79ad",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b27afaed-6a28-4c48-acc8-0e96dbe7006f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1488d9bc-a66d-4b5c-996c-6e231231c931"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e2407ec-d74f-46ac-9202-8d7758d931e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fc8bb3d-140a-49fd-9ac9-395d3ee3ec8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c5752ed-14ba-48fe-bfb7-e6facbab1b86",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c5ee2ab-95ae-44b5-a062-dde7f8e0db66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ed2c391-8e29-447a-8f1a-edb1ed3c029d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffebd66b-a336-4643-9ed9-a948e9be586c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "854080cf-aa53-4aaa-a457-213be6abf8bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a67c9918-5daa-4424-83cc-4fd56c9a019e",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7afcb0f-1139-4f70-a9b5-fa9f72c6c7a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c71f4cf-791a-4eb3-a3fc-d94c3ac7de3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d35de2a9-c178-43c8-8311-49e3f59451ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d4aca9a-3d7c-4305-bb91-c4775255614d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb263c3f-655b-4b2b-8748-2d438df567ca",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e05b2a-4169-4d41-b3e1-f8111e372990",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "462961c3-f7d6-4a5d-a781-ff2d90599dd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "348f7160-65ea-4e6b-905f-d1597636340f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec426626-bb51-40b5-b5ea-ca613b4fb4bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50af1483-2f88-4690-a5d2-fdfb3ff5bd4f",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7677aab0-4f32-4f38-840f-09f642a2bb0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d243f66-ec07-4107-8e21-218d340ded6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "603635bc-39d6-4986-a83d-8cf74146d36f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d14e6e11-9fd2-47fc-b037-17d0f4943db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40572657-f6db-4a57-af0b-40b89817456e",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6df3ea1-895b-4fe4-a868-568266443102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f8d0647-cbc8-46fe-9558-c5c40294437d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ac7285-2142-4333-8d64-2e133322d4f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ba0a184-c522-4812-898a-0a7101829757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f00ed6f-0211-484d-93f7-62bf35463ee3",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e9410de-58c6-449b-bd07-2068d96dcedf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4f2cd4b-3195-4152-9cb4-c93146173d96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ef17254-c749-4890-8f0f-2c95ec3dae32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bb12ed7-2343-4786-9d01-c432e79f994e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "661bc0c1-9e94-40e3-849b-e83b6d02b946",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c9e3dd2-11d7-4921-89ec-910bef4471de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e353a79-eeaa-46dc-9b37-ab9d431fd217"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a28bef8-3f61-4fb4-8f15-ddfdce73a113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85d5a7c2-3f2d-4131-8a95-5c408c222fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1ffa4c4-a9d7-4ba1-9ba6-954d0d907daa",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc127fdc-07e8-4a03-8c4f-78be78e222dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c16b6eb-8343-4c67-a37b-490b8d86b02d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0fbba9f-0277-44ef-a928-5d1146064f5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3019ecf9-b6e5-4c7d-b683-a89d34cef685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "963d1a70-5fea-4ce4-a779-66747a52dea4",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3cb90c3-7023-409c-9815-4f405ed7b4fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "848cb643-9874-4921-b16f-8e26a5789bc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e74a198-1b45-430e-887c-a2ad4b3ea8b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45432081-5ae9-47b1-8662-7fd0fb0a63b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e055eb2b-4c29-4365-8189-479294ec4f53",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78090ddc-5b26-42bf-8601-5973de896f91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d22003b-3065-4601-8e8f-9ad04e9f8744"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ae67aa-b190-44d5-ae6a-9be170c41105",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70e659d4-b0fb-4d04-9c72-27cec9689ef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "504a9024-5c1a-4ff7-8ef4-ed89f722abd5",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "910d2a20-1609-4598-8f74-2849b843c6c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e7627a8-dfa2-40f2-a6a4-46414432dbda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da3b64b7-4b62-4d10-a7fe-bf7227cffd13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b62ac8cd-5f87-4a95-8b36-014f7e911322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdb228d7-8172-4792-9596-29269aedc534",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de98920-bf93-48bf-9768-e1300a2268c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b37da3d6-5e6c-4c74-8d9c-2c60d3a67090"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a14d14-4f69-426e-92a6-d8ae7d58cba1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63415620-5c2b-4206-a4bd-41df2f6a6dfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef17d94-a723-4aa2-a33d-229e395df5ca",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf94ba69-b31e-43a7-92b9-c8e87bbbc05b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37675a31-81aa-4bbc-a1c0-cad5ba757af0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ad4ddc-2776-4ef5-82ca-431ab816c987",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30622547-8e41-4d00-9d92-7e54ca056cde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c94c4100-6ec7-4317-acd3-b3003080f794",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dcc0910-bcfd-4b90-bcfc-30d438f46cdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "518626c3-b578-4f52-b94d-5c85a9c31180"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "052fdd03-4adf-439b-8680-e370fcb037a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c84d760b-5161-4cf3-8332-f59040f39b2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a98017b-dee2-40e7-b97f-c831621e2244",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae01803-7126-4832-81cd-eecc20fa5583",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb962f11-57b1-49c3-a6a3-e3f1ccc107cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9698c525-b4d0-4e1d-ad8d-e2f3c90cc357",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc0dfc3c-5048-4de6-8c61-b5ee43633a5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb95d586-7e6d-4c85-9efd-f16f133110fa",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1825cb28-9130-475b-bc15-24d440c6e3a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9eb66069-924d-4f2a-8d4c-ab764d832f9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33676b16-7246-4dc9-a149-b92db377ecb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7aa75c8-d42c-4948-af72-aa9b64dfd293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9647d37-3e69-4eba-a4f4-c54c8a226bed",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f56d7c30-4f4b-451e-8847-02926ca74af7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f007dab5-73ec-42ce-870a-a4742da6db2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "317654ad-f509-4b5f-ae48-5c223906a838",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec984af2-7f95-4d3f-8afa-aa4ba31ffb6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c48ceda4-7c36-46fa-885f-b43c6474b039",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3edd9e88-2bfd-4e96-b318-0bc7f6ea7a2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a4fae93-bcb8-43e1-8cfa-0ff23d1ae5ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20102b54-45b4-46a2-ab85-ccdd7529f677",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3759eb0b-ba11-4ed4-aa71-6a3dd6598d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6280aae-8572-43bf-9c7d-85fd332c4089",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f49f0dcb-28da-4724-9738-51b545527256",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf8b32b7-412e-4c7d-9c88-4e9f16141b14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc17379b-675d-4224-8868-ac5e7c9524ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48862f89-320f-49d3-bdc6-e9f41f9b6151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "263996b9-4e69-4ea8-9c68-cf47f46db1da",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ea47dcd-f5a5-44f4-b7aa-077ffdf6be08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d8b5064-df03-4529-954e-109552845fa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d7cb2a-af58-41b4-8c5f-00097420a641",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ac9c392-7492-48c5-b6ae-4016533b7db4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "527ec3d2-57bb-4b4e-8036-f464aa4c9b31",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "611c3fda-309a-4245-b68c-401c6c2ea6af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73b1bbc3-d857-4d81-a58e-f9f09b2b8978"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "076befdf-fcbc-480f-9a34-0bb39b33cfea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffae929c-dccf-459b-8aaf-92f711b34f16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e782d937-1797-40a6-957b-c41559bc55d0",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d1bd5ca-d0f0-4800-9d92-72ed67f5414f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "887bc8ff-78b5-4ed1-b5e8-238b2bab823d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd73724-394a-4fc2-ba8f-7d8ac263e534",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39c13a11-13af-4795-b231-a3eb066828fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18547088-d634-43f4-8731-0bbe4bc1e8d8",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb95ac2-2374-4294-9da1-74adbc29ae3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "861030ed-5298-4449-a33d-21f8413361a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b975723c-3fc7-4e15-ab68-764671b772ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7b2f338-ca34-449c-a690-b532aa8edf14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31fbd221-3b3a-4c2c-9498-9d6cdf44f77f",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f885d8-0efb-4729-a83b-25b12b552af8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "667b6918-e368-4974-a83e-73bb1c527402"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "591555ef-d292-46e9-baa6-cdf4a2478303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f364cc3f-ce7a-4832-98c1-e18c885fa9a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01b86b55-b080-45fc-98b3-d40ed40f880f",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac239ff2-5d27-483d-993b-8181b8c94ad9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1dd38413-312e-4e7f-abf7-023ca0e6096b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ff91f8-e160-4278-bb38-9a0998d96229",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "367659d0-2a64-4d5c-896f-4a2d1df6510d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55cb159b-52f6-4741-9791-f511b288c651",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea5f8ea-8628-4cc3-a954-a76740e80936",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f96c6880-8414-4f8b-b874-ab6233ea2ccc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df9f107-914e-4778-9cc2-9c01ddc6a925",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cea19a1-179d-461e-b05a-a1ca92412505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2fbe511-4c4e-441e-a58e-d0689265e4b9",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bda91f1a-24fa-4d73-8bad-97cb176e6ced",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc6baf1a-8fd1-4683-9c1a-0cc08ebbcf93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fe09019-d998-42ba-aeba-594c9ecdfa3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d07dd983-2b0a-4502-9ed3-70f5db06d216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2fa718d-c828-4388-9f42-871113e04d2d",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38582c0b-1d09-410f-ae06-e7be09acd28f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "851ac3d9-2f29-4cc9-874d-18dcf4c444d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba879b1-bb93-4d73-88d6-655e9dec2924",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b565a59f-9898-4772-b83c-433cc3dac10d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af259b4-f08f-499f-9172-30596d9162fb",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd796018-d5e2-4270-97d9-c65b42651eb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b6e6171-a4a7-4a96-8bed-91cf35ec3c81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82561707-6aca-4650-b1d0-715630bb7a5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acc640cc-766a-4ae2-ad02-20ddfca477ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0d5f635-f600-4e2a-8e14-50fc4a870d4e",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "130a4ff6-f310-4149-9bd5-696640ca9103",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac898d1b-c6c6-4c60-9818-a0299bf22a5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baa5875f-a157-47c6-905a-a580df4b5470",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b0a7d18-325b-49d7-81e4-bffb3950161a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78db5d8a-a031-4971-8736-0a5a5b92cca2",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "673fe94c-5ea2-47c5-a51d-b0d1d77d8031",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b877955-7017-4d21-b9f4-8491efd9c002"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe73aa5c-9e18-429d-a49b-e2d5619b5f95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be23cc9d-4d68-453e-a05d-95f387f95b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b9049e9-415d-408d-9b71-db6383fc4bc8",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ab6fe0-4f2f-4cda-9bb5-3dfcc93b75e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e66365d-51fc-44e5-a366-476fc2ad036d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93eff153-c985-402b-84d0-b2cff5021fb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83f9b69c-7f56-4418-aa4b-acbe28cc374f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf553339-42b1-41eb-ba2a-4982a5c65b80",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c3af362-1983-4bbe-8e41-97883b5cb30b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "193c6cf4-48e7-4333-a7f8-dc0185f28cb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e95e526-5164-4a52-b61c-60b01119c081",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e277136-08a5-4f03-813b-af561b04070a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95b50b28-a6d8-41e0-b732-dcb229be28c7",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "816c3024-01be-4678-bb80-2b7f8c55e5d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c28afcf1-340d-439c-87db-ff8a4f7d704e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f664f1-7d17-45c5-8ae4-881f79d280e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07606554-b214-45ea-a9b8-d1bb079727ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df0b6b77-9178-40fb-ac42-126d5ed4e4b5",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cfa2ef4-835f-4f52-bc8e-fde6396ba963",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9675244f-a5b5-4727-8804-3835acb79834"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c65fef15-04ff-468b-a682-faf1df732252",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92e258c6-89fe-416c-8d8d-d562450d3c9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "642f2e94-4b6c-4a9d-bbdb-91b5302ba09b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5703520-1fa5-4db0-9679-af508c174890",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66c666b8-8a01-4937-ad06-7da7af1a185e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbe5c795-1777-4441-8335-199c65c71c6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f99da86f-70cb-452e-b1e1-e85476e06618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d43f45-8c44-441e-9e6d-0f1eef848d67",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1669d1a-4fdb-41a0-899b-4aab51bdb47c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65523068-8353-4c6e-b102-3ae31d72bd61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e2c2c00-06a6-4659-8546-c327fd2295a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aec87cb7-9678-4515-87e3-2b0002e23fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c66665cc-545c-4fb6-a220-324103d2960a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bbfbbd6-e4db-47f0-8652-ec878ffae157",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14987d73-df0e-4079-b64a-0e2528dfda00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a285a72-d0b6-4dd8-81f4-8673501bb2e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ff15aac-2858-45f7-8438-6cdc008dda85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e820ca1-fcbe-4588-aff9-03986a6f3079",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d51cb50-29f1-4b92-9c57-06d69a4e6225",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76d71bdb-c186-40ba-9d99-33c51de10520"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42d6b975-19ac-436f-9141-d3553b678a1f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af1f6853-1d97-4cb8-9608-dd242fdeb607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "404ffe07-f192-49b5-941e-89cd950c7719",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00a52650-71dc-4e2c-8d4c-341abb61897f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2be7745b-7f77-4c4e-8c86-3fa0697e26a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f814b23a-92dd-4d33-9086-b8d35ec0537f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4019b90e-400d-4f02-8a85-488a50ddc83f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9c4b62c9-9fa3-4520-a5c9-24cace983547",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c9ced7c-d91d-4708-9b4d-1ebe475d3542"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb6b0d4f-a78b-4cf0-b74a-b62067835e5e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bdac5ef5-c19b-4d25-8f99-8fe8e79783de"
                    }
                  }
                ]
              },
              {
                "id": "1e178376-e669-48b3-8f66-48992d0832b4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c876b082-ee64-4546-a1c0-3eab84945f31",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae5d84e-5412-422d-894b-351e91f080c1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4f2a9e44-ef37-4d8d-954f-ba9bd13dbf57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80e504bb-e9a6-4972-a3b8-e4644f835699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "400e6c73-34ee-4c79-a6fd-2f0255f704d5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "25325752-0683-4a4f-b57d-210bfd481e6d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "54e2e83f-88c0-4173-925c-1b4a80e32be2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9fb3c5cd-2d62-40d3-83fb-bd5e1c13e0e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95bb00ad-a623-4c81-b32a-ac1eee7bb125"
                    }
                  }
                ]
              },
              {
                "id": "85acece8-f9d3-4ff4-81ac-094170e8d1ea",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "17cc1632-f8cb-4931-b80a-dffdb7510020",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4394828f-1715-4959-bed1-f54ec3058008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "4237fb08-0a07-4d1e-82af-0f9ace37d82f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f0967f7-8c98-4839-a222-4b800f730307",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41565cdd-43c1-45d1-bbd2-919f9c528fb3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "28268117-0f28-49c5-aadf-6721a8609b72",
            "name": "Positive Testing",
            "item": [
              {
                "id": "dfb25372-5f99-461e-be58-16dfdac37463",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e2205f4-15d2-49fc-85d9-08456f4aa303",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6dd11cfe-9256-4a33-af13-e83efe466398"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e06496c5-ceeb-4e24-9424-0e32e852cb55",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dd37cfc3-dd63-4169-9117-0adcabef52a3"
                    }
                  }
                ]
              },
              {
                "id": "df6e2d32-616a-4998-b791-a20dafe74a2d",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "50b973c4-bdd5-4362-9d8a-0e7ca61612e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2b2e7e4d-42ef-45f9-a82d-f2c40849ccd1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d81a8292-670d-483a-ae77-853b0f819e1e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9da9f38c-e8bb-4ba8-a4ef-538b23d34b31"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ce4aec50-9f83-4cdf-bdc3-cb09120bc429",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "6e9c4dbf-5e1e-4038-bd66-1f6012a84f20"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6b339d6e-d4c9-4d90-a771-549a46c459f2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "43aab033-f479-4370-a7d1-aec295f2c642"
            }
          }
        ]
      },
      {
        "id": "807dafed-ad7a-4e35-9fe5-26b581b3b00f",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "c0ab3e8f-00cc-4aef-80fe-9860f0c54517",
            "name": "Negative Testing",
            "item": [
              {
                "id": "adacb94a-6bc9-4b1b-8aa8-6565f0941907",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e5265523-cc68-4bae-a41b-4bda53ed4749",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a96d46-1c73-4210-b985-f863d540f627",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "792acc5d-da08-4219-8e04-29879a3ea8cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cd58076-c89f-4189-8bb4-b218ed2dbcff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2b63a7fa-05f3-4197-89ce-4a0b9130a00d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c3f5f9ec-4fed-4889-a328-8aa7e0cfddfb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1df95461-66d7-4269-a62e-60fbf03d3a08"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4171fb90-d787-402e-9fe9-8cdbf562584a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d4eafd1-9be2-49d4-815d-00659feff490"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e9eeb4fb-c957-4d56-88ca-8daa2889a53a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "6603496d-5215-48e5-aede-118c2e8dc2e9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "04f0b8ae-8b3d-4dfb-a769-ae7110edfccf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cfae29c3-6078-4e51-a206-2d24a51b5a65"
            }
          }
        ]
      },
      {
        "id": "eed5a749-b0dd-49b6-af53-e570c97ca6ba",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "313d0fa0-5429-44a9-a498-4397ffc84e99",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fb2002f5-e512-4c3d-9ced-5165ec6000d9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3bbbb258-c745-4b33-9247-00f202eac1c4",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e547ce-bf79-4f24-9475-af05773a622c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4934c657-cf62-4566-ad08-9cfe9525458e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "594c7454-fb5a-40ca-9b2a-2177b28bf8ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f852612c-543b-4987-ab6c-a96ed31b7d9d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d4256089-a0a7-4719-a95c-a79d60539e55",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d6a1dc75-a878-422e-8582-971a0ae2044f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d0c6664-594f-40a5-88e4-7bc9a3d287a4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8fb2c433-afe5-40ea-bd72-6aadd840a5bc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "375dce36-86d5-4eb4-8844-bfb8469d435a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0297cbaa-ba1a-4e28-b52e-a35c7e9e8406"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5a935a7a-3253-45ee-ae36-064d293bd38e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1398ca3b-89bf-4fc3-ae89-3595d0ad3f2a"
            }
          }
        ]
      },
      {
        "id": "9c17adb3-9112-428e-b84a-2b88afb3aec3",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "2961dd38-a528-4a1c-b132-2a0bc7b7c44c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d4236814-93b7-4f01-b9d5-82ae07394011",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1663cf2e-0bc3-48b3-a19b-1ec88806b86a",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57450d88-1a4e-4cc1-bfab-0c7df2535f99",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "298d50f4-b73e-40b1-a785-91064f61bd36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6106893a-4e11-4dcd-86cb-6e7dee85687e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "93dd0d6e-ee9c-492d-879c-5c9b943de5dc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "78f7632c-21d2-47b8-acd0-d26fb2a8644d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "359e9e96-5017-4d1b-9cea-8f4c2adddbdf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a93a929-a163-4832-8aa9-9ab7cbeccbfc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5fff768c-4295-4101-a0e4-1e9aa7167349"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "97c0557e-ca59-4005-87e9-c38ab9ee194f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6f24ebc4-7d50-41a8-a276-a2caf47a85f9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e53791f4-93df-4835-a4bc-ac8ce21300f8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6421e6cd-d9a2-4d00-9270-30d311434455"
            }
          }
        ]
      },
      {
        "id": "81f20684-8c63-489c-bfae-cef46952c08d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "507e1da9-61ab-454f-ad08-e487ea39a527",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "086d5196-8868-4c93-999c-4b8cd5ea8a3c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "73d2bf68-dc86-4d81-bd1f-e91e21ccf9bd",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "31b7cc83-7a43-4488-a0c4-f9e70ea3aef9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a084fd19-e527-424e-88cd-b6b463443426",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 31.96428571428568,
      "responseMin": 9,
      "responseMax": 758,
      "responseSd": 50.004074380479494,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1726706628376,
      "completed": 1726706644930
    },
    "executions": [
      {
        "id": "d93fe808-5cba-4a3b-9acc-12f28796b3c5",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "27c9c1c1-d772-4843-86ea-7fe22524a3b1",
          "httpRequestId": "0dec19e2-f824-4268-8d76-c7cf59ffa857"
        },
        "item": {
          "id": "d93fe808-5cba-4a3b-9acc-12f28796b3c5",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "92e1ebbe-feca-46ec-a7e4-ac151d792668",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 0
        }
      },
      {
        "id": "e3fc8f1d-907a-47dc-b693-29162f0ef2fd",
        "cursor": {
          "ref": "b15ecb0e-5c01-44f9-b22b-e9626bcb3de3",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f1b4159f-66ca-40e9-b0cd-dade0bcb070f"
        },
        "item": {
          "id": "e3fc8f1d-907a-47dc-b693-29162f0ef2fd",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "bae466dd-e7c1-4d00-a1bb-076d1cc8910b",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "ac61f173-255c-44f9-944a-db13d67ed782",
        "cursor": {
          "ref": "e9779540-00b4-4cf0-be01-5853dbac44d9",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "38b11623-6bac-41d6-837e-0515a55af876"
        },
        "item": {
          "id": "ac61f173-255c-44f9-944a-db13d67ed782",
          "name": "did_json"
        },
        "response": {
          "id": "6153fe74-450e-47f6-aaca-e16daa26899e",
          "status": "OK",
          "code": 200,
          "responseTime": 229,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8382496d-34e4-4775-924a-d7e97d96ae3c",
        "cursor": {
          "ref": "c25b8949-c94a-45c5-a695-26609cfa3cf8",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3226fcff-fee0-4449-b8fd-02486a937b7c"
        },
        "item": {
          "id": "8382496d-34e4-4775-924a-d7e97d96ae3c",
          "name": "did:invalid"
        },
        "response": {
          "id": "75656cfe-9ba7-4ebc-8ad4-c50162934afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8382496d-34e4-4775-924a-d7e97d96ae3c",
        "cursor": {
          "ref": "c25b8949-c94a-45c5-a695-26609cfa3cf8",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3226fcff-fee0-4449-b8fd-02486a937b7c"
        },
        "item": {
          "id": "8382496d-34e4-4775-924a-d7e97d96ae3c",
          "name": "did:invalid"
        },
        "response": {
          "id": "75656cfe-9ba7-4ebc-8ad4-c50162934afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6710b1e2-462b-469a-8726-8515c3588cec",
        "cursor": {
          "ref": "867a50c2-cc08-425d-afeb-c16c3e6ba885",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ec07a2b2-2e19-4e27-b517-0df52a8ff4ad"
        },
        "item": {
          "id": "6710b1e2-462b-469a-8726-8515c3588cec",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "1eea9d1b-41fb-44f4-b291-7623079afba4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 112,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d8e404d-1799-4b22-a42e-e1c665d9912b",
        "cursor": {
          "ref": "78c09eeb-34b8-4182-b614-44b070d78861",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "3e710a0c-ed12-4352-9483-58950d059a6f"
        },
        "item": {
          "id": "2d8e404d-1799-4b22-a42e-e1c665d9912b",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "8a159cbe-ee4f-45f3-b342-d309669ae437",
          "status": "Not Found",
          "code": 404,
          "responseTime": 27,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc615a5-f61f-4376-9df4-ee90f68fd298",
        "cursor": {
          "ref": "02fcc278-b4a4-4b10-89d8-9c4b5d1b1928",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "8bb9f94c-b9be-4ca0-b676-76521bfade04"
        },
        "item": {
          "id": "bdc615a5-f61f-4376-9df4-ee90f68fd298",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "0725b369-c4c2-4bf6-acb0-0c2de809dbe7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d392694-9bad-4db6-a8a6-e9302ea66e89",
        "cursor": {
          "ref": "ccf4c9e8-46d9-4bb3-9a9d-7d48b21aabc4",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "22a85de7-7e7e-4da4-a36a-e23254b0602a"
        },
        "item": {
          "id": "0d392694-9bad-4db6-a8a6-e9302ea66e89",
          "name": "identifiers"
        },
        "response": {
          "id": "0cc3bd6d-aa44-4e33-b493-e07d6c948c0a",
          "status": "OK",
          "code": 200,
          "responseTime": 179,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51049e7e-9b91-4eb4-be7c-57c12490600e",
        "cursor": {
          "ref": "a22a960f-638f-472b-884e-da4b3256b814",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "9c100634-5ef3-4838-a1ff-233f6ca27809"
        },
        "item": {
          "id": "51049e7e-9b91-4eb4-be7c-57c12490600e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "2fc79602-f985-4c3d-a5be-1dc5b6a2e3ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8f9f5cd-7e72-457a-b07f-adbdfa52f66e",
        "cursor": {
          "ref": "7c905047-5b09-4d6d-a286-ed2f6109a72c",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "956505f2-5775-4ee7-ac17-aa9a10303e52"
        },
        "item": {
          "id": "e8f9f5cd-7e72-457a-b07f-adbdfa52f66e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "77599d23-0b53-4cbd-9be5-c545987d6d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cc068af-bbae-4e36-a7c1-0570f4698b9a",
        "cursor": {
          "ref": "85c84253-7f75-4759-ab23-f68190766480",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "67861817-406a-4913-b512-686ecc406a4b"
        },
        "item": {
          "id": "1cc068af-bbae-4e36-a7c1-0570f4698b9a",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "2c623391-931f-4adf-be13-eec0b6ed5e56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e101543-06c6-4638-9f7c-84a681e18f8e",
        "cursor": {
          "ref": "ca78d233-f88e-4432-9b1d-e405ce90283c",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "7577e3f2-acf3-4c61-ac7b-f2a6c635722d"
        },
        "item": {
          "id": "3e101543-06c6-4638-9f7c-84a681e18f8e",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "1272b2bf-ffce-4dcb-a643-461c857cd49a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d15d55cf-50a1-407f-a0e5-5d3850fe2fca",
        "cursor": {
          "ref": "a206b9d9-0dd0-41d8-a370-8418447e9561",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9c69addd-4104-48e3-a290-ab254e0f6e7b"
        },
        "item": {
          "id": "d15d55cf-50a1-407f-a0e5-5d3850fe2fca",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "226b6967-dc81-4e7e-925c-460020c3e383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8960e209-e208-4962-9e31-fda913306585",
        "cursor": {
          "ref": "c9261dd1-a3d2-4f9c-8209-58ffd500449c",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "8a85f78f-7e3b-414f-a501-dae07b121503"
        },
        "item": {
          "id": "8960e209-e208-4962-9e31-fda913306585",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "2a867595-3919-49e1-bc97-0b8cd1a02144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41c549e7-2aa6-462e-a582-9afeec85d6ef",
        "cursor": {
          "ref": "e1c7a9c7-2292-4841-975b-138f98f8bfc9",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f2bd1f85-b422-4f69-bddc-be020c0cca26"
        },
        "item": {
          "id": "41c549e7-2aa6-462e-a582-9afeec85d6ef",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "f8b8929b-8db2-4b76-80b3-dd104f04afa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79339848-d660-4824-a246-ad12b5599c9a",
        "cursor": {
          "ref": "ea0862ce-54ca-4563-af4e-ab086b75f727",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a7294a02-1ba7-4df0-89cd-4c199c8c8ef0"
        },
        "item": {
          "id": "79339848-d660-4824-a246-ad12b5599c9a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "c3f96c59-7a2e-4485-8493-a3aef20a20b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2f61d15-50ee-43c8-85e7-4b609642f099",
        "cursor": {
          "ref": "05e6e0c1-4b50-4085-83b1-81055ba8f2b9",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "83b0a6b9-4f46-40e9-b814-da9eb27f1d7b"
        },
        "item": {
          "id": "d2f61d15-50ee-43c8-85e7-4b609642f099",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "7bb4d7a6-6bbd-44bf-847a-1dc89049cff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f166d86d-8a4f-4bd0-b97f-a4ac1dbe8633",
        "cursor": {
          "ref": "d59ce4a9-12a2-4d7e-a8e1-ddbd286ff9d6",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d0a2381c-614d-402e-8aba-75c26e201a79"
        },
        "item": {
          "id": "f166d86d-8a4f-4bd0-b97f-a4ac1dbe8633",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "1d7ae866-7caa-4138-92cf-525c22e17120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5312611f-9c7e-4b0d-9aac-55a724eb9f09",
        "cursor": {
          "ref": "98891ae9-cdc9-4dd6-94e6-4a09c59af3cb",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "11f1e647-1cc7-4972-994a-3396e97a2fc0"
        },
        "item": {
          "id": "5312611f-9c7e-4b0d-9aac-55a724eb9f09",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "1429a285-8361-4e64-840a-da44e6d30968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb42933b-c5c8-48ed-8c7b-b8c9119447c8",
        "cursor": {
          "ref": "2d14e906-00a7-403f-9ca8-86fec1dab284",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "a1ca558c-659b-4a40-aead-a7c2cc4586cb"
        },
        "item": {
          "id": "fb42933b-c5c8-48ed-8c7b-b8c9119447c8",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "adbe648f-0b91-4fd0-8372-a7e2db587a0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00b1f33c-b442-430b-8b6b-c709272533ec",
        "cursor": {
          "ref": "6e4fb3ab-9413-4d13-a5d3-8a337dfc3bf3",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "4dc22c03-b2fb-4acd-978e-7cc743b2e04e"
        },
        "item": {
          "id": "00b1f33c-b442-430b-8b6b-c709272533ec",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "3fd8e387-fc78-4d54-89ac-dd38fa3de294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f499bd2-0b73-4007-8c1b-ac8ac2b617b0",
        "cursor": {
          "ref": "d17d228a-25cb-423b-8e72-6af5f6907ca5",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ca5682fb-8d78-4898-9743-c6f2efedc57e"
        },
        "item": {
          "id": "8f499bd2-0b73-4007-8c1b-ac8ac2b617b0",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "51314446-0a5e-4b24-bcf4-a1453549d7a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "696e1a07-e95f-4aa0-ad82-fef623d53310",
        "cursor": {
          "ref": "8a7a7665-135c-44dd-9f70-b5e83bf240a3",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "4300c2f6-a226-48a7-9343-443a1b63cfc5"
        },
        "item": {
          "id": "696e1a07-e95f-4aa0-ad82-fef623d53310",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "79842f1c-91ce-412f-8eb8-32eeaa9a1b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37f215ef-b4a6-48c3-bc11-08bed0e95d30",
        "cursor": {
          "ref": "0251634f-2a00-4ee2-9485-8b1f7aa1ea8a",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "c867fe0b-c678-4f0a-a8b2-5da9cab198e8"
        },
        "item": {
          "id": "37f215ef-b4a6-48c3-bc11-08bed0e95d30",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "267c3033-b69f-4907-b2e5-09a8672edc25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7120a8da-b3d5-412b-b991-c69763611702",
        "cursor": {
          "ref": "a6096bcf-9f06-4a4a-bc23-da2959d8a93e",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "1958fbcf-0d3e-4506-9df0-327456071d40"
        },
        "item": {
          "id": "7120a8da-b3d5-412b-b991-c69763611702",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "31ecd087-6135-4f37-ac6d-d9cccc1971b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91bb79d7-6db0-41ab-aba5-046bfaed0ee4",
        "cursor": {
          "ref": "36385226-5c2f-44c1-9f57-a363fa112911",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c56e371b-7d82-4e63-8682-6a2aee0bf1cb"
        },
        "item": {
          "id": "91bb79d7-6db0-41ab-aba5-046bfaed0ee4",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "2a0a316e-5996-4d58-ae4c-10b7ba84379b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d4b289-cd94-4357-a19f-1adbabc87a3a",
        "cursor": {
          "ref": "7a445fdd-9387-4e6d-9160-9cab9ed87180",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "87732348-8794-4362-85d1-5f18f4e32fbc"
        },
        "item": {
          "id": "39d4b289-cd94-4357-a19f-1adbabc87a3a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "81026c6d-8136-4550-9c52-6c0b11239e5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d58c71e8-2de2-47ae-a5c4-3642b59f663d",
        "cursor": {
          "ref": "02f48c57-fb90-4c93-b6c3-881f79750be3",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "f485c753-034e-4871-a9fc-d5ae8e378198"
        },
        "item": {
          "id": "d58c71e8-2de2-47ae-a5c4-3642b59f663d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "dc535f77-f902-4497-88e7-6bf78063d5ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b06fab38-3c2b-46e3-b9c7-90ed2aa22717",
        "cursor": {
          "ref": "f448a973-f309-4c32-82af-922f6100d46f",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "59cbc349-0a7c-4034-8bd2-e0d905c42b73"
        },
        "item": {
          "id": "b06fab38-3c2b-46e3-b9c7-90ed2aa22717",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "1edc1b90-15fb-4149-983b-e2af1e799bb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede01f31-252e-4c8d-867a-b57ba46c645d",
        "cursor": {
          "ref": "f1aafa4c-9826-4428-bfa3-733976f2426f",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9779ce97-6530-45d1-817b-d914b157b374"
        },
        "item": {
          "id": "ede01f31-252e-4c8d-867a-b57ba46c645d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "b314a4ae-4240-4b38-a70f-66e75b96ada0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df83d1ff-66fa-4605-82fc-5f0848f032c4",
        "cursor": {
          "ref": "7712a035-68b1-4bf0-8fdd-37c83978b14b",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "ff96b161-6a2c-4a0b-90e5-105fbd02ce2b"
        },
        "item": {
          "id": "df83d1ff-66fa-4605-82fc-5f0848f032c4",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "5e1b81ce-f191-4a2b-ad06-77aad1ca9617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da256eaf-342e-45b3-9f3c-156ffce888bc",
        "cursor": {
          "ref": "39d974ba-3984-456d-929c-36b8f8ed15fa",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "ba51402f-212d-4071-be19-61678e61cf8f"
        },
        "item": {
          "id": "da256eaf-342e-45b3-9f3c-156ffce888bc",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "cc12ff28-1059-49be-a139-9789f89e7949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "146ac375-fb40-43c5-9acd-5fb343d6c5b2",
        "cursor": {
          "ref": "a20826bf-f7cd-4dbc-b60d-827189bf7cf8",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "578e52c0-ade5-403b-8690-3b1c2e180147"
        },
        "item": {
          "id": "146ac375-fb40-43c5-9acd-5fb343d6c5b2",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "359e0618-0e46-4628-8226-6b3fb0109bc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f5f3bdd-901a-42cc-962a-4ba7e6cf1d37",
        "cursor": {
          "ref": "9605e868-c809-4915-b65e-89956c0c632f",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "d2def6c1-7dd3-4897-b1a7-c93fbcad0666"
        },
        "item": {
          "id": "7f5f3bdd-901a-42cc-962a-4ba7e6cf1d37",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "87e4c95e-b1dc-47ff-8522-0deb9a6ce1d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e031708-442e-463d-8de4-69f6ca0b29b6",
        "cursor": {
          "ref": "a21e73c9-f88e-4671-8f73-e2711495fc2c",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "8155b0a9-0624-4179-9242-8be91468a291"
        },
        "item": {
          "id": "8e031708-442e-463d-8de4-69f6ca0b29b6",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "62e896fc-eaba-4597-86b3-becbb449b30d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f781b96-e6cf-421a-8ec0-10d1f0cf77eb",
        "cursor": {
          "ref": "3df763f4-27c0-4d1b-840b-bf887ebbeb8c",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "6a24bb68-a070-4e67-bf47-dec92f427ee0"
        },
        "item": {
          "id": "4f781b96-e6cf-421a-8ec0-10d1f0cf77eb",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "9dd05301-4134-4846-975d-ef6fe58e9bb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "927c16f4-849a-464b-866c-a234ee36cbbf",
        "cursor": {
          "ref": "25483b5a-7332-4af5-844c-432720fd3fbd",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "20901573-1d91-45c5-93d9-bd1ceb7e920e"
        },
        "item": {
          "id": "927c16f4-849a-464b-866c-a234ee36cbbf",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "72560bda-5b3d-4180-a400-90805d498666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4cf2632-3f27-46b5-a746-298f91a470d9",
        "cursor": {
          "ref": "68e2465c-a574-400e-98c9-74a25423eb31",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "95b770be-e3e5-4a09-865f-dd9a294a0094"
        },
        "item": {
          "id": "b4cf2632-3f27-46b5-a746-298f91a470d9",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "daf365e0-0b81-4628-9c61-e3f9995cb9b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb4ddcae-6eca-449e-b887-e5b0413be969",
        "cursor": {
          "ref": "1354436d-742b-4732-be30-7b42d5a2103e",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a662af4c-7b2e-4c1c-9b2c-345d40545a10"
        },
        "item": {
          "id": "cb4ddcae-6eca-449e-b887-e5b0413be969",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "20c84983-3694-4fce-a923-54813f105b11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c392d21-66fe-4f6a-bb05-5671b185004c",
        "cursor": {
          "ref": "bb5a0fe9-1a75-4ec0-b8f8-6a2423e20c2b",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f44785af-5bdd-458f-8350-528330df6585"
        },
        "item": {
          "id": "2c392d21-66fe-4f6a-bb05-5671b185004c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "893e3fbc-68b3-4378-91f4-9ff49269fa35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "251ff2b2-7991-49b0-83c8-418d47d3d3f0",
        "cursor": {
          "ref": "e6a05fc8-c7fc-498a-b5df-c73377a1b360",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b7ada944-c69e-4eb5-9444-beef1813d9be"
        },
        "item": {
          "id": "251ff2b2-7991-49b0-83c8-418d47d3d3f0",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "d6c1cb23-b46e-4338-8b2e-eb336de25c63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8649c01-5a3c-4f19-a3dc-3eaf03050b41",
        "cursor": {
          "ref": "e9eb4ab0-250f-4790-877a-500f8ad5a94d",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "60fc787f-5236-47af-a75e-630259de3820"
        },
        "item": {
          "id": "a8649c01-5a3c-4f19-a3dc-3eaf03050b41",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "3545a84f-8a54-4acb-9542-7cd718afb12e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b45c6804-f488-4fd3-bdc7-7fda42ded9e6",
        "cursor": {
          "ref": "542cf651-8bc5-4ef9-9b2b-9b07d6226f5d",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "38ff5e30-6d6f-4db3-ae41-8212382438d5"
        },
        "item": {
          "id": "b45c6804-f488-4fd3-bdc7-7fda42ded9e6",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b29aa5f6-d118-4e38-b274-e1493a7c75d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f832cb-5a2b-4b49-828d-7b157d8d40de",
        "cursor": {
          "ref": "baa79c8b-055d-4b1a-8dae-33b74cafa8ca",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "06444e5d-9d56-4ca0-a453-5d818ae3b8f1"
        },
        "item": {
          "id": "76f832cb-5a2b-4b49-828d-7b157d8d40de",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "f4f5ef20-0fa2-4939-bde7-59ce542109b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a369da-431c-4c24-a84e-6ab09186c6ea",
        "cursor": {
          "ref": "5445413b-ce81-4437-97c0-166458c05f8f",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "5b0cbb85-cc8e-44d6-9d7d-d8f557eb3d50"
        },
        "item": {
          "id": "95a369da-431c-4c24-a84e-6ab09186c6ea",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b8a428e9-4215-4273-bf81-dbff20c62acd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "785c8967-35f9-4b47-83b5-5804b0d504eb",
        "cursor": {
          "ref": "c7e09aa8-3831-471c-871c-fa1a3ebcf8df",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "8603a6bc-8203-4c5b-a977-130ab982e52b"
        },
        "item": {
          "id": "785c8967-35f9-4b47-83b5-5804b0d504eb",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "8f964dff-ef74-4ca3-8af4-1baee8f3cc92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ac602ed-48f4-4cfc-b322-fc5cb861ee3a",
        "cursor": {
          "ref": "487e2eb0-3920-44f7-8ed4-5a4feb94dad0",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "63fc1e2d-dba0-4f38-848e-d15cf47a511e"
        },
        "item": {
          "id": "0ac602ed-48f4-4cfc-b322-fc5cb861ee3a",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "0670a209-0e36-4b24-a94d-a6e0e57c1674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd085127-329b-447c-8134-c28f5a1fc169",
        "cursor": {
          "ref": "23a5fca7-332d-4fbe-b671-7e8ea29aadfd",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e607f23e-e408-42ff-a0c1-eb4e3bc71a2a"
        },
        "item": {
          "id": "cd085127-329b-447c-8134-c28f5a1fc169",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "5e563e3f-8b38-44d3-90d9-6ac8920f9375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d10b85-9c93-4b63-916d-8dfcf8d4c96d",
        "cursor": {
          "ref": "98905af0-36ff-48c8-942a-f2079769f2ad",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "bded2fd3-dc6c-41d7-b29f-fa7e87932c2d"
        },
        "item": {
          "id": "46d10b85-9c93-4b63-916d-8dfcf8d4c96d",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "763f4c0a-d766-4cba-94b8-bfc9c4d956dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de57c37f-2c08-4558-bade-a1f7906806ef",
        "cursor": {
          "ref": "20658a1e-9f79-47b4-8375-5d2459dac79c",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "c511f0ab-c24c-4c6f-b2b5-768f9c7258b9"
        },
        "item": {
          "id": "de57c37f-2c08-4558-bade-a1f7906806ef",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "4bf3e432-c29e-4cda-8cba-3ea783250119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c53ac3-8678-4f41-a598-889a07c98720",
        "cursor": {
          "ref": "d319de21-91be-4f5a-aabc-f7b64472db58",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "01911fd1-841a-487c-a5cc-6ac06f18fd56"
        },
        "item": {
          "id": "52c53ac3-8678-4f41-a598-889a07c98720",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "021fbb44-3589-4b92-9bb7-de94610127d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08226b40-2778-4479-9d30-52d038b6f69e",
        "cursor": {
          "ref": "40ef0d15-2a68-4060-a505-98bab0b9271c",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "e796544d-0dc7-41fe-8f91-20939bd5fe7a"
        },
        "item": {
          "id": "08226b40-2778-4479-9d30-52d038b6f69e",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "9dc6ae8f-9179-47fc-8eba-d7f02cbd3ffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c716b95b-2174-49d4-81cc-ac014fa76c9e",
        "cursor": {
          "ref": "3f986ff3-f1f3-4a2c-864e-8cffcde7c4a9",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "c091de19-566b-4b7f-b090-74e67b6fed47"
        },
        "item": {
          "id": "c716b95b-2174-49d4-81cc-ac014fa76c9e",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "37d1fd01-30ca-4e0d-b069-73fdac13cb19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7942468-b76d-4f83-85ee-25e518880a42",
        "cursor": {
          "ref": "072f0487-9336-4b25-9b18-431b314983c9",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "7132d606-48d4-4bdf-8fe3-26fe45609cb2"
        },
        "item": {
          "id": "e7942468-b76d-4f83-85ee-25e518880a42",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "54b01dbd-d76f-4393-a3ff-d3c76b790ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6262bc56-8e0d-49c9-aa37-de03aa89fe0b",
        "cursor": {
          "ref": "ff667c26-64eb-4a74-8f9b-1b9125427aa1",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d7dfce18-684d-4c77-a254-ba53b5c7c18f"
        },
        "item": {
          "id": "6262bc56-8e0d-49c9-aa37-de03aa89fe0b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "d95b949c-2564-43c4-8079-1762787e121e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3792125-3bc4-497a-8bd7-c7bfb0ea3a45",
        "cursor": {
          "ref": "0cc9471b-cdee-4f96-9b6c-ec175778e976",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "54780fb5-8473-480b-b09b-893017ba7274"
        },
        "item": {
          "id": "b3792125-3bc4-497a-8bd7-c7bfb0ea3a45",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c08348b8-466a-44d2-8617-4e7e839a6683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a0151f3-ff21-4f40-a0d5-c8ff088c3797",
        "cursor": {
          "ref": "252d28fc-6fb8-43b4-80f7-4e5fddac69fa",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "fd0858e9-0bc8-4aa1-9149-4f1c4cd049cd"
        },
        "item": {
          "id": "2a0151f3-ff21-4f40-a0d5-c8ff088c3797",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "e27135e7-5fb6-480d-8634-3b7fdae313dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa5849c2-3ade-4194-b576-89ac142e4d82",
        "cursor": {
          "ref": "5c5cf04c-b27a-40ea-bd7d-7b9ff095c6be",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "3988cab1-0328-403e-aedd-02e2410f05f0"
        },
        "item": {
          "id": "fa5849c2-3ade-4194-b576-89ac142e4d82",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "0d9d82a9-62e9-435f-81db-0ce986cb8af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d50d8215-4a77-406c-bedd-5ac91f4a6542",
        "cursor": {
          "ref": "76754b52-3db3-4aae-8580-62f0d0c0bcd6",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "2af20cde-ce4c-4648-872c-ab5458f23231"
        },
        "item": {
          "id": "d50d8215-4a77-406c-bedd-5ac91f4a6542",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "e68bc124-6e0d-4113-a352-ae55dad10b80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a23e17c-521d-4591-ab40-612a699ba7cb",
        "cursor": {
          "ref": "9ee931d0-4517-4c3a-b894-837a4f80318a",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "75f5d8f6-e952-49ad-b109-cc892820b93f"
        },
        "item": {
          "id": "9a23e17c-521d-4591-ab40-612a699ba7cb",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "21acf96a-dfb1-4f0b-b1d0-8ba68d48ccf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e36f6e06-6960-40a6-b1fc-9b53b9ec30f3",
        "cursor": {
          "ref": "a7f798c7-2d13-4b1e-851c-cd11347f22a8",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "9d1c038a-245c-404c-aadd-ff2a13da7f26"
        },
        "item": {
          "id": "e36f6e06-6960-40a6-b1fc-9b53b9ec30f3",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "f7aa44fa-1b9b-4efb-86b4-622309ac4cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f24fd5f9-036a-40b5-b439-08eba50f97db",
        "cursor": {
          "ref": "c146d43f-95a2-4380-ac19-643a31311d06",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "e27b6f5e-df39-4972-bf99-79569e5e59ba"
        },
        "item": {
          "id": "f24fd5f9-036a-40b5-b439-08eba50f97db",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "efc76f35-4a65-4d03-8633-1f9ee2ba0f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14850af4-c01c-4bf6-8970-ab155f1fb65c",
        "cursor": {
          "ref": "07777d45-5964-41d7-8d34-3e5e3b0308a0",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "d36f6b7c-f5f6-47ac-a076-3c4c4c1937d0"
        },
        "item": {
          "id": "14850af4-c01c-4bf6-8970-ab155f1fb65c",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "0db5120f-ad82-49da-b433-da6a3e4442fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "020428e3-284c-4489-b187-4a45d1d84847",
        "cursor": {
          "ref": "cc8518e9-71b7-4ddd-9617-c573b08a67a3",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "19e3df13-b515-4d28-80ff-be04ef5378bf"
        },
        "item": {
          "id": "020428e3-284c-4489-b187-4a45d1d84847",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "7cbaf055-bc19-4c3c-95ab-a59e47fac418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "805bfa9e-0f58-472e-9339-fbd8700708f3",
        "cursor": {
          "ref": "c6aeee43-3358-44fe-aea4-e862632f3662",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "3ced7923-86b2-411d-9c51-87cd01df74c5"
        },
        "item": {
          "id": "805bfa9e-0f58-472e-9339-fbd8700708f3",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "d340b482-4d34-4079-9a12-4a9b24a7a60a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8151d625-0ee9-4c54-8442-67c144f6cf15",
        "cursor": {
          "ref": "65d99e04-349c-43fa-adc4-9586ec4254fd",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "f2bdaa6c-1838-469a-bf83-e462078b352c"
        },
        "item": {
          "id": "8151d625-0ee9-4c54-8442-67c144f6cf15",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f96e71ca-ecc9-4b55-bdeb-08f5998baab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e133abd7-33af-4369-87d3-8bc89905bc0e",
        "cursor": {
          "ref": "74bbe714-3289-4afb-8b7c-3ceaf7c602c6",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c2c444ae-9618-43c1-8f1b-7b6279e9db02"
        },
        "item": {
          "id": "e133abd7-33af-4369-87d3-8bc89905bc0e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "223f8437-9510-4735-bd67-e6296fe78e35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c96ed2a4-d3c8-4085-b0da-f5eb726cb3af",
        "cursor": {
          "ref": "21fd3603-db09-45ca-82f9-0211adf95332",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "e080a955-944e-46cf-bba8-263829b77bc7"
        },
        "item": {
          "id": "c96ed2a4-d3c8-4085-b0da-f5eb726cb3af",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "8186c816-a689-4fbd-b556-72d4d21e4343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd210a57-bc09-4cfb-9caa-0bdad060c0e5",
        "cursor": {
          "ref": "41b8af26-ffde-42aa-9d73-4978c62126e8",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c291e546-acb7-474c-8005-5e0975818b1b"
        },
        "item": {
          "id": "fd210a57-bc09-4cfb-9caa-0bdad060c0e5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "00f4b150-6753-4898-9ec3-13874f9d788a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27d9e71e-3cd6-4cb4-a7a4-692d95106ce5",
        "cursor": {
          "ref": "23a91e17-3a53-4ce0-91e8-054074c657fd",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "2eec290c-1e68-4ee5-a6f3-9d00600eb64d"
        },
        "item": {
          "id": "27d9e71e-3cd6-4cb4-a7a4-692d95106ce5",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "e1f7f672-7dd2-4ea4-9f4f-d05c22fd115e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a227bc-cac2-4605-b70f-15043f3b6d27",
        "cursor": {
          "ref": "b11947b1-bff4-474f-a6ce-27c8dd041f6f",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "27a05be2-c194-4213-a7f8-44e197623773"
        },
        "item": {
          "id": "42a227bc-cac2-4605-b70f-15043f3b6d27",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "3cee78ed-af59-4978-97a6-2f1110565cb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ffde95b-9a9b-499f-b7aa-e56a3879bf38",
        "cursor": {
          "ref": "f9d774fd-5eca-42aa-acaf-f744a3f9f3ef",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "f9976687-ed29-4581-95b4-4153976302ab"
        },
        "item": {
          "id": "3ffde95b-9a9b-499f-b7aa-e56a3879bf38",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a4c413e0-6766-436f-8e71-853448d30403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a22abe1-490e-4091-be9a-a109072223e2",
        "cursor": {
          "ref": "2ab2c407-ebfc-48e8-a3b6-e108d756447e",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "c4edf13f-222b-468d-9695-471141e595f7"
        },
        "item": {
          "id": "8a22abe1-490e-4091-be9a-a109072223e2",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e91b6dfb-149a-49eb-82a3-f4d46c4b8149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "005d2ac4-50a4-455a-9a72-a8c84c18163c",
        "cursor": {
          "ref": "25089796-d1a5-4b5b-8801-074254b6c6a9",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "7662b92c-f2af-4550-b433-037fe442b601"
        },
        "item": {
          "id": "005d2ac4-50a4-455a-9a72-a8c84c18163c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "4604a492-150c-4499-8064-7e632095ed6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b7af80d-f3b1-4de0-80c4-9277c024310b",
        "cursor": {
          "ref": "3967eb35-3c39-444c-b2a1-5c3ba95a4b5a",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "7a72c044-2325-4e9c-a068-8bd2cbffd4d9"
        },
        "item": {
          "id": "2b7af80d-f3b1-4de0-80c4-9277c024310b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "335641a9-d113-4e43-b3ee-0914a7e157b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00ea6c63-9c8b-4c15-a91e-1ea9c6716620",
        "cursor": {
          "ref": "56e13347-eb1c-4742-b646-78c84bdeb8d7",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "0bf963d1-1352-4a7f-9354-63bb7b696f13"
        },
        "item": {
          "id": "00ea6c63-9c8b-4c15-a91e-1ea9c6716620",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "6c8d5276-e9fa-45f4-bf0f-4ea3aa04c7d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ce53308-5771-4e37-ad32-90afbcdad156",
        "cursor": {
          "ref": "d90b3054-7ef5-4fea-b0cb-7597ef924015",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "5acd3e03-8db1-4d67-9c50-7fb68cf1fcb3"
        },
        "item": {
          "id": "3ce53308-5771-4e37-ad32-90afbcdad156",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "203dfad2-0fc6-4264-8707-6aa301c25331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c947c82b-f5bd-4f9c-baf9-ef6ffffc360e",
        "cursor": {
          "ref": "32bdec33-f907-4aa8-be35-0080b250c3ec",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "e68c6136-0c2e-4068-96d3-dcf2bb0c5e4a"
        },
        "item": {
          "id": "c947c82b-f5bd-4f9c-baf9-ef6ffffc360e",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e24bfb82-b1f4-4264-bf74-25d395415a2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "562cce70-d2a3-48dc-9bd2-16db9409137d",
        "cursor": {
          "ref": "4edac544-5a9a-4181-a600-880663140ecc",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "a6aca1b0-2d62-45c1-98a5-f15d35d7245f"
        },
        "item": {
          "id": "562cce70-d2a3-48dc-9bd2-16db9409137d",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "c1410a45-17b7-4610-adec-599d6f0d2a29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2e9216d-52a2-4961-a448-e6a489ae66d3",
        "cursor": {
          "ref": "dc28d23f-652e-4bd6-a4d1-ff2434cd97b8",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "79e10cee-c9f5-4b81-917d-2e14749301d1"
        },
        "item": {
          "id": "f2e9216d-52a2-4961-a448-e6a489ae66d3",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "028c5893-aa55-4ac3-b2f3-18623cf56618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5defe223-f4c7-48c0-a1d4-b71cbb2bfeff",
        "cursor": {
          "ref": "49e5fa97-9c0c-4692-bb8b-a1176b57370b",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "0e3dee33-ed54-4eb1-bb25-abb353e6485c"
        },
        "item": {
          "id": "5defe223-f4c7-48c0-a1d4-b71cbb2bfeff",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "6d94dbc6-0b0e-4700-9c51-b1db99a640c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e69b2465-dbf2-4979-9c9c-d18cbd44b1ff",
        "cursor": {
          "ref": "81d4f8af-4431-4915-8937-5cda9370b301",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "1e37b7b7-7ead-4d08-95dd-b00d4083b0d0"
        },
        "item": {
          "id": "e69b2465-dbf2-4979-9c9c-d18cbd44b1ff",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "fba96bf4-0651-468d-8022-a7a616ed3779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c88e68-490e-45f3-ad68-0ae06917dc89",
        "cursor": {
          "ref": "0ab2f5b8-1f91-4634-8ec0-6e93d08c7037",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "908472f2-55e6-4e1f-bb26-b811cb06c6fa"
        },
        "item": {
          "id": "a7c88e68-490e-45f3-ad68-0ae06917dc89",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2adb7599-85f7-4809-b4a3-d65f7c8dd00e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f0e09de-75cf-4e18-9087-5f62d65bb79c",
        "cursor": {
          "ref": "86a451dd-c7ed-4e7c-ab46-fe97bcdc4c5d",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "5d0ac7f6-cff8-4fb0-9c4b-cac3ebdc88df"
        },
        "item": {
          "id": "2f0e09de-75cf-4e18-9087-5f62d65bb79c",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "d8455fc2-b157-4dde-adc3-f14232cbe236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2dc318d-35d9-4ded-8a29-3ed6273e8109",
        "cursor": {
          "ref": "14021c47-b6b6-4e06-9ee2-5408c8341a2e",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "141dcc8d-b5b5-41e8-bafc-cb7d8b3706dc"
        },
        "item": {
          "id": "d2dc318d-35d9-4ded-8a29-3ed6273e8109",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "257ccff7-bfb4-483c-81d0-758cea142610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e070b862-35e2-4622-91f4-577e2cc00e17",
        "cursor": {
          "ref": "9bcaa2fc-8b0b-40bf-8872-d41a0e72c48e",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "74d41e8b-dfcb-487a-8152-7b5bbcd329c4"
        },
        "item": {
          "id": "e070b862-35e2-4622-91f4-577e2cc00e17",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "739917d9-2b2f-4dc2-93c0-7d775b401aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d8b62c-94e6-41bf-8a2c-9fb403315f4b",
        "cursor": {
          "ref": "b8a4431c-0d61-4703-ae50-95b2988d821e",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "6a61c30a-4acd-4216-acb5-81ad706f0a1f"
        },
        "item": {
          "id": "b9d8b62c-94e6-41bf-8a2c-9fb403315f4b",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "0e748aa0-baf1-465b-8eb6-3833ee9d4e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdd8b187-9666-4e93-86f4-d2413b5ca073",
        "cursor": {
          "ref": "dbb1283f-ebb2-49ba-9f0f-030a89d8ea05",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "55395c96-6968-4ac6-9f88-03968ed71859"
        },
        "item": {
          "id": "bdd8b187-9666-4e93-86f4-d2413b5ca073",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "0375f3fe-b7c7-4d69-ab5d-af51626c061b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81941816-f257-4076-b5d6-dc29e86b93fd",
        "cursor": {
          "ref": "e2c321b9-7c33-4f5f-ac08-fbf021c56005",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ee9f6c0b-7079-4ed4-b9ee-e37c1c8882fb"
        },
        "item": {
          "id": "81941816-f257-4076-b5d6-dc29e86b93fd",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f7b9a6a5-97d9-4e89-809c-99a845478cc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "275b4bb0-9cdb-4e22-a88e-2aca76f7ed37",
        "cursor": {
          "ref": "af4306a0-5370-4db6-8932-6ca0be0d91e7",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "03d144ff-677e-4f93-ad25-9c6c6e8eff09"
        },
        "item": {
          "id": "275b4bb0-9cdb-4e22-a88e-2aca76f7ed37",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "75dac752-870b-4f2c-9446-8870d5996f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56be4388-9c0f-4a6d-bce0-037419a76992",
        "cursor": {
          "ref": "c8c33f6d-75a9-4944-8679-729a770cbaff",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "0dcfcaba-6c04-49c8-aa9e-11a7eb0b4679"
        },
        "item": {
          "id": "56be4388-9c0f-4a6d-bce0-037419a76992",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "6eee1c9f-3431-4f66-b8a3-d6d499a6cdda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c22f1d8-6e50-42b4-86bf-b7fc985c1f96",
        "cursor": {
          "ref": "905ebad6-449d-47e0-aedf-a89fdd266eeb",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "c6c16929-f469-4514-9944-f5f74f138cb4"
        },
        "item": {
          "id": "9c22f1d8-6e50-42b4-86bf-b7fc985c1f96",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "8d897f8c-49f8-488a-908c-f116bdb6ad53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08bfb1fd-9780-48f1-83d1-eae1681f9a3e",
        "cursor": {
          "ref": "2de895ba-302a-4e27-a55e-94820aced6b5",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "def0cd19-d55f-495c-b1ec-031cc5f1949c"
        },
        "item": {
          "id": "08bfb1fd-9780-48f1-83d1-eae1681f9a3e",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "d73f9348-ba4b-47cc-863d-e37757fb35a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d653c8-0d24-4b53-b466-8b91ee863222",
        "cursor": {
          "ref": "b2f286f3-5310-49e1-9343-e37b866b6fcb",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "3f444fbb-8815-4c2b-803d-0522bd91c2a6"
        },
        "item": {
          "id": "21d653c8-0d24-4b53-b466-8b91ee863222",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "97fd407f-e173-42e3-ad60-008db6847a4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7025aeda-6552-4b6b-9ef0-c332f4dfc415",
        "cursor": {
          "ref": "0dcc6f0f-582e-492b-b1dd-fbc7042e76d2",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "36f9a67e-af5e-426f-9b96-8df98500d951"
        },
        "item": {
          "id": "7025aeda-6552-4b6b-9ef0-c332f4dfc415",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "f46c3a65-a5c0-4cce-9358-d36baa9aa357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf340e75-0dc3-4c88-a624-c4ae2c19b88a",
        "cursor": {
          "ref": "4319b5bc-c5a4-4d97-9f1d-68398f0b00f1",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e90cfd05-68ec-455a-a101-246315d07d23"
        },
        "item": {
          "id": "bf340e75-0dc3-4c88-a624-c4ae2c19b88a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c78d69cd-2777-4cb6-89b5-edd6e782925d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71ba9506-54b0-4cde-bf49-66d8a9f21758",
        "cursor": {
          "ref": "d227ab02-b83d-4dee-87ec-fd0b7035d5cb",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "1913f374-7c4c-4565-bd74-f655c5939c0c"
        },
        "item": {
          "id": "71ba9506-54b0-4cde-bf49-66d8a9f21758",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "1603199d-94bc-4683-9f2b-719975483eb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f32f6b1-665b-4336-af0f-ca1e4d389cb5",
        "cursor": {
          "ref": "68203373-80a6-498c-97c2-c7c14c4025d6",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "87e68c82-7d96-4ca7-af3d-1b15cd86bb5c"
        },
        "item": {
          "id": "0f32f6b1-665b-4336-af0f-ca1e4d389cb5",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "d6660bb3-0ea3-4dae-89aa-733f8ea28727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "701ae2e6-3a41-44c8-9abe-204c7ac3aa16",
        "cursor": {
          "ref": "d1cd96f5-1e8b-4adb-ab98-4473c37a1797",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "6f93367e-02a9-4217-92d7-92ba34a16981"
        },
        "item": {
          "id": "701ae2e6-3a41-44c8-9abe-204c7ac3aa16",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "7265ca35-d386-45b9-b89c-ac28e34781c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aad6d7e-2f97-4780-9297-6145933e59ac",
        "cursor": {
          "ref": "b7049caa-8110-409b-a7ba-44f64de9bafb",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c59abee0-4b9d-4c68-a3d5-d163d85b9b20"
        },
        "item": {
          "id": "0aad6d7e-2f97-4780-9297-6145933e59ac",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "94852d8e-aec4-4ca5-b01c-991f9675deea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c228e950-a113-474b-a56d-27d40a71aec3",
        "cursor": {
          "ref": "cf4c9e7c-0be5-4302-9210-849bd93c5d17",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ec2d9839-0ab6-460f-ba03-13ccccf8e26a"
        },
        "item": {
          "id": "c228e950-a113-474b-a56d-27d40a71aec3",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "1d15ae91-863c-47f7-8efc-ebe6c885686f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f4ec4e2-3070-48b8-8f88-a848833afdb4",
        "cursor": {
          "ref": "3db59a99-dcdd-43f9-ac51-747d0cffbfda",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "566305ef-05f5-4fb6-b2fb-73fa52e1969c"
        },
        "item": {
          "id": "8f4ec4e2-3070-48b8-8f88-a848833afdb4",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "8a970988-58ac-4a65-b9bb-7f3e4de2370a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "ee66e6ef-9245-4726-8715-597f9b19b97a",
        "cursor": {
          "ref": "891e91c2-d6b6-4f7e-a7a2-66ea55a86cc0",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "87f57300-758b-43cc-862e-6cf6934cc530"
        },
        "item": {
          "id": "ee66e6ef-9245-4726-8715-597f9b19b97a",
          "name": "credentials_issue"
        },
        "response": {
          "id": "e2d4531a-6e0b-4ec4-bf8f-6ffe90a604d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "93e878f5-6e27-4027-b4d2-d2d491ad0e19",
        "cursor": {
          "ref": "2490900a-ae1f-4783-b837-2b5c9c804d43",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "7ba784f7-8113-41f5-860a-d4ac9120f955"
        },
        "item": {
          "id": "93e878f5-6e27-4027-b4d2-d2d491ad0e19",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "d95d2518-20f6-4afb-b8e4-139028fef264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "be5a11af-2548-4f79-b527-e8ad3fe3d90e",
        "cursor": {
          "ref": "f36159dc-b618-4789-a828-af0ba9c84e77",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "42308679-774b-43ef-b0bb-063158734009"
        },
        "item": {
          "id": "be5a11af-2548-4f79-b527-e8ad3fe3d90e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "cfaea715-f1a2-4097-8c5e-d7ddae5e258b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "26e91682-ecc9-4ad1-a6d8-9656ac089aef",
        "cursor": {
          "ref": "5fefb274-aada-4a3e-8c68-da5bd1bded03",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ef86141c-6582-4ceb-93a5-6aa49d525e07"
        },
        "item": {
          "id": "26e91682-ecc9-4ad1-a6d8-9656ac089aef",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "5cff685b-331f-452f-98c6-2d1edaca1803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "70c0c6ee-03a4-4d79-be28-d5c3bfaba80d",
        "cursor": {
          "ref": "bec25293-5c7b-40ed-bd9d-0ea327bd007b",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "cfeb81cc-382c-4122-9f5a-42957965d9ba"
        },
        "item": {
          "id": "70c0c6ee-03a4-4d79-be28-d5c3bfaba80d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ed2b5368-92ca-4867-9047-cd0f762bc1ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "f766073b-6d80-4656-9c34-bead0865dbdb",
        "cursor": {
          "ref": "e7bc8c87-8748-4a93-8702-7832b1aa4d73",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "fbe69c69-6369-4465-9f9b-e2afdbc4f379"
        },
        "item": {
          "id": "f766073b-6d80-4656-9c34-bead0865dbdb",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "3ade3ea8-0f9a-4f0d-8ca8-6d7c69fd7f72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "5d7f9a5f-483f-4424-bc1a-c6af42df6978",
        "cursor": {
          "ref": "edd1510e-eea5-4aac-8c0a-5638e7a48b35",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "f5043792-a257-4e58-8fc4-d5052abe2887"
        },
        "item": {
          "id": "5d7f9a5f-483f-4424-bc1a-c6af42df6978",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "41f106a0-456e-42e2-8a69-dc40d5f70b8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e71d591-3f4d-4d00-b47a-a876c2c966dd",
        "cursor": {
          "ref": "691baf94-f2fd-475d-9816-47cae202d398",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f7438bfa-7c39-49d1-a309-c1bcfc40fe0f"
        },
        "item": {
          "id": "1e71d591-3f4d-4d00-b47a-a876c2c966dd",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "02072035-9f00-4b8b-b5cf-c98e3b6fee61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab88090c-e660-4d94-b713-ac51e831bbd6",
        "cursor": {
          "ref": "7fd1f0c5-3423-4812-b933-34c69ae26dd2",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "ffa4c7cc-400c-4583-8a2f-3e1b8c804f6e"
        },
        "item": {
          "id": "ab88090c-e660-4d94-b713-ac51e831bbd6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c5572eda-fd31-4b69-9e9b-8d305eaada0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7325507-e11d-4a36-a2fb-d9e1388dfa59",
        "cursor": {
          "ref": "f1b7fdaa-b19f-45ac-9582-6b645bbd55db",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "185fbd39-d1dd-4be2-9577-51d5eea0ac60"
        },
        "item": {
          "id": "c7325507-e11d-4a36-a2fb-d9e1388dfa59",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c41e795e-1997-49a5-b366-0e4f990f8bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7129280f-0cc2-4d63-bb6a-80be259da517",
        "cursor": {
          "ref": "a995fb91-2232-4ce2-a477-dcd005a4a0e4",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "41981a1f-4e28-465e-b792-fc1c30fec872"
        },
        "item": {
          "id": "7129280f-0cc2-4d63-bb6a-80be259da517",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "63816d92-248f-4a71-9a8d-379fb01adfc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f08aab2-faf0-41a6-b2d8-5cdc3344d112",
        "cursor": {
          "ref": "cdd7e14f-b40f-42ca-94e8-0ee04dd0bdd0",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "5b15f1f4-6e7b-45d4-b471-adfbdcaf0bb2"
        },
        "item": {
          "id": "2f08aab2-faf0-41a6-b2d8-5cdc3344d112",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f27a4bce-3a57-4670-8402-c9fbd7bd10ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69d7c8cd-e9d0-408a-811d-396b18170268",
        "cursor": {
          "ref": "ea7df88a-a182-4a02-bac7-a575738d496c",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "f1db2bd0-9420-4b44-881e-ce39752e709a"
        },
        "item": {
          "id": "69d7c8cd-e9d0-408a-811d-396b18170268",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "194e18f1-3c95-48c7-9423-a3f4b8cfecce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 197,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a266b1fa-f64e-4bc7-8c5f-7b81f8ecbdb4",
        "cursor": {
          "ref": "9de11e4d-1259-45e2-b36c-0a6044d0997a",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f0c3201c-c6cb-4629-978a-f82bb11ff1d7"
        },
        "item": {
          "id": "a266b1fa-f64e-4bc7-8c5f-7b81f8ecbdb4",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "42d5843c-b35c-46f5-82f2-4f7942e3b3a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "525cc481-93c0-4b70-a5ed-46429177cab9",
        "cursor": {
          "ref": "cdcfa9d7-5417-4498-94fb-4177514e679d",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "79ae30a0-27d8-4bef-ade4-a553e5cc94fc"
        },
        "item": {
          "id": "525cc481-93c0-4b70-a5ed-46429177cab9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c28031cd-1d2b-429d-b589-94406c24ba0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c21eda66-8b0a-481c-a9ad-8cde4d7d7e72",
        "cursor": {
          "ref": "7afe88f9-3666-4411-ad49-6e56bd133b2b",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f960452a-211a-46a3-8f62-880479a34d1f"
        },
        "item": {
          "id": "c21eda66-8b0a-481c-a9ad-8cde4d7d7e72",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3db54988-a578-4274-91ca-f682d2be08b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d4261d5-ecfd-4828-8b7a-e72649926a9e",
        "cursor": {
          "ref": "6c521ecb-dd83-4264-9ecf-cdd26176f777",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "082463c9-cb85-4eb3-af14-9a5970ba7a73"
        },
        "item": {
          "id": "2d4261d5-ecfd-4828-8b7a-e72649926a9e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c9e6210d-4c92-4cb2-bb7f-3e2e980dd95a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d65e0302-a417-4fc1-aa1f-1a47b25ce99e",
        "cursor": {
          "ref": "c97df5cd-f015-47c3-95b5-a5e003aea138",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "4393c823-5985-4df5-af8b-262590b8b840"
        },
        "item": {
          "id": "d65e0302-a417-4fc1-aa1f-1a47b25ce99e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6d9f0004-a672-4a5d-830b-ea49c1bef42f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe48b7e-caf7-47e3-9132-b56b3c1f0af9",
        "cursor": {
          "ref": "ee9134ae-9e03-4e11-a39f-03c54c32eb39",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "2e61fbaf-38cd-482a-9c26-0d818698c89c"
        },
        "item": {
          "id": "afe48b7e-caf7-47e3-9132-b56b3c1f0af9",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ce2df1db-033c-44e6-b268-ddffd42c0985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a56ac6aa-d779-42e8-baf6-707a29a1a8a2",
        "cursor": {
          "ref": "b597c643-414c-4479-a680-2250439db482",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "2c392cba-ee26-4dac-af63-c1b285caccd6"
        },
        "item": {
          "id": "a56ac6aa-d779-42e8-baf6-707a29a1a8a2",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8a4faa68-084c-4edf-8e31-9890981835c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7ab3fea-3acd-4006-a25f-5f6a23ac8742",
        "cursor": {
          "ref": "8f0d455e-d14b-48c1-9dd5-ec2f83a1f450",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "77ca4dfc-af0d-4abc-9d57-8e5831d2c755"
        },
        "item": {
          "id": "e7ab3fea-3acd-4006-a25f-5f6a23ac8742",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a64be93b-1b1f-4d37-b23a-3e6f8850190d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78610b84-eacc-42bc-ab59-bae015e954ef",
        "cursor": {
          "ref": "d2d4b518-7669-4e37-90f9-fd0491cd17ab",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6bbc1749-f03b-4148-bee9-628ab9555a33"
        },
        "item": {
          "id": "78610b84-eacc-42bc-ab59-bae015e954ef",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7a35afb6-5f24-4219-9035-2a4e29c3f59a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70b7a21f-1f8f-48bd-a18e-e6ffec5f8b4d",
        "cursor": {
          "ref": "6280fbcd-95c1-40b8-b4f9-e251b2d7c744",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "42d0b2e2-8c11-4c20-b870-c4d1789c8b60"
        },
        "item": {
          "id": "70b7a21f-1f8f-48bd-a18e-e6ffec5f8b4d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "0f9e8153-5f2e-4e63-b366-adb210402395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd31888d-9772-4353-b29b-b374e9d2f152",
        "cursor": {
          "ref": "6c7eab66-e244-4968-bdf0-e2edcd834b28",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "24387291-9c93-4828-b15c-c81446df3ec4"
        },
        "item": {
          "id": "cd31888d-9772-4353-b29b-b374e9d2f152",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1ad7ef1f-69b7-445d-a3d2-e44ac2ee975b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d319dbe-c306-474d-8271-62eb7e26a893",
        "cursor": {
          "ref": "b4bc0db7-b0f1-4ca4-991f-21215ce1b3c6",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "03b7cbd6-a8f8-46de-81f3-4a309f276c72"
        },
        "item": {
          "id": "3d319dbe-c306-474d-8271-62eb7e26a893",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "327b31c1-3bbb-4f7e-9538-fbee73ddc2ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4af782c-164f-4866-b167-9e795d04257e",
        "cursor": {
          "ref": "340f4a41-29d9-451c-aeaa-6a763dea5927",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "1f6c33fc-3b22-44d5-8ef9-557424c728ab"
        },
        "item": {
          "id": "d4af782c-164f-4866-b167-9e795d04257e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "72a40bee-f3cc-4dd7-a4d0-b1ec9920568f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2725102-efd5-41de-bd90-ecd38a886018",
        "cursor": {
          "ref": "559e4890-b566-473f-b9a6-c90ebcd4bfb2",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "bf007e67-1893-4684-9f86-8eb70d1c0f58"
        },
        "item": {
          "id": "f2725102-efd5-41de-bd90-ecd38a886018",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "569c4267-f433-4748-b98c-1988743fb950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4febd4f8-86b8-4aef-9b78-52511f934dc1",
        "cursor": {
          "ref": "9af64cb1-bc8a-42f6-95e2-0998ad2d9b44",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "28d7e308-0ca2-4134-bd22-7366be1fb2e5"
        },
        "item": {
          "id": "4febd4f8-86b8-4aef-9b78-52511f934dc1",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1124fa07-d954-4c6c-ab8c-402255266815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd8a5eac-466d-4368-ac9f-fa54209f1d56",
        "cursor": {
          "ref": "9e3de213-7c09-433d-b90c-3fe0a16e902a",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "d63364fb-3d6d-4868-83b8-adef7c69dc32"
        },
        "item": {
          "id": "dd8a5eac-466d-4368-ac9f-fa54209f1d56",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "52d6473f-e2f1-46f5-9307-21a69daf05d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d11838d9-924b-45d0-b838-2bea5ae6ead2",
        "cursor": {
          "ref": "11abe499-7ba6-44eb-ba9d-5c61338fddca",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "b991ea88-319a-413c-ae52-fc11a6b62084"
        },
        "item": {
          "id": "d11838d9-924b-45d0-b838-2bea5ae6ead2",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d16774d3-cf11-412c-b923-bbfaf67b2b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a7eda7-f336-447c-acc9-a4d64ee0bf3d",
        "cursor": {
          "ref": "070cd1ed-861a-43da-b97a-c42b1f0b8b00",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e41f1b6a-070a-47de-8709-75238df2c6d6"
        },
        "item": {
          "id": "68a7eda7-f336-447c-acc9-a4d64ee0bf3d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b7e3eaa4-36e7-4181-b492-1e47b376bda5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55ecf9f-9c2b-4def-914a-db86a7681fff",
        "cursor": {
          "ref": "ffecc5ea-9043-4a6b-80f1-49766032d6b1",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a9072a9c-546f-457e-ae27-a6dc64241239"
        },
        "item": {
          "id": "c55ecf9f-9c2b-4def-914a-db86a7681fff",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b9b0c4d2-9010-4eaf-b59d-26186fbc65d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6aea77b-9e1a-4d9c-8a43-26b2a52c2c20",
        "cursor": {
          "ref": "d1f32ab3-f548-43b3-a609-dc78e7ee5d82",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "7631ef31-f899-4395-bcd5-ebd32e584cc2"
        },
        "item": {
          "id": "b6aea77b-9e1a-4d9c-8a43-26b2a52c2c20",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8434992e-b128-49ee-a6ca-7525e5a3bf23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "798f2c20-6d4f-4098-8cea-008f8eedfacb",
        "cursor": {
          "ref": "f07f9833-8b4b-4de0-87ba-dce0e5cf173a",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "fe2260cf-1cf7-45c1-b0ab-0221f1a83966"
        },
        "item": {
          "id": "798f2c20-6d4f-4098-8cea-008f8eedfacb",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b3a2a46f-94e6-4037-ad0b-eb827dd8876b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f0b09a4-d690-4fca-836e-b07741ac7f7a",
        "cursor": {
          "ref": "62279072-249d-488f-8ef4-c6bab86ec4df",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "468c362b-c538-4bd0-b7b7-8dbb4ee19905"
        },
        "item": {
          "id": "4f0b09a4-d690-4fca-836e-b07741ac7f7a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f76869a9-8171-465d-a638-fe3d751a8a3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0bbb677-8c7e-40f0-b718-33ed79c9484d",
        "cursor": {
          "ref": "e65d0df6-dfb2-4df7-af52-a4018253f31c",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e6ba29eb-013c-47ad-b8b6-8c467832b2fd"
        },
        "item": {
          "id": "c0bbb677-8c7e-40f0-b718-33ed79c9484d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "daf2b91e-3236-4861-a2a0-e60e94120fc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d412777-38be-4988-b12b-0c9bb067f421",
        "cursor": {
          "ref": "18e5aa79-43cf-4e35-89df-75217e45d1c2",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "d8df22c7-3da0-4689-bd0c-b5ae04890e2f"
        },
        "item": {
          "id": "9d412777-38be-4988-b12b-0c9bb067f421",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5b71b66d-c5b0-47ac-9403-6d7f3ea7ce00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d69a5841-5416-4df0-b1bd-c20e67541ca6",
        "cursor": {
          "ref": "f6e6539e-a67b-4113-b122-348ee332c748",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "970ebfc6-cdca-4b26-8cca-ef4d9f6de5bd"
        },
        "item": {
          "id": "d69a5841-5416-4df0-b1bd-c20e67541ca6",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "fc717277-3b5f-4c26-b6d3-cabdf94a660e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14f58237-f478-4b4e-8333-d85b960c455a",
        "cursor": {
          "ref": "ac82e683-95cc-472d-ab35-9eeb237e3850",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c4fc264b-5e8b-4248-93b0-80801a6547d2"
        },
        "item": {
          "id": "14f58237-f478-4b4e-8333-d85b960c455a",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "8e2bf8d3-661b-4c79-8488-29a3421da04f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c634d0b-40f1-4bb6-bbf8-224838902994",
        "cursor": {
          "ref": "e2cb1f36-5df5-4bc0-a6cc-2122756204d7",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "268fa046-81f9-4285-90cd-d819e6638690"
        },
        "item": {
          "id": "7c634d0b-40f1-4bb6-bbf8-224838902994",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "43607738-82f1-4bd5-bb19-f8407a5c5653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d749ebd5-f07e-463c-ac90-f089d2c630d3",
        "cursor": {
          "ref": "da6b9cc5-9f2b-41a3-bca3-1f6d7cbeb0ff",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "caa961e3-18cc-412a-8ea9-c7b6d594c6e5"
        },
        "item": {
          "id": "d749ebd5-f07e-463c-ac90-f089d2c630d3",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "55c7f5d9-9b0c-4001-bcfd-4a9c48c465c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "271efbf6-3145-43ee-91c5-1b15382c0318",
        "cursor": {
          "ref": "90275fef-18d1-4947-8d07-f2f35041e370",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d1342d0b-beff-4273-8dd6-2fa5db5c0cb8"
        },
        "item": {
          "id": "271efbf6-3145-43ee-91c5-1b15382c0318",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "d09e2bfa-c85b-4c60-a91e-0e5146d20b96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9398955-f1c0-498c-9946-67ef50e01a06",
        "cursor": {
          "ref": "eab54559-8e93-4cba-92ab-0a4d79461950",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f27c9e78-00ea-46f0-b240-3a0453ad9d4a"
        },
        "item": {
          "id": "a9398955-f1c0-498c-9946-67ef50e01a06",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "defcf67d-a464-403c-a906-01e605955f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45604aeb-9dbe-4a3e-8514-32db69d72568",
        "cursor": {
          "ref": "81789ac2-91ad-49cb-8b3c-6c9ef617050f",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "05568215-a229-423b-9f49-cf0e3d6914f2"
        },
        "item": {
          "id": "45604aeb-9dbe-4a3e-8514-32db69d72568",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "590a2556-7c57-40ea-9f9a-911ae69e6ebc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c06b05e6-014b-4850-a7f4-9513d44739cf",
        "cursor": {
          "ref": "7802c399-00f7-43b4-bfbf-c7a9fc75db5e",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a682b7e0-887b-45db-bbf6-279e3b397f33"
        },
        "item": {
          "id": "c06b05e6-014b-4850-a7f4-9513d44739cf",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f6265ec0-b879-44ef-9404-6ee712650d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0178c7de-cb90-4018-a8af-3888c3c250e4",
        "cursor": {
          "ref": "bb6f7fe3-f727-4dd2-831d-9290799e07bc",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "c439fe19-02a7-4225-bfc2-fa6319f20161"
        },
        "item": {
          "id": "0178c7de-cb90-4018-a8af-3888c3c250e4",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "27218505-79a2-4d44-92ac-845ae87e51d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d63ba21c-9968-4509-8c0c-ee5503fe72b4",
        "cursor": {
          "ref": "870457bf-c6d6-41c6-81fa-10b3e15b2dcd",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "510eb5ea-c1ef-49e8-9cb4-48e91b1c3fac"
        },
        "item": {
          "id": "d63ba21c-9968-4509-8c0c-ee5503fe72b4",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "99252e76-5e2b-4e64-8e53-34296dc62ba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b9ae00-9ffe-4464-96be-3bf5a76d3f15",
        "cursor": {
          "ref": "5fed9a3d-9507-4be5-9401-53538d4a14d7",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "8ba51420-6202-4627-8f65-40ad6f8c34dc"
        },
        "item": {
          "id": "18b9ae00-9ffe-4464-96be-3bf5a76d3f15",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "7a20b5e4-fbad-4862-8411-daeebbe6b251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f2edb41-3105-42fd-a98c-77cb31046f61",
        "cursor": {
          "ref": "c3015f5c-465d-4f0a-9540-f0879efb7364",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "8af507e1-d96c-4ebc-b0c0-63aff877ce01"
        },
        "item": {
          "id": "9f2edb41-3105-42fd-a98c-77cb31046f61",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f745af34-4c08-4f2e-bd35-b0f225f762cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10eda139-9411-489a-a3e2-99d4097139f5",
        "cursor": {
          "ref": "b216874a-e557-464e-8ccf-d188d8a625ac",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "3f0c3534-e40a-48a3-b82b-fc71817114b7"
        },
        "item": {
          "id": "10eda139-9411-489a-a3e2-99d4097139f5",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b217d66b-b63b-47ba-8e52-ccad4aee1420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7523c0fa-aa0b-4e86-88e2-e047aa12998c",
        "cursor": {
          "ref": "751af824-09b8-4130-a86b-9a89ccf392b7",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "9872674c-8bc4-4af9-8d4b-9b3e0e2b6670"
        },
        "item": {
          "id": "7523c0fa-aa0b-4e86-88e2-e047aa12998c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e65bc034-cd3f-41a7-8668-55e27d5c23cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce4fd1ad-10ad-42d9-9112-b8a338d64ba5",
        "cursor": {
          "ref": "32b53db0-e552-4c22-b9e6-3a1942ac1aa4",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a6e7740e-8bd8-4bbe-899f-f39e4e9f219f"
        },
        "item": {
          "id": "ce4fd1ad-10ad-42d9-9112-b8a338d64ba5",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ab4ee65a-9c89-4709-9571-e0703b640a72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a37a8fb6-8584-483a-9fe3-0299f55ec5ac",
        "cursor": {
          "ref": "10aa5049-1c13-4082-b4e6-b90fbd26cd7b",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "de4524fd-21ac-4750-a714-693002d8a6ad"
        },
        "item": {
          "id": "a37a8fb6-8584-483a-9fe3-0299f55ec5ac",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "3038a139-372f-4a6f-8030-2bf3f103b760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70a247f5-291e-49c1-aa5e-f3da96188eab",
        "cursor": {
          "ref": "962bfc05-dd5c-499e-b549-4400b60e578e",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "3eeda9ab-dd84-4ead-971a-bafb04ee30b1"
        },
        "item": {
          "id": "70a247f5-291e-49c1-aa5e-f3da96188eab",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "84b3502f-ef8f-473e-a792-7de6c169affb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f2ef0c2-7eb9-49b5-b2ca-9709f36aa27e",
        "cursor": {
          "ref": "06377df1-dddc-4577-9a5e-68dc38d83dfb",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c6f09427-05b0-4dfc-86f5-c22456c1dea1"
        },
        "item": {
          "id": "7f2ef0c2-7eb9-49b5-b2ca-9709f36aa27e",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "b9b903df-e263-4b41-b0cf-8736374f6261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2361e70-e939-4656-81b8-22eb51f1fa9a",
        "cursor": {
          "ref": "1547a689-c258-4eba-a46d-92a191a89447",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "200b7656-7491-41c3-9faf-bc1926e83505"
        },
        "item": {
          "id": "b2361e70-e939-4656-81b8-22eb51f1fa9a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "6c180fcc-1cc1-4d7a-a0c7-e2faf69cd300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77e2b3f9-7411-43df-9e86-10ed5adb4924",
        "cursor": {
          "ref": "a9b6bb28-4a5f-4ff0-ac85-16f6858f1413",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "5cf5f7aa-2865-4507-ab48-7fc278b4323b"
        },
        "item": {
          "id": "77e2b3f9-7411-43df-9e86-10ed5adb4924",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "ec622344-cbf7-46e0-b2c7-a5f7fa99a335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acdf82c2-f920-4e08-aa02-77b2ea750055",
        "cursor": {
          "ref": "e09eda2c-1878-4b2c-b593-05ddc69bf62e",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "de0a84b4-c77e-47fe-b7a5-a264e37dbe78"
        },
        "item": {
          "id": "acdf82c2-f920-4e08-aa02-77b2ea750055",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "4a90a4d5-fd0e-41ac-96ae-51e57dcaf747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bbcba14-1331-4293-9d02-851d6c21defe",
        "cursor": {
          "ref": "fa6ef213-a40d-41d0-afce-70b22b483622",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a05d8257-8239-4c1a-994c-d73cf84a9d7f"
        },
        "item": {
          "id": "5bbcba14-1331-4293-9d02-851d6c21defe",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "350f21c8-95fe-47f6-bc4b-ff6adfaa115f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "240f4503-f86c-4e1b-aaff-e7840165dc9a",
        "cursor": {
          "ref": "df27aa20-c9a5-455c-a557-14848902336a",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "a8f20aa6-7bf3-4d0a-b944-3ae35f96aaf7"
        },
        "item": {
          "id": "240f4503-f86c-4e1b-aaff-e7840165dc9a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a58a879a-3564-4545-afa1-8195ed6781e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d746fa-6e70-473c-be57-beee4e33e6cc",
        "cursor": {
          "ref": "63be07e6-fb9f-458e-9b49-7f4988c4ffe5",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "79956bd8-cce3-4bdd-b496-c50edb0cd8ee"
        },
        "item": {
          "id": "94d746fa-6e70-473c-be57-beee4e33e6cc",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e0994c2d-899a-4028-8eba-5bf9ba7968af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d60a6f50-3103-45b0-894d-3048394996c5",
        "cursor": {
          "ref": "d4a3c214-57c3-401f-b371-a9bc1e1db481",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "68fcc85e-b440-49c9-99b0-b2b793d54b50"
        },
        "item": {
          "id": "d60a6f50-3103-45b0-894d-3048394996c5",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "14e948fe-bb38-477b-b556-2363936ad408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d561ab44-5ed2-4bce-8d20-2e51d23f59ac",
        "cursor": {
          "ref": "cd332a1a-0dd1-497a-832d-ce9ecbaa28ea",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "42468eba-f1b1-42a4-acc8-349ccfea0b35"
        },
        "item": {
          "id": "d561ab44-5ed2-4bce-8d20-2e51d23f59ac",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "218d1f9a-9b90-4a39-be96-1249a79f019c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ca87435-1370-4b0d-80c4-a3ea9debc6a7",
        "cursor": {
          "ref": "68c2aac0-7f65-44b5-99de-334adbce3f61",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "b6e037dc-9496-4531-93c4-b35f9c1c77db"
        },
        "item": {
          "id": "2ca87435-1370-4b0d-80c4-a3ea9debc6a7",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "bdc71813-894f-42e3-9b0a-b27e32bca2dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab26f9a6-2402-435d-babb-31fcca589b5d",
        "cursor": {
          "ref": "fbdba460-845c-4200-8069-d30f8c92a827",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "72112d5f-bebb-4438-a260-65a4db06a8ba"
        },
        "item": {
          "id": "ab26f9a6-2402-435d-babb-31fcca589b5d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "23b444ab-92e5-45f1-92de-41f42934dead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db838c25-71bb-4269-8acc-87e904bdcb77",
        "cursor": {
          "ref": "7e0d6251-6080-489f-8512-cba001b1f59e",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "dbd8ffcd-d266-4020-8a95-7ebdc0b47b6e"
        },
        "item": {
          "id": "db838c25-71bb-4269-8acc-87e904bdcb77",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "fad195bc-ad57-4439-abcb-1f94172f8770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9b2d9c2-e515-4c53-a7d8-e87c497b818e",
        "cursor": {
          "ref": "b3769f7d-e22e-4811-b363-05ee9e155c76",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "ee251029-63f4-4afb-9e86-e2ba9f116ef6"
        },
        "item": {
          "id": "d9b2d9c2-e515-4c53-a7d8-e87c497b818e",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "dc687e92-f87f-41a6-9dd0-afcbbe6f70ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d533f7d-020f-486d-b82e-c5b36da975cf",
        "cursor": {
          "ref": "e01abd0c-15f5-43b5-9ac8-da426c0012e3",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a574fe0d-67af-40b3-a901-c3af8d425497"
        },
        "item": {
          "id": "7d533f7d-020f-486d-b82e-c5b36da975cf",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "0fb39129-b632-4a9f-9e0f-ea9844f21600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e41d434-1dcb-45dc-b76f-a5bfc44cd75e",
        "cursor": {
          "ref": "628e7b14-8d1a-4a0d-a336-7ac8efe8d081",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "57541096-45cc-4b59-8a03-424c2e226fb0"
        },
        "item": {
          "id": "1e41d434-1dcb-45dc-b76f-a5bfc44cd75e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "d94a980c-f0f8-45b4-a67a-0693b3541f4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d73bf8fd-3ee1-4214-b803-c75c658e3dda",
        "cursor": {
          "ref": "1fabbb1a-8925-4b76-bd0e-f3b2e3948a44",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "80568bad-9980-4f0d-9f5e-4179dcf5cbb9"
        },
        "item": {
          "id": "d73bf8fd-3ee1-4214-b803-c75c658e3dda",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b16b46a4-fbf9-4238-bc39-c8daaec399fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e06a37e-509b-400c-b7e3-2383f4dc2f6f",
        "cursor": {
          "ref": "fa5c0d6a-35f6-4210-9c8f-cbea24a9473d",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "1a072881-a86e-42cb-a9d1-bd0b37ae9693"
        },
        "item": {
          "id": "9e06a37e-509b-400c-b7e3-2383f4dc2f6f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "af24cc4f-e5ee-4cd9-b5b2-8a055afd6129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "135fc187-4b35-4b25-89af-4948564489e0",
        "cursor": {
          "ref": "805c202f-3b81-45ea-860e-8f9fb587a1f4",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "dacda8cf-2389-494c-a669-88b275f9e92f"
        },
        "item": {
          "id": "135fc187-4b35-4b25-89af-4948564489e0",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b57d0713-6dac-406a-b511-1e588040e305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d86712-68b4-44b4-a0cd-e13a9671dc2c",
        "cursor": {
          "ref": "623cebd5-0850-4d0f-8a10-6e9c16a683f4",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "0300a718-99b9-4edb-90bc-a02cc034ed8e"
        },
        "item": {
          "id": "79d86712-68b4-44b4-a0cd-e13a9671dc2c",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "1a3ffb95-fc25-425c-9e21-1ca93f67e1b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4163b5e-f5a4-47fb-8bf3-78379aea49db",
        "cursor": {
          "ref": "327cee02-1111-4ffa-bf42-c4dcc56f30e1",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "d2165fee-4231-4d5e-b769-ee6b15e2f347"
        },
        "item": {
          "id": "a4163b5e-f5a4-47fb-8bf3-78379aea49db",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "45c29866-c82b-4d53-95e9-0b0af39742ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58492125-eed0-45e1-a5f5-704fed693a43",
        "cursor": {
          "ref": "96d9127f-1d31-4751-862a-1e512f1beb5f",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "7dc592ad-943f-48be-a5f8-88ead4a555cf"
        },
        "item": {
          "id": "58492125-eed0-45e1-a5f5-704fed693a43",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a2fa6db1-d0d1-4ed6-9de2-f4fe49210144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71ecd04c-31a7-4077-8fe2-03e988fedeb0",
        "cursor": {
          "ref": "97a61302-f7fd-4376-80ad-385be2b85f02",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "093e4a62-935f-4ab3-a6b0-1601fef8dbb4"
        },
        "item": {
          "id": "71ecd04c-31a7-4077-8fe2-03e988fedeb0",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "b4799d3a-2a05-42b4-a105-1179667ce0bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "241510a9-db87-4a12-926a-074b42c04c51",
        "cursor": {
          "ref": "aff0296c-6114-468c-b1e4-f8dba0c70266",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f1909b44-236c-464f-b693-4d956bc0b642"
        },
        "item": {
          "id": "241510a9-db87-4a12-926a-074b42c04c51",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e2927c55-5d31-42ec-a1a1-0ce125e39448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de1a4cce-4ec4-4a99-9a39-c38e19d5f434",
        "cursor": {
          "ref": "f216a737-763a-448e-ae7c-3ecba392f02c",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "48969bb4-4f01-489f-8aea-0200db1ebe29"
        },
        "item": {
          "id": "de1a4cce-4ec4-4a99-9a39-c38e19d5f434",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "233014cc-c472-4c41-ab60-bd4e2bb938ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "932f87db-5d92-42aa-a9d1-6f162d290d87",
        "cursor": {
          "ref": "4d316551-e0dd-499f-a3b3-45efb3115bbe",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "d6f65a10-9839-49df-9c98-f02c76e87791"
        },
        "item": {
          "id": "932f87db-5d92-42aa-a9d1-6f162d290d87",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "48b94189-4b92-421b-8805-c62fbc83f3a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f89ee27d-7188-41a5-8a93-605c20472e54",
        "cursor": {
          "ref": "20dcaee4-694a-4957-bb4f-d4ef0e0dc280",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b615a7da-df88-4a8d-b566-0eb76acebaec"
        },
        "item": {
          "id": "f89ee27d-7188-41a5-8a93-605c20472e54",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "37931e79-7aa1-4003-921f-5aa5aa02f48e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b674adfd-6d21-4d6e-80db-72371e60d76b",
        "cursor": {
          "ref": "be9dd788-e0fd-4f71-869d-533120e407ff",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "2cabc915-4ccf-48d6-aa9a-8faf91b40261"
        },
        "item": {
          "id": "b674adfd-6d21-4d6e-80db-72371e60d76b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "e774ac83-93b8-4575-bd26-b7fccaca7b2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9eee574-be77-435e-8b08-3e94fef361db",
        "cursor": {
          "ref": "8c4b2a77-f159-4437-a376-9f0e06a5bba8",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "bbf4c4bb-c265-4f63-adbf-5854d237fee4"
        },
        "item": {
          "id": "b9eee574-be77-435e-8b08-3e94fef361db",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "bdf488e2-ec19-413c-b26e-f06dbc3e3712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2962023-81b8-48fa-b000-f8f077100368",
        "cursor": {
          "ref": "afadacf8-e99a-4c36-98b1-4489d0ea9be4",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c8ab8789-af2c-411b-b9b3-7e1ef2f86e69"
        },
        "item": {
          "id": "d2962023-81b8-48fa-b000-f8f077100368",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "1d2dc9a3-787e-47e3-ac28-ab87e9dcc301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "708370bd-3163-4fa5-aedc-b4ca68a68c03",
        "cursor": {
          "ref": "34911b06-32be-4bff-8812-45f9b6bbf376",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "bca02510-f7a8-4f2e-bdf0-873da8978202"
        },
        "item": {
          "id": "708370bd-3163-4fa5-aedc-b4ca68a68c03",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "8313bbd3-4e48-4247-80e2-048e970377dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3983b967-1e54-49ea-a988-b47bc130948f",
        "cursor": {
          "ref": "e41ad784-55fd-4972-b16d-2a023ce16b04",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "5cdaac44-c62f-44c4-82d5-6ad940a849b6"
        },
        "item": {
          "id": "3983b967-1e54-49ea-a988-b47bc130948f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "851686e6-80e6-4559-b7a5-e5101a5c4c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "851a0e9a-1570-47be-9843-aceb2d46cd3b",
        "cursor": {
          "ref": "9ae742d7-2e14-4758-b807-a76980625614",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "4ad39a37-92d9-4821-b530-926eb4043bdc"
        },
        "item": {
          "id": "851a0e9a-1570-47be-9843-aceb2d46cd3b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "2fa7d23f-b634-4df5-9bce-5e64c56586d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b3198d9-9dc4-4bb3-8559-e8446d6c7bdd",
        "cursor": {
          "ref": "91499a2a-e5fe-4481-b530-55cc8bd2d740",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "6ae71190-49f6-4d1e-bd61-2d06bbfeae75"
        },
        "item": {
          "id": "6b3198d9-9dc4-4bb3-8559-e8446d6c7bdd",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "25edecaa-4a48-4ca3-8c76-5dfdc223a6da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "319c24b4-8b2c-413b-b722-82761505c0f5",
        "cursor": {
          "ref": "9428d703-adf0-4b87-a9b6-f761066a210c",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "7d683185-c3ae-4520-a623-dc0a24bc668d"
        },
        "item": {
          "id": "319c24b4-8b2c-413b-b722-82761505c0f5",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a1291ac3-de67-441f-9d5f-b7f990ba789f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e2e24fd-8d37-46c8-829f-db8f53482959",
        "cursor": {
          "ref": "398e7e73-3d95-4242-ae5a-de8486e020a5",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "d5ea731f-b513-4042-b997-62eb49a6b091"
        },
        "item": {
          "id": "3e2e24fd-8d37-46c8-829f-db8f53482959",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "78e3b863-d28a-4932-9b00-20369cc3d5e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b0e19a5-60f4-4399-a708-ccd9bb910c8c",
        "cursor": {
          "ref": "0beae181-4a57-4e92-b1b2-c636d23d24bf",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "cfacbf31-5746-428e-b632-3b529b626813"
        },
        "item": {
          "id": "1b0e19a5-60f4-4399-a708-ccd9bb910c8c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "3c5ba0fb-7045-42b1-9356-5018087e1507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "278b934b-4151-41fc-8526-fa59026e9f97",
        "cursor": {
          "ref": "db700d80-6999-4daa-acfa-422018f917e4",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "345d0fe5-03fe-4078-9f46-307b4895ab37"
        },
        "item": {
          "id": "278b934b-4151-41fc-8526-fa59026e9f97",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "a63c360f-dc53-4c4b-bc81-fe549b9c2f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "212ce32f-e22f-49dd-a367-2218a000efa5",
        "cursor": {
          "ref": "0dc192ae-e916-4610-b54c-d3ea950a57cf",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e628fced-6cc5-41d8-95b0-328fa7172741"
        },
        "item": {
          "id": "212ce32f-e22f-49dd-a367-2218a000efa5",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "ad206d3d-d54e-4d91-8fd9-4596776267a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1788761-6311-47a4-9719-8207039ebaa3",
        "cursor": {
          "ref": "aa4ee6a1-0bf3-4ff8-994c-e0def9106592",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "527da4d8-deae-4044-a24f-8a9e09d24aa1"
        },
        "item": {
          "id": "c1788761-6311-47a4-9719-8207039ebaa3",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "918d0124-6fc6-4c34-99f6-dc325112977e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c1b7c9c-c6df-4274-896c-8d6ebb1d6123",
        "cursor": {
          "ref": "1d30b8f5-d50f-42d9-982a-350a2cedf8d8",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "967e7d97-db1f-424c-8027-311a5dc98267"
        },
        "item": {
          "id": "6c1b7c9c-c6df-4274-896c-8d6ebb1d6123",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "948e8eb6-3b26-4340-bd59-733ddddf045a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a40de9f5-90d7-4d64-b647-805d5afa1c46",
        "cursor": {
          "ref": "632cdadc-10ae-496f-8abc-cc24688dd357",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "89d5ca6d-9a21-4456-9976-c5fc5a83ffe9"
        },
        "item": {
          "id": "a40de9f5-90d7-4d64-b647-805d5afa1c46",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "cc9727f6-c721-4fc7-872b-9d660b43da64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e22fcfd-bc18-43c7-8f63-22b783e47560",
        "cursor": {
          "ref": "06f55708-cf71-4ae8-a7be-619dfab1c7b4",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c0e5fe95-b06b-4c07-9d9b-bdd8135fe95c"
        },
        "item": {
          "id": "6e22fcfd-bc18-43c7-8f63-22b783e47560",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "1a4fed9e-ab2d-4a3b-a93d-aeb5c196c826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a6810c-7643-4139-8431-6a6d5ccf5953",
        "cursor": {
          "ref": "11540023-f0ee-4153-8561-6b9900e77fb7",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "3f917827-27eb-4900-9732-b6ad3a00428b"
        },
        "item": {
          "id": "f9a6810c-7643-4139-8431-6a6d5ccf5953",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "8feaab65-c46f-4e97-9b38-a4e9bd517d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f6f6bc2-4b6c-4ca1-b691-18f1f2cf368b",
        "cursor": {
          "ref": "e3798e29-a4be-4703-a2fe-40facda3a92f",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ab7ec896-cfb1-4faf-9310-5fd096ec0e2f"
        },
        "item": {
          "id": "5f6f6bc2-4b6c-4ca1-b691-18f1f2cf368b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "072be087-f56d-48b1-9cea-77a8d6501931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb57d67-55cc-499e-820a-46d7813b72d3",
        "cursor": {
          "ref": "9f4f8dd4-5179-4b1e-9e61-e4f6b1227f59",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "db75f90d-e5ac-462d-82f7-50fb67020e22"
        },
        "item": {
          "id": "fcb57d67-55cc-499e-820a-46d7813b72d3",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d622d4fd-b35f-401d-8bef-5f52b2193782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f993e98-b426-4ce2-9cde-776e0df78829",
        "cursor": {
          "ref": "85fe3568-77ff-4998-acdd-e66ef4af7bbc",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d79fe5b2-5f2b-4434-9e3d-6753fe101640"
        },
        "item": {
          "id": "7f993e98-b426-4ce2-9cde-776e0df78829",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "87e5ad41-3a6f-454c-ac38-23e31606ee8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d08fd4c-3b0c-4789-88ff-b2c4370a79ad",
        "cursor": {
          "ref": "b80340a3-ee92-48c3-a415-b0a5730251fd",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "9a37fdb6-0959-4b22-a205-986475bb4cbc"
        },
        "item": {
          "id": "0d08fd4c-3b0c-4789-88ff-b2c4370a79ad",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "5166cba2-039a-4085-89f7-eaf454202b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c5752ed-14ba-48fe-bfb7-e6facbab1b86",
        "cursor": {
          "ref": "fc797a87-337f-4889-8427-d5da1777948d",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "14a545fb-591c-4105-95e7-21b1633ce77f"
        },
        "item": {
          "id": "8c5752ed-14ba-48fe-bfb7-e6facbab1b86",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "f7a01df4-6e14-41ee-a2c7-88f7872010a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a67c9918-5daa-4424-83cc-4fd56c9a019e",
        "cursor": {
          "ref": "9b688b5d-ad7b-49cf-b3f1-e181bf7ed015",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e56b7ee3-5f77-415d-8a47-69645bca5a10"
        },
        "item": {
          "id": "a67c9918-5daa-4424-83cc-4fd56c9a019e",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "026c877c-56ce-4e5e-9d0d-d2cccf4947d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb263c3f-655b-4b2b-8748-2d438df567ca",
        "cursor": {
          "ref": "5ef0a7be-af3a-4663-9d1a-498777d117db",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "483400af-7315-4fec-a039-600a556c5a2d"
        },
        "item": {
          "id": "cb263c3f-655b-4b2b-8748-2d438df567ca",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "9c183787-f808-4b6e-99fb-cba56be3ac50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50af1483-2f88-4690-a5d2-fdfb3ff5bd4f",
        "cursor": {
          "ref": "caac6b9c-6924-44fe-9ae2-746076c31c21",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "53691acd-c899-4c46-ab27-56ad7044ddfb"
        },
        "item": {
          "id": "50af1483-2f88-4690-a5d2-fdfb3ff5bd4f",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "fd0c3329-687a-4e32-984b-8ffa662593da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40572657-f6db-4a57-af0b-40b89817456e",
        "cursor": {
          "ref": "71c2b41f-155a-4c3a-95db-6388c5c5b650",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "9e8a50a4-5df2-4b76-94d0-feeed13816ef"
        },
        "item": {
          "id": "40572657-f6db-4a57-af0b-40b89817456e",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "5a764dbb-a1cc-4443-ae34-75b411fbf3bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f00ed6f-0211-484d-93f7-62bf35463ee3",
        "cursor": {
          "ref": "fcecfe25-1436-47a2-8419-55c69d30c0c1",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "f8e0f29b-7189-4999-81f5-838e78d39ff2"
        },
        "item": {
          "id": "2f00ed6f-0211-484d-93f7-62bf35463ee3",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a6cf1112-f46b-4f19-9266-328a209e954e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "661bc0c1-9e94-40e3-849b-e83b6d02b946",
        "cursor": {
          "ref": "01f75d02-6d8f-4497-98b6-b033013d5d53",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "a1a05101-85e4-434f-a455-16763a1bc012"
        },
        "item": {
          "id": "661bc0c1-9e94-40e3-849b-e83b6d02b946",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "3a3dbc09-790e-47a7-a942-10edef08011c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ffa4c4-a9d7-4ba1-9ba6-954d0d907daa",
        "cursor": {
          "ref": "44c8d66e-eb0d-435f-a629-41597589e563",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "31918f98-f361-41bc-8185-49b9e2288f00"
        },
        "item": {
          "id": "e1ffa4c4-a9d7-4ba1-9ba6-954d0d907daa",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "91e2e1f9-a36b-4b62-a294-655accd99820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "963d1a70-5fea-4ce4-a779-66747a52dea4",
        "cursor": {
          "ref": "ca1c62fa-c4ad-4de1-92d4-53a8b0a26203",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ba7eb6e7-f050-4c6c-baa3-c9bdd6f8e8fd"
        },
        "item": {
          "id": "963d1a70-5fea-4ce4-a779-66747a52dea4",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "80bd1dbc-e112-45e8-94f2-ff21fcacf6a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e055eb2b-4c29-4365-8189-479294ec4f53",
        "cursor": {
          "ref": "3957827e-82b5-4f09-89e1-0b35e37c8b9a",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "9335c9d9-3d6c-47f5-be6a-7e0e7556d4c9"
        },
        "item": {
          "id": "e055eb2b-4c29-4365-8189-479294ec4f53",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "4f0ec6e7-501d-4e8b-a73d-f2562b75bd1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "504a9024-5c1a-4ff7-8ef4-ed89f722abd5",
        "cursor": {
          "ref": "d003da58-6490-4ae9-936d-f77cfac2a4e7",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b8bde358-7620-4217-ad24-719695329b83"
        },
        "item": {
          "id": "504a9024-5c1a-4ff7-8ef4-ed89f722abd5",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "98481137-4e12-46d2-be05-56448005f27f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdb228d7-8172-4792-9596-29269aedc534",
        "cursor": {
          "ref": "71677398-0bf6-4692-b281-3974b032cfbc",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "70a118f1-5066-4ca5-aace-bd832fb066a0"
        },
        "item": {
          "id": "fdb228d7-8172-4792-9596-29269aedc534",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "9f67c236-af1e-4247-88cb-e62aa696e10d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef17d94-a723-4aa2-a33d-229e395df5ca",
        "cursor": {
          "ref": "828d7429-3ac2-4a7d-af9e-475ee8759c28",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "db8f6f82-3dbb-4b26-8951-bf1fce2b8e39"
        },
        "item": {
          "id": "1ef17d94-a723-4aa2-a33d-229e395df5ca",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "7e1c7625-af31-4c68-9168-5a7b04bb714d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c94c4100-6ec7-4317-acd3-b3003080f794",
        "cursor": {
          "ref": "de996709-b5be-444e-8479-b9f8c76c4f9e",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "64abf174-4414-4afc-bc10-2050afd0bc5a"
        },
        "item": {
          "id": "c94c4100-6ec7-4317-acd3-b3003080f794",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "c31676b0-e0c9-4e7b-9089-8ccc9d9e7581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a98017b-dee2-40e7-b97f-c831621e2244",
        "cursor": {
          "ref": "9444baf0-8ffd-4a4b-aa78-fd65e569c8b6",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "45f0abfd-98c0-4404-8892-f333fef78fb8"
        },
        "item": {
          "id": "9a98017b-dee2-40e7-b97f-c831621e2244",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "b0b61d37-1855-4e3b-8a50-7e104b06f9ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb95d586-7e6d-4c85-9efd-f16f133110fa",
        "cursor": {
          "ref": "31742a31-10c7-424a-b875-eae0fb56d0ba",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "ff0e7496-435b-45f4-a34e-ba83ca6e58a5"
        },
        "item": {
          "id": "cb95d586-7e6d-4c85-9efd-f16f133110fa",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "1ac5b216-d9ce-4af9-828b-683efd894188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9647d37-3e69-4eba-a4f4-c54c8a226bed",
        "cursor": {
          "ref": "75f225a3-4e15-4512-82f8-01a0a7c88063",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "cd4cd894-f427-4314-b8e3-c34534066244"
        },
        "item": {
          "id": "b9647d37-3e69-4eba-a4f4-c54c8a226bed",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "de15e471-2cfa-4b81-91d7-e2a84ab1bbf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c48ceda4-7c36-46fa-885f-b43c6474b039",
        "cursor": {
          "ref": "4ce1e806-7827-46b1-8b89-b2fa45271900",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "c6411009-986b-4d43-9deb-80fb85622220"
        },
        "item": {
          "id": "c48ceda4-7c36-46fa-885f-b43c6474b039",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "afd97b74-4afe-44c6-80a2-74cbbd53d25e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6280aae-8572-43bf-9c7d-85fd332c4089",
        "cursor": {
          "ref": "1cf6a5f7-813f-4735-90dc-bd2a78a0969a",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "9be77978-623f-41f5-8e89-3a97a7662a75"
        },
        "item": {
          "id": "f6280aae-8572-43bf-9c7d-85fd332c4089",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "148acf64-087a-4e58-bc7d-4903011b5943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "263996b9-4e69-4ea8-9c68-cf47f46db1da",
        "cursor": {
          "ref": "277e2df8-827d-4792-814c-a9f5526d592b",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "4fcebed8-0565-4691-adac-cd08d1942186"
        },
        "item": {
          "id": "263996b9-4e69-4ea8-9c68-cf47f46db1da",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "3b45212e-2ce2-44d3-8147-dcf0eb44c63c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "527ec3d2-57bb-4b4e-8036-f464aa4c9b31",
        "cursor": {
          "ref": "74ac750d-bff2-413f-8007-8ef90ec65986",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "88c3d08b-20fb-486c-9648-7b9a1ccc5bdf"
        },
        "item": {
          "id": "527ec3d2-57bb-4b4e-8036-f464aa4c9b31",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "8b4597ce-772e-4855-b011-318180c0d402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e782d937-1797-40a6-957b-c41559bc55d0",
        "cursor": {
          "ref": "5d1d0894-d333-4259-a69d-fc0227831414",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d28ad017-36cd-4ecb-adb5-8d2ee7396b95"
        },
        "item": {
          "id": "e782d937-1797-40a6-957b-c41559bc55d0",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "a3f04171-f556-4429-86d9-ee021a58aaf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18547088-d634-43f4-8731-0bbe4bc1e8d8",
        "cursor": {
          "ref": "c6279c64-ddac-4f05-9636-c48352f07f1f",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "82841b88-1281-43ac-89e8-58bc1dc8fade"
        },
        "item": {
          "id": "18547088-d634-43f4-8731-0bbe4bc1e8d8",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "a1348fe4-020b-4f3f-9105-cefbccb68c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31fbd221-3b3a-4c2c-9498-9d6cdf44f77f",
        "cursor": {
          "ref": "74943aaf-7f08-441c-8322-24ed61a7f7fa",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "b27be93c-ffbe-4a71-b8ca-817564e134f9"
        },
        "item": {
          "id": "31fbd221-3b3a-4c2c-9498-9d6cdf44f77f",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "bdafe787-deea-44f1-9153-2767038a77e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b86b55-b080-45fc-98b3-d40ed40f880f",
        "cursor": {
          "ref": "927ef187-b2fd-45db-a830-61c407eb96c8",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "81a4228b-b372-4733-9562-241d4f3f9ba1"
        },
        "item": {
          "id": "01b86b55-b080-45fc-98b3-d40ed40f880f",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "f74c594f-e77b-4729-82a0-6b33cf0b6018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55cb159b-52f6-4741-9791-f511b288c651",
        "cursor": {
          "ref": "db0bbd7e-2a86-4825-97ac-a12a6af21ce7",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ce9b2791-9c11-425b-bd3a-1a292189a3b7"
        },
        "item": {
          "id": "55cb159b-52f6-4741-9791-f511b288c651",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "eed133f9-aae2-4d31-a314-0c713016d6f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2fbe511-4c4e-441e-a58e-d0689265e4b9",
        "cursor": {
          "ref": "0f5a2152-3181-4e63-b081-66bdea760e02",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "fbfbeaab-8da5-4c5a-8ad8-5680574b8961"
        },
        "item": {
          "id": "b2fbe511-4c4e-441e-a58e-d0689265e4b9",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "e6609080-9835-4e1d-bf9e-976669d853ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2fa718d-c828-4388-9f42-871113e04d2d",
        "cursor": {
          "ref": "3e88c595-e908-4ccc-81d2-37dc275b1fcb",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c260c504-f475-48de-9a3a-f9fdddb1d2cc"
        },
        "item": {
          "id": "c2fa718d-c828-4388-9f42-871113e04d2d",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c7a77276-ee46-4de3-835d-a1b97b9a788c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af259b4-f08f-499f-9172-30596d9162fb",
        "cursor": {
          "ref": "fa2a331d-a32b-4a1e-b8c1-b10b6fe487f9",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "a5bd0613-3706-414f-8d8b-b3e3c13ebd9d"
        },
        "item": {
          "id": "4af259b4-f08f-499f-9172-30596d9162fb",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "4f3d030e-321b-455e-a9c6-f5f297ca9ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0d5f635-f600-4e2a-8e14-50fc4a870d4e",
        "cursor": {
          "ref": "f693e7b6-8064-494e-bb16-f888016d6ebc",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "cb6f0d65-dd74-4575-8152-039340f4617c"
        },
        "item": {
          "id": "b0d5f635-f600-4e2a-8e14-50fc4a870d4e",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "44809716-487b-4138-9c30-fe1e49aecbe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78db5d8a-a031-4971-8736-0a5a5b92cca2",
        "cursor": {
          "ref": "2a4df165-9312-48a2-a1f1-32a4c7cf1cd8",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "44d1a0ff-a29b-4c6b-93cf-d34effb4fdde"
        },
        "item": {
          "id": "78db5d8a-a031-4971-8736-0a5a5b92cca2",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b2dd430b-824e-4e7e-bb82-abef02c0fd7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b9049e9-415d-408d-9b71-db6383fc4bc8",
        "cursor": {
          "ref": "91ab7901-dd27-4246-82b5-6824bf9adb53",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "1daa0913-8985-4482-a4e2-fbd93aef6de3"
        },
        "item": {
          "id": "6b9049e9-415d-408d-9b71-db6383fc4bc8",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "63db7252-40d6-4c09-b9cf-517283f66ece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf553339-42b1-41eb-ba2a-4982a5c65b80",
        "cursor": {
          "ref": "a9971783-fee6-4080-b884-d88b3b1b3e57",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "4beca40c-bada-4eaf-bd04-4471f7712e6d"
        },
        "item": {
          "id": "bf553339-42b1-41eb-ba2a-4982a5c65b80",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "eff5107c-b515-4fff-819a-7564da7920c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95b50b28-a6d8-41e0-b732-dcb229be28c7",
        "cursor": {
          "ref": "045762cc-0911-4694-bacb-f6f786913007",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "510360da-e287-4942-b1a7-7b33a1e0329c"
        },
        "item": {
          "id": "95b50b28-a6d8-41e0-b732-dcb229be28c7",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "97327108-1db8-4798-8419-c86801526939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df0b6b77-9178-40fb-ac42-126d5ed4e4b5",
        "cursor": {
          "ref": "6e4fb127-7027-4647-948c-a28f4859aadf",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "ca26a6ae-d5b1-41cd-b1c8-90882f1564c7"
        },
        "item": {
          "id": "df0b6b77-9178-40fb-ac42-126d5ed4e4b5",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "71b247a0-9de0-4b9d-8e3e-1ab7ed7c0fef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "642f2e94-4b6c-4a9d-bbdb-91b5302ba09b",
        "cursor": {
          "ref": "9af92d1a-800f-49c8-991e-c2032ac03565",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "fdaba424-7f5a-4269-ac1f-3b2c933fd684"
        },
        "item": {
          "id": "642f2e94-4b6c-4a9d-bbdb-91b5302ba09b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "57365a3c-89ae-40dc-ba65-1a0ae8db7544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d43f45-8c44-441e-9e6d-0f1eef848d67",
        "cursor": {
          "ref": "d88998c1-9927-49ef-97f3-e0a6f2872c17",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "7041e2c7-9a4d-45e9-8c9d-19827ad09653"
        },
        "item": {
          "id": "f2d43f45-8c44-441e-9e6d-0f1eef848d67",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d3ebcc62-423c-472a-a2ae-a39f14a32700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c66665cc-545c-4fb6-a220-324103d2960a",
        "cursor": {
          "ref": "6d2fda37-da77-401d-a196-6b7e060259e2",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "13b57d0e-bba7-4d42-94c9-9dee0a5ce2be"
        },
        "item": {
          "id": "c66665cc-545c-4fb6-a220-324103d2960a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "7b424c9a-7518-4578-b3dc-e7ee2595d6a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e820ca1-fcbe-4588-aff9-03986a6f3079",
        "cursor": {
          "ref": "d18951a9-cb9c-44fe-91f7-76139299171e",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "40633d96-3cb4-4939-89b0-c44abb7f980e"
        },
        "item": {
          "id": "0e820ca1-fcbe-4588-aff9-03986a6f3079",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "27f04eb6-8bfd-4a78-b691-d868d3d23fca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "404ffe07-f192-49b5-941e-89cd950c7719",
        "cursor": {
          "ref": "b2d80789-adec-448a-b94c-154188e83528",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "9d54b521-7d36-443e-84e1-5de5230cdcd5"
        },
        "item": {
          "id": "404ffe07-f192-49b5-941e-89cd950c7719",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "688b8fd5-ff34-4893-b339-7c41de3b46fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c876b082-ee64-4546-a1c0-3eab84945f31",
        "cursor": {
          "ref": "9ba2e9eb-697f-4b04-bc79-83f554c75771",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "20718e2d-31a7-4ce4-81a9-5e2c596cf124"
        },
        "item": {
          "id": "c876b082-ee64-4546-a1c0-3eab84945f31",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4be6bf06-3ad1-40cc-ad6c-06618c99027a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17cc1632-f8cb-4931-b80a-dffdb7510020",
        "cursor": {
          "ref": "93bb788a-bfd9-4977-942e-4f908eac7dd8",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "dcf45462-f00f-4954-8498-8b3335ee3502"
        },
        "item": {
          "id": "17cc1632-f8cb-4931-b80a-dffdb7510020",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c2adaa84-c201-4c63-bd34-ff617ca62664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "dfb25372-5f99-461e-be58-16dfdac37463",
        "cursor": {
          "ref": "a7a61dc5-08e3-43e0-abce-95f5a188386c",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "707c5fc9-4b34-4608-ab52-a494aecea5a5"
        },
        "item": {
          "id": "dfb25372-5f99-461e-be58-16dfdac37463",
          "name": "credentials_verify"
        },
        "response": {
          "id": "ec166c66-aa59-4a67-ab10-3ea0725d33ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "df6e2d32-616a-4998-b791-a20dafe74a2d",
        "cursor": {
          "ref": "a12377fc-cb81-4e4e-95b0-72c6b816caca",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ce5bd909-4e67-4f09-b790-318e51f886c1"
        },
        "item": {
          "id": "df6e2d32-616a-4998-b791-a20dafe74a2d",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "891aa581-7b6a-4ea3-a4bc-435dbe0e1a0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "e5265523-cc68-4bae-a41b-4bda53ed4749",
        "cursor": {
          "ref": "f40c4219-c813-4164-b78b-69f6afdf468e",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "22b610f0-a54f-4f14-8523-bf8453288a4f"
        },
        "item": {
          "id": "e5265523-cc68-4bae-a41b-4bda53ed4749",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "db7f0a63-7f8b-4c63-8e86-d4433d37aa10",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5265523-cc68-4bae-a41b-4bda53ed4749",
        "cursor": {
          "ref": "f40c4219-c813-4164-b78b-69f6afdf468e",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "22b610f0-a54f-4f14-8523-bf8453288a4f"
        },
        "item": {
          "id": "e5265523-cc68-4bae-a41b-4bda53ed4749",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "db7f0a63-7f8b-4c63-8e86-d4433d37aa10",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bbbb258-c745-4b33-9247-00f202eac1c4",
        "cursor": {
          "ref": "55b231c7-f373-43d9-a450-40f416456e9b",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a22c0f6e-364d-4d36-af22-169884c50d35"
        },
        "item": {
          "id": "3bbbb258-c745-4b33-9247-00f202eac1c4",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2820ac82-c583-4cb1-915c-0cafc0b22b62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1663cf2e-0bc3-48b3-a19b-1ec88806b86a",
        "cursor": {
          "ref": "463cc0f3-9196-42e3-ba28-0964b80b3be7",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f42a3a62-357e-4973-94e0-5ccff1c15240"
        },
        "item": {
          "id": "1663cf2e-0bc3-48b3-a19b-1ec88806b86a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "2a20f9de-8987-49f6-abb7-3dbb6957cb1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}